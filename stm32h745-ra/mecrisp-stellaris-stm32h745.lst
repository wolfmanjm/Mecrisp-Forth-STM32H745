
mecrisp-stellaris-stm32h745.elf:     file format elf32-littlearm
mecrisp-stellaris-stm32h745.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000000

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x0000527c memsz 0x0000527c flags r-x
private flags = 0x5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .text           0000527c  08000000  08000000  00010000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.attributes 00000021  00000000  00000000  0001527c  2**0  CONTENTS, READONLY
  2 .debug_line     000019b6  00000000  00000000  0001529d  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  3 .debug_info     00000026  00000000  00000000  00016c53  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_abbrev   00000014  00000000  00000000  00016c79  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_aranges  00000020  00000000  00000000  00016c90  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_str      00000084  00000000  00000000  00016cb0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
08000000 l    d  .text	00000000 .text
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 mecrisp-stellaris-stm32h745.o
00000001 l       *ABS*	00000000 registerallocator
00000001 l       *ABS*	00000000 does_above_64kb
00000001 l       *ABS*	00000000 flash32bytesblockwrite
00000001 l       *ABS*	00000000 BIT0
00000002 l       *ABS*	00000000 BIT1
00000004 l       *ABS*	00000000 BIT2
00000008 l       *ABS*	00000000 BIT3
00000010 l       *ABS*	00000000 BIT4
00000020 l       *ABS*	00000000 BIT5
00000040 l       *ABS*	00000000 BIT6
00000080 l       *ABS*	00000000 BIT7
00000100 l       *ABS*	00000000 BIT8
00000200 l       *ABS*	00000000 BIT9
00000400 l       *ABS*	00000000 BIT10
00000800 l       *ABS*	00000000 BIT11
00001000 l       *ABS*	00000000 BIT12
00002000 l       *ABS*	00000000 BIT13
00004000 l       *ABS*	00000000 BIT14
00008000 l       *ABS*	00000000 BIT15
00010000 l       *ABS*	00000000 BIT16
00020000 l       *ABS*	00000000 BIT17
00040000 l       *ABS*	00000000 BIT18
00080000 l       *ABS*	00000000 BIT19
00100000 l       *ABS*	00000000 BIT20
00200000 l       *ABS*	00000000 BIT21
00400000 l       *ABS*	00000000 BIT22
00800000 l       *ABS*	00000000 BIT23
01000000 l       *ABS*	00000000 BIT24
02000000 l       *ABS*	00000000 BIT25
04000000 l       *ABS*	00000000 BIT26
08000000 l       *ABS*	00000000 BIT27
10000000 l       *ABS*	00000000 BIT28
20000000 l       *ABS*	00000000 BIT29
40000000 l       *ABS*	00000000 BIT30
80000000 l       *ABS*	00000000 BIT31
000000ff l       *ABS*	00000000 erasedbyte
0000ffff l       *ABS*	00000000 erasedhalfword
ffffffff l       *ABS*	00000000 erasedword
00000000 l       *ABS*	00000000 writtenbyte
00000000 l       *ABS*	00000000 writtenhalfword
0000ffff l       *ABS*	00000000 Flag_invisible
00000000 l       *ABS*	00000000 Flag_visible
00000010 l       *ABS*	00000000 Flag_immediate
00000020 l       *ABS*	00000000 Flag_inline
00000030 l       *ABS*	00000000 Flag_immediate_compileonly
00000080 l       *ABS*	00000000 Flag_ramallot
00000081 l       *ABS*	00000000 Flag_variable
00000082 l       *ABS*	00000000 Flag_2variable
00000040 l       *ABS*	00000000 Flag_foldable
00000040 l       *ABS*	00000000 Flag_foldable_0
00000041 l       *ABS*	00000000 Flag_foldable_1
00000042 l       *ABS*	00000000 Flag_foldable_2
00000043 l       *ABS*	00000000 Flag_foldable_3
00000044 l       *ABS*	00000000 Flag_foldable_4
00000045 l       *ABS*	00000000 Flag_foldable_5
00000046 l       *ABS*	00000000 Flag_foldable_6
00000047 l       *ABS*	00000000 Flag_foldable_7
00000100 l       *ABS*	00000000 Flag_buffer
00000140 l       *ABS*	00000000 Flag_buffer_foldable
00000200 l       *ABS*	00000000 Flag_allocator
00000400 l       *ABS*	00000000 Flag_Sprungschlucker
00000800 l       *ABS*	00000000 Flag_bxlr
00001000 l       *ABS*	00000000 Flag_inlinecache
00002000 l       *ABS*	00000000 Flag_Literator
24000000 l       *ABS*	00000000 RamAnfang
24080000 l       *ABS*	00000000 RamEnde
08008000 l       *ABS*	00000000 Kernschutzadresse
08008000 l       *ABS*	00000000 FlashDictionaryAnfang
08100000 l       *ABS*	00000000 FlashDictionaryEnde
24000000 l       *ABS*	00000000 Backlinkgrenze
24000388 l       *ABS*	00000000 returnstackanfang
0800510a l       .text	00000000 Reset
08004f4a l       .text	00000000 faulthandler
08004f78 l       .text	00000000 nullhandler
08004f22 l       .text	00000000 irq_vektor_systick
08004fa0 l       .text	00000000 irq_vektor_exti0
08004fc8 l       .text	00000000 irq_vektor_exti1
08004ff0 l       .text	00000000 irq_vektor_exti2
08005018 l       .text	00000000 irq_vektor_exti3
08005040 l       .text	00000000 irq_vektor_exti4
08005066 l       .text	00000000 irq_vektor_adc
0800508e l       .text	00000000 irq_vektor_tim2
080050b6 l       .text	00000000 irq_vektor_tim3
080050de l       .text	00000000 irq_vektor_tim4
24000808 l       *ABS*	00000000 rampointer
24000000 l       *ABS*	00000000 konstantenfaltungszeiger
24000004 l       *ABS*	00000000 leavepointer
24000008 l       *ABS*	00000000 Datenstacksicherung
2400000c l       *ABS*	00000000 Einsprungpunkt
24000010 l       *ABS*	00000000 ZweitDictionaryPointer
24000014 l       *ABS*	00000000 ZweitFadenende
24000018 l       *ABS*	00000000 FlashFlags
2400001c l       *ABS*	00000000 VariablenPointer
24000020 l       *ABS*	00000000 state_tos
24000024 l       *ABS*	00000000 constant_tos
24000028 l       *ABS*	00000000 state_nos
2400002c l       *ABS*	00000000 constant_nos
24000030 l       *ABS*	00000000 state_3os
24000034 l       *ABS*	00000000 constant_3os
24000038 l       *ABS*	00000000 state_4os
2400003c l       *ABS*	00000000 constant_4os
24000040 l       *ABS*	00000000 state_5os
24000044 l       *ABS*	00000000 constant_5os
24000048 l       *ABS*	00000000 sprungtrampolin
2400004c l       *ABS*	00000000 state_r0
24000050 l       *ABS*	00000000 constant_r0
24000054 l       *ABS*	00000000 inline_cache_count
24000020 l       *ABS*	00000000 allocator_base
00000000 l       *ABS*	00000000 offset_state_tos
00000004 l       *ABS*	00000000 offset_constant_tos
00000008 l       *ABS*	00000000 offset_state_nos
0000000c l       *ABS*	00000000 offset_constant_nos
00000010 l       *ABS*	00000000 offset_state_3os
00000014 l       *ABS*	00000000 offset_constant_3os
00000018 l       *ABS*	00000000 offset_state_4os
0000001c l       *ABS*	00000000 offset_constant_4os
00000020 l       *ABS*	00000000 offset_state_5os
00000024 l       *ABS*	00000000 offset_constant_5os
00000028 l       *ABS*	00000000 offset_sprungtrampolin
0000002c l       *ABS*	00000000 offset_state_r0
00000030 l       *ABS*	00000000 offset_constant_r0
00000034 l       *ABS*	00000000 offset_inline_cache_count
0000000a l       *ABS*	00000000 rawinlinelength
00000006 l       *ABS*	00000000 inline_cache_length
24000058 l       *ABS*	00000000 inline_cache
00000043 l       *ABS*	00000000 Zahlenpufferlaenge
2400007c l       *ABS*	00000000 Zahlenpuffer
000000c8 l       *ABS*	00000000 Maximaleeingabe
240000c0 l       *ABS*	00000000 Eingabepuffer
04121985 l       *ABS*	00000000 stack_canary
24000188 l       *ABS*	00000000 datenstackende
24000288 l       *ABS*	00000000 datenstackanfang
24000288 l       *ABS*	00000000 returnstackende
00000020 l       *ABS*	00000000 Sammelstellen
24000388 l       *ABS*	00000000 Sammeltabelle
24000808 l       *ABS*	00000000 RamDictionaryAnfang
24080000 l       *ABS*	00000000 RamDictionaryEnde
080001e4 l       .text	00000000 CoreDictionaryAnfang
2407ff98 l       *ABS*	00000000 CoreVariablenPointer
080001e4 l       .text	00000000 Dictionary_31
0800020e l       .text	00000000 Code_31
00000000 l       *ABS*	00000000 reg0
00000001 l       *ABS*	00000000 reg1
00000002 l       *ABS*	00000000 reg2
00000003 l       *ABS*	00000000 reg3
00000006 l       *ABS*	00000000 reg6
0000001e l       *ABS*	00000000 unknown
00000028 l       *ABS*	00000000 constant
0800020e l       .text	00000000 nflush_faltkonstanten
08000294 l       .text	00000000 free_5os_element
080002a4 l       .text	00000000 elemente_einen_weiterrutschen_lassen
08000272 l       .text	00000000 nget_faltkonstante
0800022c l       .text	00000000 nfaltkonstanten_aufschwimmen
08000246 l       .text	00000000 npush_faltkonstante
080002de l       .text	00000000 eliminiere_tos
08001198 l       .text	00000000 minusroll
08000f20 l       .text	00000000 drop_einsprung
08004bb0 l       .text	00000000 add_to_inline_cache
0800116c l       .text	00000000 roll
0800030a l       .text	00000000 element_to_stack
080002ca l       .text	00000000 befreie_tos
080002ea l       .text	00000000 eliminiere_nos
080003da l       .text	00000000 generiere_konstante
08003918 l       .text	00000000 reversekomma
08000334 l       .text	00000000 tidyup_register_allocator
0800034c l       .text	00000000 tidyup_register_allocator_5os
08000356 l       .text	00000000 tidyup_register_allocator_4os
08000360 l       .text	00000000 tidyup_register_allocator_3os
0800036a l       .text	00000000 tidyup_register_allocator_nos
08000374 l       .text	00000000 tidyup_register_allocator_tos
080038b8 l       .text	00000000 hkomma
080003bc l       .text	00000000 tidyup_finish
080031d8 l       .text	00000000 registerliteralkomma
080003c2 l       .text	00000000 init_register_allocator
080003da l       .text	00000000 generiere_veraenderliche_konstante
08000470 l       .text	00000000 get_free_register
080003f2 l       .text	00000000 generiere_adresskonstante
0800043c l       .text	00000000 r0_unfrei
080004a0 l       .text	00000000 get_free_register_intern
080004ba l       .text	00000000 erstes_element_belegen
080004c2 l       .text	00000000 element_belegen
080004d8 l       .text	00000000 expect_one_element
080004ec l       .text	00000000 expect_two_elements
08000506 l       .text	00000000 expect_three_elements
08000526 l       .text	00000000 expect_four_elements
08000550 l       .text	00000000 expect_tos_in_register
08000564 l       .text	00000000 expect_nos_in_register
08000578 l       .text	00000000 expect_3os_in_register
0800058c l       .text	00000000 nos_change_tos_away_later
080005ba l       .text	00000000 make_tos_changeable
080005ec l       .text	00000000 tos_registerwechsel
080005fe l       .text	00000000 push_lr_nachholen
2407ffd8 l       *ABS*	00000000 state
08000620 l       .text	00000000 Dictionary_68
0800062c l       .text	00000000 Code_68
08000fc4 l       .text	00000000 over_allocator
08000644 l       .text	00000000 Dictionary_70
08000650 l       .text	00000000 Code_70
08000650 l       .text	00000000 ddrop_vektor
08000f24 l       .text	00000000 drop_allocator
08000662 l       .text	00000000 Dictionary_72
0800066e l       .text	00000000 Code_72
0800066e l       .text	00000000 dswap
08000680 l       .text	00000000 dswap_allocator
080006a8 l       .text	00000000 Dictionary_74
080006b4 l       .text	00000000 Code_74
080006b4 l       .text	00000000 dnip
080006d0 l       .text	00000000 Dictionary_75
080006dc l       .text	00000000 Code_75
080006ea l       .text	00000000 Dictionary_77
080006f6 l       .text	00000000 Code_77
0800070e l       .text	00000000 Dictionary_79
0800071a l       .text	00000000 Code_79
08000730 l       .text	00000000 Dictionary_80
0800073c l       .text	00000000 Code_80
08000752 l       .text	00000000 Dictionary_81
0800075c l       .text	00000000 Code_81
08000f6a l       .text	00000000 swap_allocator
080010ae l       .text	00000000 allocator_to_r
0800077a l       .text	00000000 Dictionary_82
08000784 l       .text	00000000 Code_82
080010e6 l       .text	00000000 allocator_r_from
080007a6 l       .text	00000000 Dictionary_84
080007b0 l       .text	00000000 Code_84
08004326 l       .text	00000000 loop_j_allocator
0800431e l       .text	00000000 rfetch_allocator
080007d6 l       .text	00000000 Dictionary_89
080007e4 l       .text	00000000 Code_89
080007fc l       .text	00000000 Dictionary_92
08000806 l       .text	00000000 Code_92
08000814 l       .text	00000000 Dictionary_93
0800081e l       .text	00000000 Code_93
0800082a l       .text	00000000 Dictionary_94
08000836 l       .text	00000000 Code_94
08000844 l       .text	00000000 Dictionary_95
08000850 l       .text	00000000 Code_95
08002504 l       .text	00000000 smalltworegisters
08000890 l       .text	00000000 Dictionary_100
0800089c l       .text	00000000 Code_100
0800089c l       .text	00000000 dabs
080008b0 l       .text	00000000 dnegate
080008a2 l       .text	00000000 Dictionary_101
080008b0 l       .text	00000000 Code_101
080008c0 l       .text	00000000 Dictionary_102
080008ca l       .text	00000000 Code_102
08001014 l       .text	00000000 rot_allocator
080023d8 l       .text	00000000 minus_allocator
0800104c l       .text	00000000 minusrot_allocator
080013aa l       .text	00000000 alloc_unkommutativ
08000910 l       .text	00000000 Dictionary_105
0800091a l       .text	00000000 Code_105
080023a2 l       .text	00000000 plus_allocator
080013b2 l       .text	00000000 alloc_kommutativ
0800095e l       .text	00000000 Dictionary_108
08000968 l       .text	00000000 Code_108
08000f00 l       .text	00000000 dup_allocator
08000988 l       .text	00000000 Dictionary_112
08000992 l       .text	00000000 Code_112
08000992 l       .text	00000000 um_star
080009a4 l       .text	00000000 alloc_multiplikation_m3
080009e6 l       .text	00000000 Dictionary_114
080009f0 l       .text	00000000 Code_114
080009f0 l       .text	00000000 m_star
08000a04 l       .text	00000000 Dictionary_116
08000a0e l       .text	00000000 Code_116
08000a0e l       .text	00000000 ud_star
08000a10 l       .text	00000000 ud_star_registers
08000a16 l       .text	00000000 ud_star_late_entry
08000a42 l       .text	00000000 Dictionary_117
08000a4e l       .text	00000000 Code_117
08000a4e l       .text	00000000 udm_star
08000ad4 l       .text	00000000 Dictionary_134
08000ade l       .text	00000000 Code_134
08000b8a l       .text	00000000 m_slash_mod
08000af6 l       .text	00000000 Dictionary_139
08000b02 l       .text	00000000 Code_139
08000b18 l       .text	00000000 Dictionary_143
08000b22 l       .text	00000000 Code_143
08000b6c l       .text	00000000 um_slash_mod
08000b3a l       .text	00000000 Dictionary_148
08000b48 l       .text	00000000 Code_148
08000b5e l       .text	00000000 Dictionary_152
08000b6c l       .text	00000000 Code_152
08000baa l       .text	00000000 ud_slash_mod
08000b7e l       .text	00000000 Dictionary_157
08000b8a l       .text	00000000 Code_157
08000bfa l       .text	00000000 d_slash_mod
08000b9c l       .text	00000000 Dictionary_161
08000baa l       .text	00000000 Code_161
08000bb4 l       .text	00000000 ud_slash_mod_internal
08000be2 l       .text	00000000 uf_slash_mod
08000bee l       .text	00000000 Dictionary_163
08000bfa l       .text	00000000 Code_163
08000c64 l       .text	00000000 Dictionary_164
08000c6e l       .text	00000000 Code_164
08000c7a l       .text	00000000 Dictionary_165
08000c84 l       .text	00000000 Code_165
08000c84 l       .text	00000000 f_star
08000cc2 l       .text	00000000 Dictionary_168
08000ccc l       .text	00000000 Code_168
08000d0e l       .text	00000000 Dictionary_169
08000d18 l       .text	00000000 Code_169
0800194a l       .text	00000000 allocator_4store
08001952 l       .text	00000000 allocator_4store_anderer_opcode
08000d56 l       .text	00000000 Dictionary_173
08000d60 l       .text	00000000 Code_173
0800190c l       .text	00000000 allocator_4fetch_anderer_opcode
08001904 l       .text	00000000 allocator_4fetch
08000da0 l       .text	00000000 Dictionary_176
08000daa l       .text	00000000 Code_176
08000db4 l       .text	00000000 Dictionary_177
08000dbe l       .text	00000000 Code_177
08000dc8 l       .text	00000000 Dictionary_178
08000dd2 l       .text	00000000 Code_178
08000dde l       .text	00000000 Dictionary_179
08000de8 l       .text	00000000 Code_179
08000dfa l       .text	00000000 Dictionary_180
08000e04 l       .text	00000000 Code_180
08000f90 l       .text	00000000 nip_allocator
080014c4 l       .text	00000000 alloc_nullkleiner
08000e16 l       .text	00000000 Dictionary_181
08000e20 l       .text	00000000 Code_181
08001478 l       .text	00000000 allocator_equal_zero
08000e3e l       .text	00000000 Dictionary_184
08000e48 l       .text	00000000 Code_184
08000e88 l       .text	00000000 dgleichungleich_common
080014a0 l       .text	00000000 allocator_unequal_zero
08000e64 l       .text	00000000 Dictionary_185
08000e6e l       .text	00000000 Code_185
0800121c l       .text	00000000 xor_allocator
08001202 l       .text	00000000 or_allocator
08000eac l       .text	00000000 Dictionary_186
08000eb6 l       .text	00000000 Code_186
08000ebe l       .text	00000000 Dictionary_188
08000ec8 l       .text	00000000 Code_188
08000ece l       .text	00000000 Dictionary_189
08000ed8 l       .text	00000000 Code_189
08000ee0 l       .text	00000000 Dictionary_191
08000eea l       .text	00000000 Code_191
08000ef0 l       .text	00000000 Dictionary_192
08000efa l       .text	00000000 Code_192
08000f14 l       .text	00000000 Dictionary_195
08000f20 l       .text	00000000 Code_195
08000f40 l       .text	00000000 Dictionary_199
08000f4c l       .text	00000000 Code_199
08000f56 l       .text	00000000 Dictionary_201
08000f62 l       .text	00000000 Code_201
08000f82 l       .text	00000000 Dictionary_202
08000f8c l       .text	00000000 Code_202
08000fb0 l       .text	00000000 Dictionary_206
08000fbc l       .text	00000000 Code_206
08000fd8 l       .text	00000000 Dictionary_208
08000fe4 l       .text	00000000 Code_208
08000fe4 l       .text	00000000 tuck
08000ffe l       .text	00000000 Dictionary_209
08001008 l       .text	00000000 Code_209
08001008 l       .text	00000000 rot
08001034 l       .text	00000000 Dictionary_210
08001040 l       .text	00000000 Code_210
08001040 l       .text	00000000 minusrot
08001058 l       .text	00000000 Dictionary_211
08001064 l       .text	00000000 Code_211
0800106a l       .text	00000000 Dictionary_212
08001076 l       .text	00000000 Code_212
08001082 l       .text	00000000 Dictionary_214
08001090 l       .text	00000000 Code_214
0800109e l       .text	00000000 Dictionary_216
080010a8 l       .text	00000000 Code_216
080010d4 l       .text	00000000 Dictionary_219
080010de l       .text	00000000 Code_219
0800110a l       .text	00000000 Dictionary_223
08001114 l       .text	00000000 Code_223
08001128 l       .text	00000000 Dictionary_225
08001134 l       .text	00000000 Code_225
0800114c l       .text	00000000 Dictionary_228
08001158 l       .text	00000000 Code_228
08001160 l       .text	00000000 Dictionary_229
0800116c l       .text	00000000 Code_229
0800118c l       .text	00000000 Dictionary_231
08001198 l       .text	00000000 Code_231
080011bc l       .text	00000000 Dictionary_234
080011c6 l       .text	00000000 Code_234
080011d6 l       .text	00000000 Dictionary_237
080011e0 l       .text	00000000 Code_237
080011f2 l       .text	00000000 Dictionary_240
080011fc l       .text	00000000 Code_240
0800120c l       .text	00000000 Dictionary_243
08001216 l       .text	00000000 Code_243
08001226 l       .text	00000000 Dictionary_246
0800122e l       .text	00000000 Code_246
0800123e l       .text	00000000 Dictionary_249
08001248 l       .text	00000000 Code_249
08001272 l       .text	00000000 Dictionary_251
0800127c l       .text	00000000 Code_251
080012bc l       .text	00000000 rrotate
08001290 l       .text	00000000 Dictionary_252
0800129a l       .text	00000000 Code_252
080012ae l       .text	00000000 Dictionary_253
080012bc l       .text	00000000 Code_253
080012ce l       .text	00000000 Dictionary_256
080012dc l       .text	00000000 Code_256
08001306 l       .text	00000000 Dictionary_261
08001314 l       .text	00000000 Code_261
08001330 l       .text	00000000 Dictionary_266
0800133e l       .text	00000000 Code_266
080013ac l       .text	00000000 alloc_unkommutativ_ohneregister
080013cc l       .text	00000000 alloc_logic_gemeinsam
080013b4 l       .text	00000000 alloc_kommutativ_ohneregister
08003070 l       .text	00000000 twelvebitencoding
08001430 l       .text	00000000 m3_opcodieren
0800142e l       .text	00000000 m3_opcodieren_anderswo
08001468 l       .text	00000000 Dictionary_279
08001472 l       .text	00000000 Code_279
08001674 l       .text	00000000 prepare_single_compare
0800247e l       .text	00000000 allocator_one_minus
0800148e l       .text	00000000 Dictionary_280
08001498 l       .text	00000000 Code_280
080014b6 l       .text	00000000 Dictionary_281
080014c0 l       .text	00000000 Code_281
080014de l       .text	00000000 Dictionary_284
080014ea l       .text	00000000 Code_284
080014ee l       .text	00000000 generate_true
080014f4 l       .text	00000000 Dictionary_286
08001500 l       .text	00000000 Code_286
08001508 l       .text	00000000 Dictionary_288
08001512 l       .text	00000000 Code_288
0800168c l       .text	00000000 prepare_compare
0800152e l       .text	00000000 Dictionary_293
08001538 l       .text	00000000 Code_293
08001554 l       .text	00000000 Dictionary_298
0800155c l       .text	00000000 Code_298
08001578 l       .text	00000000 Dictionary_303
08001580 l       .text	00000000 Code_303
0800159c l       .text	00000000 Dictionary_308
080015a6 l       .text	00000000 Code_308
080015c2 l       .text	00000000 Dictionary_313
080015cc l       .text	00000000 Code_313
080015e8 l       .text	00000000 Dictionary_318
080015f2 l       .text	00000000 Code_318
0800160c l       .text	00000000 Dictionary_323
08001616 l       .text	00000000 Code_323
08001630 l       .text	00000000 Dictionary_328
0800163a l       .text	00000000 Code_328
08001654 l       .text	00000000 Dictionary_333
0800165c l       .text	00000000 Code_333
08001718 l       .text	00000000 sprungschreiber_flaggenerator
0800252a l       .text	00000000 allocator_not
08001790 l       .text	00000000 smallplusminus
080017a6 l       .text	00000000 eliminiere_tos_wenn_bmi
080017b6 l       .text	00000000 Dictionary_356
080017c0 l       .text	00000000 Code_356
08001830 l       .text	00000000 alloc_minmax
080017d4 l       .text	00000000 Dictionary_359
080017de l       .text	00000000 Code_359
080017f2 l       .text	00000000 Dictionary_362
080017fe l       .text	00000000 Code_362
08001812 l       .text	00000000 Dictionary_365
0800181e l       .text	00000000 Code_365
08001898 l       .text	00000000 Dictionary_373
080018a4 l       .text	00000000 Code_373
080018a4 l       .text	00000000 move
080018d6 l       .text	00000000 Dictionary_377
080018e2 l       .text	00000000 Code_377
080018f8 l       .text	00000000 Dictionary_381
08001900 l       .text	00000000 Code_381
0800193a l       .text	00000000 Dictionary_384
08001942 l       .text	00000000 Code_384
08001992 l       .text	00000000 Dictionary_387
0800199c l       .text	00000000 Code_387
080019c8 l       .text	00000000 Dictionary_388
080019d2 l       .text	00000000 Code_388
080019d6 l       .text	00000000 allocator_2fetch
08001a0c l       .text	00000000 Dictionary_391
08001a16 l       .text	00000000 Code_391
08001a16 l       .text	00000000 hstore
08001a1e l       .text	00000000 allocator_2store
08001a66 l       .text	00000000 Dictionary_394
08001a70 l       .text	00000000 Code_394
08001a9c l       .text	00000000 Dictionary_395
08001aa6 l       .text	00000000 Code_395
08001aaa l       .text	00000000 allocator_1fetch
08001ae0 l       .text	00000000 Dictionary_398
08001aea l       .text	00000000 Code_398
08001aea l       .text	00000000 cstore
08001af2 l       .text	00000000 allocator_1store
08001b3a l       .text	00000000 Dictionary_401
08001b44 l       .text	00000000 Code_401
08001b70 l       .text	00000000 Dictionary_402
08001b7c l       .text	00000000 Code_402
08001bf6 l       .text	00000000 allocator_xorstore_intern
08001b94 l       .text	00000000 Dictionary_405
08001ba0 l       .text	00000000 Code_405
08001bd4 l       .text	00000000 Dictionary_408
08001be0 l       .text	00000000 Code_408
08001c14 l       .text	00000000 Dictionary_411
08001c20 l       .text	00000000 Code_411
08001c38 l       .text	00000000 allocator_bitfetch_intern
08001c4a l       .text	00000000 Dictionary_414
08001c56 l       .text	00000000 Code_414
08001cd0 l       .text	00000000 allocator_hxorstore_intern
08001c6e l       .text	00000000 Dictionary_417
08001c7a l       .text	00000000 Code_417
08001cae l       .text	00000000 Dictionary_420
08001cba l       .text	00000000 Code_420
08001cee l       .text	00000000 Dictionary_423
08001cfa l       .text	00000000 Code_423
08001d14 l       .text	00000000 Dictionary_424
08001d20 l       .text	00000000 Code_424
08001d9a l       .text	00000000 allocator_cxorstore_intern
08001d38 l       .text	00000000 Dictionary_427
08001d44 l       .text	00000000 Code_427
08001d78 l       .text	00000000 Dictionary_430
08001d84 l       .text	00000000 Code_430
08001db8 l       .text	00000000 Dictionary_433
08001dc4 l       .text	00000000 Code_433
52002000 l       *ABS*	00000000 FLASH_Base
52002000 l       *ABS*	00000000 FLASH_ACR
52002004 l       *ABS*	00000000 FLASH_KEYR
52002008 l       *ABS*	00000000 FLASH_OPTKEYR
5200200c l       *ABS*	00000000 FLASH_CR
52002010 l       *ABS*	00000000 FLASH_SR
52002014 l       *ABS*	00000000 FLASH_CCR
52002018 l       *ABS*	00000000 FLASH_OPTCR
20000000 l       *ABS*	00000000 FLASH_BUFFER
17ee0000 l       *ABS*	00000000 FLASH_ERROR_MSK
08001dde l       .text	00000000 check_flash_error
08001df4 l       .text	00000000 wait_for_last_operation
08001e20 l       .text	00000000 flash_line
08002da8 l       .text	00000000 dotgaensefuesschen
08004ddc l       .text	00000000 quit
08002e78 l       .text	00000000 hexdot
08001eda l       .text	00000000 hexflashstore_fehler
08001f02 l       .text	00000000 Dictionary_438
08001f12 l       .text	00000000 Code_438
08001f12 l       .text	00000000 flashstore_32b
08001f80 l       .text	00000000 Dictionary_449
08001f98 l       .text	00000000 Code_449
08001f98 l       .text	00000000 eraseflashsector
08004a7e l       .text	00000000 udot
08001ffa l       .text	00000000 Dictionary_455
0800200c l       .text	00000000 Code_455
08004efe l       .text	00000000 Restart
08002158 l       .text	00000000 Dictionary_478
08002168 l       .text	00000000 Code_478
08002168 l       .text	00000000 initflash
0800217a l       .text	00000000 Dictionary_479
08002188 l       .text	00000000 Code_479
08002188 l       .text	00000000 sammeltabellemalen
0800222c l       .text	00000000 Dictionary_493
0800223a l       .text	00000000 Code_493
0800223a l       .text	00000000 h_flashkomma
080022f8 l       .text	00000000 hflashstoreemulation_gefunden
080022e2 l       .text	00000000 hflashstoreemulation_leerestelle
08002318 l       .text	00000000 hflashstoreemulation_fertig
08002348 l       .text	00000000 flushblock
0800231a l       .text	00000000 Dictionary_499
0800232c l       .text	00000000 Code_499
0800232c l       .text	00000000 flushflash
08002394 l       .text	00000000 Dictionary_509
0800239c l       .text	00000000 Code_509
080023ca l       .text	00000000 Dictionary_515
080023d2 l       .text	00000000 Code_515
08002470 l       .text	00000000 Dictionary_530
0800247a l       .text	00000000 Code_530
08002488 l       .text	00000000 Dictionary_533
08002492 l       .text	00000000 Code_533
080024a0 l       .text	00000000 Dictionary_536
080024aa l       .text	00000000 Code_536
080024b8 l       .text	00000000 Dictionary_539
080024c2 l       .text	00000000 Code_539
080024d0 l       .text	00000000 Dictionary_542
080024dc l       .text	00000000 Code_542
080024ea l       .text	00000000 Dictionary_545
080024f8 l       .text	00000000 Code_545
080024fc l       .text	00000000 allocator_negate
0800251c l       .text	00000000 Dictionary_548
08002526 l       .text	00000000 Code_548
08002534 l       .text	00000000 Dictionary_551
0800253e l       .text	00000000 Code_551
0800254c l       .text	00000000 Dictionary_554
08002556 l       .text	00000000 Code_554
0800255c l       .text	00000000 Dictionary_555
08002566 l       .text	00000000 Code_555
08002572 l       .text	00000000 Dictionary_558
0800257e l       .text	00000000 Code_558
0800258a l       .text	00000000 Dictionary_561
08002594 l       .text	00000000 Code_561
080025a2 l       .text	00000000 Dictionary_564
080025ac l       .text	00000000 Code_564
080025e2 l       .text	00000000 Dictionary_569
080025ee l       .text	00000000 Code_569
080025ee l       .text	00000000 u_divmod
08002600 l       .text	00000000 Dictionary_570
0800260c l       .text	00000000 Code_570
0800260c l       .text	00000000 divmod
0800261e l       .text	00000000 Dictionary_571
08002628 l       .text	00000000 Code_571
08002632 l       .text	00000000 Dictionary_573
0800263a l       .text	00000000 Code_573
08002672 l       .text	00000000 Dictionary_575
0800267e l       .text	00000000 Code_575
08002686 l       .text	00000000 Dictionary_576
08002692 l       .text	00000000 Code_576
2407fffc l       *ABS*	00000000 base
0800269e l       .text	00000000 Dictionary_579
080026ac l       .text	00000000 Code_579
080026b4 l       .text	00000000 Dictionary_580
080026c2 l       .text	00000000 Code_580
080026ca l       .text	00000000 Dictionary_581
080026d4 l       .text	00000000 Code_581
58020000 l       *ABS*	00000000 GPIOA_BASE
58020000 l       *ABS*	00000000 GPIOA_MODER
58020004 l       *ABS*	00000000 GPIOA_OTYPER
58020008 l       *ABS*	00000000 GPIOA_OSPEEDR
5802000c l       *ABS*	00000000 GPIOA_PUPDR
58020010 l       *ABS*	00000000 GPIOA_IDR
58020014 l       *ABS*	00000000 GPIOA_ODR
58020018 l       *ABS*	00000000 GPIOA_BSRR
5802001c l       *ABS*	00000000 GPIOA_LCKR
58020020 l       *ABS*	00000000 GPIOA_AFRL
58020024 l       *ABS*	00000000 GPIOA_AFRH
58020400 l       *ABS*	00000000 GPIOB_BASE
58020400 l       *ABS*	00000000 GPIOB_MODER
58020404 l       *ABS*	00000000 GPIOB_OTYPER
58020408 l       *ABS*	00000000 GPIOB_OSPEEDR
5802040c l       *ABS*	00000000 GPIOB_PUPDR
58020410 l       *ABS*	00000000 GPIOB_IDR
58020414 l       *ABS*	00000000 GPIOB_ODR
58020418 l       *ABS*	00000000 GPIOB_BSRR
5802041c l       *ABS*	00000000 GPIOB_LCKR
58020420 l       *ABS*	00000000 GPIOB_AFRL
58020424 l       *ABS*	00000000 GPIOB_AFRH
58020800 l       *ABS*	00000000 GPIOC_BASE
58020c00 l       *ABS*	00000000 GPIOD_BASE
58020c00 l       *ABS*	00000000 GPIOD_MODER
58020c24 l       *ABS*	00000000 GPIOD_AFRH
58022800 l       *ABS*	00000000 GPIOK_MODER
e000ef50 l       *ABS*	00000000 ICIALLU
e000ed14 l       *ABS*	00000000 CCR
e000ed84 l       *ABS*	00000000 CSSELR
e000ed80 l       *ABS*	00000000 CCSIDR
e000ef60 l       *ABS*	00000000 DCISW
00020000 l       *ABS*	00000000 SCB_CCR_IC
52002000 l       *ABS*	00000000 FLASH_BASE
00000004 l       *ABS*	00000000 FLASH_LATENCY_4
0000000f l       *ABS*	00000000 FLASH_ACR_LATENCY_Msk
58024800 l       *ABS*	00000000 PWR_BASE
5802480c l       *ABS*	00000000 PWR_CR3
58024818 l       *ABS*	00000000 PWR_D3CR
00000001 l       *ABS*	00000000 PWR_CR3_BYPASS
00000002 l       *ABS*	00000000 PWR_CR3_LDOEN
00000004 l       *ABS*	00000000 PWR_CR3_SCUEN
0000c000 l       *ABS*	00000000 PWR_REGU_VOLTAGE_SCALE0
0000c000 l       *ABS*	00000000 PWR_D3CR_VOS_Msk
58024400 l       *ABS*	00000000 RCC_BASE
58024400 l       *ABS*	00000000 RCC_CR
58024410 l       *ABS*	00000000 RCC_CFGR
58024418 l       *ABS*	00000000 RCC_D1CFGR
5802441c l       *ABS*	00000000 RCC_D2CFGR
58024420 l       *ABS*	00000000 RCC_D3CFGR
58024428 l       *ABS*	00000000 RCC_PLLCKSELR
5802442c l       *ABS*	00000000 RCC_PLLCFGR
58024430 l       *ABS*	00000000 RCC_PLL1DIVR
58024454 l       *ABS*	00000000 RCC_D2CCIP2R
580244e0 l       *ABS*	00000000 RCC_AHB4ENR
580244e8 l       *ABS*	00000000 RCC_APB1ENR
580244f0 l       *ABS*	00000000 RCC_APB2ENR
00010000 l       *ABS*	00000000 RCC_CR_HSEON
00020000 l       *ABS*	00000000 RCC_CR_HSERDY
00040000 l       *ABS*	00000000 RCC_CR_HSEBYP
01000000 l       *ABS*	00000000 RCC_CR_PLL1ON
02000000 l       *ABS*	00000000 RCC_CR_PLL1RDY
00000007 l       *ABS*	00000000 RCC_CFGR_SW_Msk
00000003 l       *ABS*	00000000 RCC_SYS_CLKSOURCE_PLL1
00000000 l       *ABS*	00000000 RCC_SYSCLK_DIV_1
0000000f l       *ABS*	00000000 RCC_D1CFGR_HPRE_Msk
00000008 l       *ABS*	00000000 RCC_AHB_DIV_2
00000070 l       *ABS*	00000000 RCC_D2CFGR_D2PPRE1_Msk
00000040 l       *ABS*	00000000 RCC_APB1_DIV_2
00000700 l       *ABS*	00000000 RCC_D2CFGR_D2PPRE2_Msk
00000400 l       *ABS*	00000000 RCC_APB2_DIV_2
00000070 l       *ABS*	00000000 RCC_D1CFGR_D1PPRE_Msk
00000040 l       *ABS*	00000000 RCC_APB3_DIV_2
00000070 l       *ABS*	00000000 RCC_D3CFGR_D3PPRE_Msk
00000040 l       *ABS*	00000000 RCC_APB4_DIV_2
00000003 l       *ABS*	00000000 RCC_USART234578_CLKSOURCE_HSI
00000003 l       *ABS*	00000000 RCC_PLLCKSELR_PLLSRC_Msk
00000002 l       *ABS*	00000000 RCC_PLLSRC_HSE
00010000 l       *ABS*	00000000 RCC_PLLCFGR_DIVP1EN
00040000 l       *ABS*	00000000 RCC_PLLCFGR_DIVR1EN
0000000c l       *ABS*	00000000 RCC_PLLCFGR_PLL1RGE_Msk
00000008 l       *ABS*	00000000 RCC_PLLINPUTRANGE_2
00000002 l       *ABS*	00000000 RCC_PLLCFGR_PLL1VCOSEL
00000000 l       *ABS*	00000000 RCC_PLLVCORANGE_WIDE
000003f0 l       *ABS*	00000000 RCC_PLLCKSELR_DIVM1_Msk
00000040 l       *ABS*	00000000 RCC_PLLCKSELR_DIVM1
000001fe l       *ABS*	00000000 RCC_PLL1DIVR_N1_Msk
0000018f l       *ABS*	00000000 RCC_PLL1DIVR_N1
0000fe00 l       *ABS*	00000000 RCC_PLL1DIVR_P1_Msk
00000200 l       *ABS*	00000000 RCC_PLL1DIVR_P1
007f0000 l       *ABS*	00000000 RCC_PLL1DIVR_Q1_Msk
00030000 l       *ABS*	00000000 RCC_PLL1DIVR_Q1
7f000000 l       *ABS*	00000000 RCC_PLL1DIVR_R1_Msk
01000000 l       *ABS*	00000000 RCC_PLL1DIVR_R1
40004800 l       *ABS*	00000000 Terminal_USART_Base
40004800 l       *ABS*	00000000 Terminal_CR1
40004804 l       *ABS*	00000000 Terminal_CR2
40004808 l       *ABS*	00000000 Terminal_CR3
4000480c l       *ABS*	00000000 Terminal_BRR
40004810 l       *ABS*	00000000 Terminal_GTPR
40004814 l       *ABS*	00000000 Terminal_RTOR
40004818 l       *ABS*	00000000 Terminal_RQR
4000481c l       *ABS*	00000000 Terminal_ISR
40004820 l       *ABS*	00000000 Terminal_ICR
40004824 l       *ABS*	00000000 Terminal_RDR
40004828 l       *ABS*	00000000 Terminal_TDR
00000001 l       *ABS*	00000000 USART_CR1_UE
00000008 l       *ABS*	00000000 USART_CR1_TE
00000004 l       *ABS*	00000000 USART_CR1_RE
00000020 l       *ABS*	00000000 RXNE
00000040 l       *ABS*	00000000 TC
00000080 l       *ABS*	00000000 TXE
00001000 l       *ABS*	00000000 USART_CR3_OVRDIS
080026ec l       .text	00000000 enable_i_cache
08002718 l       .text	00000000 enable_d_cache
0800272a l       .text	00000000 set_flash_latency
08002744 l       .text	00000000 set_power_config
08002754 l       .text	00000000 set_voltage_scaling
0800276c l       .text	00000000 enable_bypass_hse
0800278a l       .text	00000000 set_pll_400_mhz_sysclk
08002814 l       .text	00000000 enable_pll
08002828 l       .text	00000000 set_prescalers
0800288c l       .text	00000000 uart_init
08002974 l       .text	00000000 Dictionary_605
08002984 l       .text	00000000 Code_605
2407fff8 l       *ABS*	00000000 hook_emit
08002a7a l       .text	00000000 serial_emit
08002990 l       .text	00000000 Dictionary_608
080029a0 l       .text	00000000 Code_608
2407fff4 l       *ABS*	00000000 hook_key
08002aa0 l       .text	00000000 serial_key
080029ac l       .text	00000000 Dictionary_611
080029be l       .text	00000000 Code_611
2407fff0 l       *ABS*	00000000 hook_qemit
08002aca l       .text	00000000 serial_qemit
080029ca l       .text	00000000 Dictionary_614
080029da l       .text	00000000 Code_614
2407ffec l       *ABS*	00000000 hook_qkey
08002af6 l       .text	00000000 serial_qkey
080029e6 l       .text	00000000 Dictionary_617
080029f8 l       .text	00000000 Code_617
2407ffe8 l       *ABS*	00000000 hook_pause
08004eae l       .text	00000000 nop_vektor
08002a04 l       .text	00000000 Dictionary_620
08002a10 l       .text	00000000 Code_620
08002a10 l       .text	00000000 emit
08002a64 l       .text	00000000 hook_intern
08002a1a l       .text	00000000 Dictionary_621
08002a24 l       .text	00000000 Code_621
08002a24 l       .text	00000000 key
08002a2e l       .text	00000000 Dictionary_622
08002a3a l       .text	00000000 Code_622
08002a40 l       .text	00000000 Dictionary_623
08002a4c l       .text	00000000 Code_623
08002a52 l       .text	00000000 Dictionary_624
08002a5e l       .text	00000000 Code_624
08002a5e l       .text	00000000 pause
08002a68 l       .text	00000000 Dictionary_625
08002a7a l       .text	00000000 Code_625
08002a8e l       .text	00000000 Dictionary_628
08002aa0 l       .text	00000000 Code_628
08002ab6 l       .text	00000000 Dictionary_631
08002aca l       .text	00000000 Code_631
08002ae4 l       .text	00000000 Dictionary_634
08002af6 l       .text	00000000 Code_634
08002b30 l       .text	00000000 Dictionary_637
08002b3e l       .text	00000000 Code_637
08002b62 l       .text	00000000 accept
08002b54 l       .text	00000000 Dictionary_639
08002b62 l       .text	00000000 Code_639
08002d06 l       .text	00000000 space
08002bca l       .text	00000000 Dictionary_643
08002bd4 l       .text	00000000 Code_643
08002bd4 l       .text	00000000 tib
08002bdc l       .text	00000000 Dictionary_645
08002be6 l       .text	00000000 Code_645
2407ffe4 l       *ABS*	00000000 Pufferstand
08002bf2 l       .text	00000000 Dictionary_648
08002c08 l       .text	00000000 Code_648
2407ffdc l       *ABS*	00000000 current_source
08002c18 l       .text	00000000 Dictionary_651
08002c28 l       .text	00000000 Code_651
08002c28 l       .text	00000000 setsource
08002c34 l       .text	00000000 Dictionary_653
08002c42 l       .text	00000000 Code_653
08002c42 l       .text	00000000 source
08002c52 l       .text	00000000 Dictionary_655
08002c5e l       .text	00000000 Code_655
08002c5e l       .text	00000000 query
08002c8c l       .text	00000000 Dictionary_660
08002c9a l       .text	00000000 Code_660
08002c9a l       .text	00000000 compare
08002cd4 l       .text	00000000 Dictionary_664
08002cde l       .text	00000000 Code_664
08002ce8 l       .text	00000000 Dictionary_666
08002cf2 l       .text	00000000 Code_666
08002cfa l       .text	00000000 Dictionary_669
08002d06 l       .text	00000000 Code_669
08002d0e l       .text	00000000 Dictionary_672
08002d1c l       .text	00000000 Code_672
08002d2e l       .text	00000000 Dictionary_674
08002d3c l       .text	00000000 Code_674
08002d4a l       .text	00000000 holechar
08002d3e l       .text	00000000 Dictionary_675
08002d4a l       .text	00000000 Code_675
080046e0 l       .text	00000000 token
08002d56 l       .text	00000000 Dictionary_677
08002d5e l       .text	00000000 Code_677
08002d66 l       .text	00000000 Dictionary_680
08002d6e l       .text	00000000 Code_680
080046f4 l       .text	00000000 parse
08002d80 l       .text	00000000 Dictionary_685
08002d8a l       .text	00000000 Code_685
08003292 l       .text	00000000 callkomma
0800392e l       .text	00000000 stringkomma
08002e38 l       .text	00000000 type
08002dc4 l       .text	00000000 Dictionary_691
08002dce l       .text	00000000 Code_691
08002dd2 l       .text	00000000 dotcfuesschen
08002dea l       .text	00000000 Dictionary_693
08002df4 l       .text	00000000 Code_693
08002df8 l       .text	00000000 dotsfuesschen
08002e14 l       .text	00000000 Dictionary_697
08002e20 l       .text	00000000 Code_697
08002e20 l       .text	00000000 count
08002e2c l       .text	00000000 Dictionary_700
08002e38 l       .text	00000000 Code_700
08002e50 l       .text	00000000 stype
08002e44 l       .text	00000000 Dictionary_701
08002e50 l       .text	00000000 Code_701
08002e6c l       .text	00000000 Dictionary_704
08002e78 l       .text	00000000 Code_704
08002ea6 l       .text	00000000 Dictionary_707
08002eb0 l       .text	00000000 Code_707
08002eb0 l       .text	00000000 hexdots
08002eb6 l       .text	00000000 Dictionary_708
08002ec0 l       .text	00000000 Code_708
08002ec0 l       .text	00000000 udots
08002ec6 l       .text	00000000 Dictionary_709
08002ed0 l       .text	00000000 Code_709
08002ed0 l       .text	00000000 dots
08004a8e l       .text	00000000 dot
08002f6a l       .text	00000000 Dictionary_720
08002f76 l       .text	00000000 Code_720
08002f76 l       .text	00000000 words
08003de2 l       .text	00000000 dictionarystart
08003e7c l       .text	00000000 skipstring
08003e12 l       .text	00000000 dictionarynext
0800300a l       .text	00000000 Dictionary_740
08003018 l       .text	00000000 Code_740
08003018 l       .text	00000000 unused
08004026 l       .text	00000000 flashvarhere
2407ffd0 l       *ABS*	00000000 Dictionarypointer
0800302e l       .text	00000000 unused_ram
0800305c l       .text	00000000 Dictionary_741
08003070 l       .text	00000000 Code_741
0800314c l       .text	00000000 movwkomma
08003184 l       .text	00000000 movtkomma
080031c0 l       .text	00000000 Dictionary_750
080031d8 l       .text	00000000 Code_750
0800323e l       .text	00000000 movwmovt_register_r3
08003226 l       .text	00000000 Dictionary_754
08003236 l       .text	00000000 Code_754
08003256 l       .text	00000000 callkommalang
08003278 l       .text	00000000 callkommakurz_intern
0800326a l       .text	00000000 callkommakurz
08003286 l       .text	00000000 Dictionary_762
08003292 l       .text	00000000 Code_762
08004008 l       .text	00000000 here
080032ec l       .text	00000000 Dictionary_767
080032fc l       .text	00000000 Code_767
080032fc l       .text	00000000 literalkomma
08003322 l       .text	00000000 Dictionary_774
08003330 l       .text	00000000 Code_774
080033b4 l       .text	00000000 builds
0800336a l       .text	00000000 dodoes
0800334a l       .text	00000000 Dictionary_776
08003356 l       .text	00000000 Code_776
08003356 l       .text	00000000 does
0800338e l       .text	00000000 dodoes_ram
0800378e l       .text	00000000 smudge
080033a6 l       .text	00000000 Dictionary_779
080033b4 l       .text	00000000 Code_779
08003b7c l       .text	00000000 create
080033da l       .text	00000000 builds_ram
0800389c l       .text	00000000 nop_hkomma
08003994 l       .text	00000000 allot
08003402 l       .text	00000000 Dictionary_786
0800340c l       .text	00000000 Code_786
08003416 l       .text	00000000 tick
0800340e l       .text	00000000 Dictionary_787
08003416 l       .text	00000000 Code_787
08003f42 l       .text	00000000 find_not_found
08003426 l       .text	00000000 Dictionary_789
08003436 l       .text	00000000 Code_789
08004ad6 l       .text	00000000 kompilator
0800345c l       .text	00000000 Dictionary_794
0800346a l       .text	00000000 Code_794
0800346a l       .text	00000000 inlinekomma
08003498 l       .text	00000000 suchedefinitionsende
080034b2 l       .text	00000000 Dictionary_798
080034be l       .text	00000000 Code_798
080034be l       .text	00000000 retkomma
080034c8 l       .text	00000000 Dictionary_801
080034d4 l       .text	00000000 Code_801
080034d6 l       .text	00000000 Dictionary_802
080034e4 l       .text	00000000 Code_802
080034ee l       .text	00000000 Dictionary_804
080034fa l       .text	00000000 Code_804
08003506 l       .text	00000000 Dictionary_807
0800350e l       .text	00000000 Code_807
0800350e l       .text	00000000 compile_state
08003518 l       .text	00000000 Dictionary_808
08003520 l       .text	00000000 Code_808
08003520 l       .text	00000000 execute_state
08003528 l       .text	00000000 Dictionary_809
08003530 l       .text	00000000 Code_809
08003548 l       .text	00000000 Dictionary_810
08003550 l       .text	00000000 Code_810
080037fc l       .text	00000000 setflags
08004bdc l       .text	00000000 inline_cache_schreiben
080035c4 l       .text	00000000 Dictionary_818
080035d2 l       .text	00000000 Code_818
080035d2 l       .text	00000000 execute
080035d8 l       .text	00000000 Dictionary_820
080035e8 l       .text	00000000 Code_820
080035f0 l       .text	00000000 Dictionary_823
080035fe l       .text	00000000 Code_823
080035fe l       .text	00000000 setze_inlineflag
08003606 l       .text	00000000 Dictionary_826
08003618 l       .text	00000000 Code_826
08003620 l       .text	00000000 Dictionary_829
08003632 l       .text	00000000 Code_829
08003632 l       .text	00000000 setze_faltbarflag
0800363a l       .text	00000000 Dictionary_832
0800364c l       .text	00000000 Code_832
08003654 l       .text	00000000 Dictionary_835
08003666 l       .text	00000000 Code_835
0800366e l       .text	00000000 Dictionary_838
08003680 l       .text	00000000 Code_838
08003688 l       .text	00000000 Dictionary_841
0800369a l       .text	00000000 Code_841
080036a2 l       .text	00000000 Dictionary_844
080036b4 l       .text	00000000 Code_844
080036bc l       .text	00000000 Dictionary_847
080036ce l       .text	00000000 Code_847
080036d6 l       .text	00000000 Dictionary_850
080036e8 l       .text	00000000 Code_850
080036f0 l       .text	00000000 Dictionary_853
08003700 l       .text	00000000 Code_853
08003720 l       .text	00000000 Dictionary_856
08003730 l       .text	00000000 Code_856
08003780 l       .text	00000000 Dictionary_858
0800378e l       .text	00000000 Code_858
080037de l       .text	00000000 smudge_ram
08003856 l       .text	00000000 align4komma
08003880 l       .text	00000000 align32komma
2407ffd4 l       *ABS*	00000000 Fadenende
080037fe l       .text	00000000 setflags_intern
080037ec l       .text	00000000 Dictionary_863
080037fc l       .text	00000000 Code_863
08003816 l       .text	00000000 setflags_ram
08003834 l       .text	00000000 Dictionary_866
08003842 l       .text	00000000 Code_866
0800384a l       .text	00000000 Dictionary_867
08003856 l       .text	00000000 Code_867
08003870 l       .text	00000000 Dictionary_869
08003880 l       .text	00000000 Code_869
080038a4 l       .text	00000000 drop_hkomma
080038ae l       .text	00000000 Dictionary_875
080038b8 l       .text	00000000 Code_875
080038e2 l       .text	00000000 hkomma_ram
080038e8 l       .text	00000000 hkomma_fertig
080038f4 l       .text	00000000 Dictionary_881
080038fc l       .text	00000000 Code_881
080038fc l       .text	00000000 komma
0800390e l       .text	00000000 Dictionary_884
08003918 l       .text	00000000 Code_884
08003920 l       .text	00000000 Dictionary_885
0800392e l       .text	00000000 Code_885
08003988 l       .text	00000000 Dictionary_893
08003994 l       .text	00000000 Code_893
080039c2 l       .text	00000000 allot_ram
080039e2 l       .text	00000000 allot_ok
080039e6 l       .text	00000000 Dictionary_898
080039f6 l       .text	00000000 Code_898
08003a02 l       .text	00000000 Dictionary_901
08003a0e l       .text	00000000 Code_901
08003a1a l       .text	00000000 Dictionary_904
08003a2a l       .text	00000000 Code_904
08003a7a l       .text	00000000 compiletoram
08003a3e l       .text	00000000 Dictionary_905
08003a52 l       .text	00000000 Code_905
08003a66 l       .text	00000000 Dictionary_907
08003a7a l       .text	00000000 Code_907
08003aac l       .text	00000000 Zweitpointertausch
08003a88 l       .text	00000000 Dictionary_908
08003a9e l       .text	00000000 Code_908
08003a9e l       .text	00000000 compiletoflash
08003afa l       .text	00000000 Dictionary_910
08003b0e l       .text	00000000 Code_910
08003b16 l       .text	00000000 Dictionary_911
08003b28 l       .text	00000000 Code_911
08003b6c l       .text	00000000 Dictionary_912
08003b7c l       .text	00000000 Code_912
08003e9a l       .text	00000000 find
08003c3e l       .text	00000000 create_ram
08003c66 l       .text	00000000 create_ende
08003c70 l       .text	00000000 Dictionary_932
08003c80 l       .text	00000000 Code_932
08003cb0 l       .text	00000000 nvariable
08003c88 l       .text	00000000 Dictionary_935
08003c98 l       .text	00000000 Code_935
08003ca0 l       .text	00000000 Dictionary_938
08003cb0 l       .text	00000000 Code_938
08003cf4 l       .text	00000000 variable_ram
08003d64 l       .text	00000000 prepare_var_buf_flash
08003d98 l       .text	00000000 prepare_var_buf_ram
08003d08 l       .text	00000000 finish_var_buf_ram
08003d12 l       .text	00000000 Dictionary_943
08003d20 l       .text	00000000 Code_943
08003d5a l       .text	00000000 rambuffer_ram
08003dbe l       .text	00000000 bx_lr_komma
08003dcc l       .text	00000000 Dictionary_954
08003de2 l       .text	00000000 Code_954
08003dfc l       .text	00000000 Dictionary_956
08003e12 l       .text	00000000 Code_956
08003e5c l       .text	00000000 Dictionary_960
08003e6e l       .text	00000000 Code_960
08003e8e l       .text	00000000 Dictionary_961
08003e9a l       .text	00000000 Code_961
2407ffcc l       *ABS*	00000000 hook_find
08003ea0 l       .text	00000000 Dictionary_962
08003eb0 l       .text	00000000 Code_962
08003eca l       .text	00000000 core_find
08003ebc l       .text	00000000 Dictionary_965
08003eca l       .text	00000000 Code_965
08004d38 l       .text	00000000 not_found_addr_r0_len_r1
08003f64 l       .text	00000000 Dictionary_972
08003f72 l       .text	00000000 Code_972
08003f72 l       .text	00000000 cjumpgenerator
08003f90 l       .text	00000000 jump_too_far
08003fb2 l       .text	00000000 sprungbefehl_einfuegen
08003fc2 l       .text	00000000 Dictionary_976
08003fce l       .text	00000000 Code_976
08003fce l       .text	00000000 jumpgenerator
08003ffc l       .text	00000000 Dictionary_981
08004008 l       .text	00000000 Code_981
08004012 l       .text	00000000 Dictionary_983
08004026 l       .text	00000000 Code_983
08004030 l       .text	00000000 nullprobekomma
08004044 l       .text	00000000 branch_r
08004046 l       .text	00000000 r_branch_jne
080040c0 l       .text	00000000 branch_v
08004060 l       .text	00000000 r_branch_jvc
0800407a l       .text	00000000 r_nullbranch
08004098 l       .text	00000000 r_branch
080040aa l       .text	00000000 nullbranch_v
080040d2 l       .text	00000000 v_branch
080040de l       .text	00000000 v_nullbranch
080040f2 l       .text	00000000 v_casebranch
08004106 l       .text	00000000 allocator_nullsprungprobe
08004140 l       .text	00000000 Dictionary_1007
0800414c l       .text	00000000 Code_1007
0800414c l       .text	00000000 struktur_then
08004236 l       .text	00000000 strukturen_passen_nicht
0800416c l       .text	00000000 Dictionary_1010
08004178 l       .text	00000000 Code_1010
080041ea l       .text	00000000 struktur_ahead
08004188 l       .text	00000000 Dictionary_1011
08004192 l       .text	00000000 Code_1011
08004192 l       .text	00000000 struktur_if
080041a2 l       .text	00000000 struktur_if_allokator
080041de l       .text	00000000 Dictionary_1019
080041ea l       .text	00000000 Code_1019
080041f8 l       .text	00000000 Dictionary_1022
08004206 l       .text	00000000 Code_1022
080042c2 l       .text	00000000 struktur_again
08004212 l       .text	00000000 Dictionary_1023
0800421e l       .text	00000000 Code_1023
08004256 l       .text	00000000 Dictionary_1025
08004262 l       .text	00000000 Code_1025
080042b6 l       .text	00000000 Dictionary_1033
080042c2 l       .text	00000000 Code_1033
080042ca l       .text	00000000 Dictionary_1035
080042d6 l       .text	00000000 Code_1035
080042f4 l       .text	00000000 Dictionary_1038
080042fc l       .text	00000000 Code_1038
0800430e l       .text	00000000 Dictionary_1042
08004316 l       .text	00000000 Code_1042
0800433c l       .text	00000000 Dictionary_1046
08004344 l       .text	00000000 Code_1046
08004368 l       .text	00000000 Dictionary_1051
08004374 l       .text	00000000 Code_1051
080043a6 l       .text	00000000 Dictionary_1053
080043b4 l       .text	00000000 Code_1053
080043b4 l       .text	00000000 unloop
080043b8 l       .text	00000000 Dictionary_1054
080043c4 l       .text	00000000 Code_1054
080043de l       .text	00000000 struktur_plusloop
08004414 l       .text	00000000 loop_intern
080043f0 l       .text	00000000 Dictionary_1058
080043fc l       .text	00000000 Code_1058
0800442c l       .text	00000000 struktur_loop
080046ac l       .text	00000000 spruenge_einpflegen
08004432 l       .text	00000000 Dictionary_1063
0800443c l       .text	00000000 Code_1063
0800446e l       .text	00000000 struktur_do
08004448 l       .text	00000000 do_rest_der_schleifenstruktur
080044ca l       .text	00000000 gemeinsame_schleifenoptimierung
0800447a l       .text	00000000 Dictionary_1073
08004484 l       .text	00000000 Code_1073
08004490 l       .text	00000000 qdo_rest_der_schleifenstruktur
08004560 l       .text	00000000 Dictionary_1095
0800456c l       .text	00000000 Code_1095
0800456c l       .text	00000000 case
08004580 l       .text	00000000 Dictionary_1100
0800458a l       .text	00000000 Code_1100
0800458e l       .text	00000000 struktur_qof
080045a2 l       .text	00000000 of_inneneinsprung
08004596 l       .text	00000000 Dictionary_1102
080045a0 l       .text	00000000 Code_1102
0800464c l       .text	00000000 struktur_of
080045b6 l       .text	00000000 of_opcodiereinsprung
08004654 l       .text	00000000 Dictionary_1118
08004660 l       .text	00000000 Code_1118
08004660 l       .text	00000000 strukturendof
0800468a l       .text	00000000 Dictionary_1126
08004698 l       .text	00000000 Code_1126
08004698 l       .text	00000000 strukturendcase
080046d4 l       .text	00000000 Dictionary_1129
080046e0 l       .text	00000000 Code_1129
080046e8 l       .text	00000000 Dictionary_1131
080046f4 l       .text	00000000 Code_1131
0800474c l       .text	00000000 Dictionary_1132
08004758 l       .text	00000000 Code_1132
08004758 l       .text	00000000 digit
0800475c l       .text	00000000 digit_base_r3
0800478a l       .text	00000000 Dictionary_1134
08004798 l       .text	00000000 Code_1134
08004798 l       .text	00000000 number
08004858 l       .text	00000000 number_nachkommastellen
08004894 l       .text	00000000 Dictionary_1161
080048a2 l       .text	00000000 Code_1161
080048a2 l       .text	00000000 digitausgeben
080048b6 l       .text	00000000 Dictionary_1162
080048c2 l       .text	00000000 Code_1162
080048c2 l       .text	00000000 hold
080048ec l       .text	00000000 Dictionary_1164
080048f8 l       .text	00000000 Code_1164
080048f8 l       .text	00000000 zahlanhaengen
0800490c l       .text	00000000 Dictionary_1166
08004918 l       .text	00000000 Code_1166
08004918 l       .text	00000000 vorzeichen
08004924 l       .text	00000000 Dictionary_1168
0800492e l       .text	00000000 Code_1168
0800492e l       .text	00000000 zifferstringende
08004938 l       .text	00000000 Dictionary_1169
08004942 l       .text	00000000 Code_1169
08004942 l       .text	00000000 falleziffern
0800495a l       .text	00000000 fziffer
08004950 l       .text	00000000 Dictionary_1170
0800495a l       .text	00000000 Code_1170
08004972 l       .text	00000000 Dictionary_1172
0800497c l       .text	00000000 Code_1172
0800497c l       .text	00000000 alleziffern
08004996 l       .text	00000000 ziffer
0800498e l       .text	00000000 Dictionary_1173
08004996 l       .text	00000000 Code_1173
080049ba l       .text	00000000 Dictionary_1178
080049c4 l       .text	00000000 Code_1178
080049c4 l       .text	00000000 zifferstringanfang
080049cc l       .text	00000000 Dictionary_1179
080049d6 l       .text	00000000 Code_1179
080049e8 l       .text	00000000 fdotn
080049de l       .text	00000000 Dictionary_1182
080049e8 l       .text	00000000 Code_1182
08004a66 l       .text	00000000 abschluss_zahlenausgabe
08004a2c l       .text	00000000 Dictionary_1190
08004a36 l       .text	00000000 Code_1190
08004a36 l       .text	00000000 uddot
08004a42 l       .text	00000000 Dictionary_1191
08004a4c l       .text	00000000 Code_1191
08004a4c l       .text	00000000 ddot
08004a74 l       .text	00000000 Dictionary_1192
08004a7e l       .text	00000000 Code_1192
08004a86 l       .text	00000000 Dictionary_1195
08004a8e l       .text	00000000 Code_1195
08004aa0 l       .text	00000000 konstantenfaltungszeiger_setzen
08004ab2 l       .text	00000000 konstantenfaltungszeiger_neusetzen
08004abe l       .text	00000000 konstantenfaltungszeiger_loeschen
08004aca l       .text	00000000 wievielefaltkonstanten
08004c34 l       .text	00000000 inline_cache_parser
08004b26 l       .text	00000000 .interpret_faltoptimierung
08004b32 l       .text	00000000 .interpret_allocator
08004b1e l       .text	00000000 .interpret_genugkonstanten
08004b64 l       .text	00000000 .interpret_allocator_finished
08004b8c l       .text	00000000 .prepared_for_classic
08004c64 l       .text	00000000 Dictionary_1227
08004c74 l       .text	00000000 Code_1227
08004cbc l       .text	00000000 interpret
08004cac l       .text	00000000 Dictionary_1229
08004cbc l       .text	00000000 Code_1229
08004d5c l       .text	00000000 .interpret_token_found
08004d8e l       .text	00000000 .ausfuehren
08004db4 l       .text	00000000 Dictionary_1255
08004dc4 l       .text	00000000 Code_1255
2407ffc8 l       *ABS*	00000000 hook_quit
08004e0e l       .text	00000000 quit_innenschleife
08004dd0 l       .text	00000000 Dictionary_1258
08004ddc l       .text	00000000 Code_1258
08004e08 l       .text	00000000 quit_intern
08004e54 l       .text	00000000 Dictionary_1260
08004e60 l       .text	00000000 Code_1260
08004e6e l       .text	00000000 Dictionary_1262
08004e7a l       .text	00000000 Code_1262
08004e7e l       .text	00000000 Dictionary_1263
08004e8a l       .text	00000000 Code_1263
08004e8e l       .text	00000000 Dictionary_1264
08004e9a l       .text	00000000 Code_1264
08004ea4 l       .text	00000000 Dictionary_1266
08004eae l       .text	00000000 Code_1266
08004eb0 l       .text	00000000 Dictionary_1267
08004ec0 l       .text	00000000 Code_1267
08004ec0 l       .text	00000000 unhandled
08004ef2 l       .text	00000000 Dictionary_1271
08004efe l       .text	00000000 Code_1271
08004f04 l       .text	00000000 Dictionary_1273
08004f16 l       .text	00000000 Code_1273
2407ffc4 l       *ABS*	00000000 irq_hook_systick
08004f2e l       .text	00000000 Dictionary_1277
08004f3e l       .text	00000000 Code_1277
2407ffc0 l       *ABS*	00000000 irq_hook_fault
08004f56 l       .text	00000000 Dictionary_1281
08004f6c l       .text	00000000 Code_1281
2407ffbc l       *ABS*	00000000 irq_hook_collection
08004f84 l       .text	00000000 Dictionary_1285
08004f94 l       .text	00000000 Code_1285
2407ffb8 l       *ABS*	00000000 irq_hook_exti0
08004fac l       .text	00000000 Dictionary_1289
08004fbc l       .text	00000000 Code_1289
2407ffb4 l       *ABS*	00000000 irq_hook_exti1
08004fd4 l       .text	00000000 Dictionary_1293
08004fe4 l       .text	00000000 Code_1293
2407ffb0 l       *ABS*	00000000 irq_hook_exti2
08004ffc l       .text	00000000 Dictionary_1297
0800500c l       .text	00000000 Code_1297
2407ffac l       *ABS*	00000000 irq_hook_exti3
08005024 l       .text	00000000 Dictionary_1301
08005034 l       .text	00000000 Code_1301
2407ffa8 l       *ABS*	00000000 irq_hook_exti4
0800504c l       .text	00000000 Dictionary_1305
0800505a l       .text	00000000 Code_1305
2407ffa4 l       *ABS*	00000000 irq_hook_adc
08005072 l       .text	00000000 Dictionary_1309
08005082 l       .text	00000000 Code_1309
2407ffa0 l       *ABS*	00000000 irq_hook_tim2
0800509a l       .text	00000000 Dictionary_1313
080050aa l       .text	00000000 Code_1313
2407ff9c l       *ABS*	00000000 irq_hook_tim3
080050c2 l       .text	00000000 Dictionary_1317
080050d2 l       .text	00000000 Code_1317
2407ff98 l       *ABS*	00000000 irq_hook_tim4
080050ea l       .text	00000000 Dictionary_1320
0800510a l       .text	00000000 Code_1320
0800511e l       .text	00000000 SucheFlashPointer_Hangelschleife
08005174 l       .text	00000000 Sucheflashpointer_Speicherbelegung_fertig
0800521a l       .text	00000000 init_name



Disassembly of section .text:

08000000 <CoreDictionaryAnfang-0x1e4>:
 8000000:	24000388 	.word	0x24000388
 8000004:	0800510b 	.word	0x0800510b
 8000008:	08004f4b 	.word	0x08004f4b
 800000c:	08004f4b 	.word	0x08004f4b
 8000010:	08004f4b 	.word	0x08004f4b
 8000014:	08004f4b 	.word	0x08004f4b
 8000018:	08004f4b 	.word	0x08004f4b
	...
 800002c:	08004f79 	.word	0x08004f79
 8000030:	08004f79 	.word	0x08004f79
 8000034:	00000000 	.word	0x00000000
 8000038:	08004f79 	.word	0x08004f79
 800003c:	08004f23 	.word	0x08004f23
 8000040:	08004f79 	.word	0x08004f79
 8000044:	08004f79 	.word	0x08004f79
 8000048:	08004f79 	.word	0x08004f79
 800004c:	08004f79 	.word	0x08004f79
 8000050:	08004f79 	.word	0x08004f79
 8000054:	08004f79 	.word	0x08004f79
 8000058:	08004fa1 	.word	0x08004fa1
 800005c:	08004fc9 	.word	0x08004fc9
 8000060:	08004ff1 	.word	0x08004ff1
 8000064:	08005019 	.word	0x08005019
 8000068:	08005041 	.word	0x08005041
 800006c:	08004f79 	.word	0x08004f79
 8000070:	08004f79 	.word	0x08004f79
 8000074:	08004f79 	.word	0x08004f79
 8000078:	08004f79 	.word	0x08004f79
 800007c:	08004f79 	.word	0x08004f79
 8000080:	08004f79 	.word	0x08004f79
 8000084:	08004f79 	.word	0x08004f79
 8000088:	08005067 	.word	0x08005067
 800008c:	08004f79 	.word	0x08004f79
 8000090:	08004f79 	.word	0x08004f79
 8000094:	08004f79 	.word	0x08004f79
 8000098:	08004f79 	.word	0x08004f79
 800009c:	08004f79 	.word	0x08004f79
 80000a0:	08004f79 	.word	0x08004f79
 80000a4:	08004f79 	.word	0x08004f79
 80000a8:	08004f79 	.word	0x08004f79
 80000ac:	08004f79 	.word	0x08004f79
 80000b0:	0800508f 	.word	0x0800508f
 80000b4:	080050b7 	.word	0x080050b7
 80000b8:	080050df 	.word	0x080050df
 80000bc:	08004f79 	.word	0x08004f79
 80000c0:	08004f79 	.word	0x08004f79
 80000c4:	08004f79 	.word	0x08004f79
 80000c8:	08004f79 	.word	0x08004f79
 80000cc:	08004f79 	.word	0x08004f79
 80000d0:	08004f79 	.word	0x08004f79
 80000d4:	08004f79 	.word	0x08004f79
 80000d8:	08004f79 	.word	0x08004f79
 80000dc:	08004f79 	.word	0x08004f79
 80000e0:	08004f79 	.word	0x08004f79
 80000e4:	08004f79 	.word	0x08004f79
 80000e8:	08004f79 	.word	0x08004f79
 80000ec:	08004f79 	.word	0x08004f79
 80000f0:	08004f79 	.word	0x08004f79
 80000f4:	08004f79 	.word	0x08004f79
 80000f8:	08004f79 	.word	0x08004f79
 80000fc:	08004f79 	.word	0x08004f79
 8000100:	08004f79 	.word	0x08004f79
 8000104:	08004f79 	.word	0x08004f79
 8000108:	08004f79 	.word	0x08004f79
 800010c:	08004f79 	.word	0x08004f79
 8000110:	08004f79 	.word	0x08004f79
 8000114:	08004f79 	.word	0x08004f79
 8000118:	08004f79 	.word	0x08004f79
 800011c:	08004f79 	.word	0x08004f79
 8000120:	08004f79 	.word	0x08004f79
 8000124:	08004f79 	.word	0x08004f79
 8000128:	08004f79 	.word	0x08004f79
 800012c:	08004f79 	.word	0x08004f79
 8000130:	08004f79 	.word	0x08004f79
 8000134:	08004f79 	.word	0x08004f79
 8000138:	08004f79 	.word	0x08004f79
 800013c:	08004f79 	.word	0x08004f79
 8000140:	08004f79 	.word	0x08004f79
 8000144:	08004f79 	.word	0x08004f79
 8000148:	08004f79 	.word	0x08004f79
 800014c:	08004f79 	.word	0x08004f79
 8000150:	08004f79 	.word	0x08004f79
 8000154:	08004f79 	.word	0x08004f79
 8000158:	08004f79 	.word	0x08004f79
 800015c:	08004f79 	.word	0x08004f79
 8000160:	08004f79 	.word	0x08004f79
 8000164:	08004f79 	.word	0x08004f79
 8000168:	08004f79 	.word	0x08004f79
 800016c:	08004f79 	.word	0x08004f79
 8000170:	08004f79 	.word	0x08004f79
 8000174:	08004f79 	.word	0x08004f79
 8000178:	08004f79 	.word	0x08004f79
 800017c:	08004f79 	.word	0x08004f79
 8000180:	08004f79 	.word	0x08004f79
 8000184:	08004f79 	.word	0x08004f79
 8000188:	08004f79 	.word	0x08004f79
 800018c:	08004f79 	.word	0x08004f79
 8000190:	08004f79 	.word	0x08004f79
 8000194:	08004f79 	.word	0x08004f79
 8000198:	08004f79 	.word	0x08004f79
 800019c:	08004f79 	.word	0x08004f79
 80001a0:	08004f79 	.word	0x08004f79
 80001a4:	08004f79 	.word	0x08004f79
 80001a8:	08004f79 	.word	0x08004f79
 80001ac:	08004f79 	.word	0x08004f79
 80001b0:	08004f79 	.word	0x08004f79
 80001b4:	08004f79 	.word	0x08004f79
 80001b8:	08004f79 	.word	0x08004f79
 80001bc:	08004f79 	.word	0x08004f79
 80001c0:	08004f79 	.word	0x08004f79
 80001c4:	08004f79 	.word	0x08004f79
 80001c8:	08004f79 	.word	0x08004f79
 80001cc:	08004f79 	.word	0x08004f79
 80001d0:	08004f79 	.word	0x08004f79
 80001d4:	08004f79 	.word	0x08004f79
 80001d8:	08004f79 	.word	0x08004f79
 80001dc:	08004f79 	.word	0x08004f79
 80001e0:	08004f79 	.word	0x08004f79

080001e4 <CoreDictionaryAnfang>:
CoreDictionaryAnfang():
 80001e4:	08000620 	.word	0x08000620
 80001e8:	2d22ffff 	.word	0x2d22ffff
 80001ec:	4d202d2d 	.word	0x4d202d2d
 80001f0:	69726365 	.word	0x69726365
 80001f4:	532d7073 	.word	0x532d7073
 80001f8:	6c6c6574 	.word	0x6c6c6574
 80001fc:	73697261 	.word	0x73697261
 8000200:	20415220 	.word	0x20415220
 8000204:	2e362e32 	.word	0x2e362e32
 8000208:	2d2d2035 	.word	0x2d2d2035
 800020c:	2d          	.byte	0x2d
	...

0800020e <Code_31>:
Code_31():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:44


@ -----------------------------------------------------------------------------
nflush_faltkonstanten: @ Schiebe alle vorhandenen Faltkonstanten in den RA-Cache.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, lr}
 800020e:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:45
  ldr r0, =allocator_base
 8000210:	4890      	ldr	r0, [pc, #576]	; (8000454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:48

  @ Frage Nummer eins: Haben wir noch Faltkonstanten ? Die müssen unbedingt zwischengeschoben werden.
1:cmp r3, #0
 8000212:	2b00      	cmp	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:49
  beq 2f
 8000214:	d009      	beq.n	800022a <Code_31+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:54
    @ writeln "Flush Konstante in RA-Cache"
    @ Ja, es ist noch mindestens eine Faltkonstante da.
    @ Die wird nun in den Stack eingefügt:

    bl free_5os_element @ Als erstes hinten Platz schaffen.
 8000216:	f000 f83d 	bl	8000294 <free_5os_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:55
    bl elemente_einen_weiterrutschen_lassen
 800021a:	f000 f843 	bl	80002a4 <elemente_einen_weiterrutschen_lassen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:56
    bl nget_faltkonstante @ Gibt diese in r2 zurück, erniedrigt r3 von selbst
 800021e:	f000 f828 	bl	8000272 <nget_faltkonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:58

    str r2, [r0, #offset_constant_tos]
 8000222:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:59
    movs r1, #constant
 8000224:	2128      	movs	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:60
    str r1, [r0, #offset_state_tos]
 8000226:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:61
    b 1b
 8000228:	e7f3      	b.n	8000212 <Code_31+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:64

2:@ Alle Faltkonstanten sind abgearbeitet.
  pop {r0, r1, r2, pc}
 800022a:	bd07      	pop	{r0, r1, r2, pc}

0800022c <nfaltkonstanten_aufschwimmen>:
nfaltkonstanten_aufschwimmen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:72
@ -----------------------------------------------------------------------------
nfaltkonstanten_aufschwimmen: @ Sollten an der Oberfläche des RA-Cache Konstanten aufschwimmen
                             @ werden diese am Ende wieder als Faltkonstanten zur Verfügung gestellt.
@ -----------------------------------------------------------------------------

  push {lr}
 800022c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:73
  ldr r0, =allocator_base
 800022e:	4889      	ldr	r0, [pc, #548]	; (8000454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:74
  movs r3, #0 @ Momentan haben wir gar keine Faltkonstanten ! Schließlich wird alles in den Allokator geschoben...
 8000230:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:76

1:ldr r1, [r0, #offset_state_tos]
 8000232:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:77
  cmp r1, #constant
 8000234:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:78
  bne 2f
 8000236:	d105      	bne.n	8000244 <nfaltkonstanten_aufschwimmen+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:81
    @ writeln "Eine Konstante schwimmt auf"
    @ Es ist eine Faltkonstante da, lasse sie aufschwimmen !
    ldr r2, [r0, #offset_constant_tos]
 8000238:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:82
    bl npush_faltkonstante
 800023a:	f000 f804 	bl	8000246 <npush_faltkonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:83
    bl eliminiere_tos
 800023e:	f000 f84e 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:84
    b 1b
 8000242:	e7f6      	b.n	8000232 <nfaltkonstanten_aufschwimmen+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:87

2:@ Fertig, oben auf dem RA-Cache sind keine Konstanten mehr.
  pop {pc}
 8000244:	bd00      	pop	{pc}

08000246 <npush_faltkonstante>:
npush_faltkonstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:95
@ -----------------------------------------------------------------------------
npush_faltkonstante: @ Füge von unten (!) eine Faltkonstante ein !
                    @ Dies ist nötig, falls Stackjongleure eine Konstante wieder an die Oberfläche strudeln lassen.
                    @ Annahme in r2.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
 8000246:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:97

  pushda r2
 8000248:	f847 6d04 	str.w	r6, [r7, #-4]!
 800024c:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:98
  pushda r3
 800024e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000252:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:99
  push {r3}
 8000254:	b408      	push	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:100
  bl minusroll
 8000256:	f000 ff9f 	bl	8001198 <Code_231>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:101
  pop {r3}
 800025a:	bc08      	pop	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:102
  adds r3, #1
 800025c:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:106

  @ writeln "Eine Konstante schwimmt auf --> drop in den Inline-Cache !"

  pushdatos
 800025e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:107
  ldr tos, =drop_einsprung
 8000262:	4e7d      	ldr	r6, [pc, #500]	; (8000458 <r0_unfrei+0x1c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:109

  pushdatos
 8000264:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:110
  ldr tos, =Flag_foldable_1|Flag_inline|Flag_allocator
 8000268:	f240 2661 	movw	r6, #609	; 0x261
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:111
  bl add_to_inline_cache 
 800026c:	f004 fca0 	bl	8004bb0 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:113
  
  pop {r0, r1, pc}
 8000270:	bd03      	pop	{r0, r1, pc}

08000272 <nget_faltkonstante>:
nget_faltkonstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:121
@ -----------------------------------------------------------------------------
nget_faltkonstante: @ Hole von unten (!) eine Faltkonstante ab !
                   @ Anzahl der vorhandenen Konstanten (noch) in r3.
                   @ Rückgabe in r2.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
 8000272:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:123

  subs r3, #1
 8000274:	3b01      	subs	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:124
  pushda r3
 8000276:	f847 6d04 	str.w	r6, [r7, #-4]!
 800027a:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:125
  push {r3}
 800027c:	b408      	push	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:126
  bl roll
 800027e:	f000 ff75 	bl	800116c <Code_229>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:127
  pop {r3}
 8000282:	bc08      	pop	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:129
  @ popda r2
  movs r2, tos
 8000284:	0032      	movs	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:132

  @ Für den Cache !
  pushdatos
 8000286:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:133
  ldr tos, =Flag_Literator
 800028a:	f44f 5600 	mov.w	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:134
  bl add_to_inline_cache  
 800028e:	f004 fc8f 	bl	8004bb0 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:136

  pop {r0, r1, pc}
 8000292:	bd03      	pop	{r0, r1, pc}

08000294 <free_5os_element>:
free_5os_element():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:141

@ -----------------------------------------------------------------------------
free_5os_element: @ Sorgt dafür, dass zumindest 3OS geleert ist.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
 8000294:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:142
  ldr r0, =state_5os
 8000296:	4871      	ldr	r0, [pc, #452]	; (800045c <r0_unfrei+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:144

  ldr r1, [r0]
 8000298:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:145
  cmp r1, #unknown
 800029a:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:146
  beq 1f @ Wenn das 5OS-RA-Element gerade leer ist, brauche ich nichts mehr zu tun.
 800029c:	d001      	beq.n	80002a2 <free_5os_element+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:147
    bl element_to_stack
 800029e:	f000 f834 	bl	800030a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:149

1:pop {r0, r1, pc}
 80002a2:	bd03      	pop	{r0, r1, pc}

080002a4 <elemente_einen_weiterrutschen_lassen>:
elemente_einen_weiterrutschen_lassen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:161
    @ 3OS --> 4OS
    @ NOS --> 3OS
    @ TOS --> NOS
    @ TOS "leeren"

    ldr r1, [r0, #offset_state_4os]
 80002a4:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:162
    str r1, [r0, #offset_state_5os]
 80002a6:	6201      	str	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:163
    ldr r1, [r0, #offset_state_3os]
 80002a8:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:164
    str r1, [r0, #offset_state_4os]
 80002aa:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:165
    ldr r1, [r0, #offset_state_nos]
 80002ac:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:166
    str r1, [r0, #offset_state_3os]
 80002ae:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:167
    ldr r1, [r0, #offset_state_tos]
 80002b0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:168
    str r1, [r0, #offset_state_nos]
 80002b2:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:171


    ldr r1, [r0, #offset_constant_4os]
 80002b4:	69c1      	ldr	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:172
    str r1, [r0, #offset_constant_5os]
 80002b6:	6241      	str	r1, [r0, #36]	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:173
    ldr r1, [r0, #offset_constant_3os]
 80002b8:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:174
    str r1, [r0, #offset_constant_4os]
 80002ba:	61c1      	str	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:175
    ldr r1, [r0, #offset_constant_nos]
 80002bc:	68c1      	ldr	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:176
    str r1, [r0, #offset_constant_3os]
 80002be:	6141      	str	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:177
    ldr r1, [r0, #offset_constant_tos]
 80002c0:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:178
    str r1, [r0, #offset_constant_nos]
 80002c2:	60c1      	str	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:180

    movs r1, #unknown
 80002c4:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:181
    str r1, [r0, #offset_state_tos]
 80002c6:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:183

  bx lr
 80002c8:	4770      	bx	lr

080002ca <befreie_tos>:
befreie_tos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:188

@ -----------------------------------------------------------------------------
befreie_tos: @ Sorgt dafür, dass zumindest TOS frei wird zum Neubelegen.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 80002ca:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:191

  @ Jetzt frage ich mich: Ist TOS gerade leer und unbelegt ?
  ldr r0, =allocator_base
 80002cc:	4861      	ldr	r0, [pc, #388]	; (8000454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:192
  ldr r1, [r0, #offset_state_tos]
 80002ce:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:193
  cmp r1, #unknown
 80002d0:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:194
  beq 3f @ Wenn das TOS-RA-Element gerade leer ist, brauche ich nichts mehr zu tun.
 80002d2:	d003      	beq.n	80002dc <befreie_tos+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:197

    @ Ansonsten muss ich nochmal dafür sorgen, dass TOS frei wird.
    bl free_5os_element @ Als erstes hinten Platz schaffen.
 80002d4:	f7ff ffde 	bl	8000294 <free_5os_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:198
    bl elemente_einen_weiterrutschen_lassen
 80002d8:	f7ff ffe4 	bl	80002a4 <elemente_einen_weiterrutschen_lassen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:201

3:@ Fertig. TOS ist bereit für neue Taten.
  pop {r0, r1, r2, r3, pc}
 80002dc:	bd0f      	pop	{r0, r1, r2, r3, pc}

080002de <eliminiere_tos>:
eliminiere_tos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:206

@ -----------------------------------------------------------------------------
eliminiere_tos: @ Wert ist verbraucht, kann weg !
@ -----------------------------------------------------------------------------
  push {r1, lr}
 80002de:	b502      	push	{r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:208

  ldr r1, [r0, #offset_state_nos]
 80002e0:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:209
  str r1, [r0, #offset_state_tos]
 80002e2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:210
  ldr r1, [r0, #offset_constant_nos]
 80002e4:	68c1      	ldr	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:211
  str r1, [r0, #offset_constant_tos]
 80002e6:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:212
  b 1f
 80002e8:	e000      	b.n	80002ec <eliminiere_nos+0x2>

080002ea <eliminiere_nos>:
eliminiere_nos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:217

@ -----------------------------------------------------------------------------
eliminiere_nos: @ Wert ist verbraucht, kann weg !
@ -----------------------------------------------------------------------------
  push {r1, lr}
 80002ea:	b502      	push	{r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:219

1:ldr r1, [r0, #offset_state_3os]
 80002ec:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:220
  str r1, [r0, #offset_state_nos]
 80002ee:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:221
  ldr r1, [r0, #offset_constant_3os]
 80002f0:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:222
  str r1, [r0, #offset_constant_nos]
 80002f2:	60c1      	str	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:224

  ldr r1, [r0, #offset_state_4os]
 80002f4:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:225
  str r1, [r0, #offset_state_3os]
 80002f6:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:226
  ldr r1, [r0, #offset_constant_4os]
 80002f8:	69c1      	ldr	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:227
  str r1, [r0, #offset_constant_3os]
 80002fa:	6141      	str	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:229

  ldr r1, [r0, #offset_state_5os]
 80002fc:	6a01      	ldr	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:230
  str r1, [r0, #offset_state_4os]
 80002fe:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:231
  ldr r1, [r0, #offset_constant_5os]
 8000300:	6a41      	ldr	r1, [r0, #36]	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:232
  str r1, [r0, #offset_constant_4os]
 8000302:	61c1      	str	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:234

  movs r1, #unknown
 8000304:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:235
  str r1, [r0, #offset_state_5os]
 8000306:	6201      	str	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:237

  pop {r1, pc}
 8000308:	bd02      	pop	{r1, pc}

0800030a <element_to_stack>:
element_to_stack():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:242

@ -----------------------------------------------------------------------------
element_to_stack: @ Erwartet Zustandsvariable in r0
@ -----------------------------------------------------------------------------
  push {r3, lr} @ r3 muss für flush_faltkonstanten gesichert werden
 800030a:	b508      	push	{r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:244

  ldr r1, [r0] @ Zustand des Elementes holen
 800030c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:247

  @ Elementbelegung löschen, es wird hier ja restlos abgearbeitet
  movs r2, #unknown
 800030e:	221e      	movs	r2, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:248
  str  r2, [r0]
 8000310:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:251

  @ Register in den Speicher schreiben:
  cmp r1, #8 @ Register 0-7 lassen sich direkt opcodieren.
 8000312:	2908      	cmp	r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:252
  bhs 1f
 8000314:	d201      	bcs.n	800031a <element_to_stack+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:254

    movs r3, r1  @ Register in r3 bereitlegen zum Opcodieren.
 8000316:	000b      	movs	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:255
    b.n 2f
 8000318:	e004      	b.n	8000324 <element_to_stack+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:258

1:@ Element = Konstante --> Konstante in Speicher
  cmp r1, #constant
 800031a:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:259
  bne 1f @ Für den Fall eines unbekannten Elementes nichts tun
 800031c:	d109      	bne.n	8000332 <element_to_stack+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:262

    @ Hole die Konstante, und prüfe, ob sie zur Laufzeit bereits in r0 oder r1 sein wird.
    ldr r3, [r0, #4] @ Konstante holen, stets 4 Bytes nach dem Zustand
 800031e:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:263
    bl generiere_konstante
 8000320:	f000 f85b 	bl	80003da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:279
      orrs tos, r3 @ Passenden Register hinzuverodern
      bl hkomma

    .else

      pushdatos
 8000324:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:280
      ldr tos, =0xF8470D04 @ str r0, [r7, #-4]!
 8000328:	4e4d      	ldr	r6, [pc, #308]	; (8000460 <r0_unfrei+0x24>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:281
      orrs tos, tos, r3, lsl #12
 800032a:	ea56 3603 	orrs.w	r6, r6, r3, lsl #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:282
      bl reversekomma
 800032e:	f003 faf3 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:286

    .endif

1: pop {r3, pc}
 8000332:	bd08      	pop	{r3, pc}

08000334 <tidyup_register_allocator>:
tidyup_register_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:293

@ -----------------------------------------------------------------------------
@ Wortbirne Flag_visible, "tidyup-ra"
tidyup_register_allocator: @ Generiert all die Opcodes, um den Stack wieder in Ordnung zu bringen
@ -----------------------------------------------------------------------------
  push {lr}
 8000334:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:294
  bl tidyup_register_allocator_5os
 8000336:	f000 f809 	bl	800034c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:295
  bl tidyup_register_allocator_4os
 800033a:	f000 f80c 	bl	8000356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:296
  bl tidyup_register_allocator_3os
 800033e:	f000 f80f 	bl	8000360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:297
  bl tidyup_register_allocator_nos
 8000342:	f000 f812 	bl	800036a <tidyup_register_allocator_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:298
  bl tidyup_register_allocator_tos
 8000346:	f000 f815 	bl	8000374 <tidyup_register_allocator_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:299
  pop {pc}
 800034a:	bd00      	pop	{pc}

0800034c <tidyup_register_allocator_5os>:
tidyup_register_allocator_5os():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:304

@ -----------------------------------------------------------------------------
tidyup_register_allocator_5os:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 800034c:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:305
  ldr r0, =state_5os
 800034e:	4843      	ldr	r0, [pc, #268]	; (800045c <r0_unfrei+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:306
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
 8000350:	f7ff ffdb 	bl	800030a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:307
  pop {r0, r1, r2, r3, pc}
 8000354:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000356 <tidyup_register_allocator_4os>:
tidyup_register_allocator_4os():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:312

@ -----------------------------------------------------------------------------
tidyup_register_allocator_4os:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8000356:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:313
  ldr r0, =state_4os
 8000358:	4842      	ldr	r0, [pc, #264]	; (8000464 <r0_unfrei+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:314
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
 800035a:	f7ff ffd6 	bl	800030a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:315
  pop {r0, r1, r2, r3, pc}
 800035e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000360 <tidyup_register_allocator_3os>:
tidyup_register_allocator_3os():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:320

@ -----------------------------------------------------------------------------
tidyup_register_allocator_3os:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8000360:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:321
  ldr r0, =state_3os
 8000362:	4841      	ldr	r0, [pc, #260]	; (8000468 <r0_unfrei+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:322
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
 8000364:	f7ff ffd1 	bl	800030a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:323
  pop {r0, r1, r2, r3, pc}
 8000368:	bd0f      	pop	{r0, r1, r2, r3, pc}

0800036a <tidyup_register_allocator_nos>:
tidyup_register_allocator_nos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:328

@ -----------------------------------------------------------------------------
tidyup_register_allocator_nos:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 800036a:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:329
  ldr r0, =state_nos
 800036c:	483f      	ldr	r0, [pc, #252]	; (800046c <r0_unfrei+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:330
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
 800036e:	f7ff ffcc 	bl	800030a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:331
  pop {r0, r1, r2, r3, pc}
 8000372:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000374 <tidyup_register_allocator_tos>:
tidyup_register_allocator_tos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:337


@ -----------------------------------------------------------------------------
tidyup_register_allocator_tos:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8000374:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:343
  @ -----------------------------------------------------------------------------
  @ Schließe mit TOS ab:
@  writeln "Tidyup TOS"
  @ Nachher die Sintflut ! Nichts mehr sichern oder schön bereitlegen. Nur noch TOS in Ordnung bringen.

  ldr r0, =allocator_base
 8000376:	4837      	ldr	r0, [pc, #220]	; (8000454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:344
  ldr r1, [r0, #offset_state_tos]
 8000378:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:346

  movs r2, #6 @ Das ist der Endzustand, der hier auf jeden Fall erreicht wird !
 800037a:	2206      	movs	r2, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:347
  str r2, [r0, #offset_state_tos]
 800037c:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:355
  @ r0, r1, r2 und r3: mov Opcode generieren (Erhält die Flags)
  @ r6: Nichts tun (Erhält die Flags)
  @ Konstante: registerliteral direkt in r6 (Zerstört die Flags, falls die Konstante neu generiert wird)
  @ unknown: Nachladen (Erhält die Flags)

  cmp r1, #unknown
 800037e:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:356
  bne 1f
 8000380:	d106      	bne.n	8000390 <tidyup_register_allocator_tos+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:358
    @ TOS = unknown    --> Register vom Stack nachladen
    pushdaconstw 0xCF00 | 1 << 6 @ ldm r7!, {r6}
 8000382:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000386:	f64c 7640 	movw	r6, #53056	; 0xcf40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:359
    bl hkomma
 800038a:	f003 fa95 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:360
    b.n tidyup_finish
 800038e:	e015      	b.n	80003bc <tidyup_finish>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:363
1:

  cmp r1, #constant
 8000390:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:364
  bne 2f
 8000392:	d109      	bne.n	80003a8 <tidyup_register_allocator_tos+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:368
@    writeln "Tidyup TOS Konstante"
    @ TOS = Konstante --> Entweder Konstantenregister benutzen oder direkt laden.
    @ Hier mal vereinfachen, später mit r0/r1-Berücksichtigung:
    ldr r3, [r0, #offset_constant_tos]
 8000394:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:371

    @ Die Konstantenregister helfen gerade auch nicht weiter, muss den Wert direkt generieren.
    pushda r3
 8000396:	f847 6d04 	str.w	r6, [r7, #-4]!
 800039a:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:372
    pushdaconst 6
 800039c:	f847 6d04 	str.w	r6, [r7, #-4]!
 80003a0:	2606      	movs	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:373
    bl registerliteralkomma @ Dies ist der Fall, in dem die Flags immer noch zerstört werden. ACHTUNG.
 80003a2:	f002 ff19 	bl	80031d8 <Code_750>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:374
    b.n tidyup_finish
 80003a6:	e009      	b.n	80003bc <tidyup_finish>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:378
2:

  @ Jetzt bleiben nur noch die Register übrig.
  cmp r1, #6  @ r6 ist wunderbar, dann ist nichts mehr zu tun.
 80003a8:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:379
  beq 3f
 80003aa:	d007      	beq.n	80003bc <tidyup_finish>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:381
@    writeln "Tidyup TOS anderer Register"
    pushdaconstw 0x4600|0 << 3|6  @ mov r6, r0
 80003ac:	f847 6d04 	str.w	r6, [r7, #-4]!
 80003b0:	f244 6606 	movw	r6, #17926	; 0x4606
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:382
    lsls r1, #3
 80003b4:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:383
    orrs tos, r1 @ Quellregister hinzuverodern
 80003b6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:384
    bl hkomma
 80003b8:	f003 fa7e 	bl	80038b8 <Code_875>

080003bc <tidyup_finish>:
tidyup_finish():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:390

3:


tidyup_finish:
  bl init_register_allocator
 80003bc:	f000 f801 	bl	80003c2 <init_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:391
  pop {r0, r1, r2, r3, pc}
 80003c0:	bd0f      	pop	{r0, r1, r2, r3, pc}

080003c2 <init_register_allocator>:
init_register_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:399
@ -----------------------------------------------------------------------------
@ Wortbirne Flag_visible, "initregisterallocator"
init_register_allocator:
@ -----------------------------------------------------------------------------

  ldr r0, =allocator_base
 80003c2:	4824      	ldr	r0, [pc, #144]	; (8000454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:401

  movs r1, #unknown
 80003c4:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:402
  str r1, [r0, #offset_state_5os]
 80003c6:	6201      	str	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:403
  str r1, [r0, #offset_state_4os]
 80003c8:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:404
  str r1, [r0, #offset_state_3os]
 80003ca:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:405
  str r1, [r0, #offset_state_nos]
 80003cc:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:407

  str r1, [r0, #offset_state_r0]
 80003ce:	62c1      	str	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:409
  
  movs r1, #6
 80003d0:	2106      	movs	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:410
  str r1, [r0, #offset_state_tos]
 80003d2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:412

  movs r1, #0
 80003d4:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:413
  str r1, [r0, #offset_sprungtrampolin]
 80003d6:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:415

  bx lr
 80003d8:	4770      	bx	lr

080003da <generiere_konstante>:
generiere_konstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:26
@ -----------------------------------------------------------------------------
generiere_veraenderliche_konstante:
generiere_konstante:       @ Nimmt Konstante in r3 entgegen, generiert wenn nötig passende Opcodes
                           @ und gibt den Register in r3 zurück, in der sie daraufhin enthalten ist.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, lr}
 80003da:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:27
  pushda r3 @ Die Konstante
 80003dc:	f847 6d04 	str.w	r6, [r7, #-4]!
 80003e0:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:28
  bl get_free_register @ Einen Register nehmen, der gerade nicht im RA angemeldet ist.
 80003e2:	f000 f845 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:29
  pushda r3 @ Das ist jetzt der Register, wo sie hinein soll
 80003e6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80003ea:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:30
  bl registerliteralkomma
 80003ec:	f002 fef4 	bl	80031d8 <Code_750>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:31
  pop {r0, r1, r2, pc}
 80003f0:	bd07      	pop	{r0, r1, r2, pc}

080003f2 <generiere_adresskonstante>:
generiere_adresskonstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:37

@ -----------------------------------------------------------------------------
generiere_adresskonstante: @ Gleiche Schnittstelle, doch bevorzugt in r0.
@ -----------------------------------------------------------------------------

  push {r0, r1, r2, lr}
 80003f2:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:40

  @ Probe, ob die Konstante in r0 bereitliegt
  ldr r1, [r0, #offset_state_r0]
 80003f4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:41
  cmp r1, #constant
 80003f6:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:42
  bne 1f
 80003f8:	d104      	bne.n	8000404 <generiere_adresskonstante+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:43
    ldr r1, [r0, #offset_constant_r0]
 80003fa:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:44
    cmp r1, r3
 80003fc:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:45
    bne 1f
 80003fe:	d101      	bne.n	8000404 <generiere_adresskonstante+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:46
      movs r3, #0 @ Wenn ja, fein ! Register melden, Rücksprung.
 8000400:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:47
      pop {r0, r1, r2, pc}
 8000402:	bd07      	pop	{r0, r1, r2, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:52
1:

  @ Ist r0 frei ?

  ldr r1, [r0, #offset_state_tos]
 8000404:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:53
  cmp r1, #0
 8000406:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:54
  beq r0_unfrei
 8000408:	d018      	beq.n	800043c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:56
  
  ldr r1, [r0, #offset_state_nos]
 800040a:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:57
  cmp r1, #0
 800040c:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:58
  beq r0_unfrei
 800040e:	d015      	beq.n	800043c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:60

  ldr r1, [r0, #offset_state_3os]
 8000410:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:61
  cmp r1, #0
 8000412:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:62
  beq r0_unfrei
 8000414:	d012      	beq.n	800043c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:64

  ldr r1, [r0, #offset_state_4os]
 8000416:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:65
  cmp r1, #0
 8000418:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:66
  beq r0_unfrei
 800041a:	d00f      	beq.n	800043c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:68

  ldr r1, [r0, #offset_state_5os]
 800041c:	6a01      	ldr	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:69
  cmp r1, #0
 800041e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:70
  beq r0_unfrei
 8000420:	d00c      	beq.n	800043c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:74

  @ r0 ist frei.

    str r3, [r0, #offset_constant_r0]
 8000422:	6303      	str	r3, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:75
    pushda r3 @ Die Konstante
 8000424:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000428:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:76
    pushdaconst 0 @ Das ist jetzt der Register, wo sie hinein soll
 800042a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800042e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:77
    bl registerliteralkomma
 8000430:	f002 fed2 	bl	80031d8 <Code_750>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:78
    movs r1, #constant
 8000434:	2128      	movs	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:79
    str r1, [r0, #offset_state_r0]
 8000436:	62c1      	str	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:80
    movs r3, #0
 8000438:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:81
    pop {r0, r1, r2, pc}
 800043a:	bd07      	pop	{r0, r1, r2, pc}

0800043c <r0_unfrei>:
r0_unfrei():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:84

r0_unfrei:
  pushda r3 @ Die Konstante
 800043c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000440:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:85
  bl get_free_register @ Einen Register nehmen, der gerade nicht im RA angemeldet ist.
 8000442:	f000 f815 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:86
  pushda r3 @ Das ist jetzt der Register, wo sie hinein soll
 8000446:	f847 6d04 	str.w	r6, [r7, #-4]!
 800044a:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:87
  bl registerliteralkomma
 800044c:	f002 fec4 	bl	80031d8 <Code_750>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:88
  pop {r0, r1, r2, pc}
 8000450:	bd07      	pop	{r0, r1, r2, pc}
 8000452:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:45
  ldr r0, =allocator_base
 8000454:	24000020 	.word	0x24000020
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:107
  ldr tos, =drop_einsprung
 8000458:	08000f20 	.word	0x08000f20
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:142
  ldr r0, =state_5os
 800045c:	24000040 	.word	0x24000040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:280
      ldr tos, =0xF8470D04 @ str r0, [r7, #-4]!
 8000460:	f8470d04 	.word	0xf8470d04
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:313
  ldr r0, =state_4os
 8000464:	24000038 	.word	0x24000038
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:321
  ldr r0, =state_3os
 8000468:	24000030 	.word	0x24000030
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-infrastructure.s:329
  ldr r0, =state_nos
 800046c:	24000028 	.word	0x24000028

08000470 <get_free_register>:
get_free_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:95
  .ltorg

@ -----------------------------------------------------------------------------
get_free_register: @ Gibt den Register in r3 zurück. Setzt noch keinen Zustand.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r4, r5, lr}
 8000470:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:97

  ldr r0, =allocator_base
 8000472:	4836      	ldr	r0, [pc, #216]	; (800054c <expect_four_elements+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:98
  ldr r1, [r0, #offset_state_tos]
 8000474:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:99
  ldr r2, [r0, #offset_state_nos]
 8000476:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:100
  ldr r3, [r0, #offset_state_3os]
 8000478:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:101
  ldr r4, [r0, #offset_state_4os]
 800047a:	6984      	ldr	r4, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:102
  ldr r5, [r0, #offset_state_5os]
 800047c:	6a05      	ldr	r5, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:104

  movs r0, #6 @ Prüfe zunächst r6 auf Freiheit:
 800047e:	2006      	movs	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:105
  bl get_free_register_intern
 8000480:	f000 f80e 	bl	80004a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:107

  movs r0, #3 @ Anschließend die ganzen anderen Register:
 8000484:	2003      	movs	r0, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:108
  bl get_free_register_intern
 8000486:	f000 f80b 	bl	80004a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:110

  movs r0, #2 @ Anschließend die ganzen anderen Register:
 800048a:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:111
  bl get_free_register_intern
 800048c:	f000 f808 	bl	80004a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:113

  movs r0, #1 @ Anschließend die ganzen anderen Register:
 8000490:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:114
  bl get_free_register_intern
 8000492:	f000 f805 	bl	80004a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:116

  movs r3, #0 @ Nur noch r0 ist übrig geblieben
 8000496:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:118

  ldr r0, =allocator_base
 8000498:	482c      	ldr	r0, [pc, #176]	; (800054c <expect_four_elements+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:119
  movs r1, #unknown @ Muss die Adresskonstantenspeicherstelle wieder freigeben...
 800049a:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:120
  str r1, [r0, #offset_state_r0]
 800049c:	62c1      	str	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:122

  pop {r0, r1, r2, r4, r5, pc}
 800049e:	bd37      	pop	{r0, r1, r2, r4, r5, pc}

080004a0 <get_free_register_intern>:
get_free_register_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:125

get_free_register_intern: @ Welcher Register geprüft werden soll, steht in r0. Rückgabe in r3.
  cmp r1, r0
 80004a0:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:126
  beq 1f
 80004a2:	d009      	beq.n	80004b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:127
  cmp r2, r0
 80004a4:	4282      	cmp	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:128
  beq 1f
 80004a6:	d007      	beq.n	80004b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:129
  cmp r3, r0
 80004a8:	4283      	cmp	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:130
  beq 1f
 80004aa:	d005      	beq.n	80004b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:131
  cmp r4, r0
 80004ac:	4284      	cmp	r4, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:132
  beq 1f
 80004ae:	d003      	beq.n	80004b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:133
  cmp r5, r0
 80004b0:	4285      	cmp	r5, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:134
  beq 1f   
 80004b2:	d001      	beq.n	80004b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:135
    movs r3, r0
 80004b4:	0003      	movs	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:136
    pop {r0, r1, r2, r4, r5, pc}
 80004b6:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:137
1:bx lr
 80004b8:	4770      	bx	lr

080004ba <erstes_element_belegen>:
erstes_element_belegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:141

@ -----------------------------------------------------------------------------
erstes_element_belegen:
  pushdaconstw 0xCF00 @ ldm r7!, { ... }
 80004ba:	f847 6d04 	str.w	r6, [r7, #-4]!
 80004be:	f64c 7600 	movw	r6, #52992	; 0xcf00

080004c2 <element_belegen>:
element_belegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:143
element_belegen: @ Nimmt das zu belegende Element aus r2.
  push {lr}
 80004c2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:144
  ldr r1, [r0, r2]
 80004c4:	5881      	ldr	r1, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:145
  cmp r1, #unknown
 80004c6:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:146
  bne 1f @ Wenn es bereits belegt ist, muss ich hier nichts unternehmen.
 80004c8:	d105      	bne.n	80004d6 <element_belegen+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:149

    @ Lade es nach !
    bl get_free_register
 80004ca:	f7ff ffd1 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:150
    str r3, [r0, r2]
 80004ce:	5083      	str	r3, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:152

    movs r1, #1
 80004d0:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:153
    lsls r1, r3
 80004d2:	4099      	lsls	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:154
    orrs tos, r1
 80004d4:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:156

1:pop {pc}
 80004d6:	bd00      	pop	{pc}

080004d8 <expect_one_element>:
expect_one_element():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:161

@ -----------------------------------------------------------------------------
expect_one_element: @ Sorgt dafür, dass mindestens ein Element bereitliegt.
@ -----------------------------------------------------------------------------
  push {lr}
 80004d8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:166

  @ Kernfrage besteht darin: Ist TOS belegt oder nicht ?
  @ Wenn ja, fertig. Wenn nein, sind auch NOS und 3OS leer, also TOS direkt vom Stack nachfüllen.

  ldr r1, [r0, #offset_state_tos]
 80004da:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:167
  cmp r1, #unknown
 80004dc:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:168
  bne 1f @ Wenn schon etwas in TOS enthalten ist, bin ich fertig.
 80004de:	d104      	bne.n	80004ea <expect_one_element+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:170

    movs r2, #offset_state_tos
 80004e0:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:171
    bl erstes_element_belegen
 80004e2:	f7ff ffea 	bl	80004ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:173
  
    bl hkomma
 80004e6:	f003 f9e7 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:174
1:pop {pc}
 80004ea:	bd00      	pop	{pc}

080004ec <expect_two_elements>:
expect_two_elements():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:179

@ -----------------------------------------------------------------------------
expect_two_elements: @ Sorgt dafür, dass mindestens zwei Elemente bereitliegen.
@ -----------------------------------------------------------------------------
  push {lr}
 80004ec:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:183

  @ Es könnten kein Element, ein Element oder zwei Elemente geholt werden müssen.

  ldr r1, [r0, #offset_state_nos]
 80004ee:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:184
  cmp r1, #unknown
 80004f0:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:185
  bne 1f @ Wenn schon etwas in NOS enthalten ist, bin ich fertig.
 80004f2:	d107      	bne.n	8000504 <expect_two_elements+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:187

    movs r2, #offset_state_nos   @ Der größere Register, der zuletzt geladen wird, muss diesmal NOS werden.
 80004f4:	2208      	movs	r2, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:188
    bl erstes_element_belegen
 80004f6:	f7ff ffe0 	bl	80004ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:190

    movs r2, #offset_state_tos   @ Der kleinere Register, der danach geladen wird, muss TOS werden.
 80004fa:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:191
    bl element_belegen
 80004fc:	f7ff ffe1 	bl	80004c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:193
  
    bl hkomma
 8000500:	f003 f9da 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:194
1:pop {pc}
 8000504:	bd00      	pop	{pc}

08000506 <expect_three_elements>:
expect_three_elements():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:199

@ -----------------------------------------------------------------------------
expect_three_elements: @ Sorgt dafür, dass mindestens drei Elemente bereitliegen.
@ -----------------------------------------------------------------------------
  push {lr}
 8000506:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:203

  @ Es könnten kein Element, ein Element, zwei oder drei Elemente geholt werden müssen.

  ldr r1, [r0, #offset_state_3os]
 8000508:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:204
  cmp r1, #unknown
 800050a:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:205
  bne 1f @ Wenn schon etwas in 3OS enthalten ist, bin ich fertig.
 800050c:	d10a      	bne.n	8000524 <expect_three_elements+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:207

    movs r2, #offset_state_3os   @ Der größere Register, der zuletzt geladen wird, muss diesmal 3OS werden.
 800050e:	2210      	movs	r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:208
    bl erstes_element_belegen
 8000510:	f7ff ffd3 	bl	80004ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:210

    movs r2, #offset_state_nos   @ Der kleinere Register, der danach geladen wird, muss NOS werden.
 8000514:	2208      	movs	r2, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:211
    bl element_belegen
 8000516:	f7ff ffd4 	bl	80004c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:213

    movs r2, #offset_state_tos   @ Der kleinste Register, der als letztes geladen wird, muss TOS werden.
 800051a:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:214
    bl element_belegen
 800051c:	f7ff ffd1 	bl	80004c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:216
  
    bl hkomma
 8000520:	f003 f9ca 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:217
1:pop {pc}
 8000524:	bd00      	pop	{pc}

08000526 <expect_four_elements>:
expect_four_elements():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:222

@ -----------------------------------------------------------------------------
expect_four_elements: @ Sorgt dafür, dass mindestens vier Elemente bereitliegen.
@ -----------------------------------------------------------------------------
  push {lr}
 8000526:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:226

  @ Es könnten kein Element, ein Element, zwei oder drei oder vier Elemente geholt werden müssen.

  ldr r1, [r0, #offset_state_4os]
 8000528:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:227
  cmp r1, #unknown
 800052a:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:228
  bne 1f @ Wenn schon etwas in 4OS enthalten ist, bin ich fertig.
 800052c:	d10d      	bne.n	800054a <expect_four_elements+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:230

    movs r2, #offset_state_4os
 800052e:	2218      	movs	r2, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:231
    bl erstes_element_belegen
 8000530:	f7ff ffc3 	bl	80004ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:233

    movs r2, #offset_state_3os
 8000534:	2210      	movs	r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:234
    bl element_belegen
 8000536:	f7ff ffc4 	bl	80004c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:236

    movs r2, #offset_state_nos
 800053a:	2208      	movs	r2, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:237
    bl element_belegen
 800053c:	f7ff ffc1 	bl	80004c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:239

    movs r2, #offset_state_tos
 8000540:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:240
    bl element_belegen
 8000542:	f7ff ffbe 	bl	80004c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:242
  
    bl hkomma
 8000546:	f003 f9b7 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:243
1:pop {pc}
 800054a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:97
  ldr r0, =allocator_base
 800054c:	24000020 	.word	0x24000020

08000550 <expect_tos_in_register>:
expect_tos_in_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:251

@ -----------------------------------------------------------------------------
expect_tos_in_register: @ Sorgt dafür, dass TOS auf jeden Fall einem Register liegt,
                        @ welcher in r1 zurückgegeben wird.
@ -----------------------------------------------------------------------------
  push {lr}
 8000550:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:255

    @ Sollte jetzt TOS eine Konstante sein, so wird sie geladen.

    ldr r1, [r0, #offset_state_tos]
 8000552:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:256
    cmp r1, #constant
 8000554:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:257
    bne 4f
 8000556:	d104      	bne.n	8000562 <expect_tos_in_register+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:258
      ldr r3, [r0, #offset_constant_tos] @ Hole die Konstante ab
 8000558:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:259
      bl generiere_veraenderliche_konstante
 800055a:	f7ff ff3e 	bl	80003da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:260
      str r3, [r0, #offset_state_tos]
 800055e:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:261
      movs r1, r3
 8000560:	0019      	movs	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:264

4:  @ Beide Argumente sind jetzt in Registern.
  pop {pc}
 8000562:	bd00      	pop	{pc}

08000564 <expect_nos_in_register>:
expect_nos_in_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:271

@ -----------------------------------------------------------------------------
expect_nos_in_register: @ Sorgt dafür, dass NOS auf jeden Fall einem Register liegt,
                        @ welcher in r1 zurückgegeben wird.
@ -----------------------------------------------------------------------------
  push {lr}
 8000564:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:275

    @ Sollte jetzt NOS eine Konstante sein, so wird sie geladen.

    ldr r1, [r0, #offset_state_nos]
 8000566:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:276
    cmp r1, #constant
 8000568:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:277
    bne 4f
 800056a:	d104      	bne.n	8000576 <expect_nos_in_register+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:278
      ldr r3, [r0, #offset_constant_nos] @ Hole die Konstante ab
 800056c:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:279
      bl generiere_veraenderliche_konstante
 800056e:	f7ff ff34 	bl	80003da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:280
      str r3, [r0, #offset_state_nos]
 8000572:	6083      	str	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:281
      movs r1, r3
 8000574:	0019      	movs	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:284

4:  @ Beide Argumente sind jetzt in Registern.
  pop {pc}
 8000576:	bd00      	pop	{pc}

08000578 <expect_3os_in_register>:
expect_3os_in_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:290

@ -----------------------------------------------------------------------------
expect_3os_in_register: @ Sorgt dafür, dass 3OS auf jeden Fall einem Register liegt,
                        @ welcher in r1 zurückgegeben wird.
@ -----------------------------------------------------------------------------
  push {lr}
 8000578:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:294

    @ Sollte jetzt 3OS eine Konstante sein, so wird sie geladen.

    ldr r1, [r0, #offset_state_3os]
 800057a:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:295
    cmp r1, #constant
 800057c:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:296
    bne 4f
 800057e:	d104      	bne.n	800058a <expect_3os_in_register+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:297
      ldr r3, [r0, #offset_constant_3os] @ Hole die Konstante ab
 8000580:	6943      	ldr	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:298
      bl generiere_veraenderliche_konstante
 8000582:	f7ff ff2a 	bl	80003da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:299
      str r3, [r0, #offset_state_3os]
 8000586:	6103      	str	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:300
      movs r1, r3
 8000588:	0019      	movs	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:303

4:  @ Beide Argumente sind jetzt in Registern.
  pop {pc}
 800058a:	bd00      	pop	{pc}

0800058c <nos_change_tos_away_later>:
nos_change_tos_away_later():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:314
  @ Zwei Elemente bereithalten (vorher schon passiert)
  @ Prüfen, ob die Register für NOS und 3OS zufällig identisch sind
  @   --> Registerkopie anfertigen

  @ r0 soll die allocator_base enthalten !
  push {r1, r2, r3, r4, r5, lr}
 800058c:	b53e      	push	{r1, r2, r3, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:316

  ldr r2, [r0, #offset_state_nos]
 800058e:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:317
  ldr r3, [r0, #offset_state_3os]
 8000590:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:318
  ldr r4, [r0, #offset_state_4os]
 8000592:	6984      	ldr	r4, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:319
  ldr r5, [r0, #offset_state_5os]
 8000594:	6a05      	ldr	r5, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:321

  cmp r2, r3
 8000596:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:322
  beq 1f
 8000598:	d003      	beq.n	80005a2 <nos_change_tos_away_later+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:323
  cmp r2, r4
 800059a:	42a2      	cmp	r2, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:324
  beq 1f
 800059c:	d001      	beq.n	80005a2 <nos_change_tos_away_later+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:325
  cmp r2, r5
 800059e:	42aa      	cmp	r2, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:326
  bne 2f
 80005a0:	d10a      	bne.n	80005b8 <nos_change_tos_away_later+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:329

1:  @ Identisch. Sind es Register ?
    cmp r2, #7 @ Es gibt nur 7 Register - alle anderen Fälle sind größer.
 80005a2:	2a07      	cmp	r2, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:330
    bhi 2f
 80005a4:	d808      	bhi.n	80005b8 <nos_change_tos_away_later+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:333

      @ Ja, es sind beides Register. Mache für NOS einen Registerwechsel, möglichst in r6 hinein.
      pushdatos
 80005a6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:334
      lsls tos, r2, #3 @ Quellregister
 80005aa:	00d6      	lsls	r6, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:335
      bl get_free_register
 80005ac:	f7ff ff60 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:336
      orrs tos, r3 @ Zielregister
 80005b0:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:337
      str r3, [r0, #offset_state_nos]
 80005b2:	6083      	str	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:338
      bl hkomma
 80005b4:	f003 f980 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:340

2:pop {r1, r2, r3, r4, r5, pc}
 80005b8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080005ba <make_tos_changeable>:
make_tos_changeable():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:346

@ -----------------------------------------------------------------------------
make_tos_changeable: @ Lege eine Elementkopie an, falls TOS woanders schon belegt ist.
@ -----------------------------------------------------------------------------
  @ r0 soll die allocator_base enthalten !
  push {r1, r2, r3, r4, r5, lr}
 80005ba:	b53e      	push	{r1, r2, r3, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:348

  ldr r1, [r0, #offset_state_tos]
 80005bc:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:349
  ldr r2, [r0, #offset_state_nos]
 80005be:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:350
  ldr r3, [r0, #offset_state_3os]
 80005c0:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:351
  ldr r4, [r0, #offset_state_4os]
 80005c2:	6984      	ldr	r4, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:352
  ldr r5, [r0, #offset_state_5os]
 80005c4:	6a05      	ldr	r5, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:354

  cmp r1, r2
 80005c6:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:355
  beq 1f
 80005c8:	d006      	beq.n	80005d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:356
  cmp r1, r3
 80005ca:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:357
  beq 1f
 80005cc:	d004      	beq.n	80005d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:358
  cmp r1, r4
 80005ce:	42a1      	cmp	r1, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:359
  beq 1f
 80005d0:	d002      	beq.n	80005d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:360
  cmp r1, r5
 80005d2:	42a9      	cmp	r1, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:361
  beq 1f
 80005d4:	d000      	beq.n	80005d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:362
    pop {r1, r2, r3, r4, r5, pc}
 80005d6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:366

1: @ Registerwechsel mit Elementkopie für TOS.

      pushdatos
 80005d8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:367
      lsls tos, r1, #3 @ Quellregister
 80005dc:	00ce      	lsls	r6, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:368
      bl get_free_register
 80005de:	f7ff ff47 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:369
      orrs tos, r3 @ Zielregister
 80005e2:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:370
      str r3, [r0, #offset_state_tos]
 80005e4:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:371
      bl hkomma
 80005e6:	f003 f967 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:373

    pop {r1, r2, r3, r4, r5, pc}
 80005ea:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080005ec <tos_registerwechsel>:
tos_registerwechsel():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:378

@ -----------------------------------------------------------------------------
tos_registerwechsel: @ Wechselt den TOS-Register, gibt diesen in r3 zurück
@ -----------------------------------------------------------------------------
  push {lr}
 80005ec:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:380
  @ Registerwechsel direkt im Opcode. Nutze das natürlich aus :-) Spare mir damit eventuelle Elementkopien.
  bl eliminiere_tos
 80005ee:	f7ff fe76 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:381
  bl befreie_tos
 80005f2:	f7ff fe6a 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:382
  bl get_free_register
 80005f6:	f7ff ff3b 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:383
  str r3, [r0, #offset_state_tos]
 80005fa:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:384
  pop {pc}
 80005fc:	bd00      	pop	{pc}

080005fe <push_lr_nachholen>:
push_lr_nachholen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:389

@ -----------------------------------------------------------------------------
push_lr_nachholen:
@ -----------------------------------------------------------------------------
  push {r0, lr}
 80005fe:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:390
    ldr r0, =state
 8000600:	4806      	ldr	r0, [pc, #24]	; (800061c <push_lr_nachholen+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:391
    ldr r3, [r0]
 8000602:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:392
    adds r3, #1 @ Wenn es -1 war, ergibt dies Null, und es war schon im push {lr} Modus.
 8000604:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:393
    beq.n 1f
 8000606:	d008      	beq.n	800061a <push_lr_nachholen+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:395

      movs r3, #0  @ State auf klassisch "true" setzen.
 8000608:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:396
      mvns r3, r3
 800060a:	43db      	mvns	r3, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:397
      str r3, [r0]
 800060c:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:400

      @ writeln "Nachholen von push {lr}"
      pushdaconstw 0xb500 @ Opcode für push {lr} schreiben  Write opcode for push {lr}
 800060e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000612:	f24b 5600 	movw	r6, #46336	; 0xb500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:401
      bl hkomma
 8000616:	f003 f94f 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:403

1:pop {r0, pc}
 800061a:	bd01      	pop	{r0, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:390
    ldr r0, =state
 800061c:	2407ffd8 	.word	0x2407ffd8

08000620 <Dictionary_68>:
Dictionary_68():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-tools.s:390
 8000620:	08000644 	.word	0x08000644
 8000624:	32040242 	.word	0x32040242
 8000628:	7564      	.short	0x7564
 800062a:	70          	.byte	0x70
	...

0800062c <Code_68>:
Code_68():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:28
@------------------------------------------------------------------------------

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, "2dup" @ ( 2 1 -- 2 1 2 1 )
@ -----------------------------------------------------------------------------
  ldr r0, [psp]
 800062c:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:29
  pushdatos
 800062e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:30
  subs psp, #4
 8000632:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:31
  str r0, [psp]
 8000634:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:32
  bx lr
 8000636:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:33
    push {lr}
 8000638:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:34
    bl over_allocator
 800063a:	f000 fcc3 	bl	8000fc4 <over_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:35
    bl over_allocator
 800063e:	f000 fcc1 	bl	8000fc4 <over_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:36
    pop {pc}
 8000642:	bd00      	pop	{pc}

08000644 <Dictionary_70>:
Dictionary_70():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:36
 8000644:	08000662 	.word	0x08000662
 8000648:	32050262 	.word	0x32050262
 800064c:	706f7264 	.word	0x706f7264

08000650 <Code_70>:
Code_70():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:42

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "2drop" @ ( 2 1 -- )
ddrop_vektor:
@ -----------------------------------------------------------------------------
  adds psp, #4
 8000650:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:43
  drop
 8000652:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:44
  bx lr
 8000654:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:45
    push {lr}
 8000656:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:46
    bl drop_allocator
 8000658:	f000 fc64 	bl	8000f24 <drop_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:47
    bl drop_allocator
 800065c:	f000 fc62 	bl	8000f24 <drop_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:48
    pop {pc}
 8000660:	bd00      	pop	{pc}

08000662 <Dictionary_72>:
Dictionary_72():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:48
 8000662:	06a8      	.short	0x06a8
 8000664:	02440800 	.word	0x02440800
 8000668:	77733205 	.word	0x77733205
 800066c:	7061      	.short	0x7061

0800066e <Code_72>:
Code_72():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:54

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_4|Flag_allocator, "2swap" @ ( 4 3 2 1 -- 2 1 4 3 )
dswap:
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
 800066e:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:55
  subs psp, #4
 8000670:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:56
  str r0, [psp]
 8000672:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:57
  pushdatos
 8000674:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:58
  subs psp, #4
 8000678:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:59
  str r2, [psp]
 800067a:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:60
  movs tos, r1
 800067c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:61
  bx lr
 800067e:	4770      	bx	lr

08000680 <dswap_allocator>:
dswap_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:64

dswap_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
 8000680:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:66

    bl expect_four_elements
 8000682:	f7ff ff50 	bl	8000526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:68

    ldr r2, [r0, #offset_state_tos]
 8000686:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:69
    ldr r3, [r0, #offset_state_3os]
 8000688:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:70
    str r3, [r0, #offset_state_tos]
 800068a:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:71
    str r2, [r0, #offset_state_3os]
 800068c:	6102      	str	r2, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:73

    ldr r2, [r0, #offset_constant_tos]
 800068e:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:74
    ldr r3, [r0, #offset_constant_3os]
 8000690:	6943      	ldr	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:75
    str r3, [r0, #offset_constant_tos]
 8000692:	6043      	str	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:76
    str r2, [r0, #offset_constant_3os]
 8000694:	6142      	str	r2, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:78

    ldr r2, [r0, #offset_state_nos]
 8000696:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:79
    ldr r3, [r0, #offset_state_4os]
 8000698:	6983      	ldr	r3, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:80
    str r3, [r0, #offset_state_nos]
 800069a:	6083      	str	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:81
    str r2, [r0, #offset_state_4os]
 800069c:	6182      	str	r2, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:83

    ldr r2, [r0, #offset_constant_nos]
 800069e:	68c2      	ldr	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:84
    ldr r3, [r0, #offset_constant_4os]
 80006a0:	69c3      	ldr	r3, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:85
    str r3, [r0, #offset_constant_nos]
 80006a2:	60c3      	str	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:86
    str r2, [r0, #offset_constant_4os]
 80006a4:	61c2      	str	r2, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:88

    pop {pc}
 80006a6:	bd00      	pop	{pc}

080006a8 <Dictionary_74>:
Dictionary_74():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:88
 80006a8:	080006d0 	.word	0x080006d0
 80006ac:	32040262 	.word	0x32040262
 80006b0:	696e      	.short	0x696e
 80006b2:	70          	.byte	0x70
	...

080006b4 <Code_74>:
Code_74():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:94

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "2nip" @ ( 4 3 2 1 -- 2 1 )
dnip:
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
 80006b4:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:95
  subs psp, #4
 80006b6:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:96
  str r0, [psp]
 80006b8:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:97
  bx lr
 80006ba:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:99

    push {lr}
 80006bc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:100
    bl expect_four_elements
 80006be:	f7ff ff32 	bl	8000526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:101
    bl dswap_allocator
 80006c2:	f7ff ffdd 	bl	8000680 <dswap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:102
    bl eliminiere_tos
 80006c6:	f7ff fe0a 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:103
    bl eliminiere_tos
 80006ca:	f7ff fe08 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:104
    pop {pc}
 80006ce:	bd00      	pop	{pc}

080006d0 <Dictionary_75>:
Dictionary_75():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:104
 80006d0:	080006ea 	.word	0x080006ea
 80006d4:	32050044 	.word	0x32050044
 80006d8:	7265766f 	.word	0x7265766f

080006dc <Code_75>:
Code_75():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:109

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_4, "2over" @ ( 4 3 2 1 -- 4 3 2 1 4 3 )
@ -----------------------------------------------------------------------------
  ldr r0, [psp, #8]
 80006dc:	68b8      	ldr	r0, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:110
  pushdatos
 80006de:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:111
  subs psp, #4
 80006e2:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:112
  str r0, [psp]
 80006e4:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:113
  ldr tos, [psp, #12]
 80006e6:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:114
  bx lr
 80006e8:	4770      	bx	lr

080006ea <Dictionary_77>:
Dictionary_77():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:114
 80006ea:	070e      	.short	0x070e
 80006ec:	00440800 	.word	0x00440800
 80006f0:	75743205 	.word	0x75743205
 80006f4:	6b63      	.short	0x6b63

080006f6 <Code_77>:
Code_77():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:119

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_4, "2tuck" @ ( 4 3 2 1 -- 2 1 4 3 2 1 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2} @ w=2 x=3 y=4
 80006f6:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:120
  subs psp, #4
 80006f8:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:121
  str r0, [psp]
 80006fa:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:122
  pushdatos
 80006fc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:123
  subs psp, #4
 8000700:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:124
  str r2, [psp]
 8000702:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:125
  subs psp, #4
 8000704:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:126
  str r1, [psp]
 8000706:	6039      	str	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:127
  subs psp, #4
 8000708:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:128
  str r0, [psp]
 800070a:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:129
  bx lr
 800070c:	4770      	bx	lr

0800070e <Dictionary_79>:
Dictionary_79():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:129
 800070e:	0730      	.short	0x0730
 8000710:	00460800 	.word	0x00460800
 8000714:	6f723204 	.word	0x6f723204
 8000718:	74          	.byte	0x74
	...

0800071a <Code_79>:
Code_79():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:135

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_6, "2rot" @ ( 6  5 4 3 2 1  -- 4  3 2 1 6 5 ) ( x w y -- w y x )
                                    @  16 12 8 4 0 tos  16 12 8 4 0 tos
@ -----------------------------------------------------------------------------
  ldr r0, [psp]
 800071a:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:136
  ldr r1, [psp, #8]
 800071c:	68b9      	ldr	r1, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:137
  ldr r2, [psp, #16]
 800071e:	693a      	ldr	r2, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:139

  str r0, [psp, #8]
 8000720:	60b8      	str	r0, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:140
  str r1, [psp, #16]
 8000722:	6139      	str	r1, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:141
  str r2, [psp]
 8000724:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:143

  ldr r1, [psp, #4]
 8000726:	6879      	ldr	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:144
  str tos, [psp, #4]
 8000728:	607e      	str	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:145
  ldr tos, [psp, #12]
 800072a:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:146
  str r1, [psp, #12]
 800072c:	60f9      	str	r1, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:148

  bx lr
 800072e:	4770      	bx	lr

08000730 <Dictionary_80>:
Dictionary_80():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:148
 8000730:	08000752 	.word	0x08000752
 8000734:	32050046 	.word	0x32050046
 8000738:	746f722d 	.word	0x746f722d

0800073c <Code_80>:
Code_80():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:154

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_6, "2-rot" @ ( 6  5 4 3 2 1 --  2  1 6 5 4 3 ( x w y -- y x w )
                                     @  16 12 8 4 0 tos  16 12 8 4 0 tos
@ -----------------------------------------------------------------------------
  ldr r0, [psp]
 800073c:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:155
  ldr r1, [psp, #8]
 800073e:	68b9      	ldr	r1, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:156
  ldr r2, [psp, #16]
 8000740:	693a      	ldr	r2, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:158

  str r0, [psp, #16]
 8000742:	6138      	str	r0, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:159
  str r1, [psp]
 8000744:	6039      	str	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:160
  str r2, [psp, #8]
 8000746:	60ba      	str	r2, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:162

  ldr r1, [psp, #12]
 8000748:	68f9      	ldr	r1, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:163
  str tos, [psp, #12]
 800074a:	60fe      	str	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:164
  ldr tos, [psp, #4]
 800074c:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:165
  str r1, [psp, #4]
 800074e:	6079      	str	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:167

  bx lr
 8000750:	4770      	bx	lr

08000752 <Dictionary_81>:
Dictionary_81():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:167
 8000752:	077a      	.short	0x077a
 8000754:	02200800 	.word	0x02200800
 8000758:	723e3203 	.word	0x723e3203

0800075c <Code_81>:
Code_81():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:182

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2>r" @ Puts the two top elements of stack on returnstack.
                               @ Equal to swap >r >r
@------------------------------------------------------------------------------
  ldm psp!, {r0}
 800075c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:183
  push {r0}
 800075e:	b401      	push	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:184
  push {tos}
 8000760:	b440      	push	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:185
  ldm psp!, {tos}
 8000762:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:186
  bx lr
 8000764:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:187
    push {lr}
 8000766:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:188
    bl push_lr_nachholen
 8000768:	f7ff ff49 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:189
    bl swap_allocator
 800076c:	f000 fbfd 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:190
    bl allocator_to_r
 8000770:	f000 fc9d 	bl	80010ae <allocator_to_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:191
    bl allocator_to_r
 8000774:	f000 fc9b 	bl	80010ae <allocator_to_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:192
    pop {pc}
 8000778:	bd00      	pop	{pc}

0800077a <Dictionary_82>:
Dictionary_82():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:192
 800077a:	07a6      	.short	0x07a6
 800077c:	02200800 	.word	0x02200800
 8000780:	3e723203 	.word	0x3e723203

08000784 <Code_82>:
Code_82():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:198

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2r>" @ Fetches back two elements of returnstack.
                               @ Equal to r> r> swap
@------------------------------------------------------------------------------
  pushdatos
 8000784:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:199
  pop {tos}
 8000788:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:200
  pop {r0}
 800078a:	bc01      	pop	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:201
  subs psp, #4
 800078c:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:202
  str r0, [psp]
 800078e:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:203
  bx lr
 8000790:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:204
    push {lr}
 8000792:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:205
    bl push_lr_nachholen
 8000794:	f7ff ff33 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:206
    bl allocator_r_from
 8000798:	f000 fca5 	bl	80010e6 <allocator_r_from>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:207
    bl allocator_r_from
 800079c:	f000 fca3 	bl	80010e6 <allocator_r_from>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:208
    bl swap_allocator
 80007a0:	f000 fbe3 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:209
    pop {pc}
 80007a4:	bd00      	pop	{pc}

080007a6 <Dictionary_84>:
Dictionary_84():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:209
 80007a6:	07d6      	.short	0x07d6
 80007a8:	02200800 	.word	0x02200800
 80007ac:	40723203 	.word	0x40723203

080007b0 <Code_84>:
Code_84():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:214

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2r@" @ Copies the two top elements of returnsteack
@------------------------------------------------------------------------------
  pushdatos
 80007b0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:215
  ldr tos, [sp, #4]
 80007b4:	9e01      	ldr	r6, [sp, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:216
  pushdatos
 80007b6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:217
  ldr tos, [sp]
 80007ba:	9e00      	ldr	r6, [sp, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:218
  bx lr
 80007bc:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:219
    push {lr}
 80007be:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:220
    bl push_lr_nachholen
 80007c0:	f7ff ff1d 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:221
    pushdaconstw 0x9801
 80007c4:	f847 6d04 	str.w	r6, [r7, #-4]!
 80007c8:	f649 0601 	movw	r6, #38913	; 0x9801
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:222
    bl loop_j_allocator
 80007cc:	f003 fdab 	bl	8004326 <loop_j_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:223
    bl rfetch_allocator
 80007d0:	f003 fda5 	bl	800431e <rfetch_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:224
    pop {pc}
 80007d4:	bd00      	pop	{pc}

080007d6 <Dictionary_89>:
Dictionary_89():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:224
 80007d6:	07fc      	.short	0x07fc
 80007d8:	02200800 	.word	0x02200800
 80007dc:	64723206 	.word	0x64723206
 80007e0:	6f72      	.short	0x6f72
 80007e2:	70          	.byte	0x70
	...

080007e4 <Code_89>:
Code_89():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:229

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2rdrop" @ Entfernt die obersten beiden Element des Returnstacks
@------------------------------------------------------------------------------
  add sp, #8
 80007e4:	b002      	add	sp, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:230
  bx lr
 80007e6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:231
    push {lr}
 80007e8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:232
    bl push_lr_nachholen
 80007ea:	f7ff ff08 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:233
    pushdaconstw 0xB002  @ Opcode add sp, #8
 80007ee:	f847 6d04 	str.w	r6, [r7, #-4]!
 80007f2:	f24b 0602 	movw	r6, #45058	; 0xb002
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:234
    bl hkomma
 80007f6:	f003 f85f 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:235
    pop {pc}
 80007fa:	bd00      	pop	{pc}

080007fc <Dictionary_92>:
Dictionary_92():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:235
 80007fc:	08000814 	.word	0x08000814
 8000800:	64030042 	.word	0x64030042
 8000804:	2f32      	.short	0x2f32

08000806 <Code_92>:
Code_92():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:246
@------------------------------------------------------------------------------

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_2, "d2/"
@------------------------------------------------------------------------------
  ldr r0, [psp]
 8000806:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:247
  lsls r1, tos, #31 @ Prepare Carry
 8000808:	07f1      	lsls	r1, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:248
  asrs tos, #1     @ Shift signed high part right
 800080a:	1076      	asrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:249
  lsrs r0, #1       @ Shift low part
 800080c:	0840      	lsrs	r0, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:250
  orrs r0, r1
 800080e:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:251
  str r0, [psp]
 8000810:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:252
  bx lr
 8000812:	4770      	bx	lr

08000814 <Dictionary_93>:
Dictionary_93():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:252
 8000814:	0800082a 	.word	0x0800082a
 8000818:	64030262 	.word	0x64030262
 800081c:	2a32      	.short	0x2a32

0800081e <Code_93>:
Code_93():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:257

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "d2*"
@------------------------------------------------------------------------------
  ldr r0, [psp]
 800081e:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:258
  adds r0, r0
 8000820:	1800      	adds	r0, r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:259
  adcs tos, tos
 8000822:	4176      	adcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:260
  str r0, [psp]
 8000824:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:261
  bx lr
 8000826:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:262
    b.n 1f
 8000828:	e017      	b.n	800085a <Code_95+0xa>

0800082a <Dictionary_94>:
Dictionary_94():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:262
 800082a:	0844      	.short	0x0844
 800082c:	00420800 	.word	0x00420800
 8000830:	68736404 	.word	0x68736404
 8000834:	72          	.byte	0x72
	...

08000836 <Code_94>:
Code_94():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:267

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_2, "dshr"
@------------------------------------------------------------------------------
  ldr r0, [psp]
 8000836:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:268
  lsls r1, tos, #31 @ Prepare Carry
 8000838:	07f1      	lsls	r1, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:269
  lsrs tos, #1     @ Shift unsigned high part right
 800083a:	0876      	lsrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:270
  lsrs r0, #1       @ Shift low part
 800083c:	0840      	lsrs	r0, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:271
  orrs r0, r1
 800083e:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:272
  str r0, [psp]
 8000840:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:273
  bx lr
 8000842:	4770      	bx	lr

08000844 <Dictionary_95>:
Dictionary_95():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:273
 8000844:	08000890 	.word	0x08000890
 8000848:	64040262 	.word	0x64040262
 800084c:	6873      	.short	0x6873
 800084e:	6c          	.byte	0x6c
	...

08000850 <Code_95>:
Code_95():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:278

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "dshl"
@------------------------------------------------------------------------------
  ldr r0, [psp]
 8000850:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:279
  adds r0, r0
 8000852:	1800      	adds	r0, r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:280
  adcs tos, tos
 8000854:	4176      	adcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:281
  str r0, [psp]
 8000856:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:282
  bx lr
 8000858:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:284

1:  push {lr}
 800085a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:285
    bl expect_two_elements
 800085c:	f7ff fe46 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:287

    bl expect_tos_in_register
 8000860:	f7ff fe76 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:288
    bl make_tos_changeable
 8000864:	f7ff fea9 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:290

    bl swap_allocator
 8000868:	f000 fb7f 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:291
    bl expect_tos_in_register
 800086c:	f7ff fe70 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:292
    bl make_tos_changeable
 8000870:	f7ff fea3 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:294

    pushdaconst 0x0040 @ lsls r0, r0, #1
 8000874:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000878:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:295
    bl smalltworegisters
 800087a:	f001 fe43 	bl	8002504 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:297

    bl swap_allocator
 800087e:	f000 fb74 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:298
    pushdaconstw 0x4140 @ adcs r0, r0
 8000882:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000886:	f244 1640 	movw	r6, #16704	; 0x4140
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:299
    bl smalltworegisters
 800088a:	f001 fe3b 	bl	8002504 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:300
    pop {pc}
 800088e:	bd00      	pop	{pc}

08000890 <Dictionary_100>:
Dictionary_100():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:300
 8000890:	080008a2 	.word	0x080008a2
 8000894:	64040042 	.word	0x64040042
 8000898:	6261      	.short	0x6261
 800089a:	73          	.byte	0x73
	...

0800089c <Code_100>:
Code_100():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:306

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_2, "dabs"
@------------------------------------------------------------------------------
dabs:
  cmp tos, #0   @ Check sign in high-part
 800089c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:307
  bmi.n dnegate @ Not negative ? Nothing to do !
 800089e:	d407      	bmi.n	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:308
  bx lr
 80008a0:	4770      	bx	lr

080008a2 <Dictionary_101>:
Dictionary_101():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:308
 80008a2:	08c0      	.short	0x08c0
 80008a4:	00420800 	.word	0x00420800
 80008a8:	656e6407 	.word	0x656e6407
 80008ac:	65746167 	.word	0x65746167

080008b0 <Code_101>:
dnegate():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:322

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_2, "dnegate"
@------------------------------------------------------------------------------
dnegate:
  ldr r0, [psp]
 80008b0:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:323
  movs r1, #0
 80008b2:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:324
  mvns r0, r0
 80008b4:	43c0      	mvns	r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:325
  mvns tos, tos
 80008b6:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:326
  adds r0, #1
 80008b8:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:327
  adcs tos, r1
 80008ba:	414e      	adcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:328
  str r0, [psp]
 80008bc:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:329
  bx lr
 80008be:	4770      	bx	lr

080008c0 <Dictionary_102>:
Dictionary_102():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:329
 80008c0:	08000910 	.word	0x08000910
 80008c4:	64020264 	.word	0x64020264
 80008c8:	2d          	.byte	0x2d
	...

080008ca <Code_102>:
Code_102():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:334

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_4|Flag_allocator, "d-" @ ( 1L 1H 2L 2H )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
 80008ca:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:335
  subs r2, r0     @  Low-part first
 80008cc:	1a12      	subs	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:336
  sbcs r1, tos   @ High-part with carry
 80008ce:	41b1      	sbcs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:337
  movs tos, r1
 80008d0:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:339

  subs psp, #4
 80008d2:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:340
  str r2, [psp]
 80008d4:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:341
  bx lr
 80008d6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:343

    push {lr}
 80008d8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:344
    bl expect_four_elements
 80008da:	f7ff fe24 	bl	8000526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:345
    bl rot_allocator @ ( 1L 2L 2H 1H )
 80008de:	f000 fb99 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:346
    bl expect_tos_in_register
 80008e2:	f7ff fe35 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:347
    bl make_tos_changeable
 80008e6:	f7ff fe68 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:348
    bl swap_allocator @ ( 1L 2L 1H 2H )
 80008ea:	f000 fb3e 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:349
    bl expect_tos_in_register
 80008ee:	f7ff fe2f 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:350
    bl make_tos_changeable
 80008f2:	f7ff fe62 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:351
    bl dswap_allocator @ ( 1H 2H 1L 2L )
 80008f6:	f7ff fec3 	bl	8000680 <dswap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:352
    bl minus_allocator  @ ( 1H 2H L )
 80008fa:	f001 fd6d 	bl	80023d8 <minus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:353
    bl minusrot_allocator @ ( L 1H 2H )
 80008fe:	f000 fba5 	bl	800104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:354
    pushdaconstw 0x4180 @ sbcs r0, r0
 8000902:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000906:	f244 1680 	movw	r6, #16768	; 0x4180
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:355
    bl alloc_unkommutativ @ ( L H )
 800090a:	f000 fd4e 	bl	80013aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:356
    pop {pc}
 800090e:	bd00      	pop	{pc}

08000910 <Dictionary_105>:
Dictionary_105():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:356
 8000910:	0800095e 	.word	0x0800095e
 8000914:	64020264 	.word	0x64020264
 8000918:	2b          	.byte	0x2b
	...

0800091a <Code_105>:
Code_105():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:361

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_4|Flag_allocator, "d+" @ ( 1L 1H 2L 2H )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
 800091a:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:362
  adds r2, r0
 800091c:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:363
  adcs tos, r1
 800091e:	414e      	adcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:364
  subs psp, #4
 8000920:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:365
  str r2, [psp]
 8000922:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:366
  bx lr
 8000924:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:368

    push {lr}
 8000926:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:369
    bl expect_four_elements
 8000928:	f7ff fdfd 	bl	8000526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:370
    bl rot_allocator @ ( 1L 2L 2H 1H )
 800092c:	f000 fb72 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:371
    bl expect_tos_in_register
 8000930:	f7ff fe0e 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:372
    bl make_tos_changeable
 8000934:	f7ff fe41 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:373
    bl swap_allocator @ ( 1L 2L 1H 2H )
 8000938:	f000 fb17 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:374
    bl expect_tos_in_register
 800093c:	f7ff fe08 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:375
    bl make_tos_changeable
 8000940:	f7ff fe3b 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:376
    bl dswap_allocator @ ( 1H 2H 1L 2L )
 8000944:	f7ff fe9c 	bl	8000680 <dswap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:377
    bl plus_allocator  @ ( 1H 2H L )
 8000948:	f001 fd2b 	bl	80023a2 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:378
    bl minusrot_allocator @ ( L 1H 2H )
 800094c:	f000 fb7e 	bl	800104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:379
    pushdaconstw 0x4140 @ adcs r0, r0
 8000950:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000954:	f244 1640 	movw	r6, #16704	; 0x4140
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:380
    bl alloc_kommutativ @ ( L H )
 8000958:	f000 fd2b 	bl	80013b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:381
    pop {pc}
 800095c:	bd00      	pop	{pc}

0800095e <Dictionary_108>:
Dictionary_108():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:381
 800095e:	0988      	.short	0x0988
 8000960:	02610800 	.word	0x02610800
 8000964:	643e7303 	.word	0x643e7303

08000968 <Code_108>:
Code_108():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:386

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_allocator, "s>d" @ ( n - dl dh ) Single --> Double conversion
@------------------------------------------------------------------------------
  pushdatos
 8000968:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:387
  movs tos, tos, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
 800096c:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:388
  bx lr
 800096e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:389
    push {lr}
 8000970:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:390
    bl dup_allocator
 8000972:	f000 fac5 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:391
    bl make_tos_changeable
 8000976:	f7ff fe20 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:392
    pushdaconstw 0x17C0 @ asrs r0, r0, #31
 800097a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800097e:	f241 76c0 	movw	r6, #6080	; 0x17c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:393
    bl smalltworegisters
 8000982:	f001 fdbf 	bl	8002504 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:394
    pop {pc}
 8000986:	bd00      	pop	{pc}

08000988 <Dictionary_112>:
Dictionary_112():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:394
 8000988:	080009e6 	.word	0x080009e6
 800098c:	75030262 	.word	0x75030262
 8000990:	2a6d      	.short	0x2a6d

08000992 <Code_112>:
Code_112():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:426
  @ Multiply unsigned 32*32 = 64
  @ ( u u -- ud )
um_star:
@------------------------------------------------------------------------------

    ldr r0, [psp]
 8000992:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:427
    umull r0, tos, r0, tos @ Unsigned long multiply 32*32=64
 8000994:	fba0 0606 	umull	r0, r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:428
    str r0, [psp]
 8000998:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:429
    bx lr
 800099a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:431

    pushdatos
 800099c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:432
    ldr tos, =0xFBA00000
 80009a0:	f8df 6500 	ldr.w	r6, [pc, #1280]	; 8000ea4 <dgleichungleich_common+0x1c>

080009a4 <alloc_multiplikation_m3>:
alloc_multiplikation_m3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:436

alloc_multiplikation_m3:

    push {lr}
 80009a4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:437
    bl expect_two_elements
 80009a6:	f7ff fda1 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:438
    bl expect_tos_in_register
 80009aa:	f7ff fdd1 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:439
    bl expect_nos_in_register
 80009ae:	f7ff fdd9 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:443

    @ Baue den Opcode zusammen:

    ldr r1, [r0, #offset_state_tos]
 80009b2:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:444
    orrs tos, r1 @ Quellregister 1 hinzufügen
 80009b4:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:446

    ldr r1, [r0, #offset_state_nos]
 80009b6:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:447
    orrs tos, tos, r1, lsl #16 @ Quellregister 2 hinzufügen
 80009b8:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:450

    @ Zweimal den Register wechseln !
    bl eliminiere_tos
 80009bc:	f7ff fc8f 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:451
    bl eliminiere_tos
 80009c0:	f7ff fc8d 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:453

          bl befreie_tos
 80009c4:	f7ff fc81 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:454
          bl get_free_register
 80009c8:	f7ff fd52 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:455
          str r3, [r0, #offset_state_tos]
 80009cc:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:457

    orrs tos, tos, r3, lsl #12 @ Zielregister Low hinzufügen
 80009ce:	ea56 3603 	orrs.w	r6, r6, r3, lsl #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:459

          bl befreie_tos
 80009d2:	f7ff fc7a 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:460
          bl get_free_register
 80009d6:	f7ff fd4b 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:461
          str r3, [r0, #offset_state_tos]
 80009da:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:463

    orrs tos, tos, r3, lsl #8 @ Zielregister High hinzufügen
 80009dc:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:465

    bl reversekomma
 80009e0:	f002 ff9a 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:466
    pop {pc}
 80009e4:	bd00      	pop	{pc}

080009e6 <Dictionary_114>:
Dictionary_114():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:466
 80009e6:	0a04      	.short	0x0a04
 80009e8:	02620800 	.word	0x02620800
 80009ec:	6d02      	.short	0x6d02
 80009ee:	2a          	.byte	0x2a
	...

080009f0 <Code_114>:
Code_114():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:496
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "m*"
  @ Multiply signed 32*32 = 64
  @ ( n n -- d )
m_star:
@------------------------------------------------------------------------------
    ldr r0, [psp]
 80009f0:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:497
    smull r0, tos, r0, tos @ Signed long multiply 32*32=64
 80009f2:	fb80 0606 	smull	r0, r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:498
    str r0, [psp]
 80009f6:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:499
    bx lr
 80009f8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:501

    pushdatos
 80009fa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:502
    ldr tos, =0xFB800000
 80009fe:	f8df 64a8 	ldr.w	r6, [pc, #1192]	; 8000ea8 <dgleichungleich_common+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:503
    b.n alloc_multiplikation_m3
 8000a02:	e7cf      	b.n	80009a4 <alloc_multiplikation_m3>

08000a04 <Dictionary_116>:
Dictionary_116():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:503
 8000a04:	08000a42 	.word	0x08000a42
 8000a08:	75030044 	.word	0x75030044
 8000a0c:	2a64      	.short	0x2a64

08000a0e <Code_116>:
Code_116():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:519
  @          tos w      x y

@ r1:r0  r3:r2 -->  r1:r0
@ tos r0 r1 r2 -->  tos r0

        ldm psp!, {r0, r1, r2}
 8000a0e:	cf07      	ldmia	r7!, {r0, r1, r2}

08000a10 <ud_star_registers>:
ud_star_registers():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:523

ud_star_registers:

	muls	tos, r2        @ High-1 * Low-2 --> tos
 8000a10:	4356      	muls	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:524
	muls	r1, r0         @ High-2 * Low-1 --> r1
 8000a12:	4341      	muls	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:525
	adds	tos, r1        @                    Sum into tos
 8000a14:	1876      	adds	r6, r6, r1

08000a16 <ud_star_late_entry>:
ud_star_late_entry():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:529

ud_star_late_entry:

	lsrs	r1, r0, #16
 8000a16:	0c01      	lsrs	r1, r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:530
	lsrs	r3, r2, #16
 8000a18:	0c13      	lsrs	r3, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:531
	muls	r1, r3
 8000a1a:	4359      	muls	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:532
	adds	tos, r1
 8000a1c:	1876      	adds	r6, r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:534

	lsrs	r1, r0, #16
 8000a1e:	0c01      	lsrs	r1, r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:535
	uxth	r0, r0
 8000a20:	b280      	uxth	r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:536
	uxth	r2, r2
 8000a22:	b292      	uxth	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:537
	muls	r1, r2
 8000a24:	4351      	muls	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:538
	muls	r3, r0
 8000a26:	4343      	muls	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:539
	muls	r0, r2
 8000a28:	4350      	muls	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:541

	movs	r2, #0
 8000a2a:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:542
	adds	r1, r3
 8000a2c:	18c9      	adds	r1, r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:543
	adcs	r2, r2
 8000a2e:	4152      	adcs	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:544
	lsls	r2, #16
 8000a30:	0412      	lsls	r2, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:545
	adds	tos, r2
 8000a32:	18b6      	adds	r6, r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:547

	lsls	r2, r1, #16
 8000a34:	040a      	lsls	r2, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:548
	lsrs	r1, #16
 8000a36:	0c09      	lsrs	r1, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:549
	adds	r0, r2
 8000a38:	1880      	adds	r0, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:550
	adcs	tos, r1
 8000a3a:	414e      	adcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:552

        subs psp, #4
 8000a3c:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:553
        str r0, [psp]
 8000a3e:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:555

        bx lr
 8000a40:	4770      	bx	lr

08000a42 <Dictionary_117>:
Dictionary_117():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:555
 8000a42:	0ad4      	.short	0x0ad4
 8000a44:	00440800 	.word	0x00440800
 8000a48:	6d647504 	.word	0x6d647504
 8000a4c:	2a          	.byte	0x2a
	...

08000a4e <Code_117>:
Code_117():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:567
  @ Auf dem Datenstack: ( 1L 1H 2L 2H -- LL  L  H HH )
  @                       12  8  4  0 nach pushdatos
  @                        d  c  b  a    r0 r1 r2 r3
  @ Benötige einen langen Ergebnisregister !

  push {r4, lr}
 8000a4e:	b510      	push	{r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:568
  movs r4, #0 @ For Carry addition
 8000a50:	2400      	movs	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:571

  @ ( d c b a )
  pushdatos
 8000a52:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:572
  ldr tos, [psp, #4]    @ b
 8000a56:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:573
  pushdatos
 8000a58:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:574
  ldr tos, [psp, #12+4] @ d
 8000a5c:	693e      	ldr	r6, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:575
  bl um_star
 8000a5e:	f7ff ff98 	bl	8000992 <Code_112>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:577
  @ ( d c b a  b*d-Low b*d-High )
  popda r1 @ b*d-High
 8000a62:	0031      	movs	r1, r6
 8000a64:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:578
  popda r0 @ b*d-Low, finished value
 8000a66:	0030      	movs	r0, r6
 8000a68:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:582

  @ ( d c b a )

  pushdatos
 8000a6a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:583
  ldr tos, [psp, #0]   @ a
 8000a6e:	683e      	ldr	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:584
  pushdatos
 8000a70:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:585
  ldr tos, [psp, #8+4] @ c
 8000a74:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:586
  push {r0, r1}
 8000a76:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:587
    bl um_star
 8000a78:	f7ff ff8b 	bl	8000992 <Code_112>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:588
  pop {r0, r1}
 8000a7c:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:590
  @ ( d c b a  a*c-Low a*c-High )
  popda r3 @ a*c-High
 8000a7e:	0033      	movs	r3, r6
 8000a80:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:591
  popda r2 @ a*c-Low
 8000a82:	0032      	movs	r2, r6
 8000a84:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:595

  @ ( d c b a )

  pushdatos
 8000a86:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:596
  ldr tos, [psp, #0]    @ a
 8000a8a:	683e      	ldr	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:597
  pushdatos
 8000a8c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:598
  ldr tos, [psp, #12+4] @ d
 8000a90:	693e      	ldr	r6, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:600

  push {r0, r1, r2, r3}
 8000a92:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:601
    bl um_star
 8000a94:	f7ff ff7d 	bl	8000992 <Code_112>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:602
  pop {r0, r1, r2, r3}
 8000a98:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:605
  @ ( d c b a  a*d-Low a*d-High )

  adds r2, tos @ a*c-Low + a*d-High
 8000a9a:	1992      	adds	r2, r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:606
  adcs r3, r4  @ Carry
 8000a9c:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:607
  drop
 8000a9e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:609

  adds r1, tos @ a*d-Low + b*d-High
 8000aa0:	1989      	adds	r1, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:610
  adcs r2, r4  @ Carry
 8000aa2:	4162      	adcs	r2, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:611
  adcs r3, r4  @ Carry
 8000aa4:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:612
  drop
 8000aa6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:616

  @ ( d c b a )

  pushdatos
 8000aa8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:617
  ldr tos, [psp, #4]    @ b
 8000aac:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:618
  pushdatos
 8000aae:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:619
  ldr tos, [psp, #8+4]  @ c
 8000ab2:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:621

  push {r0, r1, r2, r3}
 8000ab4:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:622
    bl um_star
 8000ab6:	f7ff ff6c 	bl	8000992 <Code_112>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:623
  pop {r0, r1, r2, r3}
 8000aba:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:626
  @ ( d c b a  b*c-Low b*c-High )

  adds r2, tos @ a*c-Low + b*c-High + a*d-High
 8000abc:	1992      	adds	r2, r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:627
  adcs r3, r4  @ Carry
 8000abe:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:628
  drop
 8000ac0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:630

  adds r1, tos @ b*c-Low + a*d-Low + b*d-High
 8000ac2:	1989      	adds	r1, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:631
  adcs r2, r4  @ Carry
 8000ac4:	4162      	adcs	r2, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:632
  adcs r3, r4  @ Carry
 8000ac6:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:633
  drop
 8000ac8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:636

  @ ( d c b tos: a )
  movs tos, r3
 8000aca:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:637
  str r2, [psp, #0]
 8000acc:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:638
  str r1, [psp, #4]
 8000ace:	6079      	str	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:639
  str r0, [psp, #8]
 8000ad0:	60b8      	str	r0, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:641

  pop {r4, pc}
 8000ad2:	bd10      	pop	{r4, pc}

08000ad4 <Dictionary_134>:
Dictionary_134():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:641
 8000ad4:	08000af6 	.word	0x08000af6
 8000ad8:	2a020043 	.word	0x2a020043
 8000adc:	2f          	.byte	0x2f
	...

08000ade <Code_134>:
Code_134():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:648

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "*/" @ Signed scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
 8000ade:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:649
  to_r
 8000ae0:	b440      	push	{r6}
 8000ae2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:650
  bl m_star
 8000ae4:	f7ff ff84 	bl	80009f0 <Code_114>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:651
  r_from
 8000ae8:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000aec:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:652
  bl m_slash_mod
 8000aee:	f000 f84c 	bl	8000b8a <Code_157>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:653
  nip
 8000af2:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:654
  pop {pc}
 8000af4:	bd00      	pop	{pc}

08000af6 <Dictionary_139>:
Dictionary_139():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:654
 8000af6:	0b18      	.short	0x0b18
 8000af8:	00430800 	.word	0x00430800
 8000afc:	6d2f2a05 	.word	0x6d2f2a05
 8000b00:	646f      	.short	0x646f

08000b02 <Code_139>:
Code_139():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:660

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "*/mod" @ Signed scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
 8000b02:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:661
  to_r
 8000b04:	b440      	push	{r6}
 8000b06:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:662
  bl m_star
 8000b08:	f7ff ff72 	bl	80009f0 <Code_114>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:663
  r_from
 8000b0c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000b10:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:664
  bl m_slash_mod
 8000b12:	f000 f83a 	bl	8000b8a <Code_157>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:665
  pop {pc}
 8000b16:	bd00      	pop	{pc}

08000b18 <Dictionary_143>:
Dictionary_143():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:665
 8000b18:	08000b3a 	.word	0x08000b3a
 8000b1c:	75030043 	.word	0x75030043
 8000b20:	2f2a      	.short	0x2f2a

08000b22 <Code_143>:
Code_143():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:672
@ : u*/  ( u1 u2 u3 -- u1 * u2 / u3 )  >r um* r> um/mod nip 3-foldable ;
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "u*/" @ Unsigned scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
 8000b22:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:673
  to_r
 8000b24:	b440      	push	{r6}
 8000b26:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:674
  bl um_star
 8000b28:	f7ff ff33 	bl	8000992 <Code_112>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:675
  r_from
 8000b2c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000b30:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:676
  bl um_slash_mod
 8000b32:	f000 f81b 	bl	8000b6c <Code_152>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:677
  nip
 8000b36:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:678
  pop {pc}
 8000b38:	bd00      	pop	{pc}

08000b3a <Dictionary_148>:
Dictionary_148():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:678
 8000b3a:	0b5e      	.short	0x0b5e
 8000b3c:	00430800 	.word	0x00430800
 8000b40:	2f2a7506 	.word	0x2f2a7506
 8000b44:	6f6d      	.short	0x6f6d
 8000b46:	64          	.byte	0x64
	...

08000b48 <Code_148>:
Code_148():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:684

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "u*/mod" @ Unsigned scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
 8000b48:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:685
  to_r
 8000b4a:	b440      	push	{r6}
 8000b4c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:686
  bl um_star
 8000b4e:	f7ff ff20 	bl	8000992 <Code_112>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:687
  r_from
 8000b52:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000b56:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:688
  bl um_slash_mod
 8000b58:	f000 f808 	bl	8000b6c <Code_152>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:689
  pop {pc}
 8000b5c:	bd00      	pop	{pc}

08000b5e <Dictionary_152>:
Dictionary_152():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:689
 8000b5e:	0b7e      	.short	0x0b7e
 8000b60:	00430800 	.word	0x00430800
 8000b64:	2f6d7506 	.word	0x2f6d7506
 8000b68:	6f6d      	.short	0x6f6d
 8000b6a:	64          	.byte	0x64
	...

08000b6c <Code_152>:
um_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:696
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "um/mod"
um_slash_mod: @ ( ud u -- u u ) Dividend Divisor -- Rest Ergebnis
             @ 64/32 = 32 Rest 32
@------------------------------------------------------------------------------
  push {lr}
 8000b6c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:697
  pushdaconst 0
 8000b6e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000b72:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:698
  bl ud_slash_mod
 8000b74:	f000 f819 	bl	8000baa <Code_161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:699
  drop
 8000b78:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:700
  nip
 8000b7a:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:701
  pop {pc}
 8000b7c:	bd00      	pop	{pc}

08000b7e <Dictionary_157>:
Dictionary_157():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:701
 8000b7e:	0b9c      	.short	0x0b9c
 8000b80:	00430800 	.word	0x00430800
 8000b84:	6d2f6d05 	.word	0x6d2f6d05
 8000b88:	646f      	.short	0x646f

08000b8a <Code_157>:
m_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:708
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "m/mod"
              @ Signed symmetric divide 64/32 = 32 remainder 32
m_slash_mod:  @ ( d n -- n n )
@------------------------------------------------------------------------------
  push {lr}
 8000b8a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:709
  pushdatos                 @ s>d
 8000b8c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:710
  movs tos, tos, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
 8000b90:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:711
  bl d_slash_mod
 8000b92:	f000 f832 	bl	8000bfa <Code_163>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:712
  drop
 8000b96:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:713
  nip
 8000b98:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:714
  pop {pc}
 8000b9a:	bd00      	pop	{pc}

08000b9c <Dictionary_161>:
Dictionary_161():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:714
 8000b9c:	08000bee 	.word	0x08000bee
 8000ba0:	75060044 	.word	0x75060044
 8000ba4:	6f6d2f64 	.word	0x6f6d2f64
 8000ba8:	64          	.byte	0x64
	...

08000baa <Code_161>:
ud_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:751
         @ Unsigned divide 64/64 = 64 remainder 64
         @ ( ud1 ud2 -- ud ud)
         @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
@------------------------------------------------------------------------------
ud_slash_mod:
   push {r4, r5}
 8000baa:	b430      	push	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:760


   @ Shift-High Shift-Low Dividend-High Dividend-Low
   @         r3        r2            r1           r0

   movs r3, #0
 8000bac:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:761
   movs r2, #0
 8000bae:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:762
   ldr  r1, [psp, #4]
 8000bb0:	6879      	ldr	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:763
   ldr  r0, [psp, #8]
 8000bb2:	68b8      	ldr	r0, [r7, #8]

08000bb4 <ud_slash_mod_internal>:
ud_slash_mod_internal():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:769

   @ Divisor-High Divisor-Low
   @          r5           r4

ud_slash_mod_internal:
   movs r5, tos
 8000bb4:	0035      	movs	r5, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:770
   ldr  r4, [psp, #0]
 8000bb6:	683c      	ldr	r4, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:773

   @ For this long division, we need 64 individual division steps.
   movs tos, #64
 8000bb8:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:775

3: division_step
 8000bba:	0040      	lsls	r0, r0, #1
 8000bbc:	4149      	adcs	r1, r1
 8000bbe:	4152      	adcs	r2, r2
 8000bc0:	415b      	adcs	r3, r3
 8000bc2:	42ab      	cmp	r3, r5
 8000bc4:	d802      	bhi.n	8000bcc <ud_slash_mod_internal+0x18>
 8000bc6:	d304      	bcc.n	8000bd2 <ud_slash_mod_internal+0x1e>
 8000bc8:	42a2      	cmp	r2, r4
 8000bca:	d302      	bcc.n	8000bd2 <ud_slash_mod_internal+0x1e>
 8000bcc:	1b12      	subs	r2, r2, r4
 8000bce:	41ab      	sbcs	r3, r5
 8000bd0:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:776
   subs tos, #1
 8000bd2:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:777
   bne 3b
 8000bd4:	d1f1      	bne.n	8000bba <ud_slash_mod_internal+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:780

   @ Now place all values to their destination.
   movs tos, r1       @ Result-High
 8000bd6:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:781
   str  r0, [psp, #0] @ Result-Low
 8000bd8:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:782
   str  r3, [psp, #4] @ Remainder-High
 8000bda:	607b      	str	r3, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:783
   str  r2, [psp, #8] @ Remainder-Low
 8000bdc:	60ba      	str	r2, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:785

   pop {r4, r5}
 8000bde:	bc30      	pop	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:786
   bx lr
 8000be0:	4770      	bx	lr

08000be2 <uf_slash_mod>:
uf_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:794
@  Wortbirne Flag_visible|Flag_foldable_4, "uf/mod" @ Internal helper only.
uf_slash_mod: @ Divide 64/64 = 64 Remainder 64. Puts decimal point in the middle. Overflow possible.
         @ ( ud1 ud2 -- ud ud)
         @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
@------------------------------------------------------------------------------
   push {r4, r5}
 8000be2:	b430      	push	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:796

   movs r3, #0
 8000be4:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:797
   ldr  r2, [psp, #4]
 8000be6:	687a      	ldr	r2, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:798
   ldr  r1, [psp, #8]
 8000be8:	68b9      	ldr	r1, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:799
   movs r0, #0
 8000bea:	2000      	movs	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:801

   b.n ud_slash_mod_internal
 8000bec:	e7e2      	b.n	8000bb4 <ud_slash_mod_internal>

08000bee <Dictionary_163>:
Dictionary_163():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:801
 8000bee:	0c64      	.short	0x0c64
 8000bf0:	00440800 	.word	0x00440800
 8000bf4:	6d2f6405 	.word	0x6d2f6405
 8000bf8:	646f      	.short	0x646f

08000bfa <Code_163>:
d_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:810
              @ Signed symmetric divide 64/64 = 64 remainder 64
              @ ( d1 d2 -- d d )
d_slash_mod:  @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
@------------------------------------------------------------------------------
  @ Check Divisor
  push {lr}
 8000bfa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:811
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000bfc:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:812
  beq 2f
 8000bfe:	d019      	beq.n	8000c34 <Code_163+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:814
    @ ? / -
    bl dnegate
 8000c00:	f7ff fe56 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:815
    bl dswap
 8000c04:	f7ff fd33 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:816
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000c08:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:817
    beq 1f
 8000c0a:	d00c      	beq.n	8000c26 <Code_163+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:819
    @ - / -
    bl dnegate
 8000c0c:	f7ff fe50 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:820
    bl dswap
 8000c10:	f7ff fd2d 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:821
    bl ud_slash_mod
 8000c14:	f7ff ffc9 	bl	8000baa <Code_161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:823

    bl dswap
 8000c18:	f7ff fd29 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:824
    bl dnegate @ Negative remainder
 8000c1c:	f7ff fe48 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:825
    bl dswap
 8000c20:	f7ff fd25 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:826
    pop {pc}
 8000c24:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:829

1:  @ + / -
    bl dswap
 8000c26:	f7ff fd22 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:830
    bl ud_slash_mod
 8000c2a:	f7ff ffbe 	bl	8000baa <Code_161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:831
    bl dnegate  @ Negative result
 8000c2e:	f7ff fe3f 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:832
    pop {pc}
 8000c32:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:835

2:  @ ? / +
    bl dswap
 8000c34:	f7ff fd1b 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:836
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000c38:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:837
    beq 3f
 8000c3a:	d00e      	beq.n	8000c5a <Code_163+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:839
    @ - / +
    bl dnegate
 8000c3c:	f7ff fe38 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:840
    bl dswap
 8000c40:	f7ff fd15 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:842

    bl ud_slash_mod
 8000c44:	f7ff ffb1 	bl	8000baa <Code_161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:844

    bl dnegate @ Negative result
 8000c48:	f7ff fe32 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:845
    bl dswap
 8000c4c:	f7ff fd0f 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:846
    bl dnegate @ Negative remainder
 8000c50:	f7ff fe2e 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:847
    bl dswap
 8000c54:	f7ff fd0b 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:848
    pop {pc}
 8000c58:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:851

3:  @ + / +
    bl dswap
 8000c5a:	f7ff fd08 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:852
    bl ud_slash_mod
 8000c5e:	f7ff ffa4 	bl	8000baa <Code_161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:853
    pop {pc}
 8000c62:	bd00      	pop	{pc}

08000c64 <Dictionary_164>:
Dictionary_164():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:853
 8000c64:	08000c7a 	.word	0x08000c7a
 8000c68:	64020044 	.word	0x64020044
 8000c6c:	2f          	.byte	0x2f
	...

08000c6e <Code_164>:
Code_164():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:858

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_4, "d/"
@------------------------------------------------------------------------------
  push {lr}
 8000c6e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:859
  bl d_slash_mod
 8000c70:	f7ff ffc3 	bl	8000bfa <Code_163>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:860
  bl dnip
 8000c74:	f7ff fd1e 	bl	80006b4 <Code_74>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:861
  pop {pc}
 8000c78:	bd00      	pop	{pc}

08000c7a <Dictionary_165>:
Dictionary_165():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:861
 8000c7a:	0cc2      	.short	0x0cc2
 8000c7c:	00440800 	.word	0x00440800
 8000c80:	6602      	.short	0x6602
 8000c82:	2a          	.byte	0x2a
	...

08000c84 <Code_165>:
Code_165():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:874
  Wortbirne Flag_visible|Flag_foldable_4, "f*"
f_star: @ Signed multiply s31.32
        @ ( fi fi -- fi )
        @ Overflow possible. Sign wrong in this case.
@------------------------------------------------------------------------------
  push {lr}
 8000c84:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:875
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000c86:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:876
  beq 1f
 8000c88:	d00d      	beq.n	8000ca6 <Code_165+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:878
  @ - * ?
    bl dnegate
 8000c8a:	f7ff fe11 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:879
    bl dswap
 8000c8e:	f7ff fcee 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:880
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000c92:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:881
    beq 2f @ - * +
 8000c94:	d00d      	beq.n	8000cb2 <Code_165+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:884

    @ - * -
    bl dnegate
 8000c96:	f7ff fe0b 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:887

3:  @ + * +, - * -
    bl udm_star
 8000c9a:	f7ff fed8 	bl	8000a4e <Code_117>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:889
    @ ( LL L H HH )
    drop
 8000c9e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:890
    ldmia psp!, {r0}
 8000ca0:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:891
    str r0, [psp]
 8000ca2:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:893
    @ ( L H )
    pop {pc}
 8000ca4:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:896

1:@ + * ?
    bl dswap
 8000ca6:	f7ff fce2 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:897
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000caa:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:898
    beq 3b @ + * +
 8000cac:	d0f5      	beq.n	8000c9a <Code_165+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:900

    bl dnegate
 8000cae:	f7ff fdff 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:903

    @ - * + or + * -
2:  bl udm_star
 8000cb2:	f7ff fecc 	bl	8000a4e <Code_117>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:905
    @ ( LL L H HH )
    drop
 8000cb6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:906
    ldmia psp!, {r0}
 8000cb8:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:907
    str r0, [psp]
 8000cba:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:909
    @ ( L H )
    bl dnegate
 8000cbc:	f7ff fdf8 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:910
  pop {pc}
 8000cc0:	bd00      	pop	{pc}

08000cc2 <Dictionary_168>:
Dictionary_168():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:910
 8000cc2:	0d0e      	.short	0x0d0e
 8000cc4:	00440800 	.word	0x00440800
 8000cc8:	6602      	.short	0x6602
 8000cca:	2f          	.byte	0x2f
	...

08000ccc <Code_168>:
Code_168():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:917
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_4, "f/"
  @ Signed divide for s31.32. Overflow possible. Sign wrong in this case.
@------------------------------------------------------------------------------
  @ Take care of sign ! ( 1L 1H 2L 2H - EL EH )
  push {lr}
 8000ccc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:918
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000cce:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:919
  beq 2f
 8000cd0:	d00e      	beq.n	8000cf0 <Code_168+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:921
  @ ? / -
    bl dnegate
 8000cd2:	f7ff fded 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:922
    bl dswap
 8000cd6:	f7ff fcca 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:923
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000cda:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:924
    beq 3f @ + / -
 8000cdc:	d00e      	beq.n	8000cfc <Code_168+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:927

    @ - / -
    bl dnegate
 8000cde:	f7ff fde7 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:928
1:  bl dswap @ - / - or + / +
 8000ce2:	f7ff fcc4 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:929
    bl uf_slash_mod
 8000ce6:	f7ff ff7c 	bl	8000be2 <uf_slash_mod>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:930
    bl dnip
 8000cea:	f7ff fce3 	bl	80006b4 <Code_74>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:931
    pop {pc}
 8000cee:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:934

2:@ ? / +
  bl dswap
 8000cf0:	f7ff fcbd 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:935
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
 8000cf4:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:936
  beq 1b @ + / +
 8000cf6:	d0f4      	beq.n	8000ce2 <Code_168+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:939

  @ - / +
  bl dnegate
 8000cf8:	f7ff fdda 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:940
3:bl dswap @ - / + or + / -
 8000cfc:	f7ff fcb7 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:941
  bl uf_slash_mod
 8000d00:	f7ff ff6f 	bl	8000be2 <uf_slash_mod>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:942
  bl dnegate
 8000d04:	f7ff fdd4 	bl	80008b0 <Code_101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:943
  bl dnip
 8000d08:	f7ff fcd4 	bl	80006b4 <Code_74>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:944
  pop {pc}
 8000d0c:	bd00      	pop	{pc}

08000d0e <Dictionary_169>:
Dictionary_169():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:944
 8000d0e:	0d56      	.short	0x0d56
 8000d10:	02200800 	.word	0x02200800
 8000d14:	3202      	.short	0x3202
 8000d16:	21          	.byte	0x21
	...

08000d18 <Code_169>:
Code_169():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:954
@------------------------------------------------------------------------------

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2!" @ Store ( d addr -- )
@------------------------------------------------------------------------------
  ldmia psp!, {r1, r2}
 8000d18:	cf06      	ldmia	r7!, {r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:955
  str r1, [tos]
 8000d1a:	6031      	str	r1, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:956
  str r2, [tos, #4]
 8000d1c:	6072      	str	r2, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:957
  drop
 8000d1e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:958
  bx lr
 8000d20:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:960

    push {lr}
 8000d22:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:961
    bl expect_three_elements
 8000d24:	f7ff fbef 	bl	8000506 <expect_three_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:963

    ldr r1, [r0, #offset_state_tos]
 8000d28:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:964
    ldr r2, [r0, #offset_constant_tos]
 8000d2a:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:965
    push {r1, r2}
 8000d2c:	b406      	push	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:967

    bl allocator_4store @ High-Teil wegstauen.
 8000d2e:	f000 fe0c 	bl	800194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:970

    @ Das Schreiben sollte keinen der Register mit Ausnahme der Konstantenregister verändern.
    bl befreie_tos
 8000d32:	f7ff faca 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:971
    pop {r1, r2}
 8000d36:	bc06      	pop	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:972
    str r1, [r0, #offset_state_tos]
 8000d38:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:974

    cmp r1, #constant
 8000d3a:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:975
    beq 1f
 8000d3c:	d006      	beq.n	8000d4c <Code_169+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:977
      @ Tos ist im Register - dazu kann ich dann einfach einen anderen Opcode verwenden:
      pushdaconstw 0x6040 @ str r0, [r0, #4] Opcode
 8000d3e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000d42:	f246 0640 	movw	r6, #24640	; 0x6040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:978
      bl allocator_4store_anderer_opcode
 8000d46:	f000 fe04 	bl	8001952 <allocator_4store_anderer_opcode>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:979
      pop {pc}
 8000d4a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:982

1:  @ Tos ist eine Konstante ! Wie fein :-)
    adds r2, #4
 8000d4c:	3204      	adds	r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:983
    str r2, [r0, #offset_constant_tos]
 8000d4e:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:984
    bl allocator_4store
 8000d50:	f000 fdfb 	bl	800194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:985
    pop {pc}
 8000d54:	bd00      	pop	{pc}

08000d56 <Dictionary_173>:
Dictionary_173():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:985
 8000d56:	0da0      	.short	0x0da0
 8000d58:	02200800 	.word	0x02200800
 8000d5c:	3202      	.short	0x3202
 8000d5e:	40          	.byte	0x40
	...

08000d60 <Code_173>:
Code_173():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:990

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2@" @ Fetch ( addr -- d )
@------------------------------------------------------------------------------
  subs psp, #4
 8000d60:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:991
  ldr r0, [tos, #4]
 8000d62:	6870      	ldr	r0, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:992
  str r0, [psp]
 8000d64:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:993
  ldr tos, [tos]
 8000d66:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:994
  bx lr
 8000d68:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:996

    push {lr}
 8000d6a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:997
    bl dup_allocator
 8000d6c:	f000 f8c8 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:999

    ldr r1, [r0, #offset_state_tos]
 8000d70:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1000
    cmp r1, #constant
 8000d72:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1001
    beq 1f
 8000d74:	d00a      	beq.n	8000d8c <Code_173+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1004
      @ TOS ist ein Register.
      @ So wird es Zeit für einen Register, #4 Opcode !
      pushdaconstw 0x6840 @ ldr r0, [r0, #4] Opcode
 8000d76:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000d7a:	f646 0640 	movw	r6, #26688	; 0x6840
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1005
      bl allocator_4fetch_anderer_opcode
 8000d7e:	f000 fdc5 	bl	800190c <allocator_4fetch_anderer_opcode>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1007

      bl swap_allocator
 8000d82:	f000 f8f2 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1008
      bl allocator_4fetch
 8000d86:	f000 fdbd 	bl	8001904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1009
      pop {pc}
 8000d8a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1012

1:  @ TOS ist eine Konstante. Kann sie also wunderbar weiterverwenden ! Ergibt aber einzeln eine lange Aufräum-Sequenz, falls r6 nicht frei ist.
    ldr r1, [r0, #offset_constant_tos]
 8000d8c:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1013
    adds r1, #4
 8000d8e:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1014
    str r1, [r0, #offset_constant_tos]
 8000d90:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1015
    bl allocator_4fetch
 8000d92:	f000 fdb7 	bl	8001904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1017

    bl swap_allocator
 8000d96:	f000 f8e8 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1018
    bl allocator_4fetch
 8000d9a:	f000 fdb3 	bl	8001904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1019
    pop {pc}
 8000d9e:	bd00      	pop	{pc}

08000da0 <Dictionary_176>:
Dictionary_176():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1019
 8000da0:	08000db4 	.word	0x08000db4
 8000da4:	64030044 	.word	0x64030044
 8000da8:	3c75      	.short	0x3c75

08000daa <Code_176>:
Code_176():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1031
Wortbirne Flag_visible|Flag_foldable_4, "du<"
  @ ( 2L 2H 1L 1H -- Flag )
  @   r2 r1 r0 tos
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
 8000daa:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1032
  subs r2, r0    @  Low-part first
 8000dac:	1a12      	subs	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1033
  sbcs r1, tos   @ High-part with carry
 8000dae:	41b1      	sbcs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1035

  sbcs tos, tos  @ Create carry flag on TOS
 8000db0:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1036
  bx lr
 8000db2:	4770      	bx	lr

08000db4 <Dictionary_177>:
Dictionary_177():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1036
 8000db4:	08000dc8 	.word	0x08000dc8
 8000db8:	64030044 	.word	0x64030044
 8000dbc:	3e75      	.short	0x3e75

08000dbe <Code_177>:
Code_177():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1042

@------------------------------------------------------------------------------
Wortbirne Flag_visible|Flag_foldable_4, "du>"  @ Just swapped the order of registers
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
 8000dbe:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1043
  subs r0, r2    @  Low-part first
 8000dc0:	1a80      	subs	r0, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1044
  sbcs tos, r1   @ High-part with carry
 8000dc2:	418e      	sbcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1046

  sbcs tos, tos  @ Create carry flag on TOS
 8000dc4:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1047
  bx lr
 8000dc6:	4770      	bx	lr

08000dc8 <Dictionary_178>:
Dictionary_178():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1047
 8000dc8:	08000dde 	.word	0x08000dde
 8000dcc:	64020044 	.word	0x64020044
 8000dd0:	3c          	.byte	0x3c
	...

08000dd2 <Code_178>:
Code_178():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1054

@------------------------------------------------------------------------------
Wortbirne Flag_visible|Flag_foldable_4, "d<"
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
 8000dd2:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1055
  subs r2, r0    @  Low-part first
 8000dd4:	1a12      	subs	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1056
  sbcs r1, tos   @ High-part with carry
 8000dd6:	41b1      	sbcs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1058

  blt 1f
 8000dd8:	db0c      	blt.n	8000df4 <Code_179+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1059
  movs tos, #0
 8000dda:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1060
  bx lr
 8000ddc:	4770      	bx	lr

08000dde <Dictionary_179>:
Dictionary_179():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1060
 8000dde:	0dfa      	.short	0x0dfa
 8000de0:	00440800 	.word	0x00440800
 8000de4:	6402      	.short	0x6402
 8000de6:	3e          	.byte	0x3e
	...

08000de8 <Code_179>:
Code_179():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1066

@------------------------------------------------------------------------------
Wortbirne Flag_visible|Flag_foldable_4, "d>"  @ Just swapped the order of registers
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
 8000de8:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1067
  subs r0, r2    @  Low-part first
 8000dea:	1a80      	subs	r0, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1068
  sbcs tos, r1   @ High-part with carry
 8000dec:	418e      	sbcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1070

  blt 1f
 8000dee:	db01      	blt.n	8000df4 <Code_179+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1071
  movs tos, #0
 8000df0:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1072
  bx lr
 8000df2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1074

1:movs tos, #0   @ True
 8000df4:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1075
  mvns tos, tos
 8000df6:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1076
  bx lr
 8000df8:	4770      	bx	lr

08000dfa <Dictionary_180>:
Dictionary_180():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1076
 8000dfa:	0e16      	.short	0x0e16
 8000dfc:	02620800 	.word	0x02620800
 8000e00:	3c306403 	.word	0x3c306403

08000e04 <Code_180>:
Code_180():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1081

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "d0<" @ ( 1L 1H -- Flag ) Is double number negative ?
@------------------------------------------------------------------------------
  adds psp, #4
 8000e04:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1082
  movs TOS, TOS, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
 8000e06:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1083
  bx lr
 8000e08:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1085

    push {lr}
 8000e0a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1086
    bl nip_allocator
 8000e0c:	f000 f8c0 	bl	8000f90 <nip_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1087
    bl alloc_nullkleiner
 8000e10:	f000 fb58 	bl	80014c4 <alloc_nullkleiner>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1088
    pop {pc}
 8000e14:	bd00      	pop	{pc}

08000e16 <Dictionary_181>:
Dictionary_181():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1088
 8000e16:	0e3e      	.short	0x0e3e
 8000e18:	02620800 	.word	0x02620800
 8000e1c:	3d306403 	.word	0x3d306403

08000e20 <Code_181>:
Code_181():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1093

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "d0=" @ ( 1L 1H -- Flag )
@------------------------------------------------------------------------------
  ldm psp!, {r0}
 8000e20:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1094
  orrs tos, r0
 8000e22:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1095
  subs tos, #1
 8000e24:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1096
  sbcs tos, tos
 8000e26:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1097
  bx lr
 8000e28:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1099

    push {lr}
 8000e2a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1100
    pushdaconstw 0x4300 @ orrs r0, r0      Opcode
 8000e2c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000e30:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1101
    bl alloc_kommutativ
 8000e34:	f000 fabd 	bl	80013b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1102
    bl allocator_equal_zero
 8000e38:	f000 fb1e 	bl	8001478 <allocator_equal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1103
    pop {pc}
 8000e3c:	bd00      	pop	{pc}

08000e3e <Dictionary_184>:
Dictionary_184():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1103
 8000e3e:	0e64      	.short	0x0e64
 8000e40:	02440800 	.word	0x02440800
 8000e44:	3e3c6403 	.word	0x3e3c6403

08000e48 <Code_184>:
Code_184():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1108

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_4|Flag_allocator, "d<>" @ ( 1L 1H 2L 2H -- Flag )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
 8000e48:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1110

  eors r0, r2
 8000e4a:	4050      	eors	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1111
  eors tos, r1
 8000e4c:	404e      	eors	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1112
  orrs tos, r0
 8000e4e:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1114

  subs tos, #1
 8000e50:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1115
  sbcs tos, tos
 8000e52:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1116
  mvns tos, tos
 8000e54:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1118

  bx lr
 8000e56:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1120

    push {lr}
 8000e58:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1121
    bl dgleichungleich_common
 8000e5a:	f000 f815 	bl	8000e88 <dgleichungleich_common>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1122
    bl allocator_unequal_zero
 8000e5e:	f000 fb1f 	bl	80014a0 <allocator_unequal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1123
    pop {pc}
 8000e62:	bd00      	pop	{pc}

08000e64 <Dictionary_185>:
Dictionary_185():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1123
 8000e64:	08000eac 	.word	0x08000eac
 8000e68:	64020244 	.word	0x64020244
 8000e6c:	3d          	.byte	0x3d
	...

08000e6e <Code_185>:
Code_185():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1128

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_4|Flag_allocator, "d=" @ ( 1L 1H 2L 2H -- Flag )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
 8000e6e:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1130

  eors r0, r2
 8000e70:	4050      	eors	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1131
  eors tos, r1
 8000e72:	404e      	eors	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1132
  orrs tos, r0
 8000e74:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1134

  subs tos, #1
 8000e76:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1135
  sbcs tos, tos
 8000e78:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1137

  bx lr
 8000e7a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1139

    push {lr}
 8000e7c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1140
    bl dgleichungleich_common
 8000e7e:	f000 f803 	bl	8000e88 <dgleichungleich_common>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1141
    bl allocator_equal_zero
 8000e82:	f000 faf9 	bl	8001478 <allocator_equal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1142
    pop {pc}
 8000e86:	bd00      	pop	{pc}

08000e88 <dgleichungleich_common>:
dgleichungleich_common():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1145

dgleichungleich_common:
  push {lr}
 8000e88:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1146
  bl expect_four_elements @ ( 1L 1H 2L 2H )
 8000e8a:	f7ff fb4c 	bl	8000526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1147
  bl rot_allocator        @ ( 1L 2L 2H 1H )
 8000e8e:	f000 f8c1 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1148
  bl xor_allocator        @ ( 1L 2L H )
 8000e92:	f000 f9c3 	bl	800121c <xor_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1149
  bl minusrot_allocator   @ ( H 1L 2L )
 8000e96:	f000 f8d9 	bl	800104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1150
  bl xor_allocator        @ ( L H )
 8000e9a:	f000 f9bf 	bl	800121c <xor_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1151
  bl or_allocator         @ ( ? )
 8000e9e:	f000 f9b0 	bl	8001202 <or_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:1152
  pop {pc}
 8000ea2:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:432
    ldr tos, =0xFBA00000
 8000ea4:	fba00000 	.word	0xfba00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:502
    ldr tos, =0xFB800000
 8000ea8:	fb800000 	.word	0xfb800000

08000eac <Dictionary_186>:
Dictionary_186():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/double.s:502
 8000eac:	08000ebe 	.word	0x08000ebe
 8000eb0:	73030020 	.word	0x73030020
 8000eb4:	4070      	.short	0x4070

08000eb6 <Code_186>:
Code_186():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:27
@ Stack pointers

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "sp@" @ ( -- a-addr )
@ -----------------------------------------------------------------------------
  pushdatos
 8000eb6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:28
  movs tos, psp
 8000eba:	003e      	movs	r6, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:29
  bx lr
 8000ebc:	4770      	bx	lr

08000ebe <Dictionary_188>:
Dictionary_188():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:29
 8000ebe:	0ece      	.short	0x0ece
 8000ec0:	00200800 	.word	0x00200800
 8000ec4:	21707303 	.word	0x21707303

08000ec8 <Code_188>:
Code_188():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:34

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "sp!" @ ( a-addr -- )
@ -----------------------------------------------------------------------------
  movs psp, tos
 8000ec8:	0037      	movs	r7, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:35
  ldm psp!, {tos}
 8000eca:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:36
  bx lr
 8000ecc:	4770      	bx	lr

08000ece <Dictionary_189>:
Dictionary_189():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:36
 8000ece:	0ee0      	.short	0x0ee0
 8000ed0:	00200800 	.word	0x00200800
 8000ed4:	40707203 	.word	0x40707203

08000ed8 <Code_189>:
Code_189():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:41

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "rp@" @ ( -- a-addr )
@ -----------------------------------------------------------------------------
  pushdatos
 8000ed8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:42
  mov tos, sp
 8000edc:	466e      	mov	r6, sp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:43
  bx lr
 8000ede:	4770      	bx	lr

08000ee0 <Dictionary_191>:
Dictionary_191():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:43
 8000ee0:	08000ef0 	.word	0x08000ef0
 8000ee4:	72030020 	.word	0x72030020
 8000ee8:	2170      	.short	0x2170

08000eea <Code_191>:
Code_191():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:48

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "rp!" @ ( a-addr -- )
@ -----------------------------------------------------------------------------
  mov sp, tos
 8000eea:	46b5      	mov	sp, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:49
  ldm psp!, {tos}
 8000eec:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:50
  bx lr
 8000eee:	4770      	bx	lr

08000ef0 <Dictionary_192>:
Dictionary_192():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:50
 8000ef0:	08000f14 	.word	0x08000f14
 8000ef4:	64030261 	.word	0x64030261
 8000ef8:	7075      	.short	0x7075

08000efa <Code_192>:
Code_192():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:57
@ Stack juggling

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "dup" @ ( x -- x x )
@ -----------------------------------------------------------------------------
  dup
 8000efa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:58
  bx lr
 8000efe:	4770      	bx	lr

08000f00 <dup_allocator>:
dup_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:61

dup_allocator:
    push {r1, r2, lr} @ Spezialeinsprung des Registerallokators:
 8000f00:	b506      	push	{r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:62
    bl expect_one_element  @ Mindestens ein Wert vorhanden
 8000f02:	f7ff fae9 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:64

    ldr r1, [r0, #offset_state_tos]
 8000f06:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:65
    ldr r2, [r0, #offset_constant_tos]
 8000f08:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:67

    bl befreie_tos
 8000f0a:	f7ff f9de 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:69

    str r1, [r0, #offset_state_tos]
 8000f0e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:70
    str r2, [r0, #offset_constant_tos]
 8000f10:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:72

    pop {r1, r2, pc}
 8000f12:	bd06      	pop	{r1, r2, pc}

08000f14 <Dictionary_195>:
Dictionary_195():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:72
 8000f14:	08000f40 	.word	0x08000f40
 8000f18:	64040261 	.word	0x64040261
 8000f1c:	6f72      	.short	0x6f72
 8000f1e:	70          	.byte	0x70
	...

08000f20 <Code_195>:
drop_einsprung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:78

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "drop" @ ( x -- )
drop_einsprung:
@ -----------------------------------------------------------------------------
  drop
 8000f20:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:79
  bx lr
 8000f22:	4770      	bx	lr

08000f24 <drop_allocator>:
drop_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:82

drop_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
 8000f24:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:87
    @ Falten geht von selbst vorher.
    @ Wenn kein Element da ist, generiere den regulären drop-Opcode:
    @ Wenn ein Element da ist, vernichte es und lasse nachrutschen.

    ldr r1, [r0, #offset_state_tos]
 8000f26:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:88
    cmp r1, #unknown
 8000f28:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:89
    bne 2f
 8000f2a:	d106      	bne.n	8000f3a <drop_allocator+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:91

      pushdaconstw 0x3704 @ adds r7, #4 - Momentan ist TOS auf dem Stack, kann direkt runterwerfen
 8000f2c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000f30:	f243 7604 	movw	r6, #14084	; 0x3704
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:92
      bl hkomma
 8000f34:	f002 fcc0 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:93
      pop {pc}
 8000f38:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:96

2: @ Es ist ein Element da, das muss ich beachten.
   bl eliminiere_tos
 8000f3a:	f7ff f9d0 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:97
   pop {pc}
 8000f3e:	bd00      	pop	{pc}

08000f40 <Dictionary_199>:
Dictionary_199():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:97
 8000f40:	08000f56 	.word	0x08000f56
 8000f44:	3f040061 	.word	0x3f040061
 8000f48:	7564      	.short	0x7564
 8000f4a:	70          	.byte	0x70
	...

08000f4c <Code_199>:
Code_199():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:102

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline, "?dup" @ ( x -- 0 | x x )
@ -----------------------------------------------------------------------------
  cmp tos, #0
 8000f4c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:103
  beq 1f
 8000f4e:	d001      	beq.n	8000f54 <Code_199+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:104
  pushdatos
 8000f50:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:105
1:bx lr
 8000f54:	4770      	bx	lr

08000f56 <Dictionary_201>:
Dictionary_201():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:105
 8000f56:	0f82      	.short	0x0f82
 8000f58:	02620800 	.word	0x02620800
 8000f5c:	61777304 	.word	0x61777304
 8000f60:	70          	.byte	0x70
	...

08000f62 <Code_201>:
Code_201():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:110

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "swap" @ ( x y -- y x )
@ -----------------------------------------------------------------------------
  ldr r1,  [psp]  @ Load X from the stack, no SP change.
 8000f62:	6839      	ldr	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:111
  str tos, [psp]  @ Replace it with TOS.
 8000f64:	603e      	str	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:112
  movs tos, r1    @ And vice versa.
 8000f66:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:113
  bx lr
 8000f68:	4770      	bx	lr

08000f6a <swap_allocator>:
swap_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:116

swap_allocator:
    push {r2, r3, lr} @ Spezialeinsprung des Registerallokators:
 8000f6a:	b50c      	push	{r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:118

    bl expect_two_elements
 8000f6c:	f7ff fabe 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:121

    @ TOS und NOS vertauschen.
    ldr r2, [r0, #offset_state_tos]
 8000f70:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:122
    ldr r3, [r0, #offset_state_nos]
 8000f72:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:123
    str r3, [r0, #offset_state_tos]
 8000f74:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:124
    str r2, [r0, #offset_state_nos]
 8000f76:	6082      	str	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:126

    ldr r2, [r0, #offset_constant_tos]
 8000f78:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:127
    ldr r3, [r0, #offset_constant_nos]
 8000f7a:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:128
    str r3, [r0, #offset_constant_tos]
 8000f7c:	6043      	str	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:129
    str r2, [r0, #offset_constant_nos]
 8000f7e:	60c2      	str	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:131

    pop {r2, r3, pc}
 8000f80:	bd0c      	pop	{r2, r3, pc}

08000f82 <Dictionary_202>:
Dictionary_202():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:131
 8000f82:	0fb0      	.short	0x0fb0
 8000f84:	02620800 	.word	0x02620800
 8000f88:	70696e03 	.word	0x70696e03

08000f8c <Code_202>:
Code_202():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:136

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "nip" @ ( x y -- x )
@ -----------------------------------------------------------------------------
  nip
 8000f8c:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:137
  bx lr
 8000f8e:	4770      	bx	lr

08000f90 <nip_allocator>:
nip_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:140

nip_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
 8000f90:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:150
    @ 1 Konstante --> TOS weg
    @ Wenn kein Element  da ist, muss ich eins holen und eins löschen.
    @ Wenn  ein Element  da ist, verändere den Stackpointer
    @ Wenn zwei Elemente in Registern sind, vernichte NOS.

    bl expect_one_element @ TOS auf jeden Fall belegen.
 8000f92:	f7ff faa1 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:152

    ldr r1, [r0, #offset_state_nos]
 8000f96:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:153
    cmp r1, #unknown
 8000f98:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:154
    beq 1f
 8000f9a:	d002      	beq.n	8000fa2 <nip_allocator+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:156
      @ NOS ist belegt - kann das Element direkt eliminieren
      bl eliminiere_nos
 8000f9c:	f7ff f9a5 	bl	80002ea <eliminiere_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:157
      pop {pc}
 8000fa0:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:161

1:  @ NOS nicht belegt - lösche einfach das nächste Stackelement, ohne es zu laden
    @ Vernichte also das obere Element auf dem Stack im Speicher, welches dann NOS darstellt.
    pushdaconstw 0x3704 @ adds r7, #4 - Momentan ist NOS auf dem Stack, kann direkt runterwerfen
 8000fa2:	f847 6d04 	str.w	r6, [r7, #-4]!
 8000fa6:	f243 7604 	movw	r6, #14084	; 0x3704
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:162
    bl hkomma
 8000faa:	f002 fc85 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:163
    pop {pc}
 8000fae:	bd00      	pop	{pc}

08000fb0 <Dictionary_206>:
Dictionary_206():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:163
 8000fb0:	08000fd8 	.word	0x08000fd8
 8000fb4:	6f040262 	.word	0x6f040262
 8000fb8:	6576      	.short	0x6576
 8000fba:	72          	.byte	0x72
	...

08000fbc <Code_206>:
Code_206():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:168

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "over" @ ( x y -- x y x )
@ -----------------------------------------------------------------------------
  pushdatos
 8000fbc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:169
  ldr tos, [psp, #4]
 8000fc0:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:170
  bx lr
 8000fc2:	4770      	bx	lr

08000fc4 <over_allocator>:
over_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:173

over_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
 8000fc4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:175

    bl expect_two_elements
 8000fc6:	f7ff fa91 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:177

    ldr r1, [r0, #offset_state_nos]
 8000fca:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:178
    ldr r2, [r0, #offset_constant_nos]
 8000fcc:	68c2      	ldr	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:180

    bl befreie_tos
 8000fce:	f7ff f97c 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:182

    str r1, [r0, #offset_state_tos]
 8000fd2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:183
    str r2, [r0, #offset_constant_tos]
 8000fd4:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:185

    pop {pc}
 8000fd6:	bd00      	pop	{pc}

08000fd8 <Dictionary_208>:
Dictionary_208():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:185
 8000fd8:	08000ffe 	.word	0x08000ffe
 8000fdc:	74040262 	.word	0x74040262
 8000fe0:	6375      	.short	0x6375
 8000fe2:	6b          	.byte	0x6b
	...

08000fe4 <Code_208>:
Code_208():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:192

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "tuck" @ ( x1 x2 -- x2 x1 x2 )
@ -----------------------------------------------------------------------------
tuck:
  ldm psp!, {r0}
 8000fe4:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:193
  subs psp, #8
 8000fe6:	3f08      	subs	r7, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:194
  str tos, [psp, #4]
 8000fe8:	607e      	str	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:195
  str r0, [psp]
 8000fea:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:196
  bx lr
 8000fec:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:198

    push {lr} @ Spezialeinsprung des Registerallokators:
 8000fee:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:199
    bl expect_two_elements
 8000ff0:	f7ff fa7c 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:200
    bl dup_allocator
 8000ff4:	f7ff ff84 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:201
    bl minusrot_allocator
 8000ff8:	f000 f828 	bl	800104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:202
    pop {pc}
 8000ffc:	bd00      	pop	{pc}

08000ffe <Dictionary_209>:
Dictionary_209():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:202
 8000ffe:	1034      	.short	0x1034
 8001000:	02630800 	.word	0x02630800
 8001004:	746f7203 	.word	0x746f7203

08001008 <Code_209>:
Code_209():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:208

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_3|Flag_inline|Flag_allocator, "rot" @ ( x w y -- w y x )
@ -----------------------------------------------------------------------------
rot:
  ldm psp!, {r0, r1}
 8001008:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:209
  subs psp, #8
 800100a:	3f08      	subs	r7, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:210
  str r0, [psp, #4]
 800100c:	6078      	str	r0, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:211
  str tos, [psp]
 800100e:	603e      	str	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:212
  movs tos, r1
 8001010:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:213
  bx lr
 8001012:	4770      	bx	lr

08001014 <rot_allocator>:
rot_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:216

rot_allocator:
    push {r1, r2, r3, lr} @ Spezialeinsprung des Registerallokators:
 8001014:	b50e      	push	{r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:217
    bl expect_three_elements
 8001016:	f7ff fa76 	bl	8000506 <expect_three_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:224

    @ TOS --> NOS
    @ NOS --> 3OS
    @ 3OS --> TOS

    ldr r1, [r0, #offset_state_tos]
 800101a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:225
    ldr r2, [r0, #offset_state_nos]
 800101c:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:226
    ldr r3, [r0, #offset_state_3os]
 800101e:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:228

    str r1, [r0, #offset_state_nos]
 8001020:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:229
    str r2, [r0, #offset_state_3os]
 8001022:	6102      	str	r2, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:230
    str r3, [r0, #offset_state_tos]
 8001024:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:232

    ldr r1, [r0, #offset_constant_tos]
 8001026:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:233
    ldr r2, [r0, #offset_constant_nos]
 8001028:	68c2      	ldr	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:234
    ldr r3, [r0, #offset_constant_3os]
 800102a:	6943      	ldr	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:236

    str r1, [r0, #offset_constant_nos]
 800102c:	60c1      	str	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:237
    str r2, [r0, #offset_constant_3os]
 800102e:	6142      	str	r2, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:238
    str r3, [r0, #offset_constant_tos]
 8001030:	6043      	str	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:239
    pop {r1, r2, r3, pc}
 8001032:	bd0e      	pop	{r1, r2, r3, pc}

08001034 <Dictionary_210>:
Dictionary_210():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:239
 8001034:	08001058 	.word	0x08001058
 8001038:	2d040263 	.word	0x2d040263
 800103c:	6f72      	.short	0x6f72
 800103e:	74          	.byte	0x74
	...

08001040 <Code_210>:
Code_210():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:245

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_3|Flag_inline|Flag_allocator, "-rot" @ ( x w y -- y x w )
@ -----------------------------------------------------------------------------
minusrot:
  ldm psp!, {r0, r1}
 8001040:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:246
  subs psp, #8
 8001042:	3f08      	subs	r7, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:247
  str tos, [psp, #4]
 8001044:	607e      	str	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:248
  str r1, [psp]
 8001046:	6039      	str	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:249
  movs tos, r0
 8001048:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:250
  bx lr
 800104a:	4770      	bx	lr

0800104c <minusrot_allocator>:
minusrot_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:253

minusrot_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
 800104c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:254
    bl rot_allocator  @ -rot = rot rot
 800104e:	f7ff ffe1 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:255
    bl rot_allocator
 8001052:	f7ff ffdf 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:256
    pop {pc}
 8001056:	bd00      	pop	{pc}

08001058 <Dictionary_211>:
Dictionary_211():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:256
 8001058:	0800106a 	.word	0x0800106a
 800105c:	70040020 	.word	0x70040020
 8001060:	6369      	.short	0x6369
 8001062:	6b          	.byte	0x6b
	...

08001064 <Code_211>:
Code_211():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:266
  .ifdef m0core
  lsls r0, tos, #2
  ldr tos, [psp, r0]
  bx lr
  .else
  ldr tos, [psp, tos, lsl #2]  @ I love ARM. :-)
 8001064:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:267
  bx lr
 8001068:	4770      	bx	lr

0800106a <Dictionary_212>:
Dictionary_212():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:267
 800106a:	1082      	.short	0x1082
 800106c:	00000800 	.word	0x00000800
 8001070:	70656405 	.word	0x70656405
 8001074:	6874      	.short	0x6874

08001076 <Code_212>:
Code_212():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:275
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "depth" @ ( -- Zahl der Elemente, die vorher auf den Datenstack waren )
                                  @ ( -- Number of elements that have been on datastack before )
@ -----------------------------------------------------------------------------
  @ Berechne den Stackfüllstand
  ldr r1, =datenstackanfang @ Anfang laden  Calculate stack fill gauge
 8001076:	494f      	ldr	r1, [pc, #316]	; (80011b4 <Code_231+0x1c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:276
  subs r1, psp @ und aktuellen Stackpointer abziehen
 8001078:	1bc9      	subs	r1, r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:277
  pushdatos
 800107a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:278
  asrs tos, r1, #2 @ Durch 4 teilen  Divide through 4 Bytes/element.
 800107e:	108e      	asrs	r6, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:279
  bx lr
 8001080:	4770      	bx	lr

08001082 <Dictionary_214>:
Dictionary_214():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:279
 8001082:	109e      	.short	0x109e
 8001084:	00000800 	.word	0x00000800
 8001088:	65647206 	.word	0x65647206
 800108c:	7470      	.short	0x7470
 800108e:	68          	.byte	0x68
	...

08001090 <Code_214>:
Code_214():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:284

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "rdepth"
@ -----------------------------------------------------------------------------
  pushdatos
 8001090:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:285
  mov tos, sp
 8001094:	466e      	mov	r6, sp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:286
  ldr r1, =returnstackanfang @ Anfang laden  Calculate stack fill gauge
 8001096:	4948      	ldr	r1, [pc, #288]	; (80011b8 <Code_231+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:287
  subs r1, tos @ und aktuellen Stackpointer abziehen
 8001098:	1b89      	subs	r1, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:288
  asrs tos, r1, #2 @ Durch 4 teilen  Divide through 4 Bytes/element.
 800109a:	108e      	asrs	r6, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:289
  bx lr
 800109c:	4770      	bx	lr

0800109e <Dictionary_216>:
Dictionary_216():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:289
 800109e:	10d4      	.short	0x10d4
 80010a0:	02200800 	.word	0x02200800
 80010a4:	3e02      	.short	0x3e02
 80010a6:	72          	.byte	0x72
	...

080010a8 <Code_216>:
Code_216():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:296
@ Returnstack

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, ">r" @ Legt das oberste Element des Datenstacks auf den Returnstack.
@------------------------------------------------------------------------------
  push {tos}
 80010a8:	b440      	push	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:297
  ldm psp!, {tos}
 80010aa:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:298
  bx lr
 80010ac:	4770      	bx	lr

080010ae <allocator_to_r>:
allocator_to_r():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:301

allocator_to_r:
    push {lr}
 80010ae:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:302
    bl push_lr_nachholen
 80010b0:	f7ff faa5 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:303
    bl expect_one_element
 80010b4:	f7ff fa10 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:304
    bl expect_tos_in_register @ Gibt den Register in r1 zurück.
 80010b8:	f7ff fa4a 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:306

    pushdaconstw 0xB400 @ push {...}
 80010bc:	f847 6d04 	str.w	r6, [r7, #-4]!
 80010c0:	f24b 4600 	movw	r6, #46080	; 0xb400
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:308

    movs r2, #1
 80010c4:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:309
    lsls r2, r1
 80010c6:	408a      	lsls	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:310
    orrs tos, r2
 80010c8:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:312

    bl hkomma
 80010ca:	f002 fbf5 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:313
    bl eliminiere_tos
 80010ce:	f7ff f906 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:314
    pop {pc}
 80010d2:	bd00      	pop	{pc}

080010d4 <Dictionary_219>:
Dictionary_219():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:314
 80010d4:	0800110a 	.word	0x0800110a
 80010d8:	72020220 	.word	0x72020220
 80010dc:	3e          	.byte	0x3e
	...

080010de <Code_219>:
Code_219():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:319

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "r>" @ Holt das zwischengespeicherte Element aus dem Returnstack zurück
@------------------------------------------------------------------------------
  pushdatos
 80010de:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:320
  pop {tos}
 80010e2:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:321
  bx lr
 80010e4:	4770      	bx	lr

080010e6 <allocator_r_from>:
allocator_r_from():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:324

allocator_r_from:
    push {lr}
 80010e6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:325
    bl push_lr_nachholen
 80010e8:	f7ff fa89 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:326
    bl befreie_tos
 80010ec:	f7ff f8ed 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:327
    bl get_free_register
 80010f0:	f7ff f9be 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:328
    str r3, [r0, #offset_state_tos]
 80010f4:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:330

    pushdaconstw 0xBC00 @ pop {...}
 80010f6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80010fa:	f64b 4600 	movw	r6, #48128	; 0xbc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:332

    movs r2, #1
 80010fe:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:333
    lsls r2, r3
 8001100:	409a      	lsls	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:334
    orrs tos, r2
 8001102:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:336

    bl hkomma
 8001104:	f002 fbd8 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:337
    pop {pc}
 8001108:	bd00      	pop	{pc}

0800110a <Dictionary_223>:
Dictionary_223():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:337
 800110a:	1128      	.short	0x1128
 800110c:	02200800 	.word	0x02200800
 8001110:	7202      	.short	0x7202
 8001112:	40          	.byte	0x40
	...

08001114 <Code_223>:
Code_223():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:342

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "r@" @ Kopiert das oberste Element des Returnstacks auf den Datenstack
@------------------------------------------------------------------------------
  pushdatos
 8001114:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:343
  ldr tos, [sp]
 8001118:	9e00      	ldr	r6, [sp, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:344
  bx lr
 800111a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:345
    push {lr}
 800111c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:346
    bl push_lr_nachholen
 800111e:	f7ff fa6e 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:347
    bl rfetch_allocator
 8001122:	f003 f8fc 	bl	800431e <rfetch_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:348
    pop {pc}
 8001126:	bd00      	pop	{pc}

08001128 <Dictionary_225>:
Dictionary_225():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:348
 8001128:	0800114c 	.word	0x0800114c
 800112c:	72050220 	.word	0x72050220
 8001130:	706f7264 	.word	0x706f7264

08001134 <Code_225>:
Code_225():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:353

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "rdrop" @ Entfernt das oberste Element des Returnstacks
@------------------------------------------------------------------------------
  add sp, #4
 8001134:	b001      	add	sp, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:354
  bx lr
 8001136:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:355
    push {lr}
 8001138:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:356
    bl push_lr_nachholen
 800113a:	f7ff fa60 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:357
    pushdaconstw 0xB001  @ Opcode add sp, #4
 800113e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001142:	f24b 0601 	movw	r6, #45057	; 0xb001
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:358
    bl hkomma
 8001146:	f002 fbb7 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:359
    pop {pc}
 800114a:	bd00      	pop	{pc}

0800114c <Dictionary_228>:
Dictionary_228():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:359
 800114c:	08001160 	.word	0x08001160
 8001150:	72050020 	.word	0x72050020
 8001154:	6b636970 	.word	0x6b636970

08001158 <Code_228>:
Code_228():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:364

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_inline, "rpick" @ ( u -- xu R: xu .. x1 x0 -- xu ... x1 x0 )
@ -----------------------------------------------------------------------------
  lsls tos, #2
 8001158:	00b6      	lsls	r6, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:365
  add tos, sp
 800115a:	446e      	add	r6, sp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:366
  ldr tos, [tos]
 800115c:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:367
  bx lr
 800115e:	4770      	bx	lr

08001160 <Dictionary_229>:
Dictionary_229():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:367
 8001160:	0800118c 	.word	0x0800118c
 8001164:	72040000 	.word	0x72040000
 8001168:	6c6f      	.short	0x6c6f
 800116a:	6c          	.byte	0x6c
	...

0800116c <Code_229>:
roll():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:376
roll:
@ -----------------------------------------------------------------------------
  @ 2 ROLL is equivalent to ROT, 1 ROLL is equivalent to SWAP and 0 ROLL is a null operation.
  @ TOS enthält das Element, welches am Ende nach oben rutschen soll.

  cmp tos, #0 @ No moves ?
 800116c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:377
  bne 1f
 800116e:	d101      	bne.n	8001174 <Code_229+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:378
    drop
 8001170:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:379
    bx lr
 8001172:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:381

1:lsls r0, tos, #2
 8001174:	00b0      	lsls	r0, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:382
  ldr r1, [psp, r0] @ Pick final TOS value temporarily into r1
 8001176:	5839      	ldr	r1, [r7, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:403

  @ Lückenadresse = psp + r0

  @ Lege von psp + r0 - 4 an die Stelle psp + r0.

    adds r0, psp
 8001178:	19c0      	adds	r0, r0, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:405

2:  subs r3, r0, #4   @ Dies hier noch ein bisschen verschönern ! Funktioniert aber schonmal.
 800117a:	1f03      	subs	r3, r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:406
    ldr r2, [r3]
 800117c:	681a      	ldr	r2, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:407
    str r2, [r0]
 800117e:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:408
    subs r0, #4
 8001180:	3804      	subs	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:410

    subs tos, #1
 8001182:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:411
    bne 2b
 8001184:	d1f9      	bne.n	800117a <Code_229+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:413

  adds psp, #4 @ Element entfernen
 8001186:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:416

3:@ Finished shifting of stack. Load result into TOS.
  movs tos, r1
 8001188:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:417
  bx lr
 800118a:	4770      	bx	lr

0800118c <Dictionary_231>:
Dictionary_231():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:417
 800118c:	080011bc 	.word	0x080011bc
 8001190:	2d050000 	.word	0x2d050000
 8001194:	6c6c6f72 	.word	0x6c6c6f72

08001198 <Code_231>:
minusroll():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:426
minusroll: @ Kehrt die Wirkung von roll um.
@ -----------------------------------------------------------------------------
  @ 2 ROLL is equivalent to ROT, 1 ROLL is equivalent to SWAP and 0 ROLL is a null operation.
  @ TOS enthält das Element, welches am Ende nach oben rutschen soll.

  cmp tos, #0 @ No moves ?
 8001198:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:427
  bne 1f
 800119a:	d101      	bne.n	80011a0 <Code_231+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:428
    drop
 800119c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:429
    bx lr
 800119e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:434


1:@ TOS contains number of moves.

  ldr r0, [psp] @ Das jetztige NOS soll später in die Lücke hinein, wird aber überschrieben.
 80011a0:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:441
  @ (  5  4  3  2  1  X   TOS: 4)
  @ (  5  4  4  3  2  1 )
  @ (  5  X  4  3  2  1 )

  @ Beginne direkt beim Stackpointer:
  mov r1, psp
 80011a2:	4639      	mov	r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:444

2:@ Mache nun die gewünschte Zahl von Schüben:
  ldr r2, [r1, #4]
 80011a4:	684a      	ldr	r2, [r1, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:445
  str r2, [r1]
 80011a6:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:446
  adds r1, #4
 80011a8:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:447
  subs tos, #1
 80011aa:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:448
  bne 2b
 80011ac:	d1fa      	bne.n	80011a4 <Code_231+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:451

  @ Lege das NOS-Element in die Lücke
  str r0, [r1]
 80011ae:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:454

  @ Vergiss den Zähler in TOS
  drop
 80011b0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:455
  bx lr
 80011b2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:275
  ldr r1, =datenstackanfang @ Anfang laden  Calculate stack fill gauge
 80011b4:	24000288 	.word	0x24000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:286
  ldr r1, =returnstackanfang @ Anfang laden  Calculate stack fill gauge
 80011b8:	24000388 	.word	0x24000388

080011bc <Dictionary_234>:
Dictionary_234():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/stackjugglers.s:286
 80011bc:	080011d6 	.word	0x080011d6
 80011c0:	61030262 	.word	0x61030262
 80011c4:	646e      	.short	0x646e

080011c6 <Code_234>:
Code_234():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:26

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "and" @ ( x1 x2 -- x1&x2 )
                        @ Combines the top two stack elements using bitwise AND.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80011c6:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:27
  ands tos, r0
 80011c8:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:28
  bx lr
 80011ca:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:30

  pushdaconstw 0x4000 @ ands r0, r0
 80011cc:	f847 6d04 	str.w	r6, [r7, #-4]!
 80011d0:	f244 0600 	movw	r6, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:31
  b.n alloc_kommutativ
 80011d4:	e0ed      	b.n	80013b2 <alloc_kommutativ>

080011d6 <Dictionary_237>:
Dictionary_237():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:31
 80011d6:	11f2      	.short	0x11f2
 80011d8:	02620800 	.word	0x02620800
 80011dc:	63696203 	.word	0x63696203

080011e0 <Code_237>:
Code_237():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:36

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "bic" @ ( x1 x2 -- x1&~x2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80011e0:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:37
  bics r0, tos
 80011e2:	43b0      	bics	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:38
  movs tos, r0
 80011e4:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:39
  bx lr
 80011e6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:41

  pushdaconstw 0x4380 @ bics r0, r0
 80011e8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80011ec:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:42
  b.n alloc_unkommutativ
 80011f0:	e0db      	b.n	80013aa <alloc_unkommutativ>

080011f2 <Dictionary_240>:
Dictionary_240():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:42
 80011f2:	120c      	.short	0x120c
 80011f4:	02620800 	.word	0x02620800
 80011f8:	6f02      	.short	0x6f02
 80011fa:	72          	.byte	0x72
	...

080011fc <Code_240>:
Code_240():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:48

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "or" @ ( x1 x2 -- x1|x2 )
                       @ Combines the top two stack elements using bitwise OR.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80011fc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:49
  orrs tos, r0
 80011fe:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:50
  bx lr
 8001200:	4770      	bx	lr

08001202 <or_allocator>:
or_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:53

or_allocator:
  pushdaconstw 0x4300 @ orrs r0, r0
 8001202:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001206:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:54
  b.n alloc_kommutativ
 800120a:	e0d2      	b.n	80013b2 <alloc_kommutativ>

0800120c <Dictionary_243>:
Dictionary_243():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:54
 800120c:	08001226 	.word	0x08001226
 8001210:	78030262 	.word	0x78030262
 8001214:	726f      	.short	0x726f

08001216 <Code_243>:
Code_243():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:60

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "xor" @ ( x1 x2 -- x1|x2 )
                        @ Combines the top two stack elements using bitwise exclusive-OR.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 8001216:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:61
  eors tos, r0
 8001218:	4046      	eors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:62
  bx lr
 800121a:	4770      	bx	lr

0800121c <xor_allocator>:
xor_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:65

xor_allocator:
  pushdaconstw 0x4040 @ eors r0, r0
 800121c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001220:	f244 0640 	movw	r6, #16448	; 0x4040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:66
  b.n alloc_kommutativ
 8001224:	e0c5      	b.n	80013b2 <alloc_kommutativ>

08001226 <Dictionary_246>:
Dictionary_246():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:66
 8001226:	123e      	.short	0x123e
 8001228:	02620800 	.word	0x02620800
 800122c:	2a01      	.short	0x2a01

0800122e <Code_246>:
Code_246():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:71

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "*" @ ( u1|n1 u2|n2 -- u3|n3 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}    @ Get u1|n1 into a register.
 800122e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:72
  muls tos, r0      @ Multiply!
 8001230:	4346      	muls	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:73
  bx lr
 8001232:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:75

  pushdaconstw 0x4340 @ muls r0, r0
 8001234:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001238:	f244 3640 	movw	r6, #17216	; 0x4340
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:76
  b.n alloc_kommutativ
 800123c:	e0b9      	b.n	80013b2 <alloc_kommutativ>

0800123e <Dictionary_249>:
Dictionary_249():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:76
 800123e:	1272      	.short	0x1272
 8001240:	02610800 	.word	0x02610800
 8001244:	7a6c6303 	.word	0x7a6c6303

08001248 <Code_249>:
Code_249():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:105

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "clz" @ ( x -- u )
                        @ Counts leading zeroes in x.
@ -----------------------------------------------------------------------------
  clz tos, tos
 8001248:	fab6 f686 	clz	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:106
  bx lr
 800124c:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:108

    push {lr}
 800124e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:109
    bl expect_one_element
 8001250:	f7ff f942 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:110
    pushdatos
 8001254:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:111
    ldr tos, =0xfab0f080 @ clz r0, r0
 8001258:	4e7e      	ldr	r6, [pc, #504]	; (8001454 <m3_opcodieren+0x24>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:112
    bl expect_tos_in_register
 800125a:	f7ff f979 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:113
    orrs tos, r1 @ Quellregister
 800125e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:114
    orrs tos, tos, r1, lsl #16 @ Quellregister nochmal
 8001260:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:116

    bl tos_registerwechsel
 8001264:	f7ff f9c2 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:118

    orrs tos, tos, r3, lsl #8 @ Zielregister
 8001268:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:119
    bl reversekomma
 800126c:	f002 fb54 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:121

    pop {pc}
 8001270:	bd00      	pop	{pc}

08001272 <Dictionary_251>:
Dictionary_251():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:121
 8001272:	1290      	.short	0x1290
 8001274:	18610800 	.word	0x18610800
 8001278:	726f7203 	.word	0x726f7203

0800127c <Code_251>:
Code_251():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:159
  .endif

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_inlinecache|Flag_bxlr, "ror" @ ( x -- x' ) @ Um eine Stelle rechts rotieren
@ -----------------------------------------------------------------------------
  movs r0, #1
 800127c:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:160
  rors tos, r0
 800127e:	41c6      	rors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:161
  bx lr
 8001280:	4770      	bx	lr
 8001282:	0002      	.short	0x0002
 8001284:	00000001 	.word	0x00000001
 8001288:	12bc2000 	.word	0x12bc2000
 800128c:	02620800 	.word	0x02620800

08001290 <Dictionary_252>:
Dictionary_252():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:161
 8001290:	080012ae 	.word	0x080012ae
 8001294:	72031861 	.word	0x72031861
 8001298:	6c6f      	.short	0x6c6f

0800129a <Code_252>:
Code_252():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:175

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_inlinecache|Flag_bxlr, "rol" @ ( x -- x' ) @ Um eine Stelle links rotieren
@ -----------------------------------------------------------------------------
  @ Rotate left by one bit place
  movs r0, #31
 800129a:	201f      	movs	r0, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:176
  rors tos, r0
 800129c:	41c6      	rors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:177
  bx lr
 800129e:	4770      	bx	lr
 80012a0:	001f0002 	.word	0x001f0002
 80012a4:	20000000 	.word	0x20000000
 80012a8:	080012bc 	.word	0x080012bc
 80012ac:	0262      	.short	0x0262

080012ae <Dictionary_253>:
Dictionary_253():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:177
 80012ae:	12ce      	.short	0x12ce
 80012b0:	02620800 	.word	0x02620800
 80012b4:	6f727207 	.word	0x6f727207
 80012b8:	65746174 	.word	0x65746174

080012bc <Code_253>:
rrotate():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:191

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "rrotate" @ ( x n -- x' )
rrotate:                    @ Rotate 'x' right by 'n' bits.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80012bc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:192
  rors r0, tos
 80012be:	41f0      	rors	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:193
  movs tos, r0
 80012c0:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:194
  bx lr
 80012c2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:196

  pushdaconstw 0x41C0 @ rors r0, r0
 80012c4:	f847 6d04 	str.w	r6, [r7, #-4]!
 80012c8:	f244 16c0 	movw	r6, #16832	; 0x41c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:197
  b.n alloc_unkommutativ
 80012cc:	e06d      	b.n	80013aa <alloc_unkommutativ>

080012ce <Dictionary_256>:
Dictionary_256():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:197
 80012ce:	1306      	.short	0x1306
 80012d0:	02620800 	.word	0x02620800
 80012d4:	73726107 	.word	0x73726107
 80012d8:	74666968 	.word	0x74666968

080012dc <Code_256>:
Code_256():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:203

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "arshift" @ ( x n -- x' )
                            @ Shifts 'x' right by 'n' bits, shifting in x's MSB.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80012dc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:204
  asrs r0, tos
 80012de:	4130      	asrs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:205
  movs tos, r0
 80012e0:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:206
  bx lr
 80012e2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:209

  @ -----------------------------------------------------------------------------
    push {lr}
 80012e4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:210
    pushdaconstw 0x4100 @ asrs r0, r0
 80012e6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80012ea:	f244 1600 	movw	r6, #16640	; 0x4100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:211
    pushdaconstw 0x1000 @ asrs r0, r0, #0
 80012ee:	f847 6d04 	str.w	r6, [r7, #-4]!
 80012f2:	f241 0600 	movw	r6, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:213

    bl expect_two_elements
 80012f6:	f7ff f8f9 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:215

    ldr r1, [r0, #offset_constant_tos] @ Ich weiß zwar noch nicht, ob es eine Konstante oder ein Register ist, aber das ist egal.
 80012fa:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:216
    cmp r1, #31                        @ Falls es eine Konstante ist, kappe sie, wenn es ein Register sein sollte, ändert sich nichts.
 80012fc:	291f      	cmp	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:217
    bls 5f
 80012fe:	d92a      	bls.n	8001356 <Code_266+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:218
      movs r1, #31 @ Größere Schübe ? --> asrs mit Weite 31 generieren, damit das Vorzeichen stimmt !
 8001300:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:219
      str r1, [r0, #offset_constant_tos]
 8001302:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:220
      b.n 5f
 8001304:	e027      	b.n	8001356 <Code_266+0x18>

08001306 <Dictionary_261>:
Dictionary_261():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:220
 8001306:	1330      	.short	0x1330
 8001308:	02620800 	.word	0x02620800
 800130c:	68737206 	.word	0x68737206
 8001310:	6669      	.short	0x6669
 8001312:	74          	.byte	0x74
	...

08001314 <Code_261>:
Code_261():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:226

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "rshift" @ ( x n -- x' )
                           @ Shifts 'x' right by 'n' bits.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 8001314:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:227
  lsrs r0, tos
 8001316:	40f0      	lsrs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:228
  movs tos, r0
 8001318:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:229
  bx lr
 800131a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:232

  @ -----------------------------------------------------------------------------
    push {lr}
 800131c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:233
    pushdaconstw 0x40C0 @ lsrs r0, r0
 800131e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001322:	f244 06c0 	movw	r6, #16576	; 0x40c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:234
    pushdaconstw 0x0800 @ lsrs r0, r0, #0
 8001326:	f847 6d04 	str.w	r6, [r7, #-4]!
 800132a:	f640 0600 	movw	r6, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:235
    b.n 5f
 800132e:	e012      	b.n	8001356 <Code_266+0x18>

08001330 <Dictionary_266>:
Dictionary_266():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:235
 8001330:	08001468 	.word	0x08001468
 8001334:	6c060262 	.word	0x6c060262
 8001338:	66696873 	.word	0x66696873
 800133c:	74          	.byte	0x74
	...

0800133e <Code_266>:
Code_266():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:241

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "lshift" @ ( x n -- x' )
                           @ Shifts 'x' left by 'n' bits.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 800133e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:242
  lsls r0, tos
 8001340:	40b0      	lsls	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:243
  movs tos, r0
 8001342:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:244
  bx lr
 8001344:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:247

  @ -----------------------------------------------------------------------------
    push {lr}
 8001346:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:248
    pushdaconstw 0x4080 @ lsls r0, r0
 8001348:	f847 6d04 	str.w	r6, [r7, #-4]!
 800134c:	f244 0680 	movw	r6, #16512	; 0x4080
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:249
    pushdaconst  0x0000 @ lsls r0, r0, #0
 8001350:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001354:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:251

5:  bl expect_two_elements
 8001356:	f7ff f8c9 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:253

    ldr r1, [r0, #offset_state_tos]
 800135a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:254
    cmp r1, #constant
 800135c:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:255
    beq 1f
 800135e:	d003      	beq.n	8001368 <Code_266+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:257
      @ TOS ist keine Konstante --> Also Register-Register-Schub. Es gibt nur Opcodes im M0, bei denen Quelle und Ziel identisch sind.
      drop @ Vergiß den Shift-Immediate-Opcode
 8001360:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:258
      bl alloc_unkommutativ @ Kümmert sich um alles.
 8001362:	f000 f822 	bl	80013aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:259
      pop {pc}
 8001366:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:262
1:  @ TOS ist eine Konstante ! NOS muss jetzt ein Register sein, weil es sonst bereits vorher gefaltet worden wäre.

    nip @ Vergiß den Shift-Register-Register-Opcode
 8001368:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:265

    @ Hole die Konstante !
    ldr r1, [r0, #offset_constant_tos]
 800136a:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:266
    bl eliminiere_tos
 800136c:	f7fe ffb7 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:268

    cmp r1, #0 @ Gar nicht schieben ?
 8001370:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:269
    bne 3f
 8001372:	d101      	bne.n	8001378 <Code_266+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:270
      drop
 8001374:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:271
      pop {pc}
 8001376:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:274
3:

    cmp r1, #31
 8001378:	291f      	cmp	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:275
    bhi 2f
 800137a:	d80a      	bhi.n	8001392 <Code_266+0x54>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:277
      @ Konstante kleiner als 31 --> Schiebebefehl generieren.
      lsls r1, #6  @ Shift places accordingly
 800137c:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:278
      orrs tos, r1  @ Build shift opcode
 800137e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:280

      ldr r2, [r0, #offset_state_tos]
 8001380:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:281
      lsls r2, #3
 8001382:	00d2      	lsls	r2, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:282
      orrs tos, r2
 8001384:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:285

      @ Registerwechsel in r6, wenn möglich - Schiebeopcode gibt das her
      bl tos_registerwechsel
 8001386:	f7ff f931 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:286
      orrs tos, r3
 800138a:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:288

      bl hkomma
 800138c:	f002 fa94 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:289
      pop {pc}
 8001390:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:292

2:  @ Konstante größer als 31 --> Alles rausschieben.
    drop @ Vergiß den zweiten Opcode auch
 8001392:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:293
    bl tos_registerwechsel
 8001394:	f7ff f92a 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:295

    pushdaconstw 0x2000 @ movs r0, #0
 8001398:	f847 6d04 	str.w	r6, [r7, #-4]!
 800139c:	f242 0600 	movw	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:296
    lsls r3, #8
 80013a0:	021b      	lsls	r3, r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:297
    orrs tos, r3
 80013a2:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:298
    bl hkomma
 80013a4:	f002 fa88 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:299
    pop {pc}
 80013a8:	bd00      	pop	{pc}

080013aa <alloc_unkommutativ>:
alloc_unkommutativ():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:26
@ Sondereinsprünge, die für Memory Read-Modify-Write und die Schiebebefehle gebraucht werden.

@ -----------------------------------------------------------------------------
alloc_unkommutativ:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 80013aa:	b50f      	push	{r0, r1, r2, r3, lr}

080013ac <alloc_unkommutativ_ohneregister>:
alloc_unkommutativ_ohneregister():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:28
alloc_unkommutativ_ohneregister:
    bl expect_two_elements
 80013ac:	f7ff f89e 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:29
    b.n alloc_logic_gemeinsam
 80013b0:	e00c      	b.n	80013cc <alloc_logic_gemeinsam>

080013b2 <alloc_kommutativ>:
alloc_kommutativ():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:34

@ -----------------------------------------------------------------------------
alloc_kommutativ:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 80013b2:	b50f      	push	{r0, r1, r2, r3, lr}

080013b4 <alloc_kommutativ_ohneregister>:
alloc_kommutativ_ohneregister():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:37
alloc_kommutativ_ohneregister:

      bl expect_two_elements
 80013b4:	f7ff f89a 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:46
    @ Entweder zwei Register, oder eine Konstante und einen Register.


    @ Sorge dafür, dass NOS (nachher das neue TOS) r6 bekommt, falls möglich.

    ldr r1, [r0, #offset_state_tos]
 80013b8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:47
    cmp r1, #reg6         @ Falls das aktuelle TOS gerade r6 hat, gib es an NOS ab.
 80013ba:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:48
    bne 2f
 80013bc:	d101      	bne.n	80013c2 <alloc_kommutativ_ohneregister+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:49
      bl swap_allocator
 80013be:	f7ff fdd4 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:55
2:


    @ Sorge jetzt einmal dafür, dass falls es eine Konstante gibt, im RA-Cache TOS die Konstante und NOS das Ziel ist.

    ldr r2, [r0, #offset_state_nos]
 80013c2:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:56
    cmp r2, #constant     @ NOS ist die Konstante ?
 80013c4:	2a28      	cmp	r2, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:57
    bne 3f
 80013c6:	d101      	bne.n	80013cc <alloc_logic_gemeinsam>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:58
      bl swap_allocator   @ Ab jetzt ist es TOS !
 80013c8:	f7ff fdcf 	bl	8000f6a <swap_allocator>

080013cc <alloc_logic_gemeinsam>:
alloc_logic_gemeinsam():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:64
3:


alloc_logic_gemeinsam:

    bl expect_nos_in_register @ Für den Fall, dass doch zwei Konstanten einlaufen.
 80013cc:	f7ff f8ca 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:67

    .ifndef m0core
      ldr r1, [r0, #offset_state_tos] @ Prüfe, ob TOS eine Konstante ist.
 80013d0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:68
      cmp r1, #constant
 80013d2:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:69
      bne 6f
 80013d4:	d11e      	bne.n	8001414 <alloc_logic_gemeinsam+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:71
        @ TOS ist eine Konstante.
        pushdatos
 80013d6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:72
        ldr tos, [r0, #offset_constant_tos]
 80013da:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:73
        bl twelvebitencoding @ Hole sie und prüfe, ob sie als Imm12 darstellbar ist.
 80013dc:	f001 fe48 	bl	8003070 <Code_741>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:74
        ldmia psp!, {r1} @ Entweder die Bitmaske oder wieder die Konstante
 80013e0:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:76

        cmp tos, #0
 80013e2:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:77
        drop   @ Preserves Flags !
 80013e4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:78
        beq 6f
 80013e6:	d015      	beq.n	8001414 <alloc_logic_gemeinsam+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:83
          @ Die Konstante lässt sich als Imm12 darstellen - fein ! Bitmaske liegt in r1 bereit
          @ Prüfe nun den Opcode, und ersetze ihn, falls möglich.


          cmp tos, #0x4000 @ ands r0, r0 Opcode
 80013e8:	f5b6 4f80 	cmp.w	r6, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:84
          bne 5f
 80013ec:	d101      	bne.n	80013f2 <alloc_logic_gemeinsam+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:85
            ldr tos, =0xF0100000 @ ands r0, r0, #Imm12
 80013ee:	4e1a      	ldr	r6, [pc, #104]	; (8001458 <m3_opcodieren+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:86
            b.n m3_opcodieren
 80013f0:	e01e      	b.n	8001430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:89
5:

          ldr r2, =0x4040 @ eors r0, r0      Opcode
 80013f2:	f244 0240 	movw	r2, #16448	; 0x4040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:90
          cmp tos, r2
 80013f6:	4296      	cmp	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:91
          bne 5f
 80013f8:	d101      	bne.n	80013fe <alloc_logic_gemeinsam+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:92
            ldr tos, =0xF0900000 @ eors r0, r0, #Imm12
 80013fa:	4e18      	ldr	r6, [pc, #96]	; (800145c <m3_opcodieren+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:93
            b.n m3_opcodieren
 80013fc:	e018      	b.n	8001430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:97
5:


          cmp tos, #0x4300 @ orrs r0, r0      Opcode
 80013fe:	f5b6 4f86 	cmp.w	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:98
          bne 5f
 8001402:	d101      	bne.n	8001408 <alloc_logic_gemeinsam+0x3c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:99
            ldr tos, =0xF0500000 @ orrs r0, r0, #Imm12
 8001404:	4e16      	ldr	r6, [pc, #88]	; (8001460 <m3_opcodieren+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:100
            b.n m3_opcodieren
 8001406:	e013      	b.n	8001430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:103
5:

          ldr r2, =0x4380 @ bics r0, r0      Opcode
 8001408:	f44f 4287 	mov.w	r2, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:104
          cmp tos, r2
 800140c:	4296      	cmp	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:105
          bne 6f
 800140e:	d101      	bne.n	8001414 <alloc_logic_gemeinsam+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:107
            @ Ja, den Opcode kann ich verlängern und dann einfügen !
            ldr tos, =0xF0300000 @ bics r0, r0, #Imm12
 8001410:	4e14      	ldr	r6, [pc, #80]	; (8001464 <m3_opcodieren+0x34>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:108
            b.n m3_opcodieren
 8001412:	e00d      	b.n	8001430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:114

6:    @ Sonderopcodierungen M3/M4 nicht möglich
    .endif

    @ Sorge dafür, dass NOS bereit zum Verändern wird.
    bl nos_change_tos_away_later
 8001414:	f7ff f8ba 	bl	800058c <nos_change_tos_away_later>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:116

    bl expect_tos_in_register
 8001418:	f7ff f89a 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:118

    lsls r1, #3  @ Quellregister ist um 3 Stellen geschoben
 800141c:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:119
    ldr r2, [r0, #offset_state_nos]
 800141e:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:123

    @ Baue jetzt den Opcode zusammen:

    orrs tos, r1
 8001420:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:124
    orrs tos, r2
 8001422:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:126

    bl hkomma
 8001424:	f002 fa48 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:128

    bl eliminiere_tos
 8001428:	f7fe ff59 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:129
    pop {r0, r1, r2, r3, pc}
 800142c:	bd0f      	pop	{r0, r1, r2, r3, pc}

0800142e <m3_opcodieren_anderswo>:
m3_opcodieren_anderswo():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:134

.ifndef m0core

m3_opcodieren_anderswo:
  push {r0, r1, r2, r3, lr}
 800142e:	b50f      	push	{r0, r1, r2, r3, lr}

08001430 <m3_opcodieren>:
m3_opcodieren():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:139
@ -----------------------------------------------------------------------------
m3_opcodieren:
@ -----------------------------------------------------------------------------
          @ Gemeinsamer Teil für alle Fälle:
          orrs tos, r1 @ Bitmaske für Imm12 hinzufügen
 8001430:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:141

          ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
 8001432:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:143

          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
 8001434:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:146

          @ Vergiß die Konstante
          bl eliminiere_tos
 8001438:	f7fe ff51 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:149

          @ Registerwechsel direkt im Opcode. Nutze das natürlich aus :-) Spare mir damit eventuelle Elementkopien.
          bl eliminiere_tos
 800143c:	f7fe ff4f 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:151

          bl befreie_tos
 8001440:	f7fe ff43 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:152
          bl get_free_register
 8001444:	f7ff f814 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:153
          str r3, [r0, #offset_state_tos]
 8001448:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:155

          orrs tos, tos, r3, lsl #8  @ Den Zielregister hinzufügen
 800144a:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:157

          bl reversekomma
 800144e:	f002 fa63 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:158
          pop {r0, r1, r2, r3, pc}
 8001452:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/logic.s:111
    ldr tos, =0xfab0f080 @ clz r0, r0
 8001454:	fab0f080 	.word	0xfab0f080
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:85
            ldr tos, =0xF0100000 @ ands r0, r0, #Imm12
 8001458:	f0100000 	.word	0xf0100000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:92
            ldr tos, =0xF0900000 @ eors r0, r0, #Imm12
 800145c:	f0900000 	.word	0xf0900000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:99
            ldr tos, =0xF0500000 @ orrs r0, r0, #Imm12
 8001460:	f0500000 	.word	0xf0500000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:107
            ldr tos, =0xF0300000 @ bics r0, r0, #Imm12
 8001464:	f0300000 	.word	0xf0300000

08001468 <Dictionary_279>:
Dictionary_279():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-logic.s:107
 8001468:	0800148e 	.word	0x0800148e
 800146c:	30020261 	.word	0x30020261
 8001470:	3d          	.byte	0x3d
	...

08001472 <Code_279>:
Code_279():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:28
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "0=" @ ( x -- ? )
@ -----------------------------------------------------------------------------
@        subs TOS, TOS, #1       ; if zero, carry is set, else carry is clear
@        sbc TOS, TOS, TOS       ; subtracting r0 from itself leaves zero if
@                                ; carry was clear or -1 if carry was set.
  subs tos, #1
 8001472:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:29
  sbcs tos, tos
 8001474:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:30
  bx lr
 8001476:	4770      	bx	lr

08001478 <allocator_equal_zero>:
allocator_equal_zero():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:33

allocator_equal_zero:
    push {lr}
 8001478:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:34
      bl prepare_single_compare @ Beinhaltet expect_one_element.
 800147a:	f000 f8fb 	bl	8001674 <prepare_single_compare>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:35
      bl allocator_one_minus
 800147e:	f000 fffe 	bl	800247e <allocator_one_minus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:36
      bl eliminiere_tos
 8001482:	f7fe ff2c 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:38

      ldr r1, =0xD200
 8001486:	f44f 4152 	mov.w	r1, #53760	; 0xd200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:39
      str r1, [r0, #offset_sprungtrampolin] @ Daraus wird später der sbcs-Opcode zusammengesetzt, falls nötig.
 800148a:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:40
    pop {pc}
 800148c:	bd00      	pop	{pc}

0800148e <Dictionary_280>:
Dictionary_280():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:40
 800148e:	14b6      	.short	0x14b6
 8001490:	02610800 	.word	0x02610800
 8001494:	3e3c3003 	.word	0x3e3c3003

08001498 <Code_280>:
Code_280():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:45

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "0<>" @ ( x -- ? )
@ -----------------------------------------------------------------------------
  subs tos, #1
 8001498:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:46
  sbcs tos, tos
 800149a:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:47
  mvns tos, tos
 800149c:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:48
  bx lr
 800149e:	4770      	bx	lr

080014a0 <allocator_unequal_zero>:
allocator_unequal_zero():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:51

allocator_unequal_zero:
    push {lr}
 80014a0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:52
      bl prepare_single_compare @ Beinhaltet expect_one_element.
 80014a2:	f000 f8e7 	bl	8001674 <prepare_single_compare>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:53
      bl allocator_one_minus
 80014a6:	f000 ffea 	bl	800247e <allocator_one_minus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:54
      bl eliminiere_tos
 80014aa:	f7fe ff18 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:56

      ldr r1, =0xD300
 80014ae:	f44f 4153 	mov.w	r1, #54016	; 0xd300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:57
      str r1, [r0, #offset_sprungtrampolin] @ Daraus wird später die sbcs/mvns-Opcodesequenz zusammengesetzt, falls nötig.
 80014b2:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:58
    pop {pc}
 80014b4:	bd00      	pop	{pc}

080014b6 <Dictionary_281>:
Dictionary_281():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:58
 80014b6:	14de      	.short	0x14de
 80014b8:	02610800 	.word	0x02610800
 80014bc:	3002      	.short	0x3002
 80014be:	3c          	.byte	0x3c
	...

080014c0 <Code_281>:
Code_281():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:63

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "0<" @ ( n -- ? )
@ -----------------------------------------------------------------------------
  movs TOS, TOS, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
 80014c0:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:64
  bx lr
 80014c2:	4770      	bx	lr

080014c4 <alloc_nullkleiner>:
alloc_nullkleiner():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:67

alloc_nullkleiner:
    push {lr}
 80014c4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:68
      bl prepare_single_compare @ Beinhaltet expect_one_element.
 80014c6:	f000 f8d5 	bl	8001674 <prepare_single_compare>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:70

      pushdaconstw 0x17C0 @ asrs r0, r0, #31
 80014ca:	f847 6d04 	str.w	r6, [r7, #-4]!
 80014ce:	f241 76c0 	movw	r6, #6080	; 0x17c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:71
      bl smalltworegisters
 80014d2:	f001 f817 	bl	8002504 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:73

      ldr r1, =0xD500
 80014d6:	f44f 4155 	mov.w	r1, #54528	; 0xd500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:74
      str r1, [r0, #offset_sprungtrampolin] @ Daraus wird später die sbcs/mvns-Opcodesequenz zusammengesetzt, falls nötig.
 80014da:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:75
    pop {pc}
 80014dc:	bd00      	pop	{pc}

080014de <Dictionary_284>:
Dictionary_284():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:75
 80014de:	14f4      	.short	0x14f4
 80014e0:	00600800 	.word	0x00600800
 80014e4:	75727404 	.word	0x75727404
 80014e8:	65          	.byte	0x65
	...

080014ea <Code_284>:
Code_284():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:83
@ Also ist TOS ohnehin ein Register.

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_0|Flag_inline, "true" @ ( -- -1 )
@ -----------------------------------------------------------------------------
  pushdatos
 80014ea:	f847 6d04 	str.w	r6, [r7, #-4]!

080014ee <generate_true>:
generate_true():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:85
generate_true:
  movs tos, #0
 80014ee:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:86
  mvns tos, tos
 80014f0:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:87
  bx lr
 80014f2:	4770      	bx	lr

080014f4 <Dictionary_286>:
Dictionary_286():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:87
 80014f4:	08001508 	.word	0x08001508
 80014f8:	66050060 	.word	0x66050060
 80014fc:	65736c61 	.word	0x65736c61

08001500 <Code_286>:
Code_286():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:92

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_0|Flag_inline, "false" @ ( x -- 0 )
@ -----------------------------------------------------------------------------
  pushdatos
 8001500:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:93
  movs tos, #0
 8001504:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:94
  bx lr
 8001506:	4770      	bx	lr

08001508 <Dictionary_288>:
Dictionary_288():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:94
 8001508:	0800152e 	.word	0x0800152e
 800150c:	3e020242 	.word	0x3e020242
 8001510:	3d          	.byte	0x3d
	...

08001512 <Code_288>:
Code_288():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:99

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, ">=" @ ( x1 x2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}      @ Get x1 into a register.
 8001512:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:100
  cmp r0, tos         @ Is x2 less or equal ?
 8001514:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:101
  bge.n generate_true
 8001516:	daea      	bge.n	80014ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:102
  movs tos, #0
 8001518:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:103
  bx lr
 800151a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:105

    pushdaconstw 0xDB00 @ blt signed less
 800151c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001520:	f64d 3600 	movw	r6, #56064	; 0xdb00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:106
    pushdaconstw 0xDA00 @ signed greater or equal
 8001524:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001528:	f64d 2600 	movw	r6, #55808	; 0xda00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:107
    b.n prepare_compare
 800152c:	e0ae      	b.n	800168c <prepare_compare>

0800152e <Dictionary_293>:
Dictionary_293():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:107
 800152e:	1554      	.short	0x1554
 8001530:	02420800 	.word	0x02420800
 8001534:	3c02      	.short	0x3c02
 8001536:	3d          	.byte	0x3d
	...

08001538 <Code_293>:
Code_293():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:112

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, "<=" @ ( x1 x2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get x1 into a register.
 8001538:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:113
  cmp r0, tos        @ Is x2 greater or equal ?
 800153a:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:114
  ble.n generate_true
 800153c:	ddd7      	ble.n	80014ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:115
  movs tos, #0
 800153e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:116
  bx lr
 8001540:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:118

    pushdaconstw 0xDC00 @ bge signed greater
 8001542:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001546:	f64d 4600 	movw	r6, #56320	; 0xdc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:119
    pushdaconstw 0xDD00 @ ble signed less or equal
 800154a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800154e:	f64d 5600 	movw	r6, #56576	; 0xdd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:120
    b.n prepare_compare
 8001552:	e09b      	b.n	800168c <prepare_compare>

08001554 <Dictionary_298>:
Dictionary_298():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:120
 8001554:	08001578 	.word	0x08001578
 8001558:	3c010242 	.word	0x3c010242

0800155c <Code_298>:
Code_298():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:126

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, "<" @ ( x1 x2 -- ? )
                      @ Checks if x2 is less than x1.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get x1 into a register.
 800155c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:127
  cmp r0, tos        @ Is x2 less?
 800155e:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:128
  blt.n generate_true
 8001560:	dbc5      	blt.n	80014ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:129
  movs tos, #0
 8001562:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:130
  bx lr
 8001564:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:132

    pushdaconstw 0xDA00 @ signed greater or equal
 8001566:	f847 6d04 	str.w	r6, [r7, #-4]!
 800156a:	f64d 2600 	movw	r6, #55808	; 0xda00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:133
    pushdaconstw 0xDB00 @ blt signed less
 800156e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001572:	f64d 3600 	movw	r6, #56064	; 0xdb00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:134
    b.n prepare_compare
 8001576:	e089      	b.n	800168c <prepare_compare>

08001578 <Dictionary_303>:
Dictionary_303():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:134
 8001578:	0800159c 	.word	0x0800159c
 800157c:	3e010242 	.word	0x3e010242

08001580 <Code_303>:
Code_303():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:140

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, ">" @ ( x1 x2 -- ? )
                      @ Checks if x2 is greater than x1.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get x1 into a register.
 8001580:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:141
  cmp r0, tos        @ Is x2 greater?
 8001582:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:142
  bgt.n generate_true
 8001584:	dcb3      	bgt.n	80014ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:143
  movs tos, #0
 8001586:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:144
  bx lr
 8001588:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:146

    pushdaconstw 0xDD00 @ ble signed less or equal
 800158a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800158e:	f64d 5600 	movw	r6, #56576	; 0xdd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:147
    pushdaconstw 0xDC00 @ bge signed greater
 8001592:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001596:	f64d 4600 	movw	r6, #56320	; 0xdc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:148
    b.n prepare_compare
 800159a:	e077      	b.n	800168c <prepare_compare>

0800159c <Dictionary_308>:
Dictionary_308():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:148
 800159c:	080015c2 	.word	0x080015c2
 80015a0:	75030262 	.word	0x75030262
 80015a4:	3d3e      	.short	0x3d3e

080015a6 <Code_308>:
Code_308():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:153

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u>=" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}      @ Get u1 into a register.
 80015a6:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:154
  subs tos, r0, tos   @ subs tos, w, tos   @ TOS = a-b  -- carry set if a is less than b
 80015a8:	1b86      	subs	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:155
  sbcs tos, tos
 80015aa:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:156
  mvns tos, tos
 80015ac:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:157
  bx lr
 80015ae:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:159

    pushdaconstw 0xD300 @ blo unsigned lower
 80015b0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80015b4:	f24d 3600 	movw	r6, #54016	; 0xd300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:160
    pushdaconstw 0xD200 @ bhs unsigned higher or same
 80015b8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80015bc:	f24d 2600 	movw	r6, #53760	; 0xd200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:161
    b.n prepare_compare
 80015c0:	e064      	b.n	800168c <prepare_compare>

080015c2 <Dictionary_313>:
Dictionary_313():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:161
 80015c2:	15e8      	.short	0x15e8
 80015c4:	02620800 	.word	0x02620800
 80015c8:	3d3c7503 	.word	0x3d3c7503

080015cc <Code_313>:
Code_313():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:166

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u<=" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80015cc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:167
  subs tos, r0
 80015ce:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:168
  sbcs tos, tos
 80015d0:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:169
  mvns tos, tos
 80015d2:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:170
  bx lr
 80015d4:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:172

    pushdaconstw 0xD800 @ bhi unsigned higher
 80015d6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80015da:	f64d 0600 	movw	r6, #55296	; 0xd800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:173
    pushdaconstw 0xD900 @ bls unsigned lower or same
 80015de:	f847 6d04 	str.w	r6, [r7, #-4]!
 80015e2:	f64d 1600 	movw	r6, #55552	; 0xd900
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:174
    b.n prepare_compare
 80015e6:	e051      	b.n	800168c <prepare_compare>

080015e8 <Dictionary_318>:
Dictionary_318():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:174
 80015e8:	0800160c 	.word	0x0800160c
 80015ec:	75020262 	.word	0x75020262
 80015f0:	3c          	.byte	0x3c
	...

080015f2 <Code_318>:
Code_318():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:179

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u<" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}      @ Get u1 into a register.
 80015f2:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:180
  subs tos, r0, tos   @ subs tos, w, tos   @ TOS = a-b  -- carry set if a is less than b
 80015f4:	1b86      	subs	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:181
  sbcs tos, tos
 80015f6:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:182
  bx lr
 80015f8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:184

    pushdaconstw 0xD200 @ bhs unsigned higher or same
 80015fa:	f847 6d04 	str.w	r6, [r7, #-4]!
 80015fe:	f24d 2600 	movw	r6, #53760	; 0xd200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:185
    pushdaconstw 0xD300 @ blo unsigned lower
 8001602:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001606:	f24d 3600 	movw	r6, #54016	; 0xd300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:186
    b.n prepare_compare
 800160a:	e03f      	b.n	800168c <prepare_compare>

0800160c <Dictionary_323>:
Dictionary_323():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:186
 800160c:	08001630 	.word	0x08001630
 8001610:	75020262 	.word	0x75020262
 8001614:	3e          	.byte	0x3e
	...

08001616 <Code_323>:
Code_323():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:191

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u>" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 8001616:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:192
  subs tos, r0
 8001618:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:193
  sbcs tos, tos
 800161a:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:194
  bx lr
 800161c:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:196

    pushdaconstw 0xD900 @ bls unsigned lower or same
 800161e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001622:	f64d 1600 	movw	r6, #55552	; 0xd900
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:197
    pushdaconstw 0xD800 @ bhi unsigned higher
 8001626:	f847 6d04 	str.w	r6, [r7, #-4]!
 800162a:	f64d 0600 	movw	r6, #55296	; 0xd800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:198
    b.n prepare_compare
 800162e:	e02d      	b.n	800168c <prepare_compare>

08001630 <Dictionary_328>:
Dictionary_328():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:198
 8001630:	08001654 	.word	0x08001654
 8001634:	3c020262 	.word	0x3c020262
 8001638:	3e          	.byte	0x3e
	...

0800163a <Code_328>:
Code_328():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:204

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "<>" @ ( x1 x2 -- ? )
                       @ Compares the top two stack elements for inequality.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 800163a:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:205
  subs tos, r0
 800163c:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:207

  subs tos, #1
 800163e:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:208
  sbcs tos, tos
 8001640:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:209
  mvns tos, tos
 8001642:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:210
  bx lr
 8001644:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:212

    pushdaconstw 0xD000 @ Opcode: beq
 8001646:	f847 6d04 	str.w	r6, [r7, #-4]!
 800164a:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:213
    dup
 800164e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:214
    b.n prepare_compare
 8001652:	e01b      	b.n	800168c <prepare_compare>

08001654 <Dictionary_333>:
Dictionary_333():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:214
 8001654:	080017b6 	.word	0x080017b6
 8001658:	3d010262 	.word	0x3d010262

0800165c <Code_333>:
Code_333():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:220

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "=" @ ( x1 x2 -- ? )
                      @ Compares the top two stack elements for equality.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get the next elt into a register.
 800165c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:221
  subs tos, r0       @ Z=equality; if equal, TOS=0
 800165e:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:223

  subs tos, #1       @ Wenn es Null war, gibt es jetzt einen Überlauf
 8001660:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:224
  sbcs tos, tos
 8001662:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:225
  bx lr
 8001664:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:227

    pushdaconstw 0xD100 @ Opcode: bne
 8001666:	f847 6d04 	str.w	r6, [r7, #-4]!
 800166a:	f24d 1600 	movw	r6, #53504	; 0xd100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:228
    dup
 800166e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:229
    b.n prepare_compare
 8001672:	e00b      	b.n	800168c <prepare_compare>

08001674 <prepare_single_compare>:
prepare_single_compare():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:236
 .ltorg

@ -----------------------------------------------------------------------------
prepare_single_compare:
@ -----------------------------------------------------------------------------
  push {lr}
 8001674:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:237
  bl expect_one_element
 8001676:	f7fe ff2f 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:242

  @ Es gibt maximal fünf Elemente im RA. Eins wird am Ende rausfliegen, eins kann nachrutschen.
  @ Falls die anderen Elemente also Konstanten sind, müssen sie jetzt generiert werden.

    bl tidyup_register_allocator_5os
 800167a:	f7fe fe67 	bl	800034c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:243
    bl tidyup_register_allocator_4os
 800167e:	f7fe fe6a 	bl	8000356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:244
    bl tidyup_register_allocator_3os
 8001682:	f7fe fe6d 	bl	8000360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:245
    bl expect_nos_in_register
 8001686:	f7fe ff6d 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:247

  pop {pc}
 800168a:	bd00      	pop	{pc}

0800168c <prepare_compare>:
prepare_compare():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:253

@ -----------------------------------------------------------------------------
prepare_compare:
@ -----------------------------------------------------------------------------

    push {lr} @ So ähnlich wie die Optimierungen in Plus und Minus
 800168c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:254
    bl expect_two_elements @ Zwei Elemente, die NICHT verändert werden. Mindestens eins davon ist ein Register, sonst würde gefaltet werden.
 800168e:	f7fe ff2d 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:265


    @ Jetzt gibt es bis zu fünf Elemente. Zwei werden am Ende herausfliegen, eins kann direkt ins neue TOS nachrücken.
    @ Ich muss also die tieferen Elemente rausschreiben, bevor ich weitermache, weil im M0 das Rausschreiben Flags zerstört.

    bl tidyup_register_allocator_5os
 8001692:	f7fe fe5b 	bl	800034c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:266
    bl tidyup_register_allocator_4os
 8001696:	f7fe fe5e 	bl	8000356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:267
    bl expect_3os_in_register
 800169a:	f7fe ff6d 	bl	8000578 <expect_3os_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:270

    @ Ist in TOS oder in NOS eine kleine Konstante ?
    ldr r2, [r0, #offset_state_nos]
 800169e:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:271
    cmp r2, #constant
 80016a0:	2a28      	cmp	r2, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:272
    bne 1f
 80016a2:	d105      	bne.n	80016b0 <prepare_compare+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:273
      bl swap_allocator @ Wenn NOS eine Konstante gewesen ist, war TOS es nicht (Vorherige Faltung !) und ich kann einfach umtauschen.
 80016a4:	f7ff fc61 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:274
      swap @ Vertausche in diesem Fall auch die Sprungopcodes
 80016a8:	6839      	ldr	r1, [r7, #0]
 80016aa:	603e      	str	r6, [r7, #0]
 80016ac:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:275
      ldr r2, [r0, #offset_state_nos] @ r2 nach dem Vertauschen neu laden
 80016ae:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:278
1:  @ Fertig: Wenn eine Konstante da ist, ist sie jetzt in TOS.

    drop @ Vergiss den oberen Sprungopcode
 80016b0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:282

    @ Ist jetzt TOS eine kleine Konstante ?

    ldr r1, [r0, #offset_state_tos]
 80016b2:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:283
    cmp r1, #constant
 80016b4:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:284
    bne 3f
 80016b6:	d11d      	bne.n	80016f4 <prepare_compare+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:285
      ldr r1, [r0, #offset_constant_tos]
 80016b8:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:286
      cmp r1, #0xff
 80016ba:	29ff      	cmp	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:287
      bhi 5f
 80016bc:	d807      	bhi.n	80016ce <prepare_compare+0x42>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:289
        @ TOS ist eine kleine Konstante.
        pushdaconstw 0x2800 @ cmp r0, #imm8
 80016be:	f847 6d04 	str.w	r6, [r7, #-4]!
 80016c2:	f642 0600 	movw	r6, #10240	; 0x2800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:290
        orrs tos, r1
 80016c6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:291
        ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
 80016c8:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:292
        lsls r1, #8
 80016ca:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:293
        b.n 4f
 80016cc:	e01a      	b.n	8001704 <prepare_compare+0x78>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:300

.ifndef m0core
  @ TOS ist eine Konstante, aber zu groß für Imm8.
  @ Vielleicht passt sie in Imm12 ?

       pushdatos
 80016ce:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:301
        ldr tos, [r0, #offset_constant_tos]
 80016d2:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:302
        bl twelvebitencoding @ Hole sie und prüfe, ob sie als Imm12 darstellbar ist.
 80016d4:	f001 fccc 	bl	8003070 <Code_741>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:303
        ldmia psp!, {r1} @ Entweder die Bitmaske oder wieder die Konstante
 80016d8:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:305

        cmp tos, #0
 80016da:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:306
        drop   @ Preserves Flags !
 80016dc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:307
        beq 3f
 80016de:	d009      	beq.n	80016f4 <prepare_compare+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:311
          @ Die Konstante lässt sich als Imm12 darstellen - fein ! Bitmaske liegt in r1 bereit
          @ Prüfe nun den Opcode, und ersetze ihn, falls möglich.

          pushdatos
 80016e0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:312
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
 80016e4:	4e6a      	ldr	r6, [pc, #424]	; (8001890 <alloc_minmax+0x60>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:313
          orrs tos, r1
 80016e6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:314
          ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
 80016e8:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:315
          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
 80016ea:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:316
          bl reversekomma
 80016ee:	f002 f913 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:317
          b 5f
 80016f2:	e00a      	b.n	800170a <prepare_compare+0x7e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:324
.endif


3:  @ Schritt eins: Die Konstante, falls TOS jetzt eine sein sollten, laden.
    @ NOS kann durch den Swap keine Konstante sein.
    bl expect_tos_in_register
 80016f4:	f7fe ff2c 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:327

    @ Beide Argumente sind jetzt in Registern.
    pushdaconstw 0x4280 @ cmp r0, r0
 80016f8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80016fc:	f244 2680 	movw	r6, #17024	; 0x4280
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:330
    @ Baue Quell- und "Ziel-" Register in den Opcode ein.

    lsls r1, #3  @ Erster Operand ist um 3 Stellen geschoben. Das muss mit dem oberen CMP-mit-Konstanten-Opcode übereinstimmen !
 8001700:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:334

    @ Baue jetzt den Opcode zusammen:

    orrs tos, r2
 8001702:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:335
4:  orrs tos, r1
 8001704:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:337

    bl hkomma
 8001706:	f002 f8d7 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:341

    @ Vergiss die bisherige Registerzuordnung

5:  bl eliminiere_tos
 800170a:	f7fe fde8 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:342
    bl eliminiere_tos
 800170e:	f7fe fde6 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:346

    @ Das Ergebnis ist jetzt erstmal nur in den Flags - welche bei Bedarf von einem Flaggenerator geschrieben werden oder von einer Kontrollstruktur direkt geschluckt.

    str tos, [r0, #offset_sprungtrampolin]
 8001712:	6286      	str	r6, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:347
    drop
 8001714:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:348
    pop {pc}
 8001716:	bd00      	pop	{pc}

08001718 <sprungschreiber_flaggenerator>:
sprungschreiber_flaggenerator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:353

@ -----------------------------------------------------------------------------
sprungschreiber_flaggenerator:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8001718:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:355
    @ writeln "Sprungschreiber"
    ldr r0, =allocator_base
 800171a:	485e      	ldr	r0, [pc, #376]	; (8001894 <alloc_minmax+0x64>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:356
    ldr r1, [r0, #offset_sprungtrampolin]
 800171c:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:357
    cmp r1, #0
 800171e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:358
    beq 1f
 8001720:	d035      	beq.n	800178e <sprungschreiber_flaggenerator+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:360

      pushdatos
 8001722:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:361
      ldr tos, [r0, #offset_sprungtrampolin]
 8001726:	6a86      	ldr	r6, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:362
        movs r1, #0
 8001728:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:363
        str r1, [r0, #offset_sprungtrampolin]
 800172a:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:371
    @ Kümmere mich um das Ergebnis !

    @ In diesen neuen Register muss ich nun abhängig von den Flags einen Wert generieren.

      @ Im Falle des Carry-Flags gibt es einen kürzeren Weg, ein Flag zusammenzubauen:
      lsrs r1, tos, #8 @ Sprungopcode so schieben, dass ich bequem vergleichen kann
 800172c:	0a31      	lsrs	r1, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:375
@      pushda r1
@      bl hexdot

      cmp r1, #0xD5 @ Opcode bpl - der Minussprung. Er wird ausschließlich von 0< generiert.
 800172e:	29d5      	cmp	r1, #213	; 0xd5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:376
      bne 2f
 8001730:	d101      	bne.n	8001736 <sprungschreiber_flaggenerator+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:378
        @ Die Besonderheit: Dieses Flag ist schon fertig in einem Register. Muss nichts tun.
        drop
 8001732:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:379
        pop {r0, r1, r2, r3, pc}
 8001734:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:383
2:

    @ Alle anderen Fälle benötigen einen neuen Register, in dem das Flag generiert werden kann.
    bl befreie_tos
 8001736:	f7fe fdc8 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:384
    bl get_free_register
 800173a:	f7fe fe99 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:385
    str r3, [r0, #offset_state_tos]
 800173e:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:387

      cmp r1, #0xD2
 8001740:	29d2      	cmp	r1, #210	; 0xd2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:388
      bne 2f
 8001742:	d104      	bne.n	800174e <sprungschreiber_flaggenerator+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:389
        ldr tos, =0x4180 @ sbcs r0, r0, #0
 8001744:	f44f 4683 	mov.w	r6, #16768	; 0x4180
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:390
        bl smalltworegisters
 8001748:	f000 fedc 	bl	8002504 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:391
        pop {r0, r1, r2, r3, pc}
 800174c:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:394
2:

      cmp r1, #0xD3
 800174e:	29d3      	cmp	r1, #211	; 0xd3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:395
      bne 2f
 8001750:	d106      	bne.n	8001760 <sprungschreiber_flaggenerator+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:396
        ldr tos, =0x4180 @ sbcs r0, r0, #0
 8001752:	f44f 4683 	mov.w	r6, #16768	; 0x4180
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:397
        bl smalltworegisters
 8001756:	f000 fed5 	bl	8002504 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:398
        bl allocator_not
 800175a:	f000 fee6 	bl	800252a <allocator_not>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:399
        pop {r0, r1, r2, r3, pc}
 800175e:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:404
2:

    @ Dies ist der "normale" Flaggenerator, der immer und bei allen Flagkombinationen funktioniert.

    adds tos, #2 @ Flaggenerator_inverted benötigt einen Sprung drei Befehle weiter
 8001760:	3602      	adds	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:406
    @ Bedingten Sprung schreiben, um Flag zu generieren
    bl hkomma
 8001762:	f002 f8a9 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:408

    pushdaconstw 0x2000 @ movs r0, #0
 8001766:	f847 6d04 	str.w	r6, [r7, #-4]!
 800176a:	f242 0600 	movw	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:409
    bl smallplusminus
 800176e:	f000 f80f 	bl	8001790 <smallplusminus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:410
    bl allocator_not @ Generates: mvns r0, r0
 8001772:	f000 feda 	bl	800252a <allocator_not>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:412

    pushdaconstw 0xE000 @ b ein Befehl weiter
 8001776:	f847 6d04 	str.w	r6, [r7, #-4]!
 800177a:	f24e 0600 	movw	r6, #57344	; 0xe000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:413
    bl hkomma
 800177e:	f002 f89b 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:414
    pushdaconstw 0x2000 @ movs r0, #0
 8001782:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001786:	f242 0600 	movw	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:415
    bl smallplusminus
 800178a:	f000 f801 	bl	8001790 <smallplusminus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:417

1:pop {r0, r1, r2, r3, pc}
 800178e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08001790 <smallplusminus>:
smallplusminus():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:420

smallplusminus:
    push {lr}
 8001790:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:421
    bl expect_one_element @ Da nicht gefaltet worden ist, muss es sich um einen Register handeln.
 8001792:	f7fe fea1 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:422
    bl make_tos_changeable
 8001796:	f7fe ff10 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:423
    ldr r1, [r0, #offset_state_tos]
 800179a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:424
    lsls r1, #8
 800179c:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:425
    orrs tos, r1
 800179e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:426
    bl hkomma
 80017a0:	f002 f88a 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:427
    pop {pc}
 80017a4:	bd00      	pop	{pc}

080017a6 <eliminiere_tos_wenn_bmi>:
eliminiere_tos_wenn_bmi():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:430

eliminiere_tos_wenn_bmi: @ Dies wird vor dem Einpflegen der Sprünge in eine Konstrollstruktur aufgerufen.
  push {lr}              @ 0< hat die Besonderheit, einen Forth-Flag in ein Register zu legen. Dieser muss entfernt werden, wenn der Sprungopcode benutzt wird.
 80017a6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:432

    ldr r1, [r0, #offset_sprungtrampolin]
 80017a8:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:433
    lsrs r1, r1, #8
 80017aa:	0a09      	lsrs	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:434
    cmp r1, #0xD5 @ BMI Opcode
 80017ac:	29d5      	cmp	r1, #213	; 0xd5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:435
    bne 1f
 80017ae:	d101      	bne.n	80017b4 <eliminiere_tos_wenn_bmi+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:436
      bl eliminiere_tos
 80017b0:	f7fe fd95 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:437
1:pop {pc}
 80017b4:	bd00      	pop	{pc}

080017b6 <Dictionary_356>:
Dictionary_356():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:437
 80017b6:	17d4      	.short	0x17d4
 80017b8:	02620800 	.word	0x02620800
 80017bc:	6e696d03 	.word	0x6e696d03

080017c0 <Code_356>:
Code_356():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:443

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "min" @ ( x1 x2 -- x3 )
                        @ x3 is the lesser of x1 and x2.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80017c0:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:444
  cmp r0, tos
 80017c2:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:445
  bgt 1f
 80017c4:	dc00      	bgt.n	80017c8 <Code_356+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:446
  movs tos, r0
 80017c6:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:447
1:bx lr
 80017c8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:449

    pushdaconstw 0xDB00 @ blt signed less
 80017ca:	f847 6d04 	str.w	r6, [r7, #-4]!
 80017ce:	f64d 3600 	movw	r6, #56064	; 0xdb00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:450
    b.n alloc_minmax
 80017d2:	e02d      	b.n	8001830 <alloc_minmax>

080017d4 <Dictionary_359>:
Dictionary_359():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:450
 80017d4:	080017f2 	.word	0x080017f2
 80017d8:	6d030262 	.word	0x6d030262
 80017dc:	7861      	.short	0x7861

080017de <Code_359>:
Code_359():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:456

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "max" @ ( x1 x2 -- x3 )
                        @ x3 is the greater of x1 and x2.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80017de:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:457
  cmp r0, tos
 80017e0:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:458
  blt 1f
 80017e2:	db00      	blt.n	80017e6 <Code_359+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:459
  movs tos, r0
 80017e4:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:460
1:bx lr
 80017e6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:462

    pushdaconstw 0xDC00 @ bgt signed greater
 80017e8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80017ec:	f64d 4600 	movw	r6, #56320	; 0xdc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:463
    b.n alloc_minmax
 80017f0:	e01e      	b.n	8001830 <alloc_minmax>

080017f2 <Dictionary_362>:
Dictionary_362():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:463
 80017f2:	1812      	.short	0x1812
 80017f4:	02620800 	.word	0x02620800
 80017f8:	616d7504 	.word	0x616d7504
 80017fc:	78          	.byte	0x78
	...

080017fe <Code_362>:
Code_362():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:468

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "umax" @ ( u1 u2 -- u1|u2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80017fe:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:469
  cmp r0, tos
 8001800:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:470
  blo 1f
 8001802:	d300      	bcc.n	8001806 <Code_362+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:471
  movs tos, r0
 8001804:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:472
1:bx lr
 8001806:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:474

    pushdaconstw 0xD800 @ bhi unsigned higher
 8001808:	f847 6d04 	str.w	r6, [r7, #-4]!
 800180c:	f64d 0600 	movw	r6, #55296	; 0xd800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:475
    b.n alloc_minmax
 8001810:	e00e      	b.n	8001830 <alloc_minmax>

08001812 <Dictionary_365>:
Dictionary_365():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:475
 8001812:	1898      	.short	0x1898
 8001814:	02620800 	.word	0x02620800
 8001818:	696d7504 	.word	0x696d7504
 800181c:	6e          	.byte	0x6e
	...

0800181e <Code_365>:
Code_365():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:480

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "umin" @ ( u1 u2 -- u1|u2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 800181e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:481
  cmp r0, tos
 8001820:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:482
  bhi 1f
 8001822:	d800      	bhi.n	8001826 <Code_365+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:483
  movs tos, r0
 8001824:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:484
1:bx lr
 8001826:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:486

    pushdaconstw 0xD300 @ blo unsigned lower
 8001828:	f847 6d04 	str.w	r6, [r7, #-4]!
 800182c:	f24d 3600 	movw	r6, #54016	; 0xd300

08001830 <alloc_minmax>:
alloc_minmax():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:489

alloc_minmax:
    push {lr}
 8001830:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:490
    bl expect_two_elements       @ Es kann nur eine Konstante geben
 8001832:	f7fe fe5b 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:492

    ldr r1, [r0, #offset_state_tos]
 8001836:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:493
    ldr r2, [r0, #offset_state_nos]
 8001838:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:494
    cmp r1, r2
 800183a:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:495
    bne 1f
 800183c:	d103      	bne.n	8001846 <alloc_minmax+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:496
      drop @ Sollten es aus irgendwelchen Gründen identische Register sein - nichts generieren.
 800183e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:497
      bl eliminiere_nos
 8001840:	f7fe fd53 	bl	80002ea <eliminiere_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:498
      pop {pc} @ Der Fall zweier Konstanten wird vorher weggefaltet.
 8001844:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:502
1:


    cmp r2, #reg6 @ Ist NOS gerade in r6 ? Wenn ja, dann wechseln ! Weniger hin- und her am Ende.
 8001846:	2a06      	cmp	r2, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:503
    bne 2f
 8001848:	d101      	bne.n	800184e <alloc_minmax+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:504
      bl swap_allocator
 800184a:	f7ff fb8e 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:509
2:

    @ Es ist praktischer, eine eventuelle Konstante in NOS zu haben... Dann kann die Konstante direkt aus r0/r1 geholt werden.
    @ Da durch die Faltung höchstens eine Konstante auftreten kann, ist alles kein Problem.
    ldr r1, [r0, #offset_state_tos]
 800184e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:510
    cmp r1, #constant @ Ist TOS also eine Konstante, welchsele ich.
 8001850:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:511
    bne 2f
 8001852:	d101      	bne.n	8001858 <alloc_minmax+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:512
      bl swap_allocator
 8001854:	f7ff fb89 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:515
2:  @ Konstante, wenn vorhanden, in NOS !

    bl make_tos_changeable       @ Wenn nötig, eine Elementkopie anlegen
 8001858:	f7fe feaf 	bl	80005ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:516
    bl expect_nos_in_register    @ Register kommt in r1 zurück
 800185c:	f7fe fe82 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:520


    @ r1: NOS
    lsls r1, #3
 8001860:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:523

    @ r2: TOS
    ldr r2, [r0, #offset_state_tos]
 8001862:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:525

    pushdaconstw 0x4280 @ cmp r0, r0
 8001864:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001868:	f244 2680 	movw	r6, #17024	; 0x4280
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:526
    orrs tos, r1
 800186c:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:527
    orrs tos, r2
 800186e:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:528
    bl hkomma
 8001870:	f002 f822 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:529
    bl hkomma @ Sprung einfügen
 8001874:	f002 f820 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:530
    pushdaconstw 0x4600 @ mov r0, r0
 8001878:	f847 6d04 	str.w	r6, [r7, #-4]!
 800187c:	f244 6600 	movw	r6, #17920	; 0x4600
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:531
    orrs tos, r1
 8001880:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:532
    orrs tos, r2
 8001882:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:533
    bl hkomma
 8001884:	f002 f818 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:535

    bl eliminiere_nos
 8001888:	f7fe fd2f 	bl	80002ea <eliminiere_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:536
    pop {pc}
 800188c:	bd00      	pop	{pc}
 800188e:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:312
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
 8001890:	f1b00f00 	.word	0xf1b00f00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:355
    ldr r0, =allocator_base
 8001894:	24000020 	.word	0x24000020

08001898 <Dictionary_373>:
Dictionary_373():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/comparisions.s:355
 8001898:	080018d6 	.word	0x080018d6
 800189c:	6d040000 	.word	0x6d040000
 80018a0:	766f      	.short	0x766f
 80018a2:	65          	.byte	0x65
	...

080018a4 <Code_373>:
Code_373():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:27
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "move"  @ Move some bytes around. This can cope with overlapping memory areas.
move:  @ ( Quelladdr Zieladdr Byteanzahl -- ) ( Source Destination Count -- )
@------------------------------------------------------------------------------

  push {r0, r1, r2, lr}
 80018a4:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:29

  popda r1 @ Count
 80018a6:	0031      	movs	r1, r6
 80018a8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:30
  popda r2 @ Destination address
 80018aa:	0032      	movs	r2, r6
 80018ac:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:34
  @ TOS:     Source address

  @ Count > 0 ?
  cmp r1, #0
 80018ae:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:35
  beq 3f @ Nothing to do if count is zero.
 80018b0:	d00f      	beq.n	80018d2 <Code_373+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:38

  @ Compare source and destination address to find out which direction to copy.
  cmp r2, tos
 80018b2:	42b2      	cmp	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:39
  beq 3f @ If source and destionation are the same, nothing to do.
 80018b4:	d00d      	beq.n	80018d2 <Code_373+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:40
  blo 2f
 80018b6:	d306      	bcc.n	80018c6 <Code_373+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:42

  subs tos, #1
 80018b8:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:43
  subs r2, #1
 80018ba:	3a01      	subs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:46

1:@ Source > Destination --> Backward move
  ldrb r0, [tos, r1]
 80018bc:	5c70      	ldrb	r0, [r6, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:47
  strb r0, [r2, r1]
 80018be:	5450      	strb	r0, [r2, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:48
  subs r1, #1
 80018c0:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:49
  bne 1b
 80018c2:	d1fb      	bne.n	80018bc <Code_373+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:50
  b 3f
 80018c4:	e005      	b.n	80018d2 <Code_373+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:53

2:@ Source < Destination --> Forward move
  ldrb r0, [tos]
 80018c6:	7830      	ldrb	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:54
  strb r0, [r2]
 80018c8:	7010      	strb	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:55
  adds tos, #1
 80018ca:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:56
  adds r2, #1
 80018cc:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:57
  subs r1, #1
 80018ce:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:58
  bne 2b
 80018d0:	d1f9      	bne.n	80018c6 <Code_373+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:60

3:drop
 80018d2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:61
  pop {r0, r1, r2, pc}
 80018d4:	bd07      	pop	{r0, r1, r2, pc}

080018d6 <Dictionary_377>:
Dictionary_377():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:61
 80018d6:	18f8      	.short	0x18f8
 80018d8:	00000800 	.word	0x00000800
 80018dc:	6c696604 	.word	0x6c696604
 80018e0:	6c          	.byte	0x6c
	...

080018e2 <Code_377>:
Code_377():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:69
  Wortbirne Flag_visible, "fill"  @ Fill memory with given byte.
  @ ( Destination Count Filling -- )
@------------------------------------------------------------------------------
  @ 6.1.1540 FILL CORE ( c-addr u char -- ) If u is greater than zero, store char in each of u consecutive characters of memory beginning at c-addr.

  popda r0 @ Filling byte
 80018e2:	0030      	movs	r0, r6
 80018e4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:70
  popda r1 @ Count
 80018e6:	0031      	movs	r1, r6
 80018e8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:73
  @ TOS      Destination

  cmp r1, #0
 80018ea:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:74
  beq 2f
 80018ec:	d002      	beq.n	80018f4 <Code_377+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:76

1:subs r1, #1
 80018ee:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:77
  strb r0, [tos, r1]
 80018f0:	5470      	strb	r0, [r6, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:78
  bne 1b
 80018f2:	d1fc      	bne.n	80018ee <Code_377+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:80

2:drop
 80018f4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:81
  bx lr
 80018f6:	4770      	bx	lr

080018f8 <Dictionary_381>:
Dictionary_381():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:81
 80018f8:	0800193a 	.word	0x0800193a
 80018fc:	40010220 	.word	0x40010220

08001900 <Code_381>:
Code_381():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:87

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "@" @ ( 32-addr -- x )
                              @ Loads the cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldr tos, [tos]
 8001900:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:88
  bx lr
 8001902:	4770      	bx	lr

08001904 <allocator_4fetch>:
allocator_4fetch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:91

allocator_4fetch:
    pushdaconstw 0x6800 @ ldr r0, [r0, #0] Opcode
 8001904:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001908:	f646 0600 	movw	r6, #26624	; 0x6800

0800190c <allocator_4fetch_anderer_opcode>:
allocator_4fetch_anderer_opcode():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:94

allocator_4fetch_anderer_opcode:
    push {lr}
 800190c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:95
    bl expect_one_element
 800190e:	f7fe fde3 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:98

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
 8001912:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:99
    cmp r3, #constant
 8001914:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:100
    bne 2f
 8001916:	d108      	bne.n	800192a <allocator_4fetch_anderer_opcode+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:101
      ldr r3, [r0, #offset_constant_tos]
 8001918:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:104

      @ Die fünf Bits, die in den LDR-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x7C @ %1111100
 800191a:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:105
      ands r1, r3   @ Bits herausholen
 800191c:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:106
      lsls r1, #4
 800191e:	0109      	lsls	r1, r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:107
      orrs tos, r1
 8001920:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:109

      movs r1, 0x7C @ %1111100
 8001922:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:110
      bics r3, r1
 8001924:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:112

      bl generiere_adresskonstante
 8001926:	f7fe fd64 	bl	80003f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:115

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Laden bereitliegt.
    lsls r3, #3
 800192a:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:116
    orrs tos, r3
 800192c:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:119

    @ Elementkopien umschiffen - das Ladeergebnis benötigt auf jeden Fall einen frischen Register:
    bl tos_registerwechsel
 800192e:	f7fe fe5d 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:121

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
 8001932:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:122
    bl hkomma
 8001934:	f001 ffc0 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:123
    pop {pc}
 8001938:	bd00      	pop	{pc}

0800193a <Dictionary_384>:
Dictionary_384():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:123
 800193a:	1992      	.short	0x1992
 800193c:	02200800 	.word	0x02200800
 8001940:	2101      	.short	0x2101

08001942 <Code_384>:
Code_384():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:129

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "!" @ ( x 32-addr -- )
@ Given a value 'x' and a cell-aligned address 'addr', stores 'x' to memory at 'addr', consuming both.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001942:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:130
  str r0, [tos]      @ Popping both saves a cycle.
 8001944:	6030      	str	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:131
  movs tos, r1
 8001946:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:132
  bx lr
 8001948:	4770      	bx	lr

0800194a <allocator_4store>:
allocator_4store():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:135

allocator_4store:
    pushdaconstw 0x6000 @ str r0, [r0, #0] Opcode
 800194a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800194e:	f246 0600 	movw	r6, #24576	; 0x6000

08001952 <allocator_4store_anderer_opcode>:
allocator_4store_anderer_opcode():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:138

allocator_4store_anderer_opcode:
    push {lr}
 8001952:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:139
    bl expect_two_elements
 8001954:	f7fe fdca 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:142

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
 8001958:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:143
    cmp r3, #constant
 800195a:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:144
    bne 2f
 800195c:	d109      	bne.n	8001972 <allocator_4store_anderer_opcode+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:145
      ldr r3, [r0, #offset_constant_tos]
 800195e:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:148

      @ Die fünf Bits, die in den STR-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x7C @ %1111100
 8001960:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:149
      ands r1, r3   @ Bits herausholen
 8001962:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:150
      lsls r1, #4
 8001964:	0109      	lsls	r1, r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:151
      orrs tos, r1
 8001966:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:153

      movs r1, 0x7C @ %1111100
 8001968:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:154
      bics r3, r1
 800196a:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:156

      bl generiere_adresskonstante
 800196c:	f7fe fd41 	bl	80003f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:157
      str r3, [r0, #offset_state_tos]
 8001970:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:160

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Schreiben bereitliegt.
    lsls r3, #3
 8001972:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:161
    orrs tos, r3
 8001974:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:165


    @ Sollte NOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_nos]
 8001976:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:166
    cmp r3, #constant
 8001978:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:167
    bne 3f
 800197a:	d102      	bne.n	8001982 <allocator_4store_anderer_opcode+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:168
      ldr r3, [r0, #offset_constant_nos]
 800197c:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:169
      bl generiere_konstante
 800197e:	f7fe fd2c 	bl	80003da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:171
3:  @ r3 sagt nun in jedem Fall, in welchem Register der Inhalt zum Schreiben bereitliegt.
    orrs tos, r3
 8001982:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:172
    bl hkomma
 8001984:	f001 ff98 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:174

    bl eliminiere_tos
 8001988:	f7fe fca9 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:175
    bl eliminiere_tos
 800198c:	f7fe fca7 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:176
    pop {pc}
 8001990:	bd00      	pop	{pc}

08001992 <Dictionary_387>:
Dictionary_387():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:176
 8001992:	19c8      	.short	0x19c8
 8001994:	02200800 	.word	0x02200800
 8001998:	2b02      	.short	0x2b02
 800199a:	21          	.byte	0x21
	...

0800199c <Code_387>:
Code_387():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:182

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "+!" @ ( x 32-addr -- )
                               @ Adds 'x' to the memory cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 800199c:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:183
  ldr  r2, [tos]     @ Load the current cell value
 800199e:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:184
  adds r2, r0        @ Do the add
 80019a0:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:185
  str  r2, [tos]     @ Store it back
 80019a2:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:186
  movs tos, r1
 80019a4:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:187
  bx lr
 80019a6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:189

    push {lr}
 80019a8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:190
      bl expect_two_elements
 80019aa:	f7fe fd9f 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:191
      bl dup_allocator
 80019ae:	f7ff faa7 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:192
      bl allocator_4fetch
 80019b2:	f7ff ffa7 	bl	8001904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:193
      bl rot_allocator
 80019b6:	f7ff fb2d 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:194
      bl plus_allocator
 80019ba:	f000 fcf2 	bl	80023a2 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:195
      bl swap_allocator
 80019be:	f7ff fad4 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:196
      bl allocator_4store
 80019c2:	f7ff ffc2 	bl	800194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:197
    pop {pc}
 80019c6:	bd00      	pop	{pc}

080019c8 <Dictionary_388>:
Dictionary_388():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:197
 80019c8:	08001a0c 	.word	0x08001a0c
 80019cc:	68020220 	.word	0x68020220
 80019d0:	40          	.byte	0x40
	...

080019d2 <Code_388>:
Code_388():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:214

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "h@" @ ( 16-addr -- x )
                              @ Loads the half-word at 'addr'.
@ -----------------------------------------------------------------------------
  ldrh tos, [tos]
 80019d2:	8836      	ldrh	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:215
  bx lr
 80019d4:	4770      	bx	lr

080019d6 <allocator_2fetch>:
allocator_2fetch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:218

allocator_2fetch:
    push {lr}
 80019d6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:219
    bl expect_one_element
 80019d8:	f7fe fd7e 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:220
    pushdaconstw 0x8800 @ ldrh r0, [r0, #0] Opcode
 80019dc:	f847 6d04 	str.w	r6, [r7, #-4]!
 80019e0:	f648 0600 	movw	r6, #34816	; 0x8800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:223

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
 80019e4:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:224
    cmp r3, #constant
 80019e6:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:225
    bne 2f
 80019e8:	d108      	bne.n	80019fc <allocator_2fetch+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:226
      ldr r3, [r0, #offset_constant_tos]
 80019ea:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:229

      @ Die fünf Bits, die in den LDRH-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x3E @ %1111100
 80019ec:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:230
      ands r1, r3   @ Bits herausholen
 80019ee:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:231
      lsls r1, #5
 80019f0:	0149      	lsls	r1, r1, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:232
      orrs tos, r1
 80019f2:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:234

      movs r1, 0x3E @ %1111100
 80019f4:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:235
      bics r3, r1
 80019f6:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:237

      bl generiere_adresskonstante
 80019f8:	f7fe fcfb 	bl	80003f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:240

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Laden bereitliegt.
    lsls r3, #3
 80019fc:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:241
    orrs tos, r3
 80019fe:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:244

    @ Elementkopien umschiffen - das Ladeergebnis benötigt auf jeden Fall einen frischen Register:
    bl tos_registerwechsel
 8001a00:	f7fe fdf4 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:246

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
 8001a04:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:247
    bl hkomma
 8001a06:	f001 ff57 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:248
    pop {pc}
 8001a0a:	bd00      	pop	{pc}

08001a0c <Dictionary_391>:
Dictionary_391():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:248
 8001a0c:	08001a66 	.word	0x08001a66
 8001a10:	68020220 	.word	0x68020220
 8001a14:	21          	.byte	0x21
	...

08001a16 <Code_391>:
Code_391():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:254

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "h!" @ ( x 16-addr -- )
hstore: @ Given a value 'x' and an 16-bit-aligned address 'addr', stores 'x' to memory at 'addr', consuming both.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001a16:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:255
  strh r0, [tos]     @ Popping both saves a cycle.
 8001a18:	8030      	strh	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:256
  movs tos, r1
 8001a1a:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:257
  bx lr
 8001a1c:	4770      	bx	lr

08001a1e <allocator_2store>:
allocator_2store():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:260

allocator_2store:
    push {lr}
 8001a1e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:261
    bl expect_two_elements
 8001a20:	f7fe fd64 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:262
    pushdaconstw 0x8000 @ strh r0, [r0, #0] Opcode
 8001a24:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001a28:	f248 0600 	movw	r6, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:265

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
 8001a2c:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:266
    cmp r3, #constant
 8001a2e:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:267
    bne 2f
 8001a30:	d109      	bne.n	8001a46 <allocator_2store+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:268
      ldr r3, [r0, #offset_constant_tos]
 8001a32:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:271

      @ Die fünf Bits, die in den STRH-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x3E @ %1111100
 8001a34:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:272
      ands r1, r3   @ Bits herausholen
 8001a36:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:273
      lsls r1, #5
 8001a38:	0149      	lsls	r1, r1, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:274
      orrs tos, r1
 8001a3a:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:276

      movs r1, 0x3E @ %1111100
 8001a3c:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:277
      bics r3, r1
 8001a3e:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:279

      bl generiere_adresskonstante
 8001a40:	f7fe fcd7 	bl	80003f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:280
      str r3, [r0, #offset_state_tos]
 8001a44:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:283

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Schreiben bereitliegt.
    lsls r3, #3
 8001a46:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:284
    orrs tos, r3
 8001a48:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:288


    @ Sollte NOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_nos]
 8001a4a:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:289
    cmp r3, #constant
 8001a4c:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:290
    bne 3f
 8001a4e:	d102      	bne.n	8001a56 <allocator_2store+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:291
      ldr r3, [r0, #offset_constant_nos]
 8001a50:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:292
      bl generiere_konstante
 8001a52:	f7fe fcc2 	bl	80003da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:294
3:  @ r3 sagt nun in jedem Fall, in welchem Register der Inhalt zum Schreiben bereitliegt.
    orrs tos, r3
 8001a56:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:295
    bl hkomma
 8001a58:	f001 ff2e 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:297

    bl eliminiere_tos
 8001a5c:	f7fe fc3f 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:298
    bl eliminiere_tos
 8001a60:	f7fe fc3d 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:299
    pop {pc}
 8001a64:	bd00      	pop	{pc}

08001a66 <Dictionary_394>:
Dictionary_394():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:299
 8001a66:	1a9c      	.short	0x1a9c
 8001a68:	02200800 	.word	0x02200800
 8001a6c:	212b6803 	.word	0x212b6803

08001a70 <Code_394>:
Code_394():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:306

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "h+!" @ ( x 16-addr -- )
                                @ Adds 'x' to the memory cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001a70:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:307
  ldrh r2, [tos]     @ Load the current cell value
 8001a72:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:308
  adds r2, r0        @ Do the add
 8001a74:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:309
  strh r2, [tos]     @ Store it back
 8001a76:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:310
  movs tos, r1
 8001a78:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:311
  bx lr
 8001a7a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:313

    push {lr}
 8001a7c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:314
      bl expect_two_elements
 8001a7e:	f7fe fd35 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:315
      bl dup_allocator
 8001a82:	f7ff fa3d 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:316
      bl allocator_2fetch
 8001a86:	f7ff ffa6 	bl	80019d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:317
      bl rot_allocator
 8001a8a:	f7ff fac3 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:318
      bl plus_allocator
 8001a8e:	f000 fc88 	bl	80023a2 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:319
      bl swap_allocator
 8001a92:	f7ff fa6a 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:320
      bl allocator_2store
 8001a96:	f7ff ffc2 	bl	8001a1e <allocator_2store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:321
    pop {pc}
 8001a9a:	bd00      	pop	{pc}

08001a9c <Dictionary_395>:
Dictionary_395():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:321
 8001a9c:	08001ae0 	.word	0x08001ae0
 8001aa0:	63020220 	.word	0x63020220
 8001aa4:	40          	.byte	0x40
	...

08001aa6 <Code_395>:
Code_395():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:328

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "c@" @ ( 8-addr -- x )
                              @ Loads the byte at 'addr'.
@ -----------------------------------------------------------------------------
  ldrb tos, [tos]
 8001aa6:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:329
  bx lr
 8001aa8:	4770      	bx	lr

08001aaa <allocator_1fetch>:
allocator_1fetch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:332

allocator_1fetch:
    push {lr}
 8001aaa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:333
    bl expect_one_element
 8001aac:	f7fe fd14 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:334
    pushdaconstw 0x7800 @ ldrb r0, [r0, #0] Opcode
 8001ab0:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001ab4:	f647 0600 	movw	r6, #30720	; 0x7800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:337

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
 8001ab8:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:338
    cmp r3, #constant
 8001aba:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:339
    bne 2f
 8001abc:	d108      	bne.n	8001ad0 <allocator_1fetch+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:340
      ldr r3, [r0, #offset_constant_tos]
 8001abe:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:343

      @ Die fünf Bits, die in den LDRB-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x1F @ %111110
 8001ac0:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:344
      ands r1, r3   @ Bits herausholen
 8001ac2:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:345
      lsls r1, #6
 8001ac4:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:346
      orrs tos, r1
 8001ac6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:348

      movs r1, 0x1F @ %111110
 8001ac8:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:349
      bics r3, r1
 8001aca:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:351

      bl generiere_adresskonstante
 8001acc:	f7fe fc91 	bl	80003f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:354

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Laden bereitliegt.
    lsls r3, #3
 8001ad0:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:355
    orrs tos, r3
 8001ad2:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:358

    @ Elementkopien umschiffen - das Ladeergebnis benötigt auf jeden Fall einen frischen Register:
    bl tos_registerwechsel
 8001ad4:	f7fe fd8a 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:360

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
 8001ad8:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:361
    bl hkomma
 8001ada:	f001 feed 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:362
    pop {pc}
 8001ade:	bd00      	pop	{pc}

08001ae0 <Dictionary_398>:
Dictionary_398():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:362
 8001ae0:	08001b3a 	.word	0x08001b3a
 8001ae4:	63020220 	.word	0x63020220
 8001ae8:	21          	.byte	0x21
	...

08001aea <Code_398>:
Code_398():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:368

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "c!" @ ( x 8-addr -- )
cstore: @ Given a value 'x' and an 8-bit-aligned address 'addr', stores 'x' to memory at 'addr', consuming both.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001aea:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:369
  strb r0, [tos]     @ Popping both saves a cycle.
 8001aec:	7030      	strb	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:370
  movs tos, r1
 8001aee:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:371
  bx lr
 8001af0:	4770      	bx	lr

08001af2 <allocator_1store>:
allocator_1store():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:374

allocator_1store:
    push {lr}
 8001af2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:375
    bl expect_two_elements
 8001af4:	f7fe fcfa 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:376
    pushdaconstw 0x7000 @ strb r0, [r0, #0] Opcode
 8001af8:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001afc:	f247 0600 	movw	r6, #28672	; 0x7000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:379

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
 8001b00:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:380
    cmp r3, #constant
 8001b02:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:381
    bne 2f
 8001b04:	d109      	bne.n	8001b1a <allocator_1store+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:382
      ldr r3, [r0, #offset_constant_tos]
 8001b06:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:385

      @ Die fünf Bits, die in den STRB-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x1F @ %111110
 8001b08:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:386
      ands r1, r3   @ Bits herausholen
 8001b0a:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:387
      lsls r1, #6
 8001b0c:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:388
      orrs tos, r1
 8001b0e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:390

      movs r1, 0x1F @ %111110
 8001b10:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:391
      bics r3, r1
 8001b12:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:393

      bl generiere_adresskonstante
 8001b14:	f7fe fc6d 	bl	80003f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:394
      str r3, [r0, #offset_state_tos]
 8001b18:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:397

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Schreiben bereitliegt.
    lsls r3, #3
 8001b1a:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:398
    orrs tos, r3
 8001b1c:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:402


    @ Sollte NOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_nos]
 8001b1e:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:403
    cmp r3, #constant
 8001b20:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:404
    bne 3f
 8001b22:	d102      	bne.n	8001b2a <allocator_1store+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:405
      ldr r3, [r0, #offset_constant_nos]
 8001b24:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:406
      bl generiere_konstante
 8001b26:	f7fe fc58 	bl	80003da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:408
3:  @ r3 sagt nun in jedem Fall, in welchem Register der Inhalt zum Schreiben bereitliegt.
    orrs tos, r3
 8001b2a:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:409
    bl hkomma
 8001b2c:	f001 fec4 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:411

    bl eliminiere_tos
 8001b30:	f7fe fbd5 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:412
    bl eliminiere_tos
 8001b34:	f7fe fbd3 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:413
    pop {pc}
 8001b38:	bd00      	pop	{pc}

08001b3a <Dictionary_401>:
Dictionary_401():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:413
 8001b3a:	1b70      	.short	0x1b70
 8001b3c:	02200800 	.word	0x02200800
 8001b40:	212b6303 	.word	0x212b6303

08001b44 <Code_401>:
Code_401():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:419

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "c+!" @ ( x 8-addr -- )
                               @ Adds 'x' to the memory cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001b44:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:420
  ldrb r2, [tos]     @ Load the current cell value
 8001b46:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:421
  adds r2, r0        @ Do the add
 8001b48:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:422
  strb r2, [tos]     @ Store it back
 8001b4a:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:423
  movs tos, r1
 8001b4c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:424
  bx lr
 8001b4e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:426

    push {lr}
 8001b50:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:427
      bl expect_two_elements
 8001b52:	f7fe fccb 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:428
      bl dup_allocator
 8001b56:	f7ff f9d3 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:429
      bl allocator_1fetch
 8001b5a:	f7ff ffa6 	bl	8001aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:430
      bl rot_allocator
 8001b5e:	f7ff fa59 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:431
      bl plus_allocator
 8001b62:	f000 fc1e 	bl	80023a2 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:432
      bl swap_allocator
 8001b66:	f7ff fa00 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:433
      bl allocator_1store
 8001b6a:	f7ff ffc2 	bl	8001af2 <allocator_1store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:434
    pop {pc}
 8001b6e:	bd00      	pop	{pc}

08001b70 <Dictionary_402>:
Dictionary_402():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:434
 8001b70:	08001b94 	.word	0x08001b94
 8001b74:	62040220 	.word	0x62040220
 8001b78:	7369      	.short	0x7369
 8001b7a:	21          	.byte	0x21
	...

08001b7c <Code_402>:
Code_402():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:442

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "bis!" @ ( x 32-addr -- )  Set bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001b7c:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:443
  ldr  r2, [tos] @ Alten Inhalt laden
 8001b7e:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:444
  orrs r2, r0    @ Hinzuverodern
 8001b80:	4302      	orrs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:445
  str  r2, [tos] @ Zurückschreiben
 8001b82:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:446
  movs tos, r1
 8001b84:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:447
  bx lr
 8001b86:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:449

    push {lr}
 8001b88:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:450
      pushdaconstw 0x4300 @ orrs r0, r0      Opcode
 8001b8a:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001b8e:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:451
      b.n allocator_xorstore_intern
 8001b92:	e030      	b.n	8001bf6 <allocator_xorstore_intern>

08001b94 <Dictionary_405>:
Dictionary_405():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:451
 8001b94:	08001bd4 	.word	0x08001bd4
 8001b98:	62040220 	.word	0x62040220
 8001b9c:	6369      	.short	0x6369
 8001b9e:	21          	.byte	0x21
	...

08001ba0 <Code_405>:
Code_405():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:457

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "bic!" @ ( x 32-addr -- )  Clear bits
  @ Löscht die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001ba0:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:458
  ldr  r2, [tos] @ Alten Inhalt laden
 8001ba2:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:459
  bics r2, r0    @ Bits löschen
 8001ba4:	4382      	bics	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:460
  str  r2, [tos] @ Zurückschreiben
 8001ba6:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:461
  movs tos, r1
 8001ba8:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:462
  bx lr
 8001baa:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:464

    push {lr}
 8001bac:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:465
      bl expect_two_elements
 8001bae:	f7fe fc9d 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:466
      bl dup_allocator
 8001bb2:	f7ff f9a5 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:467
      bl allocator_4fetch
 8001bb6:	f7ff fea5 	bl	8001904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:468
      bl rot_allocator
 8001bba:	f7ff fa2b 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:469
      pushdaconstw 0x4380 @ bics r0, r0      Opcode
 8001bbe:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001bc2:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:470
      bl alloc_unkommutativ
 8001bc6:	f7ff fbf0 	bl	80013aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:471
      bl swap_allocator
 8001bca:	f7ff f9ce 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:472
      bl allocator_4store
 8001bce:	f7ff febc 	bl	800194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:473
    pop {pc}
 8001bd2:	bd00      	pop	{pc}

08001bd4 <Dictionary_408>:
Dictionary_408():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:473
 8001bd4:	08001c14 	.word	0x08001c14
 8001bd8:	78040220 	.word	0x78040220
 8001bdc:	726f      	.short	0x726f
 8001bde:	21          	.byte	0x21
	...

08001be0 <Code_408>:
Code_408():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:479

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "xor!" @ ( x 32-addr -- )  Toggle bits
  @ Wechselt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001be0:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:480
  ldr  r2, [tos] @ Alten Inhalt laden
 8001be2:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:481
  eors r2, r0    @ Bits umkehren
 8001be4:	4042      	eors	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:482
  str  r2, [tos] @ Zurückschreiben
 8001be6:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:483
  movs tos, r1
 8001be8:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:484
  bx lr
 8001bea:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:486

    push {lr}
 8001bec:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:487
      pushdaconstw 0x4040 @ eors r0, r0      Opcode
 8001bee:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001bf2:	f244 0640 	movw	r6, #16448	; 0x4040

08001bf6 <allocator_xorstore_intern>:
allocator_xorstore_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:489
allocator_xorstore_intern:
      bl expect_two_elements
 8001bf6:	f7fe fc79 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:490
      bl dup_allocator
 8001bfa:	f7ff f981 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:491
      bl allocator_4fetch
 8001bfe:	f7ff fe81 	bl	8001904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:492
      bl rot_allocator
 8001c02:	f7ff fa07 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:494
      @ ( Opcode )
      bl alloc_kommutativ
 8001c06:	f7ff fbd4 	bl	80013b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:495
      bl swap_allocator
 8001c0a:	f7ff f9ae 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:496
      bl allocator_4store
 8001c0e:	f7ff fe9c 	bl	800194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:497
    pop {pc}
 8001c12:	bd00      	pop	{pc}

08001c14 <Dictionary_411>:
Dictionary_411():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:497
 8001c14:	08001c4a 	.word	0x08001c4a
 8001c18:	62040220 	.word	0x62040220
 8001c1c:	7469      	.short	0x7469
 8001c1e:	40          	.byte	0x40
	...

08001c20 <Code_411>:
Code_411():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:503

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "bit@" @ ( x 32-addr -- Flag )  Check bits
  @ Prüft, ob Bits in der Speicherstelle gesetzt sind
@ -----------------------------------------------------------------------------
  ldm psp!, {r0} @ Bitmaske holen
 8001c20:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:504
  ldr tos, [tos] @ Speicherinhalt holen
 8001c22:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:505
  ands tos, r0   @ Bleibt nach AND etwas über ?
 8001c24:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:513
  subs tos, #1
  sbcs tos, tos
  mvns tos, tos
  bx lr
  .else
  it ne
 8001c26:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:514
  movne tos, #-1 @ Bleibt etwas über, mache ein ordentliches true-Flag daraus.
 8001c28:	f04f 36ff 	movne.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:515
  bx lr
 8001c2c:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:518
  .endif

    push {lr}
 8001c2e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:519
      bl expect_two_elements
 8001c30:	f7fe fc5c 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:520
      bl allocator_4fetch
 8001c34:	f7ff fe66 	bl	8001904 <allocator_4fetch>

08001c38 <allocator_bitfetch_intern>:
allocator_bitfetch_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:522
allocator_bitfetch_intern:
      pushdaconstw 0x4000 @ ands r0, r0 Opcode
 8001c38:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001c3c:	f244 0600 	movw	r6, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:523
      bl alloc_kommutativ
 8001c40:	f7ff fbb7 	bl	80013b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:524
      bl allocator_unequal_zero
 8001c44:	f7ff fc2c 	bl	80014a0 <allocator_unequal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:525
    pop {pc}
 8001c48:	bd00      	pop	{pc}

08001c4a <Dictionary_414>:
Dictionary_414():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:525
 8001c4a:	1c6e      	.short	0x1c6e
 8001c4c:	02200800 	.word	0x02200800
 8001c50:	69626805 	.word	0x69626805
 8001c54:	2173      	.short	0x2173

08001c56 <Code_414>:
Code_414():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:531

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hbis!" @ ( x 16-addr -- )  Set bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001c56:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:532
  ldrh r2, [tos] @ Alten Inhalt laden
 8001c58:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:533
  orrs r2, r0    @ Hinzuverodern
 8001c5a:	4302      	orrs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:534
  strh r2, [tos] @ Zurückschreiben
 8001c5c:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:535
  movs tos, r1
 8001c5e:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:536
  bx lr
 8001c60:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:538

    push {lr}
 8001c62:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:539
      pushdaconstw 0x4300 @ orrs r0, r0      Opcode
 8001c64:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001c68:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:540
      b.n allocator_hxorstore_intern
 8001c6c:	e030      	b.n	8001cd0 <allocator_hxorstore_intern>

08001c6e <Dictionary_417>:
Dictionary_417():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:540
 8001c6e:	1cae      	.short	0x1cae
 8001c70:	02200800 	.word	0x02200800
 8001c74:	69626805 	.word	0x69626805
 8001c78:	2163      	.short	0x2163

08001c7a <Code_417>:
Code_417():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:546

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hbic!" @ ( x 16-addr -- )  Clear bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001c7a:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:547
  ldrh r2, [tos] @ Alten Inhalt laden
 8001c7c:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:548
  bics r2, r0    @ Hinzuverodern
 8001c7e:	4382      	bics	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:549
  strh r2, [tos] @ Zurückschreiben
 8001c80:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:550
  movs tos, r1
 8001c82:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:551
  bx lr
 8001c84:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:553

    push {lr}
 8001c86:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:554
      bl expect_two_elements
 8001c88:	f7fe fc30 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:555
      bl dup_allocator
 8001c8c:	f7ff f938 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:556
      bl allocator_2fetch
 8001c90:	f7ff fea1 	bl	80019d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:557
      bl rot_allocator
 8001c94:	f7ff f9be 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:558
      pushdaconstw 0x4380 @ bics r0, r0      Opcode
 8001c98:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001c9c:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:559
      bl alloc_unkommutativ
 8001ca0:	f7ff fb83 	bl	80013aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:560
      bl swap_allocator
 8001ca4:	f7ff f961 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:561
      bl allocator_2store
 8001ca8:	f7ff feb9 	bl	8001a1e <allocator_2store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:562
    pop {pc}
 8001cac:	bd00      	pop	{pc}

08001cae <Dictionary_420>:
Dictionary_420():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:562
 8001cae:	1cee      	.short	0x1cee
 8001cb0:	02200800 	.word	0x02200800
 8001cb4:	6f786805 	.word	0x6f786805
 8001cb8:	2172      	.short	0x2172

08001cba <Code_420>:
Code_420():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:568

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hxor!" @ ( x 16-addr -- )  Toggle bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001cba:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:569
  ldrh r2, [tos] @ Alten Inhalt laden
 8001cbc:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:570
  eors r2, r0    @ Hinzuverodern
 8001cbe:	4042      	eors	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:571
  strh r2, [tos] @ Zurückschreiben
 8001cc0:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:572
  movs tos, r1
 8001cc2:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:573
  bx lr
 8001cc4:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:575

    push {lr}
 8001cc6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:576
      pushdaconstw 0x4040 @ eors r0, r0      Opcode
 8001cc8:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001ccc:	f244 0640 	movw	r6, #16448	; 0x4040

08001cd0 <allocator_hxorstore_intern>:
allocator_hxorstore_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:578
allocator_hxorstore_intern:
      bl expect_two_elements
 8001cd0:	f7fe fc0c 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:579
      bl dup_allocator
 8001cd4:	f7ff f914 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:580
      bl allocator_2fetch
 8001cd8:	f7ff fe7d 	bl	80019d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:581
      bl rot_allocator
 8001cdc:	f7ff f99a 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:583
      @ ( Opcode -- )
      bl alloc_kommutativ
 8001ce0:	f7ff fb67 	bl	80013b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:584
      bl swap_allocator
 8001ce4:	f7ff f941 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:585
      bl allocator_2store
 8001ce8:	f7ff fe99 	bl	8001a1e <allocator_2store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:586
    pop {pc}
 8001cec:	bd00      	pop	{pc}

08001cee <Dictionary_423>:
Dictionary_423():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:586
 8001cee:	1d14      	.short	0x1d14
 8001cf0:	02200800 	.word	0x02200800
 8001cf4:	69626805 	.word	0x69626805
 8001cf8:	4074      	.short	0x4074

08001cfa <Code_423>:
Code_423():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:592

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hbit@" @ ( x 16-addr -- Flag )  Check bits
  @ Prüft, ob Bits in der Speicherstelle gesetzt sind
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}  @ Bitmaske holen
 8001cfa:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:593
  ldrh tos, [tos] @ Speicherinhalt holen
 8001cfc:	8836      	ldrh	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:594
  ands tos, r0    @ Bleibt nach AND etwas über ?
 8001cfe:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:602
  subs tos, #1
  sbcs tos, tos
  mvns tos, tos
  bx lr
  .else
  it ne
 8001d00:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:603
  movne tos, #-1 @ Bleibt etwas über, mache ein ordentliches true-Flag daraus.
 8001d02:	f04f 36ff 	movne.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:604
  bx lr
 8001d06:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:607
  .endif

    push {lr}
 8001d08:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:608
      bl expect_two_elements
 8001d0a:	f7fe fbef 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:609
      bl allocator_2fetch
 8001d0e:	f7ff fe62 	bl	80019d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:610
      b.n allocator_bitfetch_intern
 8001d12:	e791      	b.n	8001c38 <allocator_bitfetch_intern>

08001d14 <Dictionary_424>:
Dictionary_424():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:610
 8001d14:	08001d38 	.word	0x08001d38
 8001d18:	63050220 	.word	0x63050220
 8001d1c:	21736962 	.word	0x21736962

08001d20 <Code_424>:
Code_424():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:616

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cbis!" @ ( x 8-addr -- )  Set bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001d20:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:617
  ldrb r2, [tos] @ Alten Inhalt laden
 8001d22:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:618
  orrs r2, r0    @ Hinzuverodern
 8001d24:	4302      	orrs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:619
  strb r2, [tos] @ Zurückschreiben
 8001d26:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:620
  movs tos, r1
 8001d28:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:621
  bx lr
 8001d2a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:623

    push {lr}
 8001d2c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:624
      pushdaconstw 0x4300 @ orrs r0, r0      Opcode
 8001d2e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001d32:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:625
      b.n allocator_cxorstore_intern
 8001d36:	e030      	b.n	8001d9a <allocator_cxorstore_intern>

08001d38 <Dictionary_427>:
Dictionary_427():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:625
 8001d38:	08001d78 	.word	0x08001d78
 8001d3c:	63050220 	.word	0x63050220
 8001d40:	21636962 	.word	0x21636962

08001d44 <Code_427>:
Code_427():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:631

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cbic!" @ ( x 8-addr -- )  Clear bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001d44:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:632
  ldrb r2, [tos] @ Alten Inhalt laden
 8001d46:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:633
  bics r2, r0    @ Hinzuverodern
 8001d48:	4382      	bics	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:634
  strb r2, [tos] @ Zurückschreiben
 8001d4a:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:635
  movs tos, r1
 8001d4c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:636
  bx lr
 8001d4e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:638

    push {lr}
 8001d50:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:639
      bl expect_two_elements
 8001d52:	f7fe fbcb 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:640
      bl dup_allocator
 8001d56:	f7ff f8d3 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:641
      bl allocator_1fetch
 8001d5a:	f7ff fea6 	bl	8001aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:642
      bl rot_allocator
 8001d5e:	f7ff f959 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:643
      pushdaconstw 0x4380 @ bics r0, r0      Opcode
 8001d62:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001d66:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:644
      bl alloc_unkommutativ
 8001d6a:	f7ff fb1e 	bl	80013aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:645
      bl swap_allocator
 8001d6e:	f7ff f8fc 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:646
      bl allocator_1store
 8001d72:	f7ff febe 	bl	8001af2 <allocator_1store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:647
    pop {pc}
 8001d76:	bd00      	pop	{pc}

08001d78 <Dictionary_430>:
Dictionary_430():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:647
 8001d78:	08001db8 	.word	0x08001db8
 8001d7c:	63050220 	.word	0x63050220
 8001d80:	21726f78 	.word	0x21726f78

08001d84 <Code_430>:
Code_430():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:653

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cxor!" @ ( x 8-addr -- )  Toggle bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
 8001d84:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:654
  ldrb r2, [tos] @ Alten Inhalt laden
 8001d86:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:655
  eors r2, r0     @ Hinzuverodern
 8001d88:	4042      	eors	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:656
  strb r2, [tos] @ Zurückschreiben
 8001d8a:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:657
  movs tos, r1
 8001d8c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:658
  bx lr
 8001d8e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:660

    push {lr}
 8001d90:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:661
      pushdaconstw 0x4040 @ eors r0, r0      Opcode
 8001d92:	f847 6d04 	str.w	r6, [r7, #-4]!
 8001d96:	f244 0640 	movw	r6, #16448	; 0x4040

08001d9a <allocator_cxorstore_intern>:
allocator_cxorstore_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:663
allocator_cxorstore_intern:
      bl expect_two_elements
 8001d9a:	f7fe fba7 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:664
      bl dup_allocator
 8001d9e:	f7ff f8af 	bl	8000f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:665
      bl allocator_1fetch
 8001da2:	f7ff fe82 	bl	8001aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:666
      bl rot_allocator
 8001da6:	f7ff f935 	bl	8001014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:668
      @ ( Opcode -- )
      bl alloc_kommutativ
 8001daa:	f7ff fb02 	bl	80013b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:669
      bl swap_allocator
 8001dae:	f7ff f8dc 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:670
      bl allocator_1store
 8001db2:	f7ff fe9e 	bl	8001af2 <allocator_1store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:671
    pop {pc}
 8001db6:	bd00      	pop	{pc}

08001db8 <Dictionary_433>:
Dictionary_433():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:671
 8001db8:	08001f02 	.word	0x08001f02
 8001dbc:	63050220 	.word	0x63050220
 8001dc0:	40746962 	.word	0x40746962

08001dc4 <Code_433>:
Code_433():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:677

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cbit@" @ ( x 8-addr -- Flag )  Check bits
  @ Prüft, ob Bits in der Speicherstelle gesetzt sind
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}  @ Bitmaske holen
 8001dc4:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:678
  ldrb tos, [tos] @ Speicherinhalt holen
 8001dc6:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:679
  ands tos, r0    @ Bleibt nach AND etwas über ?
 8001dc8:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:687
  subs tos, #1
  sbcs tos, tos
  mvns tos, tos
  bx lr
  .else
  it ne
 8001dca:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:688
  movne tos, #-1 @ Bleibt etwas über, mache ein ordentliches true-Flag daraus.
 8001dcc:	f04f 36ff 	movne.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:689
  bx lr
 8001dd0:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:692
  .endif

    push {lr}
 8001dd2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:693
      bl expect_two_elements
 8001dd4:	f7fe fb8a 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:694
      bl allocator_1fetch
 8001dd8:	f7ff fe67 	bl	8001aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/memory.s:695
      b.n allocator_bitfetch_intern
 8001ddc:	e72c      	b.n	8001c38 <allocator_bitfetch_intern>

08001dde <check_flash_error>:
check_flash_error():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:47

.equ FLASH_ERROR_MSK, 0x00020000|0x00040000|0x00080000|0x00400000|0x00800000|0x01000000|0x04000000|0x10000000|0x00200000|0x02000000

@ return Z = 0 no error z = 1 error, errors bits in r2
check_flash_error:
	ldr 	r2, =FLASH_SR
 8001dde:	4ac9      	ldr	r2, [pc, #804]	; (8002104 <Code_455+0xf8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:48
    ldr 	r3, [r2]
 8001de0:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:49
    ldr 	r2, =FLASH_ERROR_MSK
 8001de2:	4ac9      	ldr	r2, [pc, #804]	; (8002108 <Code_455+0xfc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:50
	ands 	r3, r2
 8001de4:	4013      	ands	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:51
	bne  	1f
 8001de6:	d100      	bne.n	8001dea <check_flash_error+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:52
	bx		lr
 8001de8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:54
	@ clear the error flags
1:	ldr 	r2, =FLASH_CCR
 8001dea:	4ac8      	ldr	r2, [pc, #800]	; (800210c <Code_455+0x100>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:55
	ldr 	r4, =FLASH_ERROR_MSK
 8001dec:	4cc6      	ldr	r4, [pc, #792]	; (8002108 <Code_455+0xfc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:56
	str 	r4, [r2]
 8001dee:	6014      	str	r4, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:57
	movs 	r2, r3
 8001df0:	001a      	movs	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:58
	bx		lr
 8001df2:	4770      	bx	lr

08001df4 <wait_for_last_operation>:
wait_for_last_operation():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:61

wait_for_last_operation:
	push    {lr}
 8001df4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:63
	@ Wait For Last Operation QW flag bit2
	ldr 	r2, =FLASH_SR
 8001df6:	4ac3      	ldr	r2, [pc, #780]	; (8002104 <Code_455+0xf8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:64
1:  ldr 	r3, [r2]
 8001df8:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:65
	ands 	r3, #0x00000004
 8001dfa:	f013 0304 	ands.w	r3, r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:66
	bne 	1b
 8001dfe:	d1fb      	bne.n	8001df8 <wait_for_last_operation+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:67
	bl 		check_flash_error @ check error flags
 8001e00:	f7ff ffed 	bl	8001dde <check_flash_error>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:68
	beq 	3f
 8001e04:	d000      	beq.n	8001e08 <wait_for_last_operation+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:69
	pop     {pc}
 8001e06:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:71
	@ check end of operation flag 0x00010000
3:	ldr 	r2, =FLASH_SR
 8001e08:	4abe      	ldr	r2, [pc, #760]	; (8002104 <Code_455+0xf8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:72
    ldr 	r3, [r2]
 8001e0a:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:73
	ands 	r3, #0x00010000
 8001e0c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:74
	beq 	2f
 8001e10:	d004      	beq.n	8001e1c <wait_for_last_operation+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:76
	@ clear it
	ldr 	r2, =FLASH_CCR
 8001e12:	4abe      	ldr	r2, [pc, #760]	; (800210c <Code_455+0x100>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:77
	ldr 	r3, [r2]
 8001e14:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:78
    orr 	r3, #0x00010000
 8001e16:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:79
  	str  	r3, [r2]
 8001e1a:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:80
2:  movs 	r2, #0
 8001e1c:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:81
	pop     {pc}
 8001e1e:	bd00      	pop	{pc}

08001e20 <flash_line>:
flash_line():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:87

@ flash the 32 byte flash line to flash at
@ address in r0
@ from buffer in r1
flash_line:
	push    {r0-r4, lr}
 8001e20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:90
	@ do flash
	@ Unlock Flash Control
	ldr 	r2, =FLASH_KEYR
 8001e22:	4abb      	ldr	r2, [pc, #748]	; (8002110 <Code_455+0x104>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:91
	ldr 	r3, =0x45670123
 8001e24:	4bbb      	ldr	r3, [pc, #748]	; (8002114 <Code_455+0x108>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:92
	str 	r3, [r2]
 8001e26:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:93
	ldr 	r3, =0xCDEF89AB
 8001e28:	4bbb      	ldr	r3, [pc, #748]	; (8002118 <Code_455+0x10c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:94
	str 	r3, [r2]
 8001e2a:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:96
	@ Check it is unlocked
	ldr 	r2, =FLASH_CR
 8001e2c:	4abb      	ldr	r2, [pc, #748]	; (800211c <Code_455+0x110>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:97
	ldr 	r3, [r2]
 8001e2e:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:98
	ands 	r3, #0x00000001
 8001e30:	f013 0301 	ands.w	r3, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:99
	bne 	3f
 8001e34:	d12a      	bne.n	8001e8c <flash_line+0x6c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:102

	@ HAL does this, checks for any last operation to finish without errors
	bl 		wait_for_last_operation
 8001e36:	f7ff ffdd 	bl	8001df4 <wait_for_last_operation>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:103
	movs	r4, r2
 8001e3a:	0014      	movs	r4, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:104
	cmp 	r4, #0
 8001e3c:	2c00      	cmp	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:105
	bne 	4f
 8001e3e:	d136      	bne.n	8001eae <flash_line+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:108

 	@ Set PGBIT
 	ldr   	r2, =FLASH_CR
 8001e40:	4ab6      	ldr	r2, [pc, #728]	; (800211c <Code_455+0x110>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:109
	ldr   	r4, [r2]
 8001e42:	6814      	ldr	r4, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:110
  	orr   	r4, #0x00000002
 8001e44:	f044 0402 	orr.w	r4, r4, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:111
	str   	r4, [r2]
 8001e48:	6014      	str	r4, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:113

	ISB
 8001e4a:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:114
	DSB
 8001e4e:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:117

	@ Write to Flash from the flash line buffer 32 bytes in r1
	mov 	r2, r1
 8001e52:	460a      	mov	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:118
	mov		r3, #8
 8001e54:	f04f 0308 	mov.w	r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:119
1:  ldr 	r1, [r2], #4 @ read word from flash line buffer
 8001e58:	f852 1b04 	ldr.w	r1, [r2], #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:120
	str 	r1, [r0], #4
 8001e5c:	f840 1b04 	str.w	r1, [r0], #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:121
	subs 	r3, #1
 8001e60:	3b01      	subs	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:122
	bne 	1b
 8001e62:	d1f9      	bne.n	8001e58 <flash_line+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:124

	ISB
 8001e64:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:125
	DSB
 8001e68:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:127

	bl 		wait_for_last_operation
 8001e6c:	f7ff ffc2 	bl	8001df4 <wait_for_last_operation>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:128
	mov 	r4, r2			@ save the error in r4 for later
 8001e70:	4614      	mov	r4, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:138
@2:  ldr r3, [r2]
@	ands r3, #0x00010000
@	bne 2b

	@ clear PG bit
 	ldr   	r1, =FLASH_CR
 8001e72:	49aa      	ldr	r1, [pc, #680]	; (800211c <Code_455+0x110>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:139
	ldr   	r0, [r1]
 8001e74:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:140
  	bic   	r0, #0x00000002
 8001e76:	f020 0002 	bic.w	r0, r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:141
	str   	r0, [r1]
 8001e7a:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:144

	@ Lock Flash after finishing this
	ldr 	r2, =FLASH_CR
 8001e7c:	4aa7      	ldr	r2, [pc, #668]	; (800211c <Code_455+0x110>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:145
	ldr   	r1, [r2]
 8001e7e:	6811      	ldr	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:146
  	orr   	r1, #0x00000001		@ set bit
 8001e80:	f041 0101 	orr.w	r1, r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:147
	str   	r1, [r2]
 8001e84:	6011      	str	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:150

	@ check for any errors
	cmp 	r4, #0
 8001e86:	2c00      	cmp	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:151
	bne 	4f
 8001e88:	d111      	bne.n	8001eae <flash_line+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:152
	pop     {r0-r4, pc}
 8001e8a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:154

3: 	Fehler_Quit "Error 1 writing flash !"
 8001e8c:	f000 ff8c 	bl	8002da8 <dotgaensefuesschen>
 8001e90:	72724518 	.word	0x72724518
 8001e94:	3120726f 	.word	0x3120726f
 8001e98:	69727720 	.word	0x69727720
 8001e9c:	676e6974 	.word	0x676e6974
 8001ea0:	616c6620 	.word	0x616c6620
 8001ea4:	21206873 	.word	0x21206873
 8001ea8:	0a          	.byte	0x0a
 8001ea9:	00          	.byte	0x00
 8001eaa:	f002 bf97 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:156

4: 	pushdatos			@ print out the error code we got
 8001eae:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:157
  	mov 	tos, r4
 8001eb2:	4626      	mov	r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:158
  	bl 		hexdot
 8001eb4:	f000 ffe0 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:159
	Fehler_Quit "Error 2 writing flash !"
 8001eb8:	f000 ff76 	bl	8002da8 <dotgaensefuesschen>
 8001ebc:	72724518 	.word	0x72724518
 8001ec0:	3220726f 	.word	0x3220726f
 8001ec4:	69727720 	.word	0x69727720
 8001ec8:	676e6974 	.word	0x676e6974
 8001ecc:	616c6620 	.word	0x616c6620
 8001ed0:	21206873 	.word	0x21206873
 8001ed4:	0a          	.byte	0x0a
 8001ed5:	00          	.byte	0x00
 8001ed6:	f002 bf81 	b.w	8004ddc <Code_1258>

08001eda <hexflashstore_fehler>:
hexflashstore_fehler():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:162

hexflashstore_fehler:
	Fehler_Quit "Flash cannot be written twice"
 8001eda:	f000 ff65 	bl	8002da8 <dotgaensefuesschen>
 8001ede:	461e      	.short	0x461e
 8001ee0:	6873616c 	.word	0x6873616c
 8001ee4:	6e616320 	.word	0x6e616320
 8001ee8:	20746f6e 	.word	0x20746f6e
 8001eec:	77206562 	.word	0x77206562
 8001ef0:	74746972 	.word	0x74746972
 8001ef4:	74206e65 	.word	0x74206e65
 8001ef8:	65636977 	.word	0x65636977
 8001efc:	0a          	.byte	0x0a
 8001efd:	00          	.byte	0x00
 8001efe:	f002 bf6d 	b.w	8004ddc <Code_1258>

08001f02 <Dictionary_438>:
Dictionary_438():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:162
 8001f02:	1f80      	.short	0x1f80
 8001f04:	00000800 	.word	0x00000800
 8001f08:	66323308 	.word	0x66323308
 8001f0c:	6873616c 	.word	0x6873616c
 8001f10:	21          	.byte	0x21
	...

08001f12 <Code_438>:
Code_438():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:168

@ -----------------------------------------------------------------------------
Wortbirne Flag_visible, "32flash!" @ Writes 32 Bytes at once into Flash.
flashstore_32b: @ ( x1 x2 x3 x4 x5 x6 x7 x8 addr -- ) x1 contains LSB of those 256 bits.
@ -----------------------------------------------------------------------------
	push    {r0-r3, lr}
 8001f12:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:169
	movs    r0, #31
 8001f14:	201f      	movs	r0, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:170
	ands    r0, tos
 8001f16:	4030      	ands	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:171
	beq     1f
 8001f18:	d015      	beq.n	8001f46 <Code_438+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:172
	Fehler_Quit "32flash! needs 32-aligned address"
 8001f1a:	f000 ff45 	bl	8002da8 <dotgaensefuesschen>
 8001f1e:	3322      	.short	0x3322
 8001f20:	616c6632 	.word	0x616c6632
 8001f24:	20216873 	.word	0x20216873
 8001f28:	6465656e 	.word	0x6465656e
 8001f2c:	32332073 	.word	0x32332073
 8001f30:	696c612d 	.word	0x696c612d
 8001f34:	64656e67 	.word	0x64656e67
 8001f38:	64646120 	.word	0x64646120
 8001f3c:	73736572 	.word	0x73736572
 8001f40:	0a          	.byte	0x0a
 8001f41:	00          	.byte	0x00
 8001f42:	f002 bf4b 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:175

	@ check first word to make sure it is virgin unprogrammed
1:	ldr 	r0, [tos]  @ tos contains address to write
 8001f46:	6830      	ldr	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:176
	adds 	r0, #1    @ quick check if memory contains $ffffffff
 8001f48:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:177
	bne 	hexflashstore_fehler
 8001f4a:	d1c6      	bne.n	8001eda <hexflashstore_fehler>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:179

	ldr 	r0, [tos, #4] @ check next 4 bytes at offset 4
 8001f4c:	6870      	ldr	r0, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:180
	adds 	r0, #1
 8001f4e:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:181
	bne 	hexflashstore_fehler
 8001f50:	d1c3      	bne.n	8001eda <hexflashstore_fehler>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:183

	movs	r0, tos                 // addr
 8001f52:	0030      	movs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:184
	drop
 8001f54:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:185
	ldr     r1, =FLASH_BUFFER
 8001f56:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:186
	str     tos, [r1, #28]          // x8
 8001f5a:	61ce      	str	r6, [r1, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:187
	drop
 8001f5c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:188
	str     tos, [r1, #24]          // x7
 8001f5e:	618e      	str	r6, [r1, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:189
	drop
 8001f60:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:190
	str     tos, [r1, #20]          // x6
 8001f62:	614e      	str	r6, [r1, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:191
	drop
 8001f64:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:192
	str     tos, [r1, #16]          // x5
 8001f66:	610e      	str	r6, [r1, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:193
	drop
 8001f68:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:194
	str     tos, [r1, #12]          // x4
 8001f6a:	60ce      	str	r6, [r1, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:195
	drop
 8001f6c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:196
	str     tos, [r1, #8]           // x3
 8001f6e:	608e      	str	r6, [r1, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:197
	drop
 8001f70:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:198
	str     tos, [r1, #4]           // x2
 8001f72:	604e      	str	r6, [r1, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:199
	drop
 8001f74:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:200
	str     tos, [r1]               // x1
 8001f76:	600e      	str	r6, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:201
	drop
 8001f78:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:202
	bl      flash_line
 8001f7a:	f7ff ff51 	bl	8001e20 <flash_line>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:203
	pop     {r0-r3, pc}
 8001f7e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08001f80 <Dictionary_449>:
Dictionary_449():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:203
 8001f80:	08001ffa 	.word	0x08001ffa
 8001f84:	65100000 	.word	0x65100000
 8001f88:	65736172 	.word	0x65736172
 8001f8c:	73616c66 	.word	0x73616c66
 8001f90:	63657368 	.word	0x63657368
 8001f94:	6f74      	.short	0x6f74
 8001f96:	72          	.byte	0x72
	...

08001f98 <Code_449>:
Code_449():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:209

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "eraseflashsector" @ ( u -- )
eraseflashsector:  @ Löscht einen Flash-Sektor
@ -----------------------------------------------------------------------------
  push {lr}
 8001f98:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:211

  cmp tos, #1   @ Nicht den Kern in Sektor 0 löschen
 8001f9a:	2e01      	cmp	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:212
  blo 2f
 8001f9c:	d32b      	bcc.n	8001ff6 <Code_449+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:213
  cmp tos, #8   @ Es gibt nur 8 Sektoren
 8001f9e:	2e08      	cmp	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:214
  bhs 2f
 8001fa0:	d229      	bcs.n	8001ff6 <Code_449+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:216

  ldr r2, =FLASH_KEYR
 8001fa2:	4a5b      	ldr	r2, [pc, #364]	; (8002110 <Code_455+0x104>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:217
  ldr r3, =0x45670123
 8001fa4:	4b5b      	ldr	r3, [pc, #364]	; (8002114 <Code_455+0x108>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:218
  str r3, [r2]
 8001fa6:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:219
  ldr r3, =0xCDEF89AB
 8001fa8:	4b5b      	ldr	r3, [pc, #364]	; (8002118 <Code_455+0x10c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:220
  str r3, [r2]
 8001faa:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:222

  write "Erase sector "
 8001fac:	f000 fefc 	bl	8002da8 <dotgaensefuesschen>
 8001fb0:	6172450d 	.word	0x6172450d
 8001fb4:	73206573 	.word	0x73206573
 8001fb8:	6f746365 	.word	0x6f746365
 8001fbc:	2072      	.short	0x2072
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:223
  dup
 8001fbe:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:224
  bl udot
 8001fc2:	f002 fd5c 	bl	8004a7e <Code_1192>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:227

  @ Set sector to erase
  ldr r2, =FLASH_CR
 8001fc6:	4a55      	ldr	r2, [pc, #340]	; (800211c <Code_455+0x110>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:228
  ldr r3, =0x00000084
 8001fc8:	f04f 0384 	mov.w	r3, #132	; 0x84
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:229
  lsls tos, #3
 8001fcc:	00f6      	lsls	r6, r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:230
  orrs r3, tos
 8001fce:	4333      	orrs	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:231
  str r3, [r2]
 8001fd0:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:234

    @ Wait for Flash BUSY Flag to be cleared
    ldr r2, =FLASH_SR
 8001fd2:	4a4c      	ldr	r2, [pc, #304]	; (8002104 <Code_455+0xf8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:235
1:  ldr r3, [r2]
 8001fd4:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:236
    ands r3, #0x00010000
 8001fd6:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:237
    bne 1b
 8001fda:	d1fb      	bne.n	8001fd4 <Code_449+0x3c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:240

  @ Lock Flash after finishing this
  ldr r2, =FLASH_CR
 8001fdc:	4a4f      	ldr	r2, [pc, #316]	; (800211c <Code_455+0x110>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:241
  ldr r3, =0x00000001
 8001fde:	f04f 0301 	mov.w	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:242
  str r3, [r2]
 8001fe2:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:244

  writeln "from Flash."
 8001fe4:	f000 fee0 	bl	8002da8 <dotgaensefuesschen>
 8001fe8:	6f72660c 	.word	0x6f72660c
 8001fec:	6c46206d 	.word	0x6c46206d
 8001ff0:	2e687361 	.word	0x2e687361
 8001ff4:	0a          	.byte	0x0a
 8001ff5:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:246

2:drop
 8001ff6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:247
  pop {pc}
 8001ff8:	bd00      	pop	{pc}

08001ffa <Dictionary_455>:
Dictionary_455():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:247
 8001ffa:	2158      	.short	0x2158
 8001ffc:	00000800 	.word	0x00000800
 8002000:	6172650a 	.word	0x6172650a
 8002004:	6c666573 	.word	0x6c666573
 8002008:	7361      	.short	0x7361
 800200a:	68          	.byte	0x68
	...

0800200c <Code_455>:
Code_455():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:271
  Wortbirne Flag_visible, "eraseflash" @ ( -- )
  @ Löscht den gesamten Inhalt des Flashdictionaries.
@ -----------------------------------------------------------------------------
  @ Flash ist in Sektoren aufgeteilt. Prüfe die nacheinander, ob ein Löschen nötig ist.
  @ So kann ich den Speicher schonen und flott löschen :-)
  cpsid i @ Interrupt-Handler deaktivieren
 800200c:	b672      	cpsid	i
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:273

  push {lr}
 800200e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:278

@ -----------------------------------------------------------------------------
@ 32 kb sectors
@ loeschpruefung  0x08000000  0x08007FFF  0
  loeschpruefung  0x08008000  0x0800FFFF  1
 8002010:	4843      	ldr	r0, [pc, #268]	; (8002120 <Code_455+0x114>)
 8002012:	4944      	ldr	r1, [pc, #272]	; (8002124 <Code_455+0x118>)
 8002014:	6802      	ldr	r2, [r0, #0]
 8002016:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 800201a:	d005      	beq.n	8002028 <Code_455+0x1c>
 800201c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002020:	2601      	movs	r6, #1
 8002022:	f7ff ffb9 	bl	8001f98 <Code_449>
 8002026:	e002      	b.n	800202e <Code_455+0x22>
 8002028:	3004      	adds	r0, #4
 800202a:	4288      	cmp	r0, r1
 800202c:	d3f2      	bcc.n	8002014 <Code_455+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:279
  loeschpruefung  0x08010000  0x08017FFF  2
 800202e:	483e      	ldr	r0, [pc, #248]	; (8002128 <Code_455+0x11c>)
 8002030:	493e      	ldr	r1, [pc, #248]	; (800212c <Code_455+0x120>)
 8002032:	6802      	ldr	r2, [r0, #0]
 8002034:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8002038:	d005      	beq.n	8002046 <Code_455+0x3a>
 800203a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800203e:	2602      	movs	r6, #2
 8002040:	f7ff ffaa 	bl	8001f98 <Code_449>
 8002044:	e002      	b.n	800204c <Code_455+0x40>
 8002046:	3004      	adds	r0, #4
 8002048:	4288      	cmp	r0, r1
 800204a:	d3f2      	bcc.n	8002032 <Code_455+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:280
  loeschpruefung  0x08018000  0x0801FFFF  3
 800204c:	4838      	ldr	r0, [pc, #224]	; (8002130 <Code_455+0x124>)
 800204e:	4939      	ldr	r1, [pc, #228]	; (8002134 <Code_455+0x128>)
 8002050:	6802      	ldr	r2, [r0, #0]
 8002052:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8002056:	d005      	beq.n	8002064 <Code_455+0x58>
 8002058:	f847 6d04 	str.w	r6, [r7, #-4]!
 800205c:	2603      	movs	r6, #3
 800205e:	f7ff ff9b 	bl	8001f98 <Code_449>
 8002062:	e002      	b.n	800206a <Code_455+0x5e>
 8002064:	3004      	adds	r0, #4
 8002066:	4288      	cmp	r0, r1
 8002068:	d3f2      	bcc.n	8002050 <Code_455+0x44>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:284

@ -----------------------------------------------------------------------------
@ 128 kb sector
  loeschpruefung  0x08020000  0x0803FFFF  4
 800206a:	4833      	ldr	r0, [pc, #204]	; (8002138 <Code_455+0x12c>)
 800206c:	4933      	ldr	r1, [pc, #204]	; (800213c <Code_455+0x130>)
 800206e:	6802      	ldr	r2, [r0, #0]
 8002070:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8002074:	d005      	beq.n	8002082 <Code_455+0x76>
 8002076:	f847 6d04 	str.w	r6, [r7, #-4]!
 800207a:	2604      	movs	r6, #4
 800207c:	f7ff ff8c 	bl	8001f98 <Code_449>
 8002080:	e002      	b.n	8002088 <Code_455+0x7c>
 8002082:	3004      	adds	r0, #4
 8002084:	4288      	cmp	r0, r1
 8002086:	d3f2      	bcc.n	800206e <Code_455+0x62>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:288

@ -----------------------------------------------------------------------------
@ 256 kb sectors
  loeschpruefung  0x08040000  0x0807FFFF  5
 8002088:	482d      	ldr	r0, [pc, #180]	; (8002140 <Code_455+0x134>)
 800208a:	492e      	ldr	r1, [pc, #184]	; (8002144 <Code_455+0x138>)
 800208c:	6802      	ldr	r2, [r0, #0]
 800208e:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8002092:	d005      	beq.n	80020a0 <Code_455+0x94>
 8002094:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002098:	2605      	movs	r6, #5
 800209a:	f7ff ff7d 	bl	8001f98 <Code_449>
 800209e:	e002      	b.n	80020a6 <Code_455+0x9a>
 80020a0:	3004      	adds	r0, #4
 80020a2:	4288      	cmp	r0, r1
 80020a4:	d3f2      	bcc.n	800208c <Code_455+0x80>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:289
  loeschpruefung  0x08080000  0x080BFFFF  6
 80020a6:	4828      	ldr	r0, [pc, #160]	; (8002148 <Code_455+0x13c>)
 80020a8:	4928      	ldr	r1, [pc, #160]	; (800214c <Code_455+0x140>)
 80020aa:	6802      	ldr	r2, [r0, #0]
 80020ac:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 80020b0:	d005      	beq.n	80020be <Code_455+0xb2>
 80020b2:	f847 6d04 	str.w	r6, [r7, #-4]!
 80020b6:	2606      	movs	r6, #6
 80020b8:	f7ff ff6e 	bl	8001f98 <Code_449>
 80020bc:	e002      	b.n	80020c4 <Code_455+0xb8>
 80020be:	3004      	adds	r0, #4
 80020c0:	4288      	cmp	r0, r1
 80020c2:	d3f2      	bcc.n	80020aa <Code_455+0x9e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:290
  loeschpruefung  0x080C0000  0x080FFFFF  7
 80020c4:	4822      	ldr	r0, [pc, #136]	; (8002150 <Code_455+0x144>)
 80020c6:	4923      	ldr	r1, [pc, #140]	; (8002154 <Code_455+0x148>)
 80020c8:	6802      	ldr	r2, [r0, #0]
 80020ca:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 80020ce:	d005      	beq.n	80020dc <Code_455+0xd0>
 80020d0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80020d4:	2607      	movs	r6, #7
 80020d6:	f7ff ff5f 	bl	8001f98 <Code_449>
 80020da:	e002      	b.n	80020e2 <Code_455+0xd6>
 80020dc:	3004      	adds	r0, #4
 80020de:	4288      	cmp	r0, r1
 80020e0:	d3f2      	bcc.n	80020c8 <Code_455+0xbc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:292

  writeln "Finished. Reset !"
 80020e2:	f000 fe61 	bl	8002da8 <dotgaensefuesschen>
 80020e6:	4612      	.short	0x4612
 80020e8:	73696e69 	.word	0x73696e69
 80020ec:	2e646568 	.word	0x2e646568
 80020f0:	73655220 	.word	0x73655220
 80020f4:	21207465 	.word	0x21207465
 80020f8:	0a          	.byte	0x0a
 80020f9:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:294

  pop {lr}
 80020fa:	f85d eb04 	ldr.w	lr, [sp], #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:296

  b Restart
 80020fe:	f002 befe 	b.w	8004efe <Code_1271>
 8002102:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:47
	ldr 	r2, =FLASH_SR
 8002104:	52002010 	.word	0x52002010
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:49
    ldr 	r2, =FLASH_ERROR_MSK
 8002108:	17ee0000 	.word	0x17ee0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:54
1:	ldr 	r2, =FLASH_CCR
 800210c:	52002014 	.word	0x52002014
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:90
	ldr 	r2, =FLASH_KEYR
 8002110:	52002004 	.word	0x52002004
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:91
	ldr 	r3, =0x45670123
 8002114:	45670123 	.word	0x45670123
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:93
	ldr 	r3, =0xCDEF89AB
 8002118:	cdef89ab 	.word	0xcdef89ab
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:96
	ldr 	r2, =FLASH_CR
 800211c:	5200200c 	.word	0x5200200c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:278
  loeschpruefung  0x08008000  0x0800FFFF  1
 8002120:	08008000 	.word	0x08008000
 8002124:	0800ffff 	.word	0x0800ffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:279
  loeschpruefung  0x08010000  0x08017FFF  2
 8002128:	08010000 	.word	0x08010000
 800212c:	08017fff 	.word	0x08017fff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:280
  loeschpruefung  0x08018000  0x0801FFFF  3
 8002130:	08018000 	.word	0x08018000
 8002134:	0801ffff 	.word	0x0801ffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:284
  loeschpruefung  0x08020000  0x0803FFFF  4
 8002138:	08020000 	.word	0x08020000
 800213c:	0803ffff 	.word	0x0803ffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:288
  loeschpruefung  0x08040000  0x0807FFFF  5
 8002140:	08040000 	.word	0x08040000
 8002144:	0807ffff 	.word	0x0807ffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:289
  loeschpruefung  0x08080000  0x080BFFFF  6
 8002148:	08080000 	.word	0x08080000
 800214c:	080bffff 	.word	0x080bffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:290
  loeschpruefung  0x080C0000  0x080FFFFF  7
 8002150:	080c0000 	.word	0x080c0000
 8002154:	080fffff 	.word	0x080fffff

08002158 <Dictionary_478>:
Dictionary_478():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/flash.s:290
 8002158:	0800217a 	.word	0x0800217a
 800215c:	69090000 	.word	0x69090000
 8002160:	6674696e 	.word	0x6674696e
 8002164:	6873616c 	.word	0x6873616c

08002168 <Code_478>:
Code_478():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:31
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "initflash" @ Zu Beginn und in Quit !
initflash: @ ( -- ) Löscht alle Einträge in der Sammeldatei
                     @ Clear the table at the beginning and in quit
@ -----------------------------------------------------------------------------
  ldr r0, =Sammeltabelle
 8002168:	4888      	ldr	r0, [pc, #544]	; (800238c <flushblock+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:32
  ldr r1, =36 * Sammelstellen
 800216a:	f44f 6190 	mov.w	r1, #1152	; 0x480
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:33
  movs r2, #0
 800216e:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:35

1:strb r2, [r0]
 8002170:	7002      	strb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:36
  adds r0, #1
 8002172:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:37
  subs r1, #1
 8002174:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:38
  bne 1b
 8002176:	d1fb      	bne.n	8002170 <Code_478+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:40

  bx lr
 8002178:	4770      	bx	lr

0800217a <Dictionary_479>:
Dictionary_479():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:40
 800217a:	222c      	.short	0x222c
 800217c:	00000800 	.word	0x00000800
 8002180:	6d747307 	.word	0x6d747307
 8002184:	6e656c61 	.word	0x6e656c61

08002188 <Code_479>:
Code_479():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:48
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "stmalen" @ Nur zur Fehlersuche
sammeltabellemalen: @ ( -- ) Malt den Inhalt der Sammeltabelle
                    @ Write contents of collection table, for experiments only.
@ -----------------------------------------------------------------------------
  push {lr}
 8002188:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:50

  ldr r0, =Sammeltabelle
 800218a:	4880      	ldr	r0, [pc, #512]	; (800238c <flushblock+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:51
  movs r1, #Sammelstellen
 800218c:	2120      	movs	r1, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:53

  push {r0, r1}
 800218e:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:54
  writeln " >"
 8002190:	f000 fe0a 	bl	8002da8 <dotgaensefuesschen>
 8002194:	0a3e2003 	.word	0x0a3e2003
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:55
  pop {r0, r1}
 8002198:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:57

1:pushdatos
 800219a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:58
  ldr tos, [r0]
 800219e:	6806      	ldr	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:59
  push {r0, r1}
 80021a0:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:60
  write "Adresse: "
 80021a2:	f000 fe01 	bl	8002da8 <dotgaensefuesschen>
 80021a6:	4109      	.short	0x4109
 80021a8:	73657264 	.word	0x73657264
 80021ac:	203a6573 	.word	0x203a6573
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:61
  pop {r0, r1}
 80021b0:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:62
  bl hexdot
 80021b2:	f000 fe61 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:64

  push {r0, r1}
 80021b6:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:65
  write "Inhalt: "
 80021b8:	f000 fdf6 	bl	8002da8 <dotgaensefuesschen>
 80021bc:	686e4908 	.word	0x686e4908
 80021c0:	3a746c61 	.word	0x3a746c61
 80021c4:	20          	.byte	0x20
 80021c5:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:66
  pop {r0, r1}
 80021c6:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:68

  pushdatos
 80021c8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:69
  ldr tos, [r0, #4]
 80021cc:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:70
  bl hexdot
 80021ce:	f000 fe53 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:72

  pushdatos
 80021d2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:73
  ldr tos, [r0, #8]
 80021d6:	6886      	ldr	r6, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:74
  bl hexdot
 80021d8:	f000 fe4e 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:76

  pushdatos
 80021dc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:77
  ldr tos, [r0, #12]
 80021e0:	68c6      	ldr	r6, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:78
  bl hexdot
 80021e2:	f000 fe49 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:80

  pushdatos
 80021e6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:81
  ldr tos, [r0, #16]
 80021ea:	6906      	ldr	r6, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:82
  bl hexdot
 80021ec:	f000 fe44 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:84
  
  pushdatos
 80021f0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:85
  ldr tos, [r0, #20]
 80021f4:	6946      	ldr	r6, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:86
  bl hexdot
 80021f6:	f000 fe3f 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:88

  pushdatos
 80021fa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:89
  ldr tos, [r0, #24]
 80021fe:	6986      	ldr	r6, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:90
  bl hexdot
 8002200:	f000 fe3a 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:92

  pushdatos
 8002204:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:93
  ldr tos, [r0, #28]
 8002208:	69c6      	ldr	r6, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:94
  bl hexdot
 800220a:	f000 fe35 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:96

  pushdatos
 800220e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:97
  ldr tos, [r0, #32]
 8002212:	6a06      	ldr	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:98
  bl hexdot
 8002214:	f000 fe30 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:100

  push {r0, r1}
 8002218:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:101
  writeln " >"
 800221a:	f000 fdc5 	bl	8002da8 <dotgaensefuesschen>
 800221e:	2003      	.short	0x2003
 8002220:	0a3e      	.short	0x0a3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:102
  pop {r0, r1} 
 8002222:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:104

  adds r0, #36
 8002224:	3024      	adds	r0, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:105
  subs r1, #1
 8002226:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:106
  bne 1b
 8002228:	d1b7      	bne.n	800219a <Code_479+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:108

  pop {pc}
 800222a:	bd00      	pop	{pc}

0800222c <Dictionary_493>:
Dictionary_493():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:108
 800222c:	0800231a 	.word	0x0800231a
 8002230:	68070000 	.word	0x68070000
 8002234:	73616c66 	.word	0x73616c66
 8002238:	2168      	.short	0x2168

0800223a <Code_493>:
Code_493():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:124

  @ Tabellenaufbau:
  @ Adresse, auf 32 gerade, mit der Zahl der bereits geschriebenen Stellen in den Low-Bits.
  @ 16 Bytes $FF bzw. die geschriebenen Stellen.

  push {r4, r5, lr}
 800223a:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:128

  @ r0:    @ Tabelleneintragsstartadresse
  @ r1:    @ Manchmal Zähler fürs durchgucken der Tabelle
  popda r2 @ Adresse
 800223c:	0032      	movs	r2, r6
 800223e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:132
  @ TOS:   @ Inhalt

  @ Prüfe, ob die Adresse gerade ist
  lsrs r0, r2, #1
 8002240:	0850      	lsrs	r0, r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:133
  bcc 1f
 8002242:	d313      	bcc.n	800226c <Code_493+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:134
    Fehler_Quit "hflash! needs even addresses."
 8002244:	f000 fdb0 	bl	8002da8 <dotgaensefuesschen>
 8002248:	6c66681e 	.word	0x6c66681e
 800224c:	21687361 	.word	0x21687361
 8002250:	65656e20 	.word	0x65656e20
 8002254:	65207364 	.word	0x65207364
 8002258:	206e6576 	.word	0x206e6576
 800225c:	72646461 	.word	0x72646461
 8002260:	65737365 	.word	0x65737365
 8002264:	2e73      	.short	0x2e73
 8002266:	0a          	.byte	0x0a
 8002267:	00          	.byte	0x00
 8002268:	f002 bdb8 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:138
1:

  @ Check if address is outside of Forth core
  ldr r3, =Kernschutzadresse
 800226c:	4b48      	ldr	r3, [pc, #288]	; (8002390 <flushblock+0x48>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:139
  cmp r2, r3
 800226e:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:140
  bhs 2f
 8002270:	d210      	bcs.n	8002294 <Code_493+0x5a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:142

  Fehler_Quit "Cannot write into core !"
 8002272:	f000 fd99 	bl	8002da8 <dotgaensefuesschen>
 8002276:	4319      	.short	0x4319
 8002278:	6f6e6e61 	.word	0x6f6e6e61
 800227c:	72772074 	.word	0x72772074
 8002280:	20657469 	.word	0x20657469
 8002284:	6f746e69 	.word	0x6f746e69
 8002288:	726f6320 	.word	0x726f6320
 800228c:	0a212065 	.word	0x0a212065
 8002290:	f002 bda4 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:148
2:

  @ Suche nach einem Eintrag, der die Adresse ohne $F trägt !
  @ Search if the 32-Byte truncated address is already buffered in the table !

  lsrs r3, r2, #5 @ Prepare address for crawling by removing low bits
 8002294:	0953      	lsrs	r3, r2, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:150

  ldr r0, =Sammeltabelle
 8002296:	483d      	ldr	r0, [pc, #244]	; (800238c <flushblock+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:151
  movs r1, #Sammelstellen
 8002298:	2120      	movs	r1, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:153

2:ldr r4, [r0]
 800229a:	6804      	ldr	r4, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:154
  lsrs r4, #5 @ Prepare address by removing low bits
 800229c:	0964      	lsrs	r4, r4, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:156

  cmp r4, r3 @ Ist das passende Päärchen gefunden ?
 800229e:	429c      	cmp	r4, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:157
  beq.n hflashstoreemulation_gefunden @ Found the pair ?
 80022a0:	d02a      	beq.n	80022f8 <hflashstoreemulation_gefunden>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:161

  @ Ansonsten weitersuchen:
  @ Continue searching the table
  adds r0, #36
 80022a2:	3024      	adds	r0, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:162
  subs r1, #1
 80022a4:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:163
  bne 2b
 80022a6:	d1f8      	bne.n	800229a <Code_493+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:168

  @ Nicht gefunden: Suche eine leere Stelle in der Tabelle !
  @ Not found. Search for an empty place in table to fill this request in

  ldr r0, =Sammeltabelle
 80022a8:	4838      	ldr	r0, [pc, #224]	; (800238c <flushblock+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:169
  movs r1, #Sammelstellen
 80022aa:	2120      	movs	r1, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:171

3:ldr r4, [r0]
 80022ac:	6804      	ldr	r4, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:172
  cmp r4, #0
 80022ae:	2c00      	cmp	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:174
  @ Ist eine leere Stelle aufgetaucht ? Is this table place empty ?
  beq.n hflashstoreemulation_leerestelle
 80022b0:	d017      	beq.n	80022e2 <hflashstoreemulation_leerestelle>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:178

  @ Ansonsten weitersuchen:
  @ Continue searching the table
  adds r0, #36
 80022b2:	3024      	adds	r0, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:179
  subs r1, #1
 80022b4:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:180
  bne 3b
 80022b6:	d1f9      	bne.n	80022ac <Code_493+0x72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:182

  Fehler_Quit "Too many scattered Flash writes."
 80022b8:	f000 fd76 	bl	8002da8 <dotgaensefuesschen>
 80022bc:	6f6f5421 	.word	0x6f6f5421
 80022c0:	6e616d20 	.word	0x6e616d20
 80022c4:	63732079 	.word	0x63732079
 80022c8:	65747461 	.word	0x65747461
 80022cc:	20646572 	.word	0x20646572
 80022d0:	73616c46 	.word	0x73616c46
 80022d4:	72772068 	.word	0x72772068
 80022d8:	73657469 	.word	0x73657469
 80022dc:	0a2e      	.short	0x0a2e
 80022de:	f002 bd7d 	b.w	8004ddc <Code_1258>

080022e2 <hflashstoreemulation_leerestelle>:
hflashstoreemulation_leerestelle():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:190
  @writeln "Leerstelle präparieren"
  @ r0 zeigt gerade auf die Stelle, wo ich meinen Wunsch einfügen kann:
  @ r0 is pointer into an empty table place to fill in now:

  @ Set table entry properly
  lsls r3, #5  @ Address has just been shifted right before
 80022e2:	015b      	lsls	r3, r3, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:191
  str r3, [r0] @ Address of new block
 80022e4:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:193

  subs r1, r1, #1 @ Prepare constant -1
 80022e6:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:194
  str r1, [r0, #4]
 80022e8:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:195
  str r1, [r0, #8]
 80022ea:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:196
  str r1, [r0, #12]
 80022ec:	60c1      	str	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:197
  str r1, [r0, #16]
 80022ee:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:198
  str r1, [r0, #20]
 80022f0:	6141      	str	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:199
  str r1, [r0, #24]
 80022f2:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:200
  str r1, [r0, #28]
 80022f4:	61c1      	str	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:201
  str r1, [r0, #32]
 80022f6:	6201      	str	r1, [r0, #32]

080022f8 <hflashstoreemulation_gefunden>:
hflashstoreemulation_gefunden():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:211
  @ Zieladresse in r2, Inhalt in TOS.
  @ r1 wird nicht mehr benötigt.

  @ Insert the new entry into the table
  @ Prepare low bits of address as offset into table:
  movs r1, #31
 80022f8:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:212
  ands r1, r2
 80022fa:	4011      	ands	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:213
  adds r1, #4 @ So skip table entry header
 80022fc:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:214
  strh tos, [r0, r1]  @ Store desired value into table
 80022fe:	5246      	strh	r6, [r0, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:215
  drop
 8002300:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:218

  @ Increment number of stores to this table
  ldr r1, [r0] @ Fetch old count
 8002302:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:219
  adds r1, #1  @ Increment count of writes
 8002304:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:220
  str r1, [r0] @ Store new count
 8002306:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:223

  @ Enough writes to fill a 32 byte block ?
  movs r2, #31
 8002308:	221f      	movs	r2, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:224
  ands r1, r2
 800230a:	4011      	ands	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:229

@  pushda r1
@  bl hexdot  

  cmp r1, #16 @ Is this the 16th write to this table ?
 800230c:	2910      	cmp	r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:230
  bne.n hflashstoreemulation_fertig
 800230e:	d103      	bne.n	8002318 <hflashstoreemulation_fertig>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:233

    @ A 32 Byte block is finished ! Let's write !
    bl flushblock
 8002310:	f000 f81a 	bl	8002348 <flushblock>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:234
    bl flashstore_32b
 8002314:	f7ff fdfd 	bl	8001f12 <Code_438>

08002318 <hflashstoreemulation_fertig>:
hflashstoreemulation_fertig():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:237

hflashstoreemulation_fertig:
  pop {r4, r5, pc}
 8002318:	bd30      	pop	{r4, r5, pc}

0800231a <Dictionary_499>:
Dictionary_499():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:237
 800231a:	2394      	.short	0x2394
 800231c:	00000800 	.word	0x00000800
 8002320:	756c660a 	.word	0x756c660a
 8002324:	6c666873 	.word	0x6c666873
 8002328:	7361      	.short	0x7361
 800232a:	68          	.byte	0x68
	...

0800232c <Code_499>:
Code_499():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:244

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "flushflash" @ Flushes all remaining table entries
flushflash:
@ -----------------------------------------------------------------------------
  push {lr}
 800232c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:246

  ldr r0, =Sammeltabelle
 800232e:	4817      	ldr	r0, [pc, #92]	; (800238c <flushblock+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:247
  movs r1, #Sammelstellen
 8002330:	2120      	movs	r1, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:249

2:ldr r2, [r0] @ Does this table entry contain something ?
 8002332:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:250
  cmp r2, #0
 8002334:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:251
  beq 3f
 8002336:	d003      	beq.n	8002340 <Code_499+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:252
    bl flushblock
 8002338:	f000 f806 	bl	8002348 <flushblock>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:253
    bl flashstore_32b
 800233c:	f7ff fde9 	bl	8001f12 <Code_438>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:255

3:adds r0, #36
 8002340:	3024      	adds	r0, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:256
  subs r1, #1
 8002342:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:257
  bne 2b
 8002344:	d1f5      	bne.n	8002332 <Code_499+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:259

  pop {pc}
 8002346:	bd00      	pop	{pc}

08002348 <flushblock>:
flushblock():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:264

@ -----------------------------------------------------------------------------
flushblock: @ Put a table entry which address is in r0 on data stack for later 16flash!
@ -----------------------------------------------------------------------------
  pushdatos
 8002348:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:265
  ldr tos, [r0, #4]
 800234c:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:266
  pushdatos
 800234e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:267
  ldr tos, [r0, #8]
 8002352:	6886      	ldr	r6, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:268
  pushdatos
 8002354:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:269
  ldr tos, [r0, #12]
 8002358:	68c6      	ldr	r6, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:270
  pushdatos
 800235a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:271
  ldr tos, [r0, #16]
 800235e:	6906      	ldr	r6, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:272
  pushdatos
 8002360:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:273
  ldr tos, [r0, #20]
 8002364:	6946      	ldr	r6, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:274
  pushdatos
 8002366:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:275
  ldr tos, [r0, #24]
 800236a:	6986      	ldr	r6, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:276
  pushdatos
 800236c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:277
  ldr tos, [r0, #28]
 8002370:	69c6      	ldr	r6, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:278
  pushdatos
 8002372:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:279
  ldr tos, [r0, #32]
 8002376:	6a06      	ldr	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:281

  pushdatos             @ Place address on stack
 8002378:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:282
  movs tos, #31
 800237c:	261f      	movs	r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:283
  mvns tos, tos
 800237e:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:284
  ldr r2, [r0] @ Load the address of the table entry
 8002380:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:285
  ands tos, r2 @ Cut off the lowest four bits that contain the write count
 8002382:	4016      	ands	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:287

  movs r2, #0  @ Clear table entry
 8002384:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:288
  str r2, [r0] 
 8002386:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:289
  bx lr
 8002388:	4770      	bx	lr
 800238a:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:31
  ldr r0, =Sammeltabelle
 800238c:	24000388 	.word	0x24000388
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:138
  ldr r3, =Kernschutzadresse
 8002390:	08008000 	.word	0x08008000

08002394 <Dictionary_509>:
Dictionary_509():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/flash32bytesblockwrite.s:138
 8002394:	080023ca 	.word	0x080023ca
 8002398:	2b010262 	.word	0x2b010262

0800239c <Code_509>:
Code_509():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:36

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "+" @ ( x1 x2 -- x1+x2 )
                      @ Adds x1 and x2.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 800239c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:37
  adds tos, r0
 800239e:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:38
  bx lr
 80023a0:	4770      	bx	lr

080023a2 <plus_allocator>:
plus_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:42

plus_allocator:

    push {lr}
 80023a2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:43
    bl expect_two_elements
 80023a4:	f7fe f8a2 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:45

    pushdaconstw 0x3000 @ adds r0, #imm8
 80023a8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80023ac:	f243 0600 	movw	r6, #12288	; 0x3000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:47
    .ifndef m0core
      pushdatos
 80023b0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:48
      ldr tos, =0xF1100000 @ adds r0, r0, #Imm12
 80023b4:	4ec9      	ldr	r6, [pc, #804]	; (80026dc <Code_581+0x8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:50
    .endif
    pushdaconstw 0x1800 @ adds r0, r0, r0
 80023b6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80023ba:	f641 0600 	movw	r6, #6144	; 0x1800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:53

    @ Ist in TOS oder in NOS eine kleine Konstante ?
    ldr r1, [r0, #offset_state_nos]
 80023be:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:54
    cmp r1, #constant
 80023c0:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:55
    bne 1f
 80023c2:	d117      	bne.n	80023f4 <minus_allocator+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:56
      bl swap_allocator @ Wenn NOS eine Konstante gewesen ist, war TOS es nicht (Vorherige Faltung !) und ich kann einfach umtauschen.
 80023c4:	f7fe fdd1 	bl	8000f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:57
      b.n 1f
 80023c8:	e014      	b.n	80023f4 <minus_allocator+0x1c>

080023ca <Dictionary_515>:
Dictionary_515():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:57
 80023ca:	2470      	.short	0x2470
 80023cc:	02620800 	.word	0x02620800
 80023d0:	2d01      	.short	0x2d01

080023d2 <Code_515>:
Code_515():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:63

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "-" @ ( x1 x2 -- x1-x2 )
                      @ Subtracts x2 from x1.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
 80023d2:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:64
  subs tos, r0, tos
 80023d4:	1b86      	subs	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:65
  bx lr
 80023d6:	4770      	bx	lr

080023d8 <minus_allocator>:
minus_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:69

minus_allocator:

    push {lr}
 80023d8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:70
    bl expect_two_elements
 80023da:	f7fe f887 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:72

    pushdaconstw 0x3800 @ subs r0, #imm8
 80023de:	f847 6d04 	str.w	r6, [r7, #-4]!
 80023e2:	f643 0600 	movw	r6, #14336	; 0x3800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:74
    .ifndef m0core
      pushdatos
 80023e6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:75
      ldr tos, =0xF1B00000 @ subs r0, r0, #Imm12
 80023ea:	4ebd      	ldr	r6, [pc, #756]	; (80026e0 <Code_581+0xc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:77
    .endif
    pushdaconstw 0x1A00 @ subs r0, r0, r0
 80023ec:	f847 6d04 	str.w	r6, [r7, #-4]!
 80023f0:	f641 2600 	movw	r6, #6656	; 0x1a00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:81

1:  @ Minus ist nicht kommutativ, deswegen hier eine Optimierung weniger als bei Plus.

    bl expect_nos_in_register
 80023f4:	f7fe f8b6 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:89
    @ Der Fall, dass beide Konstanten sind tritt nicht auf, weil er von der Faltung bereits erledigt wird.
    @ Entweder zwei Register, oder eine Konstante und einen Register.

    @ Ist jetzt TOS eine kleine Konstante ?

    ldr r1, [r0, #offset_state_tos]
 80023f8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:90
    cmp r1, #constant
 80023fa:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:91
    bne 4f
 80023fc:	d127      	bne.n	800244e <minus_allocator+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:92
      ldr r1, [r0, #offset_constant_tos]
 80023fe:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:93
      cmp r1, #0xff
 8002400:	29ff      	cmp	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:94
      bhi 3f
 8002402:	d80c      	bhi.n	800241e <minus_allocator+0x46>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:95
        drop @ Vergiß den Drei-Register-Opcode
 8002404:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:98

        .ifndef m0core
        drop @ Vergiß den Imm12-Opcode
 8002406:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:102
        .endif

        @ writeln "Plusminus kleine Konstante"
        bl nos_change_tos_away_later
 8002408:	f7fe f8c0 	bl	800058c <nos_change_tos_away_later>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:104
        @ TOS ist eine kleine Konstante.
        orrs tos, r1
 800240c:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:105
        ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
 800240e:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:106
        lsls r1, #8
 8002410:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:107
        orrs tos, r1
 8002412:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:108
        bl hkomma
 8002414:	f001 fa50 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:110

        bl eliminiere_tos
 8002418:	f7fd ff61 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:111
        pop {pc}
 800241c:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:117

3:  @ TOS war keine kleine Konstante

        .ifndef m0core
        @ Vielleicht ist TOS eine große Konstante, die sich als Imm12 darstellen lässt ?
        pushda r1 @ Konstante auf den Stack legen
 800241e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002422:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:118
        bl twelvebitencoding @ ( Konstante -- Bitmaske true | Konstante false )
 8002424:	f000 fe24 	bl	8003070 <Code_741>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:119
        ldmia psp!, {r1} @ Entweder die Bitmaske oder wieder die Konstante
 8002428:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:121

        cmp tos, #0
 800242a:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:122
        drop   @ Preserves Flags !
 800242c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:123
        beq 4f
 800242e:	d00e      	beq.n	800244e <minus_allocator+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:126
          @ Die Konstante lässt sich als Imm12 darstellen - fein !

          drop @ Vergiß den Drei-Register-Opcode
 8002430:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:127
          nip  @ Vergiß den Imm8-Opcode
 8002432:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:129

          orrs tos, r1 @ Bitmaske für Imm12 hinzufügen
 8002434:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:131

          ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
 8002436:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:133

          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
 8002438:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:136

          @ Vergiß die Konstante
          bl eliminiere_tos
 800243c:	f7fd ff4f 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:138

          bl tos_registerwechsel
 8002440:	f7fe f8d4 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:139
          orrs tos, tos, r3, lsl #8  @ Den Zielregister hinzufügen
 8002444:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:141

          bl reversekomma
 8002448:	f001 fa66 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:142
          pop {pc}
 800244c:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:147
        .endif

4:  @ TOS war überhaupt keine Konstante oder ließ sich nicht opcodieren.

    nip @ Vergiß den Imm8-Opcode
 800244e:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:150

    .ifndef m0core
    nip @ Vergiß denn Imm12-Opcode
 8002450:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:156
    .endif

    @ Es ist egal, wierum die Quellregister liegen, da ich mir bei diesen Opcodes den Zielregister frei aussuchen kann.
    @ Schritt eins: Die Konstante, falls TOS oder NOS eine sein sollten, laden.

    bl expect_tos_in_register
 8002452:	f7fe f87d 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:160

    @ Baue Quell- und "Ziel-" Register in den Opcode ein.

    lsls r1, #6  @ Erster Operand ist um 6 Stellen geschoben
 8002456:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:162

    ldr r2, [r0, #offset_state_nos]
 8002458:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:163
    lsls r2, #3  @ Zweiter Operand ist um 3 Stellen geschoben
 800245a:	00d2      	lsls	r2, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:167

    @ Baue jetzt den Opcode zusammen:

    orrs tos, r1
 800245c:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:168
    orrs tos, r2
 800245e:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:172

    @ Vergiss die bisherige Registerzuordnung

    bl eliminiere_tos
 8002460:	f7fd ff3d 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:175

    @ Den Zielregister des Gesamtergebnis bestimmen, ganz komfortabel, und möglichst in r6:
    bl tos_registerwechsel
 8002464:	f7fe f8c2 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:177

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
 8002468:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:178
    bl hkomma
 800246a:	f001 fa25 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:180

    pop {pc}
 800246e:	bd00      	pop	{pc}

08002470 <Dictionary_530>:
Dictionary_530():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:180
 8002470:	08002488 	.word	0x08002488
 8002474:	31020261 	.word	0x31020261
 8002478:	2d          	.byte	0x2d
	...

0800247a <Code_530>:
Code_530():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:187

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "1-" @ ( u -- u-1 )
                      @ Subtracts one from the cell on top of the stack.
@ -----------------------------------------------------------------------------
  subs tos, #1
 800247a:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:188
  bx lr
 800247c:	4770      	bx	lr

0800247e <allocator_one_minus>:
allocator_one_minus():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:191

allocator_one_minus:
    pushdaconstw 0x1E00 + 1<<6
 800247e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002482:	f641 6640 	movw	r6, #7744	; 0x1e40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:192
    b.n smalltworegisters
 8002486:	e03d      	b.n	8002504 <smalltworegisters>

08002488 <Dictionary_533>:
Dictionary_533():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:192
 8002488:	080024a0 	.word	0x080024a0
 800248c:	31020261 	.word	0x31020261
 8002490:	2b          	.byte	0x2b
	...

08002492 <Code_533>:
Code_533():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:198

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "1+" @ ( u -- u+1 )
                       @ Adds one to the cell on top of the stack.
@ -----------------------------------------------------------------------------
  adds tos, #1
 8002492:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:199
  bx lr
 8002494:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:201

    pushdaconstw 0x1C00 + 1<<6
 8002496:	f847 6d04 	str.w	r6, [r7, #-4]!
 800249a:	f641 4640 	movw	r6, #7232	; 0x1c40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:202
    b.n smalltworegisters
 800249e:	e031      	b.n	8002504 <smalltworegisters>

080024a0 <Dictionary_536>:
Dictionary_536():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:202
 80024a0:	080024b8 	.word	0x080024b8
 80024a4:	32020261 	.word	0x32020261
 80024a8:	2d          	.byte	0x2d
	...

080024aa <Code_536>:
Code_536():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:208

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2-" @ ( u -- u-1 )
                      @ Subtracts two from the cell on top of the stack.
@ -----------------------------------------------------------------------------
  subs tos, #2
 80024aa:	3e02      	subs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:209
  bx lr
 80024ac:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:211

    pushdaconstw 0x1E00 + 2<<6
 80024ae:	f847 6d04 	str.w	r6, [r7, #-4]!
 80024b2:	f641 6680 	movw	r6, #7808	; 0x1e80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:212
    b.n smalltworegisters
 80024b6:	e025      	b.n	8002504 <smalltworegisters>

080024b8 <Dictionary_539>:
Dictionary_539():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:212
 80024b8:	080024d0 	.word	0x080024d0
 80024bc:	32020261 	.word	0x32020261
 80024c0:	2b          	.byte	0x2b
	...

080024c2 <Code_539>:
Code_539():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:218

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2+" @ ( u -- u+1 )
                       @ Adds two to the cell on top of the stack.
@ -----------------------------------------------------------------------------
  adds tos, #2
 80024c2:	3602      	adds	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:219
  bx lr
 80024c4:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:221

    pushdaconstw 0x1C00 + 2<<6
 80024c6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80024ca:	f641 4680 	movw	r6, #7296	; 0x1c80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:222
    b.n smalltworegisters
 80024ce:	e019      	b.n	8002504 <smalltworegisters>

080024d0 <Dictionary_542>:
Dictionary_542():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:222
 80024d0:	080024ea 	.word	0x080024ea
 80024d4:	63050261 	.word	0x63050261
 80024d8:	2b6c6c65 	.word	0x2b6c6c65

080024dc <Code_542>:
Code_542():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:227

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "cell+" @ ( x -- x+4 )
@ -----------------------------------------------------------------------------
  adds tos, #4
 80024dc:	3604      	adds	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:228
  bx lr
 80024de:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:230

    pushdaconstw 0x1C00 + 4<<6
 80024e0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80024e4:	f641 5600 	movw	r6, #7424	; 0x1d00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:231
    b.n smalltworegisters
 80024e8:	e00c      	b.n	8002504 <smalltworegisters>

080024ea <Dictionary_545>:
Dictionary_545():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:231
 80024ea:	251c      	.short	0x251c
 80024ec:	02610800 	.word	0x02610800
 80024f0:	67656e06 	.word	0x67656e06
 80024f4:	7461      	.short	0x7461
 80024f6:	65          	.byte	0x65
	...

080024f8 <Code_545>:
Code_545():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:236

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "negate" @ ( n1 -- -n1 )
@ -----------------------------------------------------------------------------
  rsbs tos, tos, #0
 80024f8:	4276      	negs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:237
  bx lr
 80024fa:	4770      	bx	lr

080024fc <allocator_negate>:
allocator_negate():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:240

allocator_negate:
    pushdaconstw 0x4240 @ rsbs r0, r0, #0
 80024fc:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002500:	f244 2640 	movw	r6, #16960	; 0x4240

08002504 <smalltworegisters>:
smalltworegisters():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:243

smalltworegisters:
    push {lr}
 8002504:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:244
    bl expect_one_element @ Da nicht gefaltet worden ist, muss es sich um einen Register handeln.
 8002506:	f7fd ffe7 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:245
    ldr r1, [r0, #offset_state_tos]
 800250a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:246
    lsls r1, #3
 800250c:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:247
    orrs tos, r1
 800250e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:248
    bl tos_registerwechsel
 8002510:	f7fe f86c 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:249
    orrs tos, r3
 8002514:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:250
    bl hkomma
 8002516:	f001 f9cf 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:251
    pop {pc}
 800251a:	bd00      	pop	{pc}

0800251c <Dictionary_548>:
Dictionary_548():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:251
 800251c:	08002534 	.word	0x08002534
 8002520:	6e030261 	.word	0x6e030261
 8002524:	746f      	.short	0x746f

08002526 <Code_548>:
Code_548():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:256

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "not" @ ( x -- ~x )
@ -----------------------------------------------------------------------------
  mvns tos, tos
 8002526:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:257
  bx lr
 8002528:	4770      	bx	lr

0800252a <allocator_not>:
allocator_not():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:260

allocator_not:
    pushdaconstw 0x43C0 @ mvns r0, r0
 800252a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800252e:	f244 36c0 	movw	r6, #17344	; 0x43c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:261
    b.n smalltworegisters
 8002532:	e7e7      	b.n	8002504 <smalltworegisters>

08002534 <Dictionary_551>:
Dictionary_551():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:261
 8002534:	0800254c 	.word	0x0800254c
 8002538:	73030261 	.word	0x73030261
 800253c:	7268      	.short	0x7268

0800253e <Code_551>:
Code_551():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:266

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_allocator, "shr" @ ( x -- x' ) @ Um eine Stelle rechts schieben
@ -----------------------------------------------------------------------------
  lsrs tos, #1
 800253e:	0876      	lsrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:267
  bx lr
 8002540:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:269

    pushdaconstw 0x0840 @ lsrs r0, r0, #1
 8002542:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002546:	f640 0640 	movw	r6, #2112	; 0x840
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:270
    b.n smalltworegisters
 800254a:	e7db      	b.n	8002504 <smalltworegisters>

0800254c <Dictionary_554>:
Dictionary_554():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:270
 800254c:	0800255c 	.word	0x0800255c
 8002550:	73030261 	.word	0x73030261
 8002554:	6c68      	.short	0x6c68

08002556 <Code_554>:
Code_554():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:275

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_allocator, "shl" @ ( x -- x' ) @ Um eine Stelle links schieben
@ -----------------------------------------------------------------------------
  lsls tos, #1
 8002556:	0076      	lsls	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:276
  bx lr
 8002558:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:278

    b.n 1f
 800255a:	e006      	b.n	800256a <Code_555+0x4>

0800255c <Dictionary_555>:
Dictionary_555():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:278
 800255c:	08002572 	.word	0x08002572
 8002560:	32020261 	.word	0x32020261
 8002564:	2a          	.byte	0x2a
	...

08002566 <Code_555>:
Code_555():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:283

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2*" @ ( n -- n*2 )
@ -----------------------------------------------------------------------------
  lsls tos, #1
 8002566:	0076      	lsls	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:284
  bx lr
 8002568:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:286

1:  pushdaconst 0x0040 @ lsls r0, r0, #1
 800256a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800256e:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:287
    b.n smalltworegisters
 8002570:	e7c8      	b.n	8002504 <smalltworegisters>

08002572 <Dictionary_558>:
Dictionary_558():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:287
 8002572:	258a      	.short	0x258a
 8002574:	02610800 	.word	0x02610800
 8002578:	6c656305 	.word	0x6c656305
 800257c:	736c      	.short	0x736c

0800257e <Code_558>:
Code_558():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:292

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "cells" @ ( x -- 4*x )
@ -----------------------------------------------------------------------------
  lsls tos, #2
 800257e:	00b6      	lsls	r6, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:293
  bx lr
 8002580:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:295

    pushdaconst 0x0080 @ lsls r0, r0, #2
 8002582:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002586:	2680      	movs	r6, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:296
    b.n smalltworegisters
 8002588:	e7bc      	b.n	8002504 <smalltworegisters>

0800258a <Dictionary_561>:
Dictionary_561():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:296
 800258a:	25a2      	.short	0x25a2
 800258c:	02610800 	.word	0x02610800
 8002590:	3202      	.short	0x3202
 8002592:	2f          	.byte	0x2f
	...

08002594 <Code_561>:
Code_561():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:302


@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2/" @ ( n -- n/2 )
@ -----------------------------------------------------------------------------
  asrs tos, #1
 8002594:	1076      	asrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:303
  bx lr
 8002596:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:305

    pushdaconstw 0x1040 @ asrs r0, r0, #1
 8002598:	f847 6d04 	str.w	r6, [r7, #-4]!
 800259c:	f241 0640 	movw	r6, #4160	; 0x1040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:306
    b.n smalltworegisters
 80025a0:	e7b0      	b.n	8002504 <smalltworegisters>

080025a2 <Dictionary_564>:
Dictionary_564():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:306
 80025a2:	25e2      	.short	0x25e2
 80025a4:	02610800 	.word	0x02610800
 80025a8:	73626103 	.word	0x73626103

080025ac <Code_564>:
Code_564():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:312


@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "abs" @ ( n1 -- |n1| )
@ -----------------------------------------------------------------------------
  asrs r0, tos, #31 @ Turn MSB into 0xffffffff or 0x00000000
 80025ac:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:313
  adds tos, r0
 80025ae:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:314
  eors tos, r0
 80025b0:	4046      	eors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:315
  bx lr
 80025b2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:317

    push {lr} @ Eine Konstante wären weggefaltet worden, also muss TOS jetzt ein Register sein.
 80025b4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:318
    bl expect_one_element
 80025b6:	f7fd ff8f 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:320

    pushdaconst 0  @ lsls r0, r0, #0 @ Bereite einen movs-Opcode vor, der garantiert in einen freien Register landet und die Funktion eines CMP übernimmt.
 80025ba:	f847 6d04 	str.w	r6, [r7, #-4]!
 80025be:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:321
    ldr r1, [r0, #offset_state_tos]
 80025c0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:322
    lsls r1, #3
 80025c2:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:323
    orrs tos, r1
 80025c4:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:324
    bl tos_registerwechsel
 80025c6:	f7fe f811 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:325
    orrs tos, r3
 80025ca:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:326
    bl hkomma
 80025cc:	f001 f974 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:328

    pushdaconstw 0xD500 @ bpl
 80025d0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80025d4:	f24d 5600 	movw	r6, #54528	; 0xd500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:329
    bl hkomma
 80025d8:	f001 f96e 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:331

    bl allocator_negate @ Negate wird keinen Registerwechsel mehr machen, weil wir hier schon einen freien Zielregister vorbereitet haben.
 80025dc:	f7ff ff8e 	bl	80024fc <allocator_negate>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:332
    pop {pc}
 80025e0:	bd00      	pop	{pc}

080025e2 <Dictionary_569>:
Dictionary_569():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:332
 80025e2:	2600      	.short	0x2600
 80025e4:	00420800 	.word	0x00420800
 80025e8:	6d2f7505 	.word	0x6d2f7505
 80025ec:	646f      	.short	0x646f

080025ee <Code_569>:
Code_569():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:376
  pushda r3
  bx lr

  .else

  ldm psp!, {r0}       @ Get u1 into a register
 80025ee:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:377
  movs r1, tos        @ Back up the divisor in X.
 80025f0:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:378
  udiv tos, r0, tos  @ Divide: quotient in TOS.
 80025f2:	fbb0 f6f6 	udiv	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:379
  muls r1, tos, r1    @ Un-divide to compute remainder.
 80025f6:	4371      	muls	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:380
  subs r0, r1          @ Compute remainder.
 80025f8:	1a40      	subs	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:381
  subs psp, #4
 80025fa:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:382
  str r0, [psp]
 80025fc:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:383
  bx lr
 80025fe:	4770      	bx	lr

08002600 <Dictionary_570>:
Dictionary_570():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:383
 8002600:	0800261e 	.word	0x0800261e
 8002604:	2f040042 	.word	0x2f040042
 8002608:	6f6d      	.short	0x6f6d
 800260a:	64          	.byte	0x64
	...

0800260c <Code_570>:
Code_570():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:442
      bl u_divmod
      pop {pc}

  .else

  ldm psp!, {r0}       @ Get u1 into a register
 800260c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:443
  movs r1, tos       @ Back up the divisor in X.
 800260e:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:444
  sdiv tos, r0, tos @ Divide: quotient in TOS.
 8002610:	fb90 f6f6 	sdiv	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:445
  muls r1, tos, r1   @ Un-divide to compute remainder.
 8002614:	4371      	muls	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:446
  subs r0, r1         @ Compute remainder.
 8002616:	1a40      	subs	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:447
  subs psp, #4
 8002618:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:448
  str r0, [psp]
 800261a:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:449
  bx lr
 800261c:	4770      	bx	lr

0800261e <Dictionary_571>:
Dictionary_571():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:449
 800261e:	2632      	.short	0x2632
 8002620:	00420800 	.word	0x00420800
 8002624:	646f6d03 	.word	0x646f6d03

08002628 <Code_571>:
Code_571():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:456
  .endif

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2, "mod" @ ( n1 n2 -- rem )
@ -----------------------------------------------------------------------------
  push {lr}
 8002628:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:457
  bl divmod
 800262a:	f7ff ffef 	bl	800260c <Code_570>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:458
  drop
 800262e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:459
  pop {pc}
 8002630:	bd00      	pop	{pc}

08002632 <Dictionary_573>:
Dictionary_573():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:459
 8002632:	2672      	.short	0x2672
 8002634:	02620800 	.word	0x02620800
 8002638:	2f01      	.short	0x2f01

0800263a <Code_573>:
Code_573():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:475
  .else

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "/" @ ( n1 n2 -- n1/n2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}       @ Get n1 into a register
 800263a:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:476
  sdiv tos, r0, tos    @ Divide !
 800263c:	fb90 f6f6 	sdiv	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:477
  bx lr
 8002640:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:479

    push {lr}
 8002642:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:480
    bl expect_two_elements
 8002644:	f7fd ff52 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:481
    bl expect_tos_in_register
 8002648:	f7fd ff82 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:482
    bl expect_nos_in_register
 800264c:	f7fd ff8a 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:485

    @ Baue den Opcode zusammen:
    pushdatos
 8002650:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:486
    ldr tos, =0xFB90F0F0
 8002654:	4e23      	ldr	r6, [pc, #140]	; (80026e4 <Code_581+0x10>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:488

    ldr r1, [r0, #offset_state_tos]
 8002656:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:489
    orrs tos, r1 @ Quellregister 1 hinzufügen
 8002658:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:491

    ldr r1, [r0, #offset_state_nos]
 800265a:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:492
    orrs tos, tos, r1, lsl #16 @ Quellregister 2 hinzufügen
 800265c:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:494

    bl eliminiere_tos
 8002660:	f7fd fe3d 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:496

    bl tos_registerwechsel
 8002664:	f7fd ffc2 	bl	80005ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:498

    orrs tos, tos, r3, lsl #8 @ Zielregister hinzufügen
 8002668:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:499
    bl reversekomma
 800266c:	f001 f954 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:500
    pop {pc}
 8002670:	bd00      	pop	{pc}

08002672 <Dictionary_575>:
Dictionary_575():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:500
 8002672:	2686      	.short	0x2686
 8002674:	00610800 	.word	0x00610800
 8002678:	65766504 	.word	0x65766504
 800267c:	6e          	.byte	0x6e
	...

0800267e <Code_575>:
Code_575():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:507
  .endif

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline, "even" @ ( x -- x' )
@ -----------------------------------------------------------------------------
  movs r0, #1
 800267e:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:508
  ands r0, tos
 8002680:	4030      	ands	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:509
  adds tos, r0
 8002682:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:510
  bx lr
 8002684:	4770      	bx	lr

08002686 <Dictionary_576>:
Dictionary_576():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:510
 8002686:	269e      	.short	0x269e
 8002688:	00810800 	.word	0x00810800
 800268c:	73616204 	.word	0x73616204
 8002690:	65          	.byte	0x65
	...

08002692 <Code_576>:
Code_576():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:527

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "base" @ ( -- addr )
  CoreVariable base
@ -----------------------------------------------------------------------------
  pushdatos
 8002692:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:528
  ldr tos, =base
 8002696:	4e14      	ldr	r6, [pc, #80]	; (80026e8 <Code_581+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:529
  bx lr
 8002698:	4770      	bx	lr
 800269a:	000a      	.short	0x000a
	...

0800269e <Dictionary_579>:
Dictionary_579():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:529
 800269e:	26b4      	.short	0x26b4
 80026a0:	00000800 	.word	0x00000800
 80026a4:	6e696206 	.word	0x6e696206
 80026a8:	7261      	.short	0x7261
 80026aa:	79          	.byte	0x79
	...

080026ac <Code_579>:
Code_579():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:535
  .word 10

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "binary" @ ( -- )
@ -----------------------------------------------------------------------------
  ldr r0, =base
 80026ac:	480e      	ldr	r0, [pc, #56]	; (80026e8 <Code_581+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:536
  movs r1, #2
 80026ae:	2102      	movs	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:537
  str r1, [r0]
 80026b0:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:538
  bx lr
 80026b2:	4770      	bx	lr

080026b4 <Dictionary_580>:
Dictionary_580():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:538
 80026b4:	080026ca 	.word	0x080026ca
 80026b8:	64070000 	.word	0x64070000
 80026bc:	6d696365 	.word	0x6d696365
 80026c0:	6c61      	.short	0x6c61

080026c2 <Code_580>:
Code_580():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:543

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "decimal" @ ( -- )
@ -----------------------------------------------------------------------------
  ldr r0, =base
 80026c2:	4809      	ldr	r0, [pc, #36]	; (80026e8 <Code_581+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:544
  movs r1, #10
 80026c4:	210a      	movs	r1, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:545
  str r1, [r0]
 80026c6:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:546
  bx lr
 80026c8:	4770      	bx	lr

080026ca <Dictionary_581>:
Dictionary_581():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:546
 80026ca:	2974      	.short	0x2974
 80026cc:	00000800 	.word	0x00000800
 80026d0:	78656803 	.word	0x78656803

080026d4 <Code_581>:
Code_581():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:551

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "hex" @ ( -- )
@ -----------------------------------------------------------------------------
  ldr r0, =base
 80026d4:	4804      	ldr	r0, [pc, #16]	; (80026e8 <Code_581+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:552
  movs r1, #16
 80026d6:	2110      	movs	r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:553
  str r1, [r0]
 80026d8:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:554
  bx lr
 80026da:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:48
      ldr tos, =0xF1100000 @ adds r0, r0, #Imm12
 80026dc:	f1100000 	.word	0xf1100000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:75
      ldr tos, =0xF1B00000 @ subs r0, r0, #Imm12
 80026e0:	f1b00000 	.word	0xf1b00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:486
    ldr tos, =0xFB90F0F0
 80026e4:	fb90f0f0 	.word	0xfb90f0f0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/calculations.s:528
  ldr tos, =base
 80026e8:	2407fffc 	.word	0x2407fffc

080026ec <enable_i_cache>:
enable_i_cache():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:189
  orr.w r0, \bit
  str   r0, [r1]
.endm

enable_i_cache:
  dsb
 80026ec:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:190
  isb
 80026f0:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:191
  ldr   r1, = ICIALLU
 80026f4:	498a      	ldr	r1, [pc, #552]	; (8002920 <uart_init+0x94>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:192
  ldr   r0, = 0
 80026f6:	f04f 0000 	mov.w	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:193
  str   r0, [r1]
 80026fa:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:194
  dsb
 80026fc:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:195
  isb
 8002700:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:196
  ldr   r1, = CCR
 8002704:	4987      	ldr	r1, [pc, #540]	; (8002924 <uart_init+0x98>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:197
  ldr   r0, [r1]
 8002706:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:198
  orr.w r0, SCB_CCR_IC
 8002708:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:199
  str   r0, [r1]
 800270c:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:200
  dsb
 800270e:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:201
  isb
 8002712:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:202
  bx    lr
 8002716:	4770      	bx	lr

08002718 <enable_d_cache>:
enable_d_cache():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:206

enable_d_cache: @ TODO : p.240 prog man

  dsb
 8002718:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:208

  dsb
 800271c:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:210

  dsb
 8002720:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:211
  isb
 8002724:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:212
  bx   lr
 8002728:	4770      	bx	lr

0800272a <set_flash_latency>:
set_flash_latency():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:215

set_flash_latency:
  modify_reg 	FLASH_ACR, 		FLASH_ACR_LATENCY_Msk, 		FLASH_LATENCY_4
 800272a:	497f      	ldr	r1, [pc, #508]	; (8002928 <uart_init+0x9c>)
 800272c:	6808      	ldr	r0, [r1, #0]
 800272e:	f020 000f 	bic.w	r0, r0, #15
 8002732:	f040 0004 	orr.w	r0, r0, #4
 8002736:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:216
1: ldr  r0, [r1]
 8002738:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:217
  and.w r0, FLASH_ACR_LATENCY_Msk
 800273a:	f000 000f 	and.w	r0, r0, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:218
  cmp   r0, FLASH_LATENCY_4
 800273e:	2804      	cmp	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:219
  bne   1b
 8002740:	d1fa      	bne.n	8002738 <set_flash_latency+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:220
  bx    lr
 8002742:	4770      	bx	lr

08002744 <set_power_config>:
set_power_config():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:232
@MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
@ PWR_SUPPLY_CONFIG_MASK = $30 | $08 | $04 | $02 | $01
@ PWR_DIRECT_SMPS_SUPPLY = 0x00000004

set_power_config:
  modify_reg 	PWR_CR3, (0x30 | 0x08 | 0x04 | 0x02 | 0x01), 0x04
 8002744:	4979      	ldr	r1, [pc, #484]	; (800292c <uart_init+0xa0>)
 8002746:	6808      	ldr	r0, [r1, #0]
 8002748:	f020 003f 	bic.w	r0, r0, #63	; 0x3f
 800274c:	f040 0004 	orr.w	r0, r0, #4
 8002750:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:233
  bx    lr
 8002752:	4770      	bx	lr

08002754 <set_voltage_scaling>:
set_voltage_scaling():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:236
  
set_voltage_scaling:
  modify_reg PWR_D3CR, 0x0000C000, 0x00004000 | 0x00008000 @ PWR_REGU_VOLTAGE_SCALE1
 8002754:	4976      	ldr	r1, [pc, #472]	; (8002930 <uart_init+0xa4>)
 8002756:	6808      	ldr	r0, [r1, #0]
 8002758:	f420 4040 	bic.w	r0, r0, #49152	; 0xc000
 800275c:	f440 4040 	orr.w	r0, r0, #49152	; 0xc000
 8002760:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:238
  @ ((PWR->D3CR & PWR_D3CR_VOSRDY)     == PWR_D3CR_VOSRDY)
1: 	ldr  r0, [r1]  @ PWR_D3CR
 8002762:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:239
  	ands  r0, #0x00002000 @ VOSRDY
 8002764:	f410 5000 	ands.w	r0, r0, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:240
  	beq   1b
 8002768:	d0fb      	beq.n	8002762 <set_voltage_scaling+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:241
  	bx    lr
 800276a:	4770      	bx	lr

0800276c <enable_bypass_hse>:
enable_bypass_hse():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:244

enable_bypass_hse:
  set_bit RCC_CR, RCC_CR_HSEBYP
 800276c:	4971      	ldr	r1, [pc, #452]	; (8002934 <uart_init+0xa8>)
 800276e:	6808      	ldr	r0, [r1, #0]
 8002770:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 8002774:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:245
  set_bit RCC_CR, RCC_CR_HSEON
 8002776:	496f      	ldr	r1, [pc, #444]	; (8002934 <uart_init+0xa8>)
 8002778:	6808      	ldr	r0, [r1, #0]
 800277a:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 800277e:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:246
1: ldr  r0, [r1]
 8002780:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:247
  ands  r0, RCC_CR_HSERDY
 8002782:	f410 3000 	ands.w	r0, r0, #131072	; 0x20000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:248
  beq   1b
 8002786:	d0fb      	beq.n	8002780 <enable_bypass_hse+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:249
  bx    lr
 8002788:	4770      	bx	lr

0800278a <set_pll_400_mhz_sysclk>:
set_pll_400_mhz_sysclk():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:252

set_pll_400_mhz_sysclk:
  modify_reg 	RCC_PLLCKSELR, 	RCC_PLLCKSELR_PLLSRC_Msk, 	RCC_PLLSRC_HSE
 800278a:	496b      	ldr	r1, [pc, #428]	; (8002938 <uart_init+0xac>)
 800278c:	6808      	ldr	r0, [r1, #0]
 800278e:	f020 0003 	bic.w	r0, r0, #3
 8002792:	f040 0002 	orr.w	r0, r0, #2
 8002796:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:253
  set_bit 		RCC_PLLCFGR, 	RCC_PLLCFGR_DIVP1EN
 8002798:	4968      	ldr	r1, [pc, #416]	; (800293c <uart_init+0xb0>)
 800279a:	6808      	ldr	r0, [r1, #0]
 800279c:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 80027a0:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:254
  set_bit 		RCC_PLLCFGR, 	RCC_PLLCFGR_DIVR1EN
 80027a2:	4966      	ldr	r1, [pc, #408]	; (800293c <uart_init+0xb0>)
 80027a4:	6808      	ldr	r0, [r1, #0]
 80027a6:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 80027aa:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:255
  modify_reg 	RCC_PLLCFGR, 	RCC_PLLCFGR_PLL1RGE_Msk,	RCC_PLLINPUTRANGE_2
 80027ac:	4963      	ldr	r1, [pc, #396]	; (800293c <uart_init+0xb0>)
 80027ae:	6808      	ldr	r0, [r1, #0]
 80027b0:	f020 000c 	bic.w	r0, r0, #12
 80027b4:	f040 0008 	orr.w	r0, r0, #8
 80027b8:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:256
  modify_reg 	RCC_PLLCFGR, 	RCC_PLLCFGR_PLL1VCOSEL,		RCC_PLLVCORANGE_WIDE
 80027ba:	4960      	ldr	r1, [pc, #384]	; (800293c <uart_init+0xb0>)
 80027bc:	6808      	ldr	r0, [r1, #0]
 80027be:	f020 0002 	bic.w	r0, r0, #2
 80027c2:	f040 0000 	orr.w	r0, r0, #0
 80027c6:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:257
  modify_reg 	RCC_PLLCKSELR, 	RCC_PLLCKSELR_DIVM1_Msk, 	RCC_PLLCKSELR_DIVM1
 80027c8:	495b      	ldr	r1, [pc, #364]	; (8002938 <uart_init+0xac>)
 80027ca:	6808      	ldr	r0, [r1, #0]
 80027cc:	f420 707c 	bic.w	r0, r0, #1008	; 0x3f0
 80027d0:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 80027d4:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:258
  mov r2, RCC_PLL1DIVR_N1
 80027d6:	f240 128f 	movw	r2, #399	; 0x18f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:259
  modify_reg 	RCC_PLL1DIVR, 	RCC_PLL1DIVR_N1_Msk, 		r2
 80027da:	4959      	ldr	r1, [pc, #356]	; (8002940 <uart_init+0xb4>)
 80027dc:	6808      	ldr	r0, [r1, #0]
 80027de:	f420 70ff 	bic.w	r0, r0, #510	; 0x1fe
 80027e2:	ea40 0002 	orr.w	r0, r0, r2
 80027e6:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:260
  modify_reg 	RCC_PLL1DIVR, 	RCC_PLL1DIVR_P1_Msk, 		RCC_PLL1DIVR_P1
 80027e8:	4955      	ldr	r1, [pc, #340]	; (8002940 <uart_init+0xb4>)
 80027ea:	6808      	ldr	r0, [r1, #0]
 80027ec:	f420 407e 	bic.w	r0, r0, #65024	; 0xfe00
 80027f0:	f440 7000 	orr.w	r0, r0, #512	; 0x200
 80027f4:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:261
  modify_reg 	RCC_PLL1DIVR, 	RCC_PLL1DIVR_Q1_Msk, 		RCC_PLL1DIVR_Q1
 80027f6:	4952      	ldr	r1, [pc, #328]	; (8002940 <uart_init+0xb4>)
 80027f8:	6808      	ldr	r0, [r1, #0]
 80027fa:	f420 00fe 	bic.w	r0, r0, #8323072	; 0x7f0000
 80027fe:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8002802:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:262
  modify_reg 	RCC_PLL1DIVR, 	RCC_PLL1DIVR_R1_Msk, 		RCC_PLL1DIVR_R1
 8002804:	494e      	ldr	r1, [pc, #312]	; (8002940 <uart_init+0xb4>)
 8002806:	6808      	ldr	r0, [r1, #0]
 8002808:	f020 40fe 	bic.w	r0, r0, #2130706432	; 0x7f000000
 800280c:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 8002810:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:263
  bx    lr
 8002812:	4770      	bx	lr

08002814 <enable_pll>:
enable_pll():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:266

enable_pll:
  set_bit		RCC_CR,			RCC_CR_PLL1ON
 8002814:	4947      	ldr	r1, [pc, #284]	; (8002934 <uart_init+0xa8>)
 8002816:	6808      	ldr	r0, [r1, #0]
 8002818:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 800281c:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:267
1: ldr  r0, [r1]
 800281e:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:268
  ands  r0, RCC_CR_PLL1RDY
 8002820:	f010 7000 	ands.w	r0, r0, #33554432	; 0x2000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:269
  beq   1b
 8002824:	d0fb      	beq.n	800281e <enable_pll+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:270
  bx    lr
 8002826:	4770      	bx	lr

08002828 <set_prescalers>:
set_prescalers():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:273

set_prescalers:
  modify_reg	RCC_D1CFGR,		RCC_D1CFGR_HPRE_Msk,		RCC_AHB_DIV_2
 8002828:	4946      	ldr	r1, [pc, #280]	; (8002944 <uart_init+0xb8>)
 800282a:	6808      	ldr	r0, [r1, #0]
 800282c:	f020 000f 	bic.w	r0, r0, #15
 8002830:	f040 0008 	orr.w	r0, r0, #8
 8002834:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:274
  modify_reg    RCC_CFGR,		RCC_CFGR_SW_Msk,			RCC_SYS_CLKSOURCE_PLL1
 8002836:	4944      	ldr	r1, [pc, #272]	; (8002948 <uart_init+0xbc>)
 8002838:	6808      	ldr	r0, [r1, #0]
 800283a:	f020 0007 	bic.w	r0, r0, #7
 800283e:	f040 0003 	orr.w	r0, r0, #3
 8002842:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:275
  modify_reg    RCC_D1CFGR,		RCC_D1CFGR_HPRE_Msk,		RCC_AHB_DIV_2
 8002844:	493f      	ldr	r1, [pc, #252]	; (8002944 <uart_init+0xb8>)
 8002846:	6808      	ldr	r0, [r1, #0]
 8002848:	f020 000f 	bic.w	r0, r0, #15
 800284c:	f040 0008 	orr.w	r0, r0, #8
 8002850:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:276
  modify_reg    RCC_D1CFGR,		RCC_D1CFGR_D1PPRE_Msk,		RCC_APB3_DIV_2
 8002852:	493c      	ldr	r1, [pc, #240]	; (8002944 <uart_init+0xb8>)
 8002854:	6808      	ldr	r0, [r1, #0]
 8002856:	f020 0070 	bic.w	r0, r0, #112	; 0x70
 800285a:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800285e:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:277
  modify_reg	RCC_D2CFGR,		RCC_D2CFGR_D2PPRE1_Msk,		RCC_APB1_DIV_2
 8002860:	493a      	ldr	r1, [pc, #232]	; (800294c <uart_init+0xc0>)
 8002862:	6808      	ldr	r0, [r1, #0]
 8002864:	f020 0070 	bic.w	r0, r0, #112	; 0x70
 8002868:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800286c:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:278
  modify_reg	RCC_D2CFGR,		RCC_D2CFGR_D2PPRE2_Msk,		RCC_APB2_DIV_2
 800286e:	4937      	ldr	r1, [pc, #220]	; (800294c <uart_init+0xc0>)
 8002870:	6808      	ldr	r0, [r1, #0]
 8002872:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8002876:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 800287a:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:279
  modify_reg	RCC_D3CFGR,		RCC_D3CFGR_D3PPRE_Msk,		RCC_APB4_DIV_2
 800287c:	4934      	ldr	r1, [pc, #208]	; (8002950 <uart_init+0xc4>)
 800287e:	6808      	ldr	r0, [r1, #0]
 8002880:	f020 0070 	bic.w	r0, r0, #112	; 0x70
 8002884:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8002888:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:280
  bx    lr
 800288a:	4770      	bx	lr

0800288c <uart_init>:
uart_init():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:286

@ -----------------------------------------------------------------------------
uart_init: @ ( -- )
@ -----------------------------------------------------------------------------

  push {lr}
 800288c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:291

  @ first enable caches and set highest CPU clock for performance
  @bl enable_i_cache
  @bl enable_d_cache
  bl set_power_config
 800288e:	f7ff ff59 	bl	8002744 <set_power_config>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:292
  bl set_voltage_scaling
 8002892:	f7ff ff5f 	bl	8002754 <set_voltage_scaling>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:293
  bl enable_bypass_hse
 8002896:	f7ff ff69 	bl	800276c <enable_bypass_hse>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:294
  bl set_pll_400_mhz_sysclk
 800289a:	f7ff ff76 	bl	800278a <set_pll_400_mhz_sysclk>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:295
  bl enable_pll
 800289e:	f7ff ffb9 	bl	8002814 <enable_pll>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:296
  bl set_prescalers
 80028a2:	f7ff ffc1 	bl	8002828 <set_prescalers>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:297
  bl set_flash_latency
 80028a6:	f7ff ff40 	bl	800272a <set_flash_latency>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:302
  @bl enable_csi
  @bl enable_compensation

  @ Select HSI clock (64 MHz) for USART3
  ldr  r1, = RCC_D2CCIP2R
 80028aa:	492a      	ldr	r1, [pc, #168]	; (8002954 <uart_init+0xc8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:303
  ldr  r0, = RCC_USART234578_CLKSOURCE_HSI
 80028ac:	f04f 0003 	mov.w	r0, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:304
  str  r0, [r1]
 80028b0:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:307

  @ Enable all GPIO peripheral clocks
  ldr  r1, = RCC_AHB4ENR
 80028b2:	4929      	ldr	r1, [pc, #164]	; (8002958 <uart_init+0xcc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:308
  ldr  r0, [r1]
 80028b4:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:309
  orrs r0, #0x00F
 80028b6:	f050 000f 	orrs.w	r0, r0, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:310
  orrs r0, #0x7F0
 80028ba:	f450 60fe 	orrs.w	r0, r0, #2032	; 0x7f0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:311
  str  r0, [r1]
 80028be:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:314

  @ Set PORTD pins in alternate function mode
  ldr  r1, = GPIOD_MODER
 80028c0:	4926      	ldr	r1, [pc, #152]	; (800295c <uart_init+0xd0>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:315
  ldr  r0, [r1]
 80028c2:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:316
  and  r0, #0xFFFCFFFF     @ Zero the bits 16-17 config for PD8
 80028c4:	f420 3040 	bic.w	r0, r0, #196608	; 0x30000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:317
  orrs r0, #0x00020000     @ AF mode for PD8
 80028c8:	f450 3000 	orrs.w	r0, r0, #131072	; 0x20000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:318
  str  r0, [r1]
 80028cc:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:321

  @ Set PORTD pins in alternate function mode
  ldr  r1, = GPIOD_MODER
 80028ce:	4923      	ldr	r1, [pc, #140]	; (800295c <uart_init+0xd0>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:322
  ldr  r0, [r1]
 80028d0:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:323
  and  r0, #0xFFF3FFFF     @ Zero the bits 18-19 config for PD9
 80028d2:	f420 2040 	bic.w	r0, r0, #786432	; 0xc0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:324
  orrs r0, #0x00080000     @ AF mode for PD9
 80028d6:	f450 2000 	orrs.w	r0, r0, #524288	; 0x80000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:325
  str  r0, [r1]
 80028da:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:328

  @ Set alternate function 7 to enable USART3 pins on Port PD8
  ldr  r1, = GPIOD_AFRH
 80028dc:	4920      	ldr	r1, [pc, #128]	; (8002960 <uart_init+0xd4>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:329
  ldr  r0, [r1]
 80028de:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:330
  and  r0, #0xFFFFFFF0     @ Zero the bits 0-3
 80028e0:	f020 000f 	bic.w	r0, r0, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:331
  orrs r0, #0x07           @ Alternate function 7 for TX pin of USART3 on PD8
 80028e4:	f050 0007 	orrs.w	r0, r0, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:332
  str  r0, [r1]
 80028e8:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:335

  @ Set alternate function 7 to enable USART3 pins on Port PD9
  ldr  r1, = GPIOD_AFRH
 80028ea:	491d      	ldr	r1, [pc, #116]	; (8002960 <uart_init+0xd4>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:336
  ldr  r0, [r1]
 80028ec:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:337
  and  r0, #0xFFFFFF0F    @ Zero the bits 4-7
 80028ee:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:338
  orrs r0, #0x70          @ Alternate function 7 for RX pin of USART3 on PD9
 80028f2:	f050 0070 	orrs.w	r0, r0, #112	; 0x70
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:339
  str  r0, [r1]
 80028f6:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:342

  @ Enable the USART3 peripheral clock by setting bit 18 of APB1ENR
  ldr  r1, = RCC_APB1ENR
 80028f8:	491a      	ldr	r1, [pc, #104]	; (8002964 <uart_init+0xd8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:343
  ldr  r0, [r1]
 80028fa:	6808      	ldr	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:344
  orrs r0, #0x00040000
 80028fc:	f450 2080 	orrs.w	r0, r0, #262144	; 0x40000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:345
  str  r0, [r1]
 8002900:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:348

  @ Configure BRR by dividing the bus clock with the baud rate
  ldr  r1, =Terminal_BRR
 8002902:	4919      	ldr	r1, [pc, #100]	; (8002968 <uart_init+0xdc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:349
  movs r0, #0x22C @#(64000000 + 115200 / 2) / 115200 @ 0x22C  -> 64 MHz HSI / 115200 baud
 8002904:	f45f 700b 	movs.w	r0, #556	; 0x22c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:350
  str  r0, [r1]
 8002908:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:353

  @ disable overrun detection before UE to avoid USART blocking on overflow
  ldr  r1, =Terminal_CR3
 800290a:	4918      	ldr	r1, [pc, #96]	; (800296c <uart_init+0xe0>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:354
  ldr  r0, =USART_CR3_OVRDIS @ USART_CR3_OVRDIS
 800290c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:355
  str  r0, [r1]
 8002910:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:358

  @ Enable the USART, TX, and RX circuit
  ldr  r1, =Terminal_CR1
 8002912:	4917      	ldr	r1, [pc, #92]	; (8002970 <uart_init+0xe4>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:359
  ldr  r0, =USART_CR1_UE + USART_CR1_TE + USART_CR1_RE
 8002914:	f04f 000d 	mov.w	r0, #13
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:360
  str  r0, [r1]
 8002918:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:362

  pop {lr}
 800291a:	f85d eb04 	ldr.w	lr, [sp], #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:364

  bx   lr
 800291e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:191
  ldr   r1, = ICIALLU
 8002920:	e000ef50 	.word	0xe000ef50
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:196
  ldr   r1, = CCR
 8002924:	e000ed14 	.word	0xe000ed14
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:215
  modify_reg 	FLASH_ACR, 		FLASH_ACR_LATENCY_Msk, 		FLASH_LATENCY_4
 8002928:	52002000 	.word	0x52002000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:232
  modify_reg 	PWR_CR3, (0x30 | 0x08 | 0x04 | 0x02 | 0x01), 0x04
 800292c:	5802480c 	.word	0x5802480c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:236
  modify_reg PWR_D3CR, 0x0000C000, 0x00004000 | 0x00008000 @ PWR_REGU_VOLTAGE_SCALE1
 8002930:	58024818 	.word	0x58024818
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:244
  set_bit RCC_CR, RCC_CR_HSEBYP
 8002934:	58024400 	.word	0x58024400
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:252
  modify_reg 	RCC_PLLCKSELR, 	RCC_PLLCKSELR_PLLSRC_Msk, 	RCC_PLLSRC_HSE
 8002938:	58024428 	.word	0x58024428
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:253
  set_bit 		RCC_PLLCFGR, 	RCC_PLLCFGR_DIVP1EN
 800293c:	5802442c 	.word	0x5802442c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:259
  modify_reg 	RCC_PLL1DIVR, 	RCC_PLL1DIVR_N1_Msk, 		r2
 8002940:	58024430 	.word	0x58024430
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:273
  modify_reg	RCC_D1CFGR,		RCC_D1CFGR_HPRE_Msk,		RCC_AHB_DIV_2
 8002944:	58024418 	.word	0x58024418
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:274
  modify_reg    RCC_CFGR,		RCC_CFGR_SW_Msk,			RCC_SYS_CLKSOURCE_PLL1
 8002948:	58024410 	.word	0x58024410
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:277
  modify_reg	RCC_D2CFGR,		RCC_D2CFGR_D2PPRE1_Msk,		RCC_APB1_DIV_2
 800294c:	5802441c 	.word	0x5802441c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:279
  modify_reg	RCC_D3CFGR,		RCC_D3CFGR_D3PPRE_Msk,		RCC_APB4_DIV_2
 8002950:	58024420 	.word	0x58024420
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:302
  ldr  r1, = RCC_D2CCIP2R
 8002954:	58024454 	.word	0x58024454
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:307
  ldr  r1, = RCC_AHB4ENR
 8002958:	580244e0 	.word	0x580244e0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:314
  ldr  r1, = GPIOD_MODER
 800295c:	58020c00 	.word	0x58020c00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:328
  ldr  r1, = GPIOD_AFRH
 8002960:	58020c24 	.word	0x58020c24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:342
  ldr  r1, = RCC_APB1ENR
 8002964:	580244e8 	.word	0x580244e8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:348
  ldr  r1, =Terminal_BRR
 8002968:	4000480c 	.word	0x4000480c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:353
  ldr  r1, =Terminal_CR3
 800296c:	40004808 	.word	0x40004808
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:358
  ldr  r1, =Terminal_CR1
 8002970:	40004800 	.word	0x40004800

08002974 <Dictionary_605>:
Dictionary_605():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:358
 8002974:	08002990 	.word	0x08002990
 8002978:	68090081 	.word	0x68090081
 800297c:	2d6b6f6f 	.word	0x2d6b6f6f
 8002980:	74696d65 	.word	0x74696d65

08002984 <Code_605>:
Code_605():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:25

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-emit" @ ( -- addr )
  CoreVariable hook_emit
@------------------------------------------------------------------------------
  pushdatos
 8002984:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:26
  ldr tos, =hook_emit
 8002988:	4e61      	ldr	r6, [pc, #388]	; (8002b10 <Code_634+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:27
  bx lr
 800298a:	4770      	bx	lr
 800298c:	08002a7a 	.word	0x08002a7a

08002990 <Dictionary_608>:
Dictionary_608():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:27
 8002990:	080029ac 	.word	0x080029ac
 8002994:	68080081 	.word	0x68080081
 8002998:	2d6b6f6f 	.word	0x2d6b6f6f
 800299c:	656b      	.short	0x656b
 800299e:	79          	.byte	0x79
	...

080029a0 <Code_608>:
Code_608():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:34

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-key" @ ( -- addr )
  CoreVariable hook_key
@------------------------------------------------------------------------------
  pushdatos
 80029a0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:35
  ldr tos, =hook_key
 80029a4:	4e5b      	ldr	r6, [pc, #364]	; (8002b14 <Code_634+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:36
  bx lr
 80029a6:	4770      	bx	lr
 80029a8:	08002aa0 	.word	0x08002aa0

080029ac <Dictionary_611>:
Dictionary_611():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:36
 80029ac:	080029ca 	.word	0x080029ca
 80029b0:	680a0081 	.word	0x680a0081
 80029b4:	2d6b6f6f 	.word	0x2d6b6f6f
 80029b8:	74696d65 	.word	0x74696d65
 80029bc:	3f          	.byte	0x3f
	...

080029be <Code_611>:
Code_611():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:43

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-emit?" @ ( -- addr )
  CoreVariable hook_qemit
@------------------------------------------------------------------------------
  pushdatos
 80029be:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:44
  ldr tos, =hook_qemit
 80029c2:	4e55      	ldr	r6, [pc, #340]	; (8002b18 <Code_634+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:45
  bx lr
 80029c4:	4770      	bx	lr
 80029c6:	2aca      	.short	0x2aca
 80029c8:	0800      	.short	0x0800

080029ca <Dictionary_614>:
Dictionary_614():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:45
 80029ca:	29e6      	.short	0x29e6
 80029cc:	00810800 	.word	0x00810800
 80029d0:	6f6f6809 	.word	0x6f6f6809
 80029d4:	656b2d6b 	.word	0x656b2d6b
 80029d8:	3f79      	.short	0x3f79

080029da <Code_614>:
Code_614():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:52

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-key?" @ ( -- addr )
  CoreVariable hook_qkey
@------------------------------------------------------------------------------
  pushdatos
 80029da:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:53
  ldr tos, =hook_qkey
 80029de:	4e4f      	ldr	r6, [pc, #316]	; (8002b1c <Code_634+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:54
  bx lr
 80029e0:	4770      	bx	lr
 80029e2:	2af6      	.short	0x2af6
 80029e4:	0800      	.short	0x0800

080029e6 <Dictionary_617>:
Dictionary_617():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:54
 80029e6:	2a04      	.short	0x2a04
 80029e8:	00810800 	.word	0x00810800
 80029ec:	6f6f680a 	.word	0x6f6f680a
 80029f0:	61702d6b 	.word	0x61702d6b
 80029f4:	7375      	.short	0x7375
 80029f6:	65          	.byte	0x65
	...

080029f8 <Code_617>:
Code_617():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:61

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-pause" @ ( -- addr )
  CoreVariable hook_pause
@------------------------------------------------------------------------------
  pushdatos
 80029f8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:62
  ldr tos, =hook_pause
 80029fc:	4e48      	ldr	r6, [pc, #288]	; (8002b20 <Code_634+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:63
  bx lr
 80029fe:	4770      	bx	lr
 8002a00:	08004eae 	.word	0x08004eae

08002a04 <Dictionary_620>:
Dictionary_620():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:63
 8002a04:	08002a1a 	.word	0x08002a1a
 8002a08:	65040000 	.word	0x65040000
 8002a0c:	696d      	.short	0x696d
 8002a0e:	74          	.byte	0x74
	...

08002a10 <Code_620>:
Code_620():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:70

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "emit" @ ( c -- )
emit:
@------------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr} @ Used in core, registers have to be saved !
 8002a10:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:71
  ldr r0, =hook_emit
 8002a12:	483f      	ldr	r0, [pc, #252]	; (8002b10 <Code_634+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:72
  bl hook_intern
 8002a14:	f000 f826 	bl	8002a64 <hook_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:73
  pop {r0, r1, r2, r3, pc}
 8002a18:	bd0f      	pop	{r0, r1, r2, r3, pc}

08002a1a <Dictionary_621>:
Dictionary_621():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:73
 8002a1a:	2a2e      	.short	0x2a2e
 8002a1c:	00000800 	.word	0x00000800
 8002a20:	79656b03 	.word	0x79656b03

08002a24 <Code_621>:
Code_621():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:79

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "key" @ ( -- c )
key:
@------------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr} @ Used in core, registers have to be saved !
 8002a24:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:80
  ldr r0, =hook_key
 8002a26:	483b      	ldr	r0, [pc, #236]	; (8002b14 <Code_634+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:81
  bl hook_intern
 8002a28:	f000 f81c 	bl	8002a64 <hook_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:82
  pop {r0, r1, r2, r3, pc}
 8002a2c:	bd0f      	pop	{r0, r1, r2, r3, pc}

08002a2e <Dictionary_622>:
Dictionary_622():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:82
 8002a2e:	2a40      	.short	0x2a40
 8002a30:	00000800 	.word	0x00000800
 8002a34:	696d6505 	.word	0x696d6505
 8002a38:	3f74      	.short	0x3f74

08002a3a <Code_622>:
Code_622():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:87

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "emit?" @ ( -- ? )
@------------------------------------------------------------------------------
  ldr r0, =hook_qemit
 8002a3a:	4837      	ldr	r0, [pc, #220]	; (8002b18 <Code_634+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:88
  ldr r0, [r0]
 8002a3c:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:89
  mov pc, r0
 8002a3e:	4687      	mov	pc, r0

08002a40 <Dictionary_623>:
Dictionary_623():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:89
 8002a40:	08002a52 	.word	0x08002a52
 8002a44:	6b040000 	.word	0x6b040000
 8002a48:	7965      	.short	0x7965
 8002a4a:	3f          	.byte	0x3f
	...

08002a4c <Code_623>:
Code_623():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:94

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "key?" @ ( -- ? )
@------------------------------------------------------------------------------
  ldr r0, =hook_qkey
 8002a4c:	4833      	ldr	r0, [pc, #204]	; (8002b1c <Code_634+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:95
  ldr r0, [r0]
 8002a4e:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:96
  mov pc, r0
 8002a50:	4687      	mov	pc, r0

08002a52 <Dictionary_624>:
Dictionary_624():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:96
 8002a52:	2a68      	.short	0x2a68
 8002a54:	00000800 	.word	0x00000800
 8002a58:	75617005 	.word	0x75617005
 8002a5c:	6573      	.short	0x6573

08002a5e <Code_624>:
Code_624():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:102

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "pause" @ ( -- ? )
pause:
@------------------------------------------------------------------------------
  ldr r0, =hook_pause
 8002a5e:	4830      	ldr	r0, [pc, #192]	; (8002b20 <Code_634+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:103
  ldr r0, [r0]
 8002a60:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:104
  mov pc, r0
 8002a62:	4687      	mov	pc, r0

08002a64 <hook_intern>:
hook_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:108

@------------------------------------------------------------------------------
hook_intern:
  ldr r0, [r0]
 8002a64:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:109
  mov pc, r0
 8002a66:	4687      	mov	pc, r0

08002a68 <Dictionary_625>:
Dictionary_625():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:109
 8002a68:	08002a8e 	.word	0x08002a8e
 8002a6c:	730b0000 	.word	0x730b0000
 8002a70:	61697265 	.word	0x61697265
 8002a74:	6d652d6c 	.word	0x6d652d6c
 8002a78:	7469      	.short	0x7469

08002a7a <Code_625>:
serial_emit():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:375

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "serial-emit"
serial_emit: @ ( c -- ) Emit one character
@ -----------------------------------------------------------------------------
   push {lr}
 8002a7a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:377

1: bl serial_qemit
 8002a7c:	f000 f825 	bl	8002aca <Code_631>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:378
   cmp tos, #0
 8002a80:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:379
   drop
 8002a82:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:380
   beq 1b
 8002a84:	d0fa      	beq.n	8002a7c <Code_625+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:382

   ldr r2, =Terminal_TDR
 8002a86:	4a27      	ldr	r2, [pc, #156]	; (8002b24 <Code_634+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:383
   strb tos, [r2]         @ Output the character
 8002a88:	7016      	strb	r6, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:384
   drop
 8002a8a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:386

   pop {pc}
 8002a8c:	bd00      	pop	{pc}

08002a8e <Dictionary_628>:
Dictionary_628():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:386
 8002a8e:	2ab6      	.short	0x2ab6
 8002a90:	00000800 	.word	0x00000800
 8002a94:	7265730a 	.word	0x7265730a
 8002a98:	2d6c6169 	.word	0x2d6c6169
 8002a9c:	656b      	.short	0x656b
 8002a9e:	79          	.byte	0x79
	...

08002aa0 <Code_628>:
serial_key():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:392

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "serial-key"
serial_key: @ ( -- c ) Receive one character
@ -----------------------------------------------------------------------------
   push {lr}
 8002aa0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:394

1: bl serial_qkey
 8002aa2:	f000 f828 	bl	8002af6 <Code_634>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:395
   cmp tos, #0
 8002aa6:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:396
   drop
 8002aa8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:397
   beq 1b
 8002aaa:	d0fa      	beq.n	8002aa2 <Code_628+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:399

   pushdatos
 8002aac:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:400
   ldr r2, =Terminal_RDR
 8002ab0:	4a1d      	ldr	r2, [pc, #116]	; (8002b28 <Code_634+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:401
   ldrb tos, [r2]         @ Fetch the character
 8002ab2:	7816      	ldrb	r6, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:403

   pop {pc}
 8002ab4:	bd00      	pop	{pc}

08002ab6 <Dictionary_631>:
Dictionary_631():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:403
 8002ab6:	2ae4      	.short	0x2ae4
 8002ab8:	00000800 	.word	0x00000800
 8002abc:	7265730c 	.word	0x7265730c
 8002ac0:	2d6c6169 	.word	0x2d6c6169
 8002ac4:	74696d65 	.word	0x74696d65
 8002ac8:	3f          	.byte	0x3f
	...

08002aca <Code_631>:
serial_qemit():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:409

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "serial-emit?"
serial_qemit:  @ ( -- ? ) Ready to send a character ?
@ -----------------------------------------------------------------------------
   push {lr}
 8002aca:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:410
   bl pause
 8002acc:	f7ff ffc7 	bl	8002a5e <Code_624>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:412

   pushdaconst 0    @ False Flag
 8002ad0:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002ad4:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:413
   ldr r0, =Terminal_ISR
 8002ad6:	4815      	ldr	r0, [pc, #84]	; (8002b2c <Code_634+0x36>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:414
   ldr r1, [r0]     @ Fetch status
 8002ad8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:415
   movs r0, #TXE
 8002ada:	2080      	movs	r0, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:416
   ands r1, r0
 8002adc:	4001      	ands	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:417
   beq 1f
 8002ade:	d000      	beq.n	8002ae2 <Code_631+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:418
   mvns tos, tos    @ True Flag
 8002ae0:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:419
1: pop {pc}
 8002ae2:	bd00      	pop	{pc}

08002ae4 <Dictionary_634>:
Dictionary_634():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:419
 8002ae4:	08002b30 	.word	0x08002b30
 8002ae8:	730b0000 	.word	0x730b0000
 8002aec:	61697265 	.word	0x61697265
 8002af0:	656b2d6c 	.word	0x656b2d6c
 8002af4:	3f79      	.short	0x3f79

08002af6 <Code_634>:
serial_qkey():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:425

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "serial-key?"
serial_qkey:  @ ( -- ? ) Is there a key press ?
@ -----------------------------------------------------------------------------
   push {lr}
 8002af6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:426
   bl pause
 8002af8:	f7ff ffb1 	bl	8002a5e <Code_624>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:428

   pushdaconst 0  @ False Flag
 8002afc:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002b00:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:429
   ldr r0, =Terminal_ISR
 8002b02:	480a      	ldr	r0, [pc, #40]	; (8002b2c <Code_634+0x36>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:430
   ldr r1, [r0]     @ Fetch status
 8002b04:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:431
   movs r0, #RXNE
 8002b06:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:432
   ands r1, r0
 8002b08:	4001      	ands	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:433
   beq 1f
 8002b0a:	d000      	beq.n	8002b0e <Code_634+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:434
   mvns tos, tos @ True Flag
 8002b0c:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:435
1: pop {pc}
 8002b0e:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:26
  ldr tos, =hook_emit
 8002b10:	2407fff8 	.word	0x2407fff8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:35
  ldr tos, =hook_key
 8002b14:	2407fff4 	.word	0x2407fff4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:44
  ldr tos, =hook_qemit
 8002b18:	2407fff0 	.word	0x2407fff0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:53
  ldr tos, =hook_qkey
 8002b1c:	2407ffec 	.word	0x2407ffec
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/terminalhooks.s:62
  ldr tos, =hook_pause
 8002b20:	2407ffe8 	.word	0x2407ffe8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:382
   ldr r2, =Terminal_TDR
 8002b24:	40004828 	.word	0x40004828
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:400
   ldr r2, =Terminal_RDR
 8002b28:	40004824 	.word	0x40004824
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:413
   ldr r0, =Terminal_ISR
 8002b2c:	4000481c 	.word	0x4000481c

08002b30 <Dictionary_637>:
Dictionary_637():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/terminal.s:413
 8002b30:	08002b54 	.word	0x08002b54
 8002b34:	63070000 	.word	0x63070000
 8002b38:	65707865 	.word	0x65707865
 8002b3c:	7463      	.short	0x7463

08002b3e <Code_637>:
Code_637():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:24
@ Input routine Query - with Unicode support.

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "cexpect" @ ( cstr-addr maxlength ) Collecting your keystrokes into a counted string !
@ -----------------------------------------------------------------------------
  push {lr}
 8002b3e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:25
  ldr r0, [psp]  @ Fetch address
 8002b40:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:26
  push {r0}
 8002b42:	b401      	push	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:27
  adds r0, #1    @ Add one to skip length byte for accept area
 8002b44:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:28
  str r0, [psp]
 8002b46:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:29
  bl accept
 8002b48:	f000 f80b 	bl	8002b62 <Code_639>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:30
  pop {r0}
 8002b4c:	bc01      	pop	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:31
  strb tos, [r0] @ Store accepted length into length byte of counted string
 8002b4e:	7006      	strb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:32
  drop
 8002b50:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:33
  pop {pc}
 8002b52:	bd00      	pop	{pc}

08002b54 <Dictionary_639>:
Dictionary_639():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:33
 8002b54:	08002bca 	.word	0x08002bca
 8002b58:	61060000 	.word	0x61060000
 8002b5c:	70656363 	.word	0x70656363
 8002b60:	74          	.byte	0x74
	...

08002b62 <Code_639>:
accept():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:39

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "accept" @ ( c-addr maxlength -- length ) Collecting your keystrokes !
accept: @ Nimmt einen String entgegen und legt ihn in einen Puffer.
@ -----------------------------------------------------------------------------
        push    {lr}
 8002b62:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:48
        @ r1: Pufferzeiger     Buffer pointer
        @ r2: Pufferfüllstand  Buffer fill gauge
        @ r3: Helferlein       Temporary
        @ tos:Längengrenze     Maximum length

        ldm psp!, {r1}          @ Pufferadresse holen                 Fetch buffer address
 8002b64:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:49
        subs r1, #1             @ Einen abziehen, weil die Routine bislang eigentlich abgezählte Strings erwartet hat.
 8002b66:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:50
        movs r2, #0             @ Momentaner Pufferfüllstand Null     Currently zero characters typed
 8002b68:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:53

1:      @ Queryschleife  Collcting loop
        bl key              @ Tastendruck holen  Fetch keypress
 8002b6a:	f7ff ff5b 	bl	8002a24 <Code_621>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:54
        popda r0
 8002b6e:	0030      	movs	r0, r6
 8002b70:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:56

        cmp     r0, #127          @ Delete
 8002b72:	287f      	cmp	r0, #127	; 0x7f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:57
        beq     6f                @ Should do the same as Backspace
 8002b74:	d009      	beq.n	8002b8a <Code_639+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:59

        cmp     r0, #32           @ ASCII 0-31 sind Steuerzeichen, 32 ist Space. Die Steuerzeichen müssten einzeln behandelt werden.
 8002b76:	2820      	cmp	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:60
        bhs     2f                @ Space wird hier einfach so mit aufgenommen.
 8002b78:	d219      	bcs.n	8002bae <Code_639+0x4c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:64

        @ Steuerzeichen bearbeiten.
        @ Handle control characters below ascii 32 = space here.
        cmp     r0, #9            @ TAB ?
 8002b7a:	2809      	cmp	r0, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:65
        beq     5f                @ Jump to replace TAB with space and include as normal character.
 8002b7c:	d016      	beq.n	8002bac <Code_639+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:67

        cmp     r0, #10           @ Bei Enter sind wir fertig - LF  Finish with LF
 8002b7e:	280a      	cmp	r0, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:68
        beq     3f
 8002b80:	d01f      	beq.n	8002bc2 <Code_639+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:69
        cmp     r0, #13           @ Bei Enter sind wir fertig - CR  Finish with CR
 8002b82:	280d      	cmp	r0, #13
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:70
        beq     3f
 8002b84:	d01d      	beq.n	8002bc2 <Code_639+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:72

        cmp     r0, #8            @ Backspace
 8002b86:	2808      	cmp	r0, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:73
        bne     1b                @ Alle anderen Steuerzeichen ignorieren  Ignore all other control characters
 8002b88:	d1ef      	bne.n	8002b6a <Code_639+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:75

6:        cmp     r2, #0            @ Null Zeichen im Puffer ? Dann ist nichts zu löschen da.
 8002b8a:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:76
          beq     1b                @ Zero characters in buffer ? Then we cannot delete one.
 8002b8c:	d0ed      	beq.n	8002b6a <Code_639+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:78

          bl dotgaensefuesschen  @ Clear a character visually. Emit sequence to delete one character in terminal.
 8002b8e:	f000 f90b 	bl	8002da8 <dotgaensefuesschen>
 8002b92:	0803      	.short	0x0803
 8002b94:	0820      	.short	0x0820
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:104
      @ Unicode-Characters have this format:
      @ 11xx xxxx,  10xx xxxx,  10xx xxxx......
      @ If the last character has 10... then I have to delete until i reach a character that has 11....
      @ Always check if buffer may be already empty !

4:    cmp     r2, #0            @ Null Zeichen im Puffer ? Dann ist nichts zu löschen da.
 8002b96:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:105
      beq     1b                @ Anything available to be deleted ?
 8002b98:	d0e7      	beq.n	8002b6a <Code_639+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:109

      @ Hole das letzte Zeichen und schneide es ab.
      @ Fetch character from the end and cut it off.
      ldrb    r0, [r1, r2]      @ Letztes Zeichen im Puffer holen
 8002b9a:	5c88      	ldrb	r0, [r1, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:110
      subs    r2, #1            @  und abschneiden
 8002b9c:	3a01      	subs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:115

      @ Teste das Zeichen auf Unicode, oberstes Bit gesetzt ?
      @ Check character for Unicode, is MSB set ?
      @ tst r0, 0x80
      movs r3, #0x80
 8002b9e:	2380      	movs	r3, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:116
      ands r3, r0
 8002ba0:	4003      	ands	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:117
      beq 1b @ Wenn nein, dann war das ein normales Zeichen und ich bin schon fertig.
 8002ba2:	d0e2      	beq.n	8002b6a <Code_639+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:125
      @ Ansonsten könnten noch mehr Unicode-Zeichen folgen.
      @ Zeichen das erste Byte eines Unicode-Zeichens ?
      @ Else I have to remove more bytes of this single Unicode character.
      @ Have I reached the first byte of this particular Unicode character yet ?
      @ tst r0, 0x40
      movs r3, #0x40
 8002ba4:	2340      	movs	r3, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:126
      ands r3, r0
 8002ba6:	4003      	ands	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:127
      beq 4b @ Wenn nein, lösche ein weiteres Zeichen. No ? Delete one more byte.
 8002ba8:	d0f5      	beq.n	8002b96 <Code_639+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:128
      b 1b   @ Wenn ja, fertig. Dann habe ich soeben das erste Byte eines Unicode-Zeichens entfernt.  Yes ? Finished deleting.
 8002baa:	e7de      	b.n	8002b6a <Code_639+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:132
  .endif

5:      @ Replace TAB with space:
        movs r0, #32
 8002bac:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:136

2:      @ Normale Zeichen annehmen
        @ Add a character to buffer if there is space left and echo it back.
        cmp     r2, tos              @ Ist der Puffer voll ?  Check buffer fill level.
 8002bae:	42b2      	cmp	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:137
        bhs     1b                   @ Keine weiteren Zeichen mehr annehmen.  No more characters if buffer is full !
 8002bb0:	d2db      	bcs.n	8002b6a <Code_639+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:139

        pushda r0
 8002bb2:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002bb6:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:140
        bl emit                   @ Zeichen ausgeben
 8002bb8:	f7ff ff2a 	bl	8002a10 <Code_620>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:141
        adds    r2, #1            @ Pufferfüllstand erhöhen
 8002bbc:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:142
        strb    r0, [r1, r2]      @ Zeichen in Puffer speichern
 8002bbe:	5488      	strb	r0, [r1, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:143
        b       1b
 8002bc0:	e7d3      	b.n	8002b6a <Code_639+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:146

3:      @ Return has been pressed: Store string length, print space and leave.
        movs tos, r2              @ Give back accepted length
 8002bc2:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:147
        bl space                  @ Statt des Zeilenumbruches ein Leerzeichen ausgeben
 8002bc4:	f000 f89f 	bl	8002d06 <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:148
        pop {pc}
 8002bc8:	bd00      	pop	{pc}

08002bca <Dictionary_643>:
Dictionary_643():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:148
 8002bca:	2bdc      	.short	0x2bdc
 8002bcc:	00400800 	.word	0x00400800
 8002bd0:	62697403 	.word	0x62697403

08002bd4 <Code_643>:
Code_643():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:154

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_0, "tib" @ ( -- addr )
@ -----------------------------------------------------------------------------
tib:
  pushdatos
 8002bd4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:155
  ldr tos, =Eingabepuffer
 8002bd8:	4e29      	ldr	r6, [pc, #164]	; (8002c80 <Code_655+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:156
  bx lr
 8002bda:	4770      	bx	lr

08002bdc <Dictionary_645>:
Dictionary_645():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:156
 8002bdc:	08002bf2 	.word	0x08002bf2
 8002be0:	3e030081 	.word	0x3e030081
 8002be4:	6e69      	.short	0x6e69

08002be6 <Code_645>:
Code_645():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:162

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, ">in" @ ( -- addr )
  CoreVariable Pufferstand
@ -----------------------------------------------------------------------------
  pushdatos
 8002be6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:163
  ldr tos, =Pufferstand
 8002bea:	4e26      	ldr	r6, [pc, #152]	; (8002c84 <Code_655+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:164
  bx lr
 8002bec:	4770      	bx	lr
 8002bee:	0000      	.short	0x0000
	...

08002bf2 <Dictionary_648>:
Dictionary_648():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:164
 8002bf2:	2c18      	.short	0x2c18
 8002bf4:	00820800 	.word	0x00820800
 8002bf8:	7275630e 	.word	0x7275630e
 8002bfc:	746e6572 	.word	0x746e6572
 8002c00:	756f732d 	.word	0x756f732d
 8002c04:	6372      	.short	0x6372
 8002c06:	65          	.byte	0x65
	...

08002c08 <Code_648>:
Code_648():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:171

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_2variable, "current-source" @ ( -- addr )
  DoubleCoreVariable current_source
@------------------------------------------------------------------------------
  pushdatos
 8002c08:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:172
  ldr tos, =current_source
 8002c0c:	4e1e      	ldr	r6, [pc, #120]	; (8002c88 <Code_655+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:173
  bx lr
 8002c0e:	4770      	bx	lr
 8002c10:	00000000 	.word	0x00000000
 8002c14:	240000c0 	.word	0x240000c0

08002c18 <Dictionary_651>:
Dictionary_651():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:173
 8002c18:	08002c34 	.word	0x08002c34
 8002c1c:	73090000 	.word	0x73090000
 8002c20:	6f737465 	.word	0x6f737465
 8002c24:	65637275 	.word	0x65637275

08002c28 <Code_651>:
Code_651():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:182

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "setsource" @ ( c-addr len -- )
setsource:
@ -----------------------------------------------------------------------------
  ldr r0, =current_source
 8002c28:	4817      	ldr	r0, [pc, #92]	; (8002c88 <Code_655+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:183
  ldm psp!, {r1}
 8002c2a:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:184
  str tos, [r0]
 8002c2c:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:185
  str r1, [r0, #4]
 8002c2e:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:186
  drop
 8002c30:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:187
  bx lr
 8002c32:	4770      	bx	lr

08002c34 <Dictionary_653>:
Dictionary_653():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:187
 8002c34:	08002c52 	.word	0x08002c52
 8002c38:	73060000 	.word	0x73060000
 8002c3c:	6372756f 	.word	0x6372756f
 8002c40:	65          	.byte	0x65
	...

08002c42 <Code_653>:
Code_653():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:193

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "source" @ ( c-addr len -- )
source:
@ -----------------------------------------------------------------------------
  pushdatos
 8002c42:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:194
  ldr tos, =current_source
 8002c46:	4e10      	ldr	r6, [pc, #64]	; (8002c88 <Code_655+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:196

  subs psp, #4        @ Opcodes for 2@
 8002c48:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:197
  ldr r0, [tos, #4]
 8002c4a:	6870      	ldr	r0, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:198
  str r0, [psp]
 8002c4c:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:199
  ldr tos, [tos]
 8002c4e:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:200
  bx lr
 8002c50:	4770      	bx	lr

08002c52 <Dictionary_655>:
Dictionary_655():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:200
 8002c52:	2c8c      	.short	0x2c8c
 8002c54:	00000800 	.word	0x00000800
 8002c58:	65757105 	.word	0x65757105
 8002c5c:	7972      	.short	0x7972

08002c5e <Code_655>:
Code_655():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:206

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "query" @ Collecting your keystrokes into TIB ! Forth at your fingertips :-)
query: @ ( -- ) Nimmt einen String in den Eingabepuffer auf
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8002c5e:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:208

  ldr r0, =Pufferstand @ Aktueller Offset in den Eingabepuffer  Zero characters consumed yet
 8002c60:	4808      	ldr	r0, [pc, #32]	; (8002c84 <Code_655+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:209
  movs r1, #0
 8002c62:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:210
  str r1, [r0]
 8002c64:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:212

  bl tib
 8002c66:	f7ff ffb5 	bl	8002bd4 <Code_643>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:213
  dup
 8002c6a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:214
  pushdaconst Maximaleeingabe
 8002c6e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002c72:	26c8      	movs	r6, #200	; 0xc8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:215
  bl accept
 8002c74:	f7ff ff75 	bl	8002b62 <Code_639>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:216
  bl setsource
 8002c78:	f7ff ffd6 	bl	8002c28 <Code_651>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:218

  pop {r0, r1, r2, r3, pc}
 8002c7c:	bd0f      	pop	{r0, r1, r2, r3, pc}
 8002c7e:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:155
  ldr tos, =Eingabepuffer
 8002c80:	240000c0 	.word	0x240000c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:163
  ldr tos, =Pufferstand
 8002c84:	2407ffe4 	.word	0x2407ffe4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:172
  ldr tos, =current_source
 8002c88:	2407ffdc 	.word	0x2407ffdc

08002c8c <Dictionary_660>:
Dictionary_660():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/query.s:172
 8002c8c:	08002cd4 	.word	0x08002cd4
 8002c90:	63070000 	.word	0x63070000
 8002c94:	61706d6f 	.word	0x61706d6f
 8002c98:	6572      	.short	0x6572

08002c9a <Code_660>:
Code_660():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:57

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compare"  @ Vergleicht zwei Strings  Compare two strings
compare:                             @ ( c-addr1 len-1 c-addr2 len-2 -- f )
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8002c9a:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:59

  popda r1        @ Length of second string
 8002c9c:	0031      	movs	r1, r6
 8002c9e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:60
  ldm psp!, {r0}  @ Length of first  string
 8002ca0:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:61
  cmp r0, r1
 8002ca2:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:63

   ldm psp!, {r1}  @ Address of first string. ldm does not change flags.
 8002ca4:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:66
                   @ TOS contains address of second string.

  bne 2f @ Exit in case of unequal lengths.
 8002ca6:	d110      	bne.n	8002cca <Code_660+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:70

   @ Lengths are equal. Compare characters.
   @ How many characters to compare left ?
1: cmp r0, #0
 8002ca8:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:71
   beq 3f
 8002caa:	d010      	beq.n	8002cce <Code_660+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:73

     subs r0, #1
 8002cac:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:74
     ldrb r2, [r1, r0]
 8002cae:	5c0a      	ldrb	r2, [r1, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:75
     ldrb r3, [tos, r0]
 8002cb0:	5c33      	ldrb	r3, [r6, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:78

     @ Beide Zeichen in Kleinbuchstaben verwandeln.  Convert booth to lowercase.
     lowercase r2
 8002cb2:	2a41      	cmp	r2, #65	; 0x41
 8002cb4:	d302      	bcc.n	8002cbc <Code_660+0x22>
 8002cb6:	2a5b      	cmp	r2, #91	; 0x5b
 8002cb8:	bf38      	it	cc
 8002cba:	3220      	addcc	r2, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:79
     lowercase r3
 8002cbc:	2b41      	cmp	r3, #65	; 0x41
 8002cbe:	d302      	bcc.n	8002cc6 <Code_660+0x2c>
 8002cc0:	2b5b      	cmp	r3, #91	; 0x5b
 8002cc2:	bf38      	it	cc
 8002cc4:	3320      	addcc	r3, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:81

     cmp r2, r3
 8002cc6:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:82
     beq 1b
 8002cc8:	d0ee      	beq.n	8002ca8 <Code_660+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:85

2:   @ Unequal
     movs tos, #0
 8002cca:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:86
     pop {r0, r1, r2, r3, pc}
 8002ccc:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:89

3: @ Equal !
   movs tos, #0
 8002cce:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:90
   mvns tos, tos
 8002cd0:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:91
   pop {r0, r1, r2, r3, pc}
 8002cd2:	bd0f      	pop	{r0, r1, r2, r3, pc}

08002cd4 <Dictionary_664>:
Dictionary_664():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:91
 8002cd4:	08002ce8 	.word	0x08002ce8
 8002cd8:	63020000 	.word	0x63020000
 8002cdc:	72          	.byte	0x72
	...

08002cde <Code_664>:
Code_664():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:96

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "cr" @ Zeilenumbruch
@ -----------------------------------------------------------------------------
  push {lr}
 8002cde:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:97
  writeln ""
 8002ce0:	f000 f862 	bl	8002da8 <dotgaensefuesschen>
 8002ce4:	0a01      	.short	0x0a01
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:98
  pop {pc}
 8002ce6:	bd00      	pop	{pc}

08002ce8 <Dictionary_666>:
Dictionary_666():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:98
 8002ce8:	08002cfa 	.word	0x08002cfa
 8002cec:	62020000 	.word	0x62020000
 8002cf0:	6c          	.byte	0x6c
	...

08002cf2 <Code_666>:
Code_666():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:103

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "bl" @ Leerzeichen-code
@ -----------------------------------------------------------------------------
  pushdaconst 32
 8002cf2:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002cf6:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:104
  bx lr
 8002cf8:	4770      	bx	lr

08002cfa <Dictionary_669>:
Dictionary_669():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:104
 8002cfa:	2d0e      	.short	0x2d0e
 8002cfc:	00000800 	.word	0x00000800
 8002d00:	61707305 	.word	0x61707305
 8002d04:	6563      	.short	0x6563

08002d06 <Code_669>:
space():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:110

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "space"
space:
@ -----------------------------------------------------------------------------
  pushdaconst 32
 8002d06:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002d0a:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:111
  b.n emit
 8002d0c:	e680      	b.n	8002a10 <Code_620>

08002d0e <Dictionary_672>:
Dictionary_672():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:111
 8002d0e:	2d2e      	.short	0x2d2e
 8002d10:	00000800 	.word	0x00000800
 8002d14:	61707306 	.word	0x61707306
 8002d18:	6563      	.short	0x6563
 8002d1a:	73          	.byte	0x73
	...

08002d1c <Code_672>:
Code_672():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:116

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "spaces"
@ -----------------------------------------------------------------------------
  push {lr}
 8002d1c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:117
  cmp tos, #0
 8002d1e:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:118
  ble 2f
 8002d20:	dd03      	ble.n	8002d2a <Code_672+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:120
  
1:bl space
 8002d22:	f7ff fff0 	bl	8002d06 <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:121
  subs tos, #1
 8002d26:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:122
  bne 1b
 8002d28:	d1fb      	bne.n	8002d22 <Code_672+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:124

2:drop
 8002d2a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:125
  pop {pc}
 8002d2c:	bd00      	pop	{pc}

08002d2e <Dictionary_674>:
Dictionary_674():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:125
 8002d2e:	2d3e      	.short	0x2d3e
 8002d30:	00500800 	.word	0x00500800
 8002d34:	68635b06 	.word	0x68635b06
 8002d38:	7261      	.short	0x7261
 8002d3a:	5d          	.byte	0x5d
	...

08002d3c <Code_674>:
Code_674():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:131

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "[char]" @ ( -- )  Get character from input stream and compile it as literal
  @ Holt ein Zeichen aus dem Eingabestrom und fügt es als Literal ein.
@------------------------------------------------------------------------------
  b.n holechar
 8002d3c:	e005      	b.n	8002d4a <Code_675>

08002d3e <Dictionary_675>:
Dictionary_675():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:131
 8002d3e:	2d56      	.short	0x2d56
 8002d40:	00000800 	.word	0x00000800
 8002d44:	61686304 	.word	0x61686304
 8002d48:	72          	.byte	0x72
	...

08002d4a <Code_675>:
holechar():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:137

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "char" @ Holt ein Zeichen aus dem Eingabestrom  Get character from input stream
holechar: @ ( -- Zeichen )
@------------------------------------------------------------------------------
  push {lr}
 8002d4a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:138
  bl token        @ Fetch token
 8002d4c:	f001 fcc8 	bl	80046e0 <Code_1129>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:139
  drop            @ Drop length  
 8002d50:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:140
  ldrb tos, [tos] @ Read character
 8002d52:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:141
  pop {pc}
 8002d54:	bd00      	pop	{pc}

08002d56 <Dictionary_677>:
Dictionary_677():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:141
 8002d56:	2d66      	.short	0x2d66
 8002d58:	04500800 	.word	0x04500800
 8002d5c:	2801      	.short	0x2801

08002d5e <Code_677>:
Code_677():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:146

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0|Flag_Sprungschlucker, "(" @ Der Kommentar
@ -----------------------------------------------------------------------------
  pushdaconst 41 @ Die Klammer )
 8002d5e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002d62:	2629      	movs	r6, #41	; 0x29
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:147
  b 1f
 8002d64:	e006      	b.n	8002d74 <Code_680+0x6>

08002d66 <Dictionary_680>:
Dictionary_680():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:147
 8002d66:	2d80      	.short	0x2d80
 8002d68:	04500800 	.word	0x04500800
 8002d6c:	5c01      	.short	0x5c01

08002d6e <Code_680>:
Code_680():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:152

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0|Flag_Sprungschlucker, "\\" @ Der lange Kommentar
@ -----------------------------------------------------------------------------
  pushdaconst 0 @ Gibt es nicht - immer bis zum Zeilenende. Zero never occours - always catches whole line.
 8002d6e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002d72:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:154

1:push {lr}
 8002d74:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:155
  bl parse
 8002d76:	f001 fcbd 	bl	80046f4 <Code_1131>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:156
  ddrop
 8002d7a:	3704      	adds	r7, #4
 8002d7c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:157
  pop {pc}
 8002d7e:	bd00      	pop	{pc}

08002d80 <Dictionary_685>:
Dictionary_685():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:157
 8002d80:	08002dc4 	.word	0x08002dc4
 8002d84:	2e020030 	.word	0x2e020030
 8002d88:	22          	.byte	0x22
	...

08002d8a <Code_685>:
Code_685():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:162

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, ".\"" @ Fügt eine Meldung ein  Print a message
@ -----------------------------------------------------------------------------
  ldr r0, =dotgaensefuesschen
 8002d8a:	48aa      	ldr	r0, [pc, #680]	; (8003034 <unused_ram+0x6>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:164

1:push {lr}
 8002d8c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:165
  pushda r0
 8002d8e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002d92:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:166
  bl callkomma
 8002d94:	f000 fa7d 	bl	8003292 <Code_762>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:168

  pushdaconst 34 @ Das Gänsefüßchen "
 8002d98:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002d9c:	2622      	movs	r6, #34	; 0x22
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:169
  bl parse
 8002d9e:	f001 fca9 	bl	80046f4 <Code_1131>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:170
  bl stringkomma
 8002da2:	f000 fdc4 	bl	800392e <Code_885>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:171
  pop {pc}
 8002da6:	bd00      	pop	{pc}

08002da8 <dotgaensefuesschen>:
dotgaensefuesschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:177

@ -----------------------------------------------------------------------------
dotgaensefuesschen: @ Gibt den inline folgenden String aus und überspringt ihn
                    @ Print the string following inline and skip it
@ -----------------------------------------------------------------------------
  push {r1, r3}  @ Messages are used everywhere, save the registers !
 8002da8:	b40a      	push	{r1, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:179

  pushdatos
 8002daa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:180
  mov tos, lr    @ In lr ist nun die Stringadresse.  LR contains string address
 8002dae:	4676      	mov	r6, lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:181
  subs tos, #1   @ Die Stringanfangsadresse für type - PC ist ungerade im Thumb-Modus ! One less because of Thumb-instruction set marker bit
 8002db0:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:182
  ldrb r3, [tos] @ Länge des Strings holen  Fetch length of string
 8002db2:	7833      	ldrb	r3, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:186

  @ Skip the string.

  movs r1, #1
 8002db4:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:187
  adds r3, #1     @ Plus 1 Byte für die Länge  One more for length byte
 8002db6:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:188
  ands r1, r3     @ Wenn es ungerade ist, noch einen mehr:  Maybe one more for aligning
 8002db8:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:189
  adds r3, r1
 8002dba:	185b      	adds	r3, r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:196
  .ifdef m0core
    mov r1, lr
    adds r1, r3
    mov lr, r1
  .else
    adds lr, r3
 8002dbc:	eb1e 0e03 	adds.w	lr, lr, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:199
  .endif

  pop {r1, r3}
 8002dc0:	bc0a      	pop	{r1, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:200
  b.n type   @ Print it !
 8002dc2:	e039      	b.n	8002e38 <Code_700>

08002dc4 <Dictionary_691>:
Dictionary_691():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:200
 8002dc4:	08002dea 	.word	0x08002dea
 8002dc8:	63020030 	.word	0x63020030
 8002dcc:	22          	.byte	0x22
	...

08002dce <Code_691>:
Code_691():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:205

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "c\"" @ Fügt einen String ein  Insert a string-literal
@ -----------------------------------------------------------------------------
  ldr r0, =dotcfuesschen
 8002dce:	489a      	ldr	r0, [pc, #616]	; (8003038 <unused_ram+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:206
  b 1b
 8002dd0:	e7dc      	b.n	8002d8c <Code_685+0x2>

08002dd2 <dotcfuesschen>:
dotcfuesschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:212

@ -----------------------------------------------------------------------------
dotcfuesschen: @ Legt den inline folgenden String auf den Stack und überspringt ihn
              @ Put address of the string following inline on datastack and skip string.
@ -----------------------------------------------------------------------------
  pushdatos
 8002dd2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:213
  mov tos, lr    @ In lr ist nun die Stringadresse.  LR contains string address
 8002dd6:	4676      	mov	r6, lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:214
  subs tos, #1   @ Die Stringanfangsadresse für type - PC ist ungerade im Thumb-Modus ! One less because of Thumb-instruction set marker bit
 8002dd8:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:215
  ldrb r3, [tos] @ Länge des Strings holen  Fetch length of string
 8002dda:	7833      	ldrb	r3, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:219

  @ Skip the string.

  movs r1, #1
 8002ddc:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:220
  adds r3, #1     @ Plus 1 Byte für die Länge  One more for length byte
 8002dde:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:221
  ands r1, r3     @ Wenn es ungerade ist, noch einen mehr:  Maybe one more for aligning
 8002de0:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:222
  adds r3, r1
 8002de2:	185b      	adds	r3, r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:229
  .ifdef m0core
    mov r1, lr
    adds r1, r3
    mov lr, r1
  .else
    adds lr, r3
 8002de4:	eb1e 0e03 	adds.w	lr, lr, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:232
  .endif

  bx lr  @ Leave string address on datastack.
 8002de8:	4770      	bx	lr

08002dea <Dictionary_693>:
Dictionary_693():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:232
 8002dea:	2e14      	.short	0x2e14
 8002dec:	00300800 	.word	0x00300800
 8002df0:	7302      	.short	0x7302
 8002df2:	22          	.byte	0x22
	...

08002df4 <Code_693>:
Code_693():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:237

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "s\"" @ Fügt einen String ein  Insert a string-literal
@ -----------------------------------------------------------------------------
  ldr r0, =dotsfuesschen
 8002df4:	4891      	ldr	r0, [pc, #580]	; (800303c <unused_ram+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:238
  b 1b
 8002df6:	e7c9      	b.n	8002d8c <Code_685+0x2>

08002df8 <dotsfuesschen>:
dotsfuesschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:244

@ -----------------------------------------------------------------------------
dotsfuesschen: @ Legt den inline folgenden String auf den Stack und überspringt ihn
              @ Put address of the string following inline on datastack and skip string.
@ -----------------------------------------------------------------------------
  pushdatos
 8002df8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:245
  mov tos, lr    @ In lr ist nun die Stringadresse.  LR contains string address
 8002dfc:	4676      	mov	r6, lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:246
  dup
 8002dfe:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:247
  subs tos, #1   @ Die Stringanfangsadresse für type - PC ist ungerade im Thumb-Modus ! One less because of Thumb-instruction set marker bit
 8002e02:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:248
  ldrb tos, [tos] @ Länge des Strings holen  Fetch length of string
 8002e04:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:252

  @ Skip the string.

  movs r1, #1
 8002e06:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:253
  adds r3, tos, #1 @ Plus 1 Byte für die Länge  One more for length byte
 8002e08:	1c73      	adds	r3, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:254
  ands r1, r3      @ Wenn es ungerade ist, noch einen mehr:  Maybe one more for aligning
 8002e0a:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:255
  adds r3, r1
 8002e0c:	185b      	adds	r3, r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:262
  .ifdef m0core
    mov r1, lr
    adds r1, r3
    mov lr, r1
  .else
    adds lr, r3
 8002e0e:	eb1e 0e03 	adds.w	lr, lr, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:265
  .endif

  bx lr  @ Leave string address and length on datastack.
 8002e12:	4770      	bx	lr

08002e14 <Dictionary_697>:
Dictionary_697():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:265
 8002e14:	08002e2c 	.word	0x08002e2c
 8002e18:	63050000 	.word	0x63050000
 8002e1c:	746e756f 	.word	0x746e756f

08002e20 <Code_697>:
Code_697():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:272
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "count"
count: @ ( c-addr -- c-addr+1 len ) Fetch length of counted string
@ -----------------------------------------------------------------------------
  @ Count soll die Adresse um eine Stelle weiterschieben und die Länge holen.
  adds tos, #1 @ Adresse + 1
 8002e20:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:273
  dup
 8002e22:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:274
  subs tos, #1 @ Zurück zum Längenbyte
 8002e26:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:275
  ldrb tos, [tos] @ Längenbyte holen
 8002e28:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:276
  bx lr
 8002e2a:	4770      	bx	lr

08002e2c <Dictionary_700>:
Dictionary_700():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:276
 8002e2c:	08002e44 	.word	0x08002e44
 8002e30:	63050000 	.word	0x63050000
 8002e34:	65707974 	.word	0x65707974

08002e38 <Code_700>:
type():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:282

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "ctype"
type: @ ( str -- ) Gibt einen String aus  Print a counted string
@ -----------------------------------------------------------------------------
  push {lr}
 8002e38:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:283
  bl count
 8002e3a:	f7ff fff1 	bl	8002e20 <Code_697>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:284
  bl stype
 8002e3e:	f000 f807 	bl	8002e50 <Code_701>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:285
  pop {pc}
 8002e42:	bd00      	pop	{pc}

08002e44 <Dictionary_701>:
Dictionary_701():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:285
 8002e44:	08002e6c 	.word	0x08002e6c
 8002e48:	74040000 	.word	0x74040000
 8002e4c:	7079      	.short	0x7079
 8002e4e:	65          	.byte	0x65
	...

08002e50 <Code_701>:
stype():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:291

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "type"
stype:  @ ( addr len -- ) Gibt einen String aus  Print a string
@ -----------------------------------------------------------------------------
  push {r0, lr}
 8002e50:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:292
  ldm psp!, {r0}  @ Adresse holen. Fetch address.
 8002e52:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:294

  cmp tos, #0     @ Wenn nichts da ist, bin ich fertig.  Any characters left ?
 8002e54:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:295
  beq 2f
 8002e56:	d007      	beq.n	8002e68 <Code_701+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:299

  @ Es ist etwas zum Tippen da !  Something available for typing !

1:pushdatos
 8002e58:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:300
  ldrb tos, [r0]  @ Zeichen holen            Put character on datastack
 8002e5c:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:301
  bl emit         @ Zeichen senden           Emit character
 8002e5e:	f7ff fdd7 	bl	8002a10 <Code_620>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:302
  adds r0, #1     @ Adresse um eins erhöhen  Advance pointer
 8002e62:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:303
  subs tos, #1    @ Ein Zeichen weniger      One character less
 8002e64:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:304
  bne 1b
 8002e66:	d1f7      	bne.n	8002e58 <Code_701+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:306

2:drop  
 8002e68:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:307
  pop {r0, pc}
 8002e6a:	bd01      	pop	{r0, pc}

08002e6c <Dictionary_704>:
Dictionary_704():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:307
 8002e6c:	08002ea6 	.word	0x08002ea6
 8002e70:	68040000 	.word	0x68040000
 8002e74:	7865      	.short	0x7865
 8002e76:	2e          	.byte	0x2e
	...

08002e78 <Code_704>:
hexdot():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:27
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "hex." @ Print an unsigned number in Base 16, independent of number subsystem.
hexdot: @ ( u -- ) @ Funktioniert unabhängig vom restlichen Zahlensystem.
@ -----------------------------------------------------------------------------
  
        push    {r0, r1, r2, lr}
 8002e78:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:28
        popda r1 @ Zahl holen
 8002e7a:	0031      	movs	r1, r6
 8002e7c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:29
        movs    r0, #32 @ Zahl der Bits, die noch zu bearbeiten sind  Number of Bits left
 8002e7e:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:30
        movs r2, #15 @ Mask for one Nibble
 8002e80:	220f      	movs	r2, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:32

1:      subs    r0, #4       @ 4 Bits weniger  4 Bits less to do
 8002e82:	3804      	subs	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:33
        pushdatos            @ Platz auf dem Stack schaffen  Make space on datastack
 8002e84:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:35

        movs tos, r1
 8002e88:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:36
        lsrs tos, r0         @ Schiebe den Wert passend   Shift accordingly
 8002e8a:	40c6      	lsrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:38

        ands    tos, r2      @ Eine Hex-Ziffer maskieren  Mask 4 Bits
 8002e8c:	4016      	ands	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:39
        cmp     tos, #9      @ Ziffer oder Buchstabe ?    Number or letter ?
 8002e8e:	2e09      	cmp	r6, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:40
        bls 2f
 8002e90:	d901      	bls.n	8002e96 <Code_704+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:41
          adds tos, #55 @ Passendes Zeichen konstruieren
 8002e92:	3637      	adds	r6, #55	; 0x37
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:42
          b 3f
 8002e94:	e000      	b.n	8002e98 <Code_704+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:43
2:        adds tos, #48 @ Calculate ASCII
 8002e96:	3630      	adds	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:46
3:

        bl      emit
 8002e98:	f7ff fdba 	bl	8002a10 <Code_620>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:47
        cmp     r0, #0
 8002e9c:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:48
        bne     1b
 8002e9e:	d1f0      	bne.n	8002e82 <Code_704+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:50

        bl space
 8002ea0:	f7ff ff31 	bl	8002d06 <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:51
        pop     {r0, r1, r2, pc}
 8002ea4:	bd07      	pop	{r0, r1, r2, pc}

08002ea6 <Dictionary_707>:
Dictionary_707():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:51
 8002ea6:	2eb6      	.short	0x2eb6
 8002ea8:	00000800 	.word	0x00000800
 8002eac:	732e6803 	.word	0x732e6803

08002eb0 <Code_707>:
Code_707():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:57

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "h.s"  @ Prints out data stack, uses unsigned hexadecimal snumbers. 
hexdots: @ Malt den Stackinhalt, diesmal verschönert !
@ -----------------------------------------------------------------------------
        push {r0, r1, r2, r3, r4, lr}
 8002eb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:58
        ldr r4, =hexdot+1
 8002eb2:	4c63      	ldr	r4, [pc, #396]	; (8003040 <unused_ram+0x12>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:59
        b.n 1f
 8002eb4:	e00e      	b.n	8002ed4 <Code_709+0x4>

08002eb6 <Dictionary_708>:
Dictionary_708():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:59
 8002eb6:	2ec6      	.short	0x2ec6
 8002eb8:	00000800 	.word	0x00000800
 8002ebc:	732e7503 	.word	0x732e7503

08002ec0 <Code_708>:
Code_708():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:65

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "u.s"  @ Prints out data stack, uses unsigned numbers. 
udots: @ Malt den Stackinhalt, diesmal verschönert !
@ -----------------------------------------------------------------------------
        push {r0, r1, r2, r3, r4, lr}
 8002ec0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:66
        ldr r4, =udot+1
 8002ec2:	4c60      	ldr	r4, [pc, #384]	; (8003044 <unused_ram+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:67
        b.n 1f
 8002ec4:	e006      	b.n	8002ed4 <Code_709+0x4>

08002ec6 <Dictionary_709>:
Dictionary_709():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:67
 8002ec6:	2f6a      	.short	0x2f6a
 8002ec8:	00000800 	.word	0x00000800
 8002ecc:	2e02      	.short	0x2e02
 8002ece:	73          	.byte	0x73
	...

08002ed0 <Code_709>:
Code_709():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:73

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, ".s"  @ Prints out data stack, uses signed numbers. 
dots: @ Malt den Stackinhalt, diesmal verschönert !
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, r4, lr}
 8002ed0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:74
  ldr r4, =dot+1
 8002ed2:	4c5d      	ldr	r4, [pc, #372]	; (8003048 <unused_ram+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:77

1:@ Berechne den Stackfüllstand  Calculate number of elements on datastack
  ldr r1, =datenstackanfang @ Anfang laden
 8002ed4:	495d      	ldr	r1, [pc, #372]	; (800304c <unused_ram+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:78
  subs r1, psp @ und aktuellen Stackpointer abziehen
 8002ed6:	1bc9      	subs	r1, r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:80

  lsrs r1, #2 @ Durch die Größe der Elemente teilen  Divide by size of elements
 8002ed8:	0889      	lsrs	r1, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:81
  lsrs r2, r4, #8
 8002eda:	0a22      	lsrs	r2, r4, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:82
  movs r0, #32 @ Bits / Element
 8002edc:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:85

  @ Prüfe Datenstackpointer vor der Ausgabe  Check data stack pointer before printing
  cmp psp, #0x29
 8002ede:	2f29      	cmp	r7, #41	; 0x29
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:87

    lsrs r0, r4, #8
 8002ee0:	0a20      	lsrs	r0, r4, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:88
    cmp  r0, #32
 8002ee2:	2820      	cmp	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:89
    subs r6, #0x27
 8002ee4:	3e27      	subs	r6, #39	; 0x27
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:90
    lsrs r0, r4, #8
 8002ee6:	0a20      	lsrs	r0, r4, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:93

  @ Noch eine weitere Probe, um auf Nummer sicher zu gehen  Another check to be sure
  cmp psp, #32
 8002ee8:	2f20      	cmp	r7, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:95

    muls r3, r0
 8002eea:	4343      	muls	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:96
    movs r0, #32
 8002eec:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:97
    adds r3, #32
 8002eee:	3320      	adds	r3, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:98
    movs r0, #0x35
 8002ef0:	2035      	movs	r0, #53	; 0x35
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:101

2:@ Ausgabepuffer vorbereien  Prepare string output buffer
  muls r3, r0
 8002ef2:	4343      	muls	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:102
  lsrs r3, r0, #9
 8002ef4:	0a43      	lsrs	r3, r0, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:103
  ldrb r0, [r7, r0]
 8002ef6:	5c38      	ldrb	r0, [r7, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:106

  @ Prüfe Zahl der Elemente  Check number of elements
  cmp r1, #0x29
 8002ef8:	2929      	cmp	r1, #41	; 0x29
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:108

    movs r0, #0x5f
 8002efa:	205f      	movs	r0, #95	; 0x5f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:109
    lsrs r2, r1, #8
 8002efc:	0a0a      	lsrs	r2, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:112

3:@ Basis sichern und auf Dezimal schalten  Save Base and switch to decimal for stack fill gauge
  ldr r2, =base
 8002efe:	4a54      	ldr	r2, [pc, #336]	; (8003050 <unused_ram+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:113
  ldr r0, [r2]
 8002f00:	6810      	ldr	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:114
  push {r0, r1}
 8002f02:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:116

  movs r0, #10
 8002f04:	200a      	movs	r0, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:117
  str r0, [r2]
 8002f06:	6010      	str	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:119

        write "Stack: ["
 8002f08:	f7ff ff4e 	bl	8002da8 <dotgaensefuesschen>
 8002f0c:	61745308 	.word	0x61745308
 8002f10:	203a6b63 	.word	0x203a6b63
 8002f14:	5b          	.byte	0x5b
 8002f15:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:120
        pushda r1
 8002f16:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002f1a:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:121
        bl dot  @ . bewahrt die Register nicht.  Doesn't save registers !
 8002f1c:	f001 fdb7 	bl	8004a8e <Code_1195>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:122
        write "] "
 8002f20:	f7ff ff42 	bl	8002da8 <dotgaensefuesschen>
 8002f24:	5d02      	.short	0x5d02
 8002f26:	20          	.byte	0x20
 8002f27:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:125

  @ Basis zurückholen  Restore Base
  pop {r0, r1}
 8002f28:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:126
  adds r6, #39
 8002f2a:	3627      	adds	r6, #39	; 0x27
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:127
  ldr r2, =base
 8002f2c:	4a48      	ldr	r2, [pc, #288]	; (8003050 <unused_ram+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:128
  str r0, [r2]
 8002f2e:	6010      	str	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:131

  @ r1 enthält die Zahl der enthaltenen Elemente. r1 is number of elements
  cmp r1, #0 @ Bei einem leeren Stack ist nichts auszugeben.  Don't print elements for an empty stack
 8002f30:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:132
  beq 2f
 8002f32:	d00a      	beq.n	8002f4a <Code_709+0x7a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:134

  ldr r2, =datenstackanfang - 4 @ Anfang laden, wo ich beginne:  Start here !
 8002f34:	4a47      	ldr	r2, [pc, #284]	; (8003054 <unused_ram+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:137

1:@ Hole das Stackelement !  Fetch stack element directly
  ldr r0, [r2]
 8002f36:	6810      	ldr	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:139

  push {r1, r2}
 8002f38:	b406      	push	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:140
  pushda r0
 8002f3a:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002f3e:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:141
  blx r4 @ . bewahrt die Register nicht.  Doesn't save registers !
 8002f40:	47a0      	blx	r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:142
  pop {r1, r2}
 8002f42:	bc06      	pop	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:144

  subs r2, #4
 8002f44:	3a04      	subs	r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:145
  subs r1, #1
 8002f46:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:146
  bne 1b
 8002f48:	d1f5      	bne.n	8002f36 <Code_709+0x66>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:149

2:@ TOS zeigen  Print TOS
  write " TOS: "
 8002f4a:	f7ff ff2d 	bl	8002da8 <dotgaensefuesschen>
 8002f4e:	2006      	.short	0x2006
 8002f50:	3a534f54 	.word	0x3a534f54
 8002f54:	20          	.byte	0x20
 8002f55:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:150
  pushda tos
 8002f56:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002f5a:	0036      	movs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:151
  blx r4
 8002f5c:	47a0      	blx	r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:153

  writeln " *>"
 8002f5e:	f7ff ff23 	bl	8002da8 <dotgaensefuesschen>
 8002f62:	2004      	.short	0x2004
 8002f64:	3e2a      	.short	0x3e2a
 8002f66:	0a          	.byte	0x0a
 8002f67:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:154
  pop {r0, r1, r2, r3, r4, pc}
 8002f68:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08002f6a <Dictionary_720>:
Dictionary_720():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:154
 8002f6a:	300a      	.short	0x300a
 8002f6c:	00000800 	.word	0x00000800
 8002f70:	726f7705 	.word	0x726f7705
 8002f74:	7364      	.short	0x7364

08002f76 <Code_720>:
Code_720():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:266

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "words" @ Print list of words with debug information
words: @ Malt den Dictionaryinhalt
@ -----------------------------------------------------------------------------
  push {lr}
 8002f76:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:267
  writeln ""
 8002f78:	f7ff ff16 	bl	8002da8 <dotgaensefuesschen>
 8002f7c:	0a01      	.short	0x0a01
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:269

  bl dictionarystart
 8002f7e:	f000 ff30 	bl	8003de2 <Code_954>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:272

1:@ Adresse:
  write "Address: "
 8002f82:	f7ff ff11 	bl	8002da8 <dotgaensefuesschen>
 8002f86:	4109      	.short	0x4109
 8002f88:	65726464 	.word	0x65726464
 8002f8c:	203a7373 	.word	0x203a7373
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:273
  dup
 8002f90:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:274
  bl hexdot
 8002f94:	f7ff ff70 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:277

  @ Link
  write "Link: "
 8002f98:	f7ff ff06 	bl	8002da8 <dotgaensefuesschen>
 8002f9c:	6e694c06 	.word	0x6e694c06
 8002fa0:	3a6b      	.short	0x3a6b
 8002fa2:	20          	.byte	0x20
 8002fa3:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:278
  dup
 8002fa4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:279
  ldr tos, [tos]
 8002fa8:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:280
  bl hexdot
 8002faa:	f7ff ff65 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:283

  @ Flagfeld
  write "Flags: "
 8002fae:	f7ff fefb 	bl	8002da8 <dotgaensefuesschen>
 8002fb2:	4607      	.short	0x4607
 8002fb4:	7367616c 	.word	0x7367616c
 8002fb8:	203a      	.short	0x203a
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:284
  dup
 8002fba:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:285
  ldrh tos, [tos, #4]
 8002fbe:	88b6      	ldrh	r6, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:286
  bl hexdot
 8002fc0:	f7ff ff5a 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:289

  @ Einsprungadresse
  write "Code: "
 8002fc4:	f7ff fef0 	bl	8002da8 <dotgaensefuesschen>
 8002fc8:	646f4306 	.word	0x646f4306
 8002fcc:	3a65      	.short	0x3a65
 8002fce:	20          	.byte	0x20
 8002fcf:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:290
  adds r0, tos, #6 @ Current location +2 for skipping Flags +4 for skipping Link contains name string.
 8002fd0:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:291
  bl skipstring
 8002fd2:	f000 ff53 	bl	8003e7c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:292
  pushda r0
 8002fd6:	f847 6d04 	str.w	r6, [r7, #-4]!
 8002fda:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:293
  bl hexdot
 8002fdc:	f7ff ff4c 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:295

  write "Name: "
 8002fe0:	f7ff fee2 	bl	8002da8 <dotgaensefuesschen>
 8002fe4:	6d614e06 	.word	0x6d614e06
 8002fe8:	3a65      	.short	0x3a65
 8002fea:	20          	.byte	0x20
 8002feb:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:296
  dup
 8002fec:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:297
  adds tos, #6 @ Current location +2 for skipping Flags +4 for skipping Link contains name string.
 8002ff0:	3606      	adds	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:298
  bl type
 8002ff2:	f7ff ff21 	bl	8002e38 <Code_700>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:300

  writeln ""
 8002ff6:	f7ff fed7 	bl	8002da8 <dotgaensefuesschen>
 8002ffa:	0a01      	.short	0x0a01
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:302

  bl dictionarynext
 8002ffc:	f000 ff09 	bl	8003e12 <Code_956>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:303
  popda r0
 8003000:	0030      	movs	r0, r6
 8003002:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:304
  beq 1b
 8003004:	d0bd      	beq.n	8002f82 <Code_720+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:306

  drop
 8003006:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:307
  pop {pc}
 8003008:	bd00      	pop	{pc}

0800300a <Dictionary_740>:
Dictionary_740():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:307
 800300a:	305c      	.short	0x305c
 800300c:	00000800 	.word	0x00000800
 8003010:	756e7506 	.word	0x756e7506
 8003014:	6573      	.short	0x6573
 8003016:	64          	.byte	0x64
	...

08003018 <Code_740>:
Code_740():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:313

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "unused" @ Bytes free for compilation in current memory area
unused:
@ -----------------------------------------------------------------------------
  push {lr}
 8003018:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:314
  bl flashvarhere
 800301a:	f001 f804 	bl	8004026 <Code_983>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:316

  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
 800301e:	480e      	ldr	r0, [pc, #56]	; (8003058 <unused_ram+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:317
  ldr r1, [r0]
 8003020:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:319

  ldr r2, =Backlinkgrenze
 8003022:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:320
  cmp r1, r2
 8003026:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:324
.ifdef above_ram
  blo.n unused_ram
.else
  bhs.n unused_ram
 8003028:	d201      	bcs.n	800302e <unused_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:327
.endif
    
    ldr tos, =FlashDictionaryEnde
 800302a:	f04f 6601 	mov.w	r6, #135266304	; 0x8100000

0800302e <unused_ram>:
unused_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:330

unused_ram:  
  subs tos, r1
 800302e:	1a76      	subs	r6, r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:331
  pop {pc}
 8003030:	bd00      	pop	{pc}
 8003032:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:162
  ldr r0, =dotgaensefuesschen
 8003034:	08002da8 	.word	0x08002da8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:205
  ldr r0, =dotcfuesschen
 8003038:	08002dd2 	.word	0x08002dd2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/strings.s:237
  ldr r0, =dotsfuesschen
 800303c:	08002df8 	.word	0x08002df8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:58
        ldr r4, =hexdot+1
 8003040:	08002e79 	.word	0x08002e79
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:66
        ldr r4, =udot+1
 8003044:	08004a7f 	.word	0x08004a7f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:74
  ldr r4, =dot+1
 8003048:	08004a8f 	.word	0x08004a8f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:77
  ldr r1, =datenstackanfang @ Anfang laden
 800304c:	24000288 	.word	0x24000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:112
  ldr r2, =base
 8003050:	2407fffc 	.word	0x2407fffc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:134
  ldr r2, =datenstackanfang - 4 @ Anfang laden, wo ich beginne:  Start here !
 8003054:	24000284 	.word	0x24000284
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:316
  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
 8003058:	2407ffd0 	.word	0x2407ffd0

0800305c <Dictionary_741>:
Dictionary_741():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/deepinsight.s:316
 800305c:	080031c0 	.word	0x080031c0
 8003060:	310d0000 	.word	0x310d0000
 8003064:	74696232 	.word	0x74696232
 8003068:	6f636e65 	.word	0x6f636e65
 800306c:	676e6964 	.word	0x676e6964

08003070 <Code_741>:
twelvebitencoding():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:60

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "12bitencoding" @ ( x -- bitmask true | x false )
twelvebitencoding:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8003070:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:63

  @ If this is a 8 bit constant, the encoding is finished.
  cmp tos, #255
 8003072:	2eff      	cmp	r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:64
  bhi 1f
 8003074:	d804      	bhi.n	8003080 <Code_741+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:66
    @ writeln "12bitencoding: 0x000000XY"
    pushdatos       @ True-Flag
 8003076:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:67
    movs tos, #-1
 800307a:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:68
    pop {r0, r1, r2, r3, pc}
 800307e:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:75
1:@ This is not a lowest-8-bits-only constant.
  @ Check for other possibilities:

  @ 0x00XY00XY

  ands r0, tos, #0x00FF00FF
 8003080:	f016 10ff 	ands.w	r0, r6, #16711935	; 0xff00ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:76
  cmp r0, tos
 8003084:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:77
  bne 2f
 8003086:	d10e      	bne.n	80030a6 <Code_741+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:79

    movw r1, 0xFFFF
 8003088:	f64f 71ff 	movw	r1, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:80
    ands r0, r1
 800308c:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:81
    lsrs r1, tos, #16
 800308e:	0c31      	lsrs	r1, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:82
    cmp r1, r0
 8003090:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:83
    bne 2f
 8003092:	d108      	bne.n	80030a6 <Code_741+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:85
      @ writeln "12bitencoding: 0x00XY00XY"
      ands tos, #0xFF
 8003094:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:86
      orrs tos, #0x00001000
 8003098:	f456 5680 	orrs.w	r6, r6, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:87
      pushdatos       @ True-Flag
 800309c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:88
      movs tos, #-1
 80030a0:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:89
      pop {r0, r1, r2, r3, pc}
 80030a4:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:95

2:

  @ 0xXY00XY00

  ands r0, tos, #0xFF00FF00
 80030a6:	f016 20ff 	ands.w	r0, r6, #4278255360	; 0xff00ff00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:96
  cmp r0, tos
 80030aa:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:97
  bne 3f
 80030ac:	d10f      	bne.n	80030ce <Code_741+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:99

    movw r1, #0xFFFF
 80030ae:	f64f 71ff 	movw	r1, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:100
    ands r0, r1
 80030b2:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:101
    lsrs r1, tos, #16
 80030b4:	0c31      	lsrs	r1, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:102
    cmp r1, r0
 80030b6:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:103
    bne 3f
 80030b8:	d109      	bne.n	80030ce <Code_741+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:105
      @ writeln "12bitencoding: 0xXY00XY00"
      lsrs tos, #8
 80030ba:	0a36      	lsrs	r6, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:106
      ands tos, #0xFF
 80030bc:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:107
      orrs tos, #0x00002000
 80030c0:	f456 5600 	orrs.w	r6, r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:108
      pushdatos       @ True-Flag
 80030c4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:109
      movs tos, #-1
 80030c8:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:110
      pop {r0, r1, r2, r3, pc}
 80030cc:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:116

3:

  @ 0xXYXYXYXY

  movs r2, #0xFF
 80030ce:	22ff      	movs	r2, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:117
  movs r1, tos
 80030d0:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:118
  ands r1, r2
 80030d2:	4011      	ands	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:120

  lsrs r0, tos, #8
 80030d4:	0a30      	lsrs	r0, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:121
  ands r0, r2
 80030d6:	4010      	ands	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:122
  cmp r0, r1
 80030d8:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:123
  bne 4f
 80030da:	d110      	bne.n	80030fe <Code_741+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:125

  lsrs r0, tos, #16
 80030dc:	0c30      	lsrs	r0, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:126
  ands r0, r2
 80030de:	4010      	ands	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:127
  cmp r0, r1
 80030e0:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:128
  bne 4f
 80030e2:	d10c      	bne.n	80030fe <Code_741+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:130

  lsrs r0, tos, #24
 80030e4:	0e30      	lsrs	r0, r6, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:131
  ands r0, r2
 80030e6:	4010      	ands	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:132
  cmp r0, r1
 80030e8:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:133
  bne 4f
 80030ea:	d108      	bne.n	80030fe <Code_741+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:135
    @ writeln "12bitencoding: 0xXYXYXYXY"
    ands tos, #0xFF
 80030ec:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:136
    orrs tos, #0x00003000
 80030f0:	f456 5640 	orrs.w	r6, r6, #12288	; 0x3000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:137
    pushdatos       @ True-Flag
 80030f4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:138
    movs tos, #-1
 80030f8:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:139
    pop {r0, r1, r2, r3, pc}
 80030fc:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:149
    @ 2 of $FF and        8 lshift dup 16 lshift or const. endof \ 0xXY00XY00
    @ 3 of $FF and dup 8 lshift or dup 16 lshift or const. endof \ 0xXYXYXYXY

  @ Can we generate this by rotating into an 8 bit constant ?

  movs r0, tos @ Backup of value if we cannot express this as a shifted constant
 80030fe:	0030      	movs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:150
  movs r1, #0  @ Counter of shifts
 8003100:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:154

5:@ Rotating loop to determine amount of shifts necessary

  adds r1, #1
 8003102:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:157

  @ Rotate left by one bit place
  adds r0, r0, r0
 8003104:	1800      	adds	r0, r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:158
  adcs r0, #0
 8003106:	f150 0000 	adcs.w	r0, r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:161

  @ Does this fit into 8 bits with "msb" set: %1xxx xxxx ?
  movs r2, #0xFFFFFF80
 800310a:	f07f 027f 	mvns.w	r2, #127	; 0x7f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:162
  ands r2, r0
 800310e:	4002      	ands	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:163
  cmp r2, #0x80
 8003110:	2a80      	cmp	r2, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:164
  beq 6f
 8003112:	d005      	beq.n	8003120 <Code_741+0xb0>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:167

  @ Not this time.
  cmp r1, #31
 8003114:	291f      	cmp	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:168
  blo 5b
 8003116:	d3f4      	bcc.n	8003102 <Code_741+0x92>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:172

7:@ Fallthrough if not possible to encode constant in 12 bits
  @ writeln "12bitencoding: unknown"
  pushdatos       @ False-Flag
 8003118:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:173
  movs tos, #0
 800311c:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:174
  pop {r0, r1, r2, r3, pc}
 800311e:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:189

   @ write " Constant: "
   @ pushda r0
   @ bl hexdot

  cmp r1, #8
 8003120:	2908      	cmp	r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:190
  blo 7b
 8003122:	d3f9      	bcc.n	8003118 <Code_741+0xa8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:198

  @ if imm12<11:10> == '00' then Spezialfälle.
  @ We can only opcode this if the topmost 1 bits of shift count are not 00.
  @ At least a shift of "%01 000" = 8 is required. Special cases are encoded below.

  movs tos, r0 @ Shifted constant
 8003124:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:199
  bics tos, #0x80 @ Clear MSB (which is always set here)
 8003126:	f036 0680 	bics.w	r6, r6, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:206
  @ Encode shift accordingly
  @ Shift-Bit 0 goes into bit 7 of bitmask
  @ Shift-Bits 1, 2, 3 go into bit 12, 13, 14 of bitmask
  @ Shift-Bit 4 goes into bit 26 of bitmask

  ands r0, r1, #0x1
 800312a:	f011 0001 	ands.w	r0, r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:207
  lsls r0, #7
 800312e:	01c0      	lsls	r0, r0, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:208
  orrs tos, r0
 8003130:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:210

  ands r0, r1, #0xE
 8003132:	f011 000e 	ands.w	r0, r1, #14
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:211
  lsls r0, #11
 8003136:	02c0      	lsls	r0, r0, #11
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:212
  orrs tos, r0
 8003138:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:214

  ands r0, r1, #0x10
 800313a:	f011 0010 	ands.w	r0, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:215
  lsls r0, #22
 800313e:	0580      	lsls	r0, r0, #22
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:216
  orrs tos, r0
 8003140:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:218

  pushdatos       @ True-Flag
 8003142:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:219
  movs tos, #-1
 8003146:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:220
  pop {r0, r1, r2, r3, pc}
 800314a:	bd0f      	pop	{r0, r1, r2, r3, pc}

0800314c <movwkomma>:
movwkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:226

@ -----------------------------------------------------------------------------
movwkomma: @ Register r0: Konstante                                    Constant
           @ Register r3: Zielregister, fertig geschoben zum Verodern  Destination register, readily shifted to be ORed with opcode.
@ -----------------------------------------------------------------------------
  pushdatos    @ Platz auf dem Datenstack schaffen
 800314c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:227
  ldr tos, =0xf2400000 @ Opcode movw r0, #0
 8003150:	f8df 65f0 	ldr.w	r6, [pc, #1520]	; 8003744 <Code_856+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:229

  movs r1, #0x0000F000  @ Bit 16 - 13
 8003154:	f45f 4170 	movs.w	r1, #61440	; 0xf000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:230
  ands r2, r0, r1       @ aus der Adresse maskieren   Mask bits of constant
 8003158:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:231
  lsls r2, #4           @ passend schieben            shift them accordingly
 800315c:	0112      	lsls	r2, r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:232
  orrs tos, r2          @ zum Opcode hinzufügen       and OR them to opcode.
 800315e:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:234

  movs r1, #0x00000800  @ Bit 12
 8003160:	f45f 6100 	movs.w	r1, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:235
  ands r2, r0, r1       @ aus der Adresse maskieren   ...
 8003164:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:236
  lsls r2, #15          @ passend schieben
 8003168:	03d2      	lsls	r2, r2, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:237
  orrs tos, r2          @ zum Opcode hinzufügen
 800316a:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:239

  movs r1, #0x00000700  @ Bit 11 - 9
 800316c:	f45f 61e0 	movs.w	r1, #1792	; 0x700
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:240
  ands r2, r0, r1       @ aus der Adresse maskieren
 8003170:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:241
  lsls r2, #4           @ passend schieben
 8003174:	0112      	lsls	r2, r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:242
  orrs tos, r2          @ zum Opcode hinzufügen
 8003176:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:244

  movs r1, #0x000000FF  @ Bit 8 - 1
 8003178:	21ff      	movs	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:245
  ands r2, r0, r1       @ aus der Adresse maskieren
 800317a:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:247
  @ lsrs r2, #0         @ passend schieben
  orrs tos, r2          @ zum Opcode hinzufügen
 800317e:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:250

  @ Füge den gewünschten Register hinzu:  OR desired target register.
  orrs tos, r3
 8003180:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:252

  b.n reversekomma @ Insert finished movw Opcode into Dictionary
 8003182:	e3c9      	b.n	8003918 <Code_884>

08003184 <movtkomma>:
movtkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:258

@ -----------------------------------------------------------------------------
movtkomma: @ Register r0: Konstante                                    Constant
           @ Register r3: Zielregister, fertig geschoben zum Verodern  Destination register, readily shifted to be ORed with opcode.
@ -----------------------------------------------------------------------------
  pushdatos    @ Platz auf dem Datenstack schaffen
 8003184:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:259
  ldr tos, =0xf2c00000 @ Opcode movt r0, #0
 8003188:	f8df 65bc 	ldr.w	r6, [pc, #1468]	; 8003748 <Code_856+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:261

  movs r1, #0xF0000000  @ Bit 32 - 29
 800318c:	f05f 4170 	movs.w	r1, #4026531840	; 0xf0000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:262
  ands r2, r0, r1       @ aus der Adresse maskieren
 8003190:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:263
  lsrs r2, #12          @ passend schieben
 8003194:	0b12      	lsrs	r2, r2, #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:264
  orrs tos, r2          @ zum Opcode hinzufügen
 8003196:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:266

  movs r1, #0x08000000  @ Bit 28
 8003198:	f05f 6100 	movs.w	r1, #134217728	; 0x8000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:267
  ands r2, r0, r1       @ aus der Adresse maskieren
 800319c:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:268
  lsrs r2, #1           @ passend schieben
 80031a0:	0852      	lsrs	r2, r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:269
  orrs tos, r2          @ zum Opcode hinzufügen
 80031a2:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:271

  movs r1, #0x07000000  @ Bit 27 - 25
 80031a4:	f05f 61e0 	movs.w	r1, #117440512	; 0x7000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:272
  ands r2, r0, r1       @ aus der Adresse maskieren
 80031a8:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:273
  lsrs r2, #12          @ passend schieben
 80031ac:	0b12      	lsrs	r2, r2, #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:274
  orrs tos, r2          @ zum Opcode hinzufügen
 80031ae:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:276

  movs r1, #0x00FF0000  @ Bit 24 - 17
 80031b0:	f45f 017f 	movs.w	r1, #16711680	; 0xff0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:277
  ands r2, r0, r1       @ aus der Adresse maskieren
 80031b4:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:278
  lsrs r2, #16          @ passend schieben
 80031b8:	0c12      	lsrs	r2, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:279
  orrs tos, r2          @ zum Opcode hinzufügen
 80031ba:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:282

  @ Füge den gewünschten Register hinzu:
  orrs tos, r3
 80031bc:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:284

  b.n reversekomma @ Insert finished movt Opcode into Dictionary
 80031be:	e3ab      	b.n	8003918 <Code_884>

080031c0 <Dictionary_750>:
Dictionary_750():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:284
 80031c0:	08003226 	.word	0x08003226
 80031c4:	72100000 	.word	0x72100000
 80031c8:	73696765 	.word	0x73696765
 80031cc:	6c726574 	.word	0x6c726574
 80031d0:	72657469 	.word	0x72657469
 80031d4:	6c61      	.short	0x6c61
 80031d6:	2c          	.byte	0x2c
	...

080031d8 <Code_750>:
registerliteralkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:291

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "registerliteral," @ ( x Register -- )
registerliteralkomma: @ Compile code to put a literal constant into a register.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 80031d8:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:293

  popda r3    @ Hole die Registermaske               Fetch register to generate constant for
 80031da:	0033      	movs	r3, r6
 80031dc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:294
  lsls r3, #8 @ Den Register um 8 Stellen schieben   Shift register accordingly for opcode generation
 80031de:	021b      	lsls	r3, r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:299

  @ Generiere movs-Opcode für sehr kleine Konstanten :-)
  @ Generate short movs Opcode for small constants within 0 and 255

  cmp tos, #0xFF @ Does literal fit in 8 bits ?
 80031e0:	2eff      	cmp	r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:300
  bhi 1f         @ Gewünschte Konstante passt in 8 Bits.
 80031e2:	d805      	bhi.n	80031f0 <Code_750+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:302
    @ Generate opcode for movs target, #...
    orrs tos, #0x2000 @ MOVS-Opcode
 80031e4:	f456 5600 	orrs.w	r6, r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:303
    orrs tos, r3      @ OR with register
 80031e8:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:304
    bl hkomma
 80031ea:	f000 fb65 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:305
    pop {r0, r1, r2, r3, pc}
 80031ee:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:308

1:@ Check if constant can be opcoded into a long 32 bit movs opcode.
  bl twelvebitencoding
 80031f0:	f7ff ff3e 	bl	8003070 <Code_741>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:310

  cmp tos, #0
 80031f4:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:311
  drop @ Preserves Flags !
 80031f6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:312
  beq 2f
 80031f8:	d006      	beq.n	8003208 <Code_750+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:313
    ldr r0, =0xF05F0000 @ movs r0, #imm12 Opcode
 80031fa:	f8df 0550 	ldr.w	r0, [pc, #1360]	; 800374c <Code_856+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:314
    orrs tos, r0
 80031fe:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:315
    orrs tos, r3        @ OR with register
 8003200:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:316
    bl reversekomma
 8003202:	f000 fb89 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:317
    pop {r0, r1, r2, r3, pc}
 8003206:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:321

2:@ Check if constant can be opcoded into a long 32 bit mvns opcode.

  mvns tos, tos @ Invert constant
 8003208:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:322
  bl twelvebitencoding
 800320a:	f7ff ff31 	bl	8003070 <Code_741>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:324

  cmp tos, #0
 800320e:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:325
  drop @ Preserves Flags !
 8003210:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:326
  beq 3f
 8003212:	d006      	beq.n	8003222 <Code_750+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:327
    ldr r0, =0xF07F0000 @ mvns r0, #imm12 Opcode
 8003214:	f8df 0538 	ldr.w	r0, [pc, #1336]	; 8003750 <Code_856+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:328
    orrs tos, r0
 8003218:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:329
    orrs tos, r3        @ OR with register
 800321a:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:330
    bl reversekomma
 800321c:	f000 fb7c 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:331
    pop {r0, r1, r2, r3, pc}
 8003220:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:333

3:mvns tos, tos @ Invert back to original constant
 8003222:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:335
  @ Generate a movw/movt Opcode
  b.n movwmovt_register_r3
 8003224:	e00b      	b.n	800323e <movwmovt_register_r3>

08003226 <Dictionary_754>:
Dictionary_754():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:335
 8003226:	3286      	.short	0x3286
 8003228:	00000800 	.word	0x00000800
 800322c:	766f6d09 	.word	0x766f6d09
 8003230:	766f6d77 	.word	0x766f6d77
 8003234:	2c74      	.short	0x2c74

08003236 <Code_754>:
Code_754():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:342

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "movwmovt," @ ( x Register -- )
  @ Compile code to put a literal constant into any register.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8003236:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:344

  popda r3    @ Hole die Registermaske               Fetch register to generate constant for
 8003238:	0033      	movs	r3, r6
 800323a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:345
  lsls r3, #8 @ Den Register um 8 Stellen schieben   Shift register accordingly for opcode generation
 800323c:	021b      	lsls	r3, r3, #8

0800323e <movwmovt_register_r3>:
movwmovt_register_r3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:348

movwmovt_register_r3:
  popda r0    @ Hole die Konstante                   Fetch constant
 800323e:	0030      	movs	r0, r6
 8003240:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:352
  @ Long constant that cannot be encoded in a small and simple way.
  @ Generate movw and movt pairs.

  bl movwkomma
 8003242:	f7ff ff83 	bl	800314c <movwkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:358

  @ ldr r1, =0xffff0000 @ High-Teil
  @ ands r0, r1
  @ cmp r0, #0

  movw r1, #0xFFFF          @ Wenn der High-Teil Null ist, brauche ich keinen movt-Opcode mehr zu generieren.
 8003246:	f64f 71ff 	movw	r1, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:359
  ands r0, r0, r1, lsl #16  @ If High-Part is zero there is no need to generate a movt opcode.
 800324a:	ea10 4001 	ands.w	r0, r0, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:360
  beq 3f
 800324e:	d001      	beq.n	8003254 <movwmovt_register_r3+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:362

    bl movtkomma @ Bei Bedarf einfügen
 8003250:	f7ff ff98 	bl	8003184 <movtkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:364

3:pop {r0, r1, r2, r3, pc}
 8003254:	bd0f      	pop	{r0, r1, r2, r3, pc}

08003256 <callkommalang>:
callkommalang():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:378
@ -----------------------------------------------------------------------------
  @ Dies ist ein bisschen schwierig und muss nochmal gründlich optimiert werden.
  @ Schreibe einen ganz langen Sprung ins Dictionary !
  @ Wichtig für <builds does> wo die Lückengröße vorher festliegen muss.

  push {r0, r1, r2, r3, lr}
 8003256:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:379
  adds tos, #1 @ Ungerade Adresse für Thumb-Befehlssatz   Uneven target address for Thumb instruction set !
 8003258:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:381

  popda r0     @ Zieladresse holen    Destination address
 800325a:	0030      	movs	r0, r6
 800325c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:382
  movs r3, #0  @ Register r0 wählen   Choose register r0
 800325e:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:383
  bl movwkomma
 8003260:	f7ff ff74 	bl	800314c <movwkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:384
  bl movtkomma
 8003264:	f7ff ff8e 	bl	8003184 <movtkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:386

  b.n callkommakurz_intern
 8003268:	e006      	b.n	8003278 <callkommakurz_intern>

0800326a <callkommakurz>:
callkommakurz():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:397
               @ Writes a movw-call or a movw-movt-call if destination address is too far away.
@ ----------------------------------------------------------------------------
  @ Dies ist ein bisschen schwierig und muss nochmal gründlich optimiert werden.
  @ Gedanke: Für kurze Call-Distanzen die BL-Opcodes benutzen.

  push {r0, r1, r2, r3, lr}
 800326a:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:398
  adds tos, #1 @ Ungerade Adresse für Thumb-Befehlssatz
 800326c:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:400

  pushdaconst 0 @ Register r0
 800326e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003272:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:401
  bl registerliteralkomma
 8003274:	f7ff ffb0 	bl	80031d8 <Code_750>

08003278 <callkommakurz_intern>:
callkommakurz_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:404

callkommakurz_intern:
  pushdaconstw 0x4780 @ blx r0
 8003278:	f847 6d04 	str.w	r6, [r7, #-4]!
 800327c:	f244 7680 	movw	r6, #18304	; 0x4780
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:405
  bl hkomma
 8003280:	f000 fb1a 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:406
  pop {r0, r1, r2, r3, pc}
 8003284:	bd0f      	pop	{r0, r1, r2, r3, pc}

08003286 <Dictionary_762>:
Dictionary_762():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:406
 8003286:	32ec      	.short	0x32ec
 8003288:	00000800 	.word	0x00000800
 800328c:	6c616305 	.word	0x6c616305
 8003290:	2c6c      	.short	0x2c6c

08003292 <Code_762>:
callkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:418
            @ Je nachdem: bl ...                            (4 Bytes)
            @             movw r0, ...              blx r0  (6 Bytes)
            @             movw r0, ... movt r0, ... blx r0 (10 Bytes)
@ ----------------------------------------------------------------------------

  push {r0, r1, r2, r3, lr}
 8003292:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:419
  movs r3, tos @ Behalte Sprungziel auf dem Stack  Keep destination on stack
 8003294:	0033      	movs	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:422
  @ ( Zieladresse )

  bl here
 8003296:	f000 feb7 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:423
  popda r0 @ Adresse-der-Opcodelücke  Where the opcodes shall be inserted...
 800329a:	0030      	movs	r0, r6
 800329c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:425

  subs r3, r0     @ Differenz aus Lücken-Adresse und Sprungziel bilden   Calculate relative jump offset
 800329e:	1a1b      	subs	r3, r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:426
  subs r3, #4     @ Da der aktuelle Befehl noch läuft und es komischerweise andere Offsets beim ARM gibt.  Current instruction still running...
 80032a0:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:434
  @ also habe ich 21 freie Bits, das oberste muss mit dem restlichen Vorzeichen übereinstimmen.

  @ BL opcodes support 22 Bits jump range - one of that for sign.
  @ Check if BL range is enough to reach target:

  ldr r1, =0xFFC00001   @ 21 Bits frei
 80032a2:	f8df 14b0 	ldr.w	r1, [pc, #1200]	; 8003754 <Code_856+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:435
  ands r1, r3
 80032a6:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:436
  cmp r1, #0  @ Wenn dies Null ergibt, positive Distanz ok.
 80032a8:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:437
  beq 1f
 80032aa:	d006      	beq.n	80032ba <Code_762+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:439

  ldr r2, =0xFFC00000
 80032ac:	f8df 24a8 	ldr.w	r2, [pc, #1192]	; 8003758 <Code_856+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:440
  cmp r1, r2
 80032b0:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:441
  beq 1f      @ Wenn es gleich ist: Negative Distanz ok.
 80032b2:	d002      	beq.n	80032ba <Code_762+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:442
    pop {r0, r1, r2, r3, lr}
 80032b4:	e8bd 400f 	ldmia.w	sp!, {r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:443
    b.n callkommakurz @ Too far away - BL cannot reach that destination. Time for long distance opcodes :-)
 80032b8:	e7d7      	b.n	800326a <callkommakurz>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:449
1:

  @ Within reach of BL. Generate the opcode !

  @ ( Zieladresse )
  drop
 80032ba:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:456
  @ BL: S | imm10 || imm11
  @ Also 22 Bits, wovon das oberste das Vorzeichen sein soll.

  @ r3 enthält die Distanz:

  lsrs r3, #1            @ Bottom bit ignored
 80032bc:	085b      	lsrs	r3, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:457
    ldr r0, =0xF000F800  @ Opcode-Template
 80032be:	f8df 049c 	ldr.w	r0, [pc, #1180]	; 800375c <Code_856+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:459

    movw r1, #0x7FF       @ Bottom 11 bits of immediate
 80032c2:	f240 71ff 	movw	r1, #2047	; 0x7ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:460
    ands r1, r3
 80032c6:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:461
    orrs r0, r1
 80032c8:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:463

  lsrs r3, #11
 80032ca:	0adb      	lsrs	r3, r3, #11
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:465

    movw r1, #0x3FF       @ 10 more bits shifted to second half
 80032cc:	f240 31ff 	movw	r1, #1023	; 0x3ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:466
    ands r1, r3
 80032d0:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:467
    lsls r1, #16
 80032d2:	0409      	lsls	r1, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:468
    orrs r0, r1
 80032d4:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:470

  lsrs r3, #10
 80032d6:	0a9b      	lsrs	r3, r3, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:472

    ands r1, r3, #1      @ Next bit, treated as sign, shifted into bit 26.
 80032d8:	f013 0101 	ands.w	r1, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:473
    lsls r1, #26
 80032dc:	0689      	lsls	r1, r1, #26
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:474
    orrs r0, r1
 80032de:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:477

  @ Opcode fertig in r0
  pushda r0
 80032e0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80032e4:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:478
  bl reversekomma  @ Write finished opcode into Dictionary.
 80032e6:	f000 fb17 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:480

  pop {r0, r1, r2, r3, pc}
 80032ea:	bd0f      	pop	{r0, r1, r2, r3, pc}

080032ec <Dictionary_767>:
Dictionary_767():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:480
 80032ec:	08003322 	.word	0x08003322
 80032f0:	6c080000 	.word	0x6c080000
 80032f4:	72657469 	.word	0x72657469
 80032f8:	6c61      	.short	0x6c61
 80032fa:	2c          	.byte	0x2c
	...

080032fc <Code_767>:
Code_767():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:486

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "literal," @ ( x -- )
literalkomma: @ Save r1, r2 and r3 !
@ -----------------------------------------------------------------------------
  push {r3, lr}
 80032fc:	b508      	push	{r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:488

  pushdaconstw 0xf847  @ str tos, [psp, #-4]!
 80032fe:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003302:	f64f 0647 	movw	r6, #63559	; 0xf847
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:489
  bl hkomma
 8003306:	f000 fad7 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:490
  pushdaconstw 0x6d04
 800330a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800330e:	f646 5604 	movw	r6, #27908	; 0x6d04
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:491
  bl hkomma
 8003312:	f000 fad1 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:493

  pushdaconst 6 @ Gleich in r6=tos legen
 8003316:	f847 6d04 	str.w	r6, [r7, #-4]!
 800331a:	2606      	movs	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:494
  bl registerliteralkomma
 800331c:	f7ff ff5c 	bl	80031d8 <Code_750>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:496

  pop {r3, pc}
 8003320:	bd08      	pop	{r3, pc}

08003322 <Dictionary_774>:
Dictionary_774():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:496
 8003322:	334a      	.short	0x334a
 8003324:	00000800 	.word	0x00000800
 8003328:	65726306 	.word	0x65726306
 800332c:	7461      	.short	0x7461
 800332e:	65          	.byte	0x65
	...

08003330 <Code_774>:
Code_774():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:501

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "create" @ ANS-Create with default action.
@ -----------------------------------------------------------------------------
  push {lr}
 8003330:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:502
  bl builds
 8003332:	f000 f83f 	bl	80033b4 <Code_779>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:508

  @ Copy of the inline-code of does>

  @ Universeller Sprung zu dodoes:  Universal jump to dodoes. There has already been a push {lr} before in the definition that calls does>.
  @ Davor ist in dem Wort, wo does> eingefügt wird schon ein push {lr} gewesen.
  movw r0, #:lower16:dodoes+1
 8003336:	f243 306b 	movw	r0, #13163	; 0x336b
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:510
  .ifdef does_above_64kb
    movt r0, #:upper16:dodoes+1   @ Dieser Teil ist Null, da dodoes weit am Anfang des Flashs sitzt.  Not needed as dodoes in core is in the lowest 64 kb.
 800333a:	f6c0 0000 	movt	r0, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:512
  .endif
  blx r0 @ Den Aufruf mit absoluter Adresse einkompilieren. Perform this call with absolute addressing.
 800333e:	4780      	blx	r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:518


    @ Die Adresse ist hier nicht auf dem Stack, sondern in LR. LR ist sowas wie "TOS" des Returnstacks.
    @ Address is in LR which is something like "TOS in register" of return stack.

  pushdatos
 8003340:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:519
  subs tos, lr, #1 @ Denn es ist normalerweise eine ungerade Adresse wegen des Thumb-Befehlssatzes.  Align address. It is uneven because of Thumb-instructionset bit set.
 8003344:	f1be 0601 	subs.w	r6, lr, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:521

  pop {pc}
 8003348:	bd00      	pop	{pc}

0800334a <Dictionary_776>:
Dictionary_776():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:521
 800334a:	33a6      	.short	0x33a6
 800334c:	00200800 	.word	0x00200800
 8003350:	656f6405 	.word	0x656f6405
 8003354:	3e73      	.short	0x3e73

08003356 <Code_776>:
Code_776():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:534
    @ after that a pushda lr to put the address of the definition entering the does>-part
    @ on datastack. This is a very special implementation !

  @ Universeller Sprung zu dodoes:  Universal jump to dodoes. There has already been a push {lr} before in the definition that calls does>.
  @ Davor ist in dem Wort, wo does> eingefügt wird schon ein push {lr} gewesen.
  movw r0, #:lower16:dodoes+1
 8003356:	f243 306b 	movw	r0, #13163	; 0x336b
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:536
  .ifdef does_above_64kb
    movt r0, #:upper16:dodoes+1   @ Dieser Teil ist Null, da dodoes weit am Anfang des Flashs sitzt.  Not needed as dodoes in core is in the lowest 64 kb.
 800335a:	f6c0 0000 	movt	r0, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:538
  .endif
  blx r0 @ Den Aufruf mit absoluter Adresse einkompilieren. Perform this call with absolute addressing.
 800335e:	4780      	blx	r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:544


    @ Die Adresse ist hier nicht auf dem Stack, sondern in LR. LR ist sowas wie "TOS" des Returnstacks.
    @ Address is in LR which is something like "TOS in register" of return stack.

  pushdatos
 8003360:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:545
  subs tos, lr, #1 @ Denn es ist normalerweise eine ungerade Adresse wegen des Thumb-Befehlssatzes.  Align address. It is uneven because of Thumb-instructionset bit set.
 8003364:	f1be 0601 	subs.w	r6, lr, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:549

  @ Am Ende des Wortes wird ein pop {pc} stehen, und das kommt prima hin.
  @ At the end of the definition there will be a pop {pc}, that is fine.
  bx lr @ Very important as delimiter as does> itself is inline.
 8003368:	4770      	bx	lr

0800336a <dodoes>:
dodoes():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:569
  @ Generate a long call to the destination in LR that is inserted into the hole alloted by <builds.

  @ Präpariere die Einsprungadresse, die via callkomma eingefügt werden muss.
  @ Prepare the destination address

  pushdatos
 800336a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:570
  subs tos, lr, #1
 800336e:	f1be 0601 	subs.w	r6, lr, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:578
               @ Einen abziehen. Diese Adresse ist schon ungerade für Thumb-2, aber callkomma fügt nochmal eine 1 dazu.
               @ Subtract one. Adress is already uneven for Thumb-instructionset, but callkomma will add one anyway.

    @ Dictionary-Pointer verbiegen:
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
 8003372:	4afb      	ldr	r2, [pc, #1004]	; (8003760 <Code_856+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:579
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren  Save old Dictionarypointer.
 8003374:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:581

  ldr r1, =Einsprungpunkt @ Get the address the long call has to be inserted.
 8003376:	49fb      	ldr	r1, [pc, #1004]	; (8003764 <Code_856+0x34>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:582
  ldr r1, [r1] @ r1 enthält jetzt die Codestartadresse der aktuellen Definition.
 8003378:	6809      	ldr	r1, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:630
  .endif

  .ifdef flash32bytesblockwrite
    @ Special case for STM32H74x which has different alignment depending if compiling into Flash (32-even) or into RAM (4-even).

    ldr r0, =Backlinkgrenze
 800337a:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:631
    cmp r3, r0
 800337e:	4283      	cmp	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:635
.ifdef above_ram
    blo.n dodoes_ram
.else
    bhs.n dodoes_ram
 8003380:	d205      	bcs.n	800338e <dodoes_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:638
.endif

2:    movs r0, #31
 8003382:	201f      	movs	r0, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:639
      ands r0, r1
 8003384:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:640
      cmp r0, #4
 8003386:	2804      	cmp	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:641
      beq 1f
 8003388:	d005      	beq.n	8003396 <dodoes_ram+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:642
        adds r1, #2
 800338a:	3102      	adds	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:643
        b 2b
 800338c:	e7f9      	b.n	8003382 <dodoes+0x18>

0800338e <dodoes_ram>:
dodoes_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:649

dodoes_ram:
  .endif

  @ This is to align dictionary pointer to have does> target locations that are always 4-even
  movs r0, #2
 800338e:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:650
  ands r0, r1
 8003390:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:651
  beq 1f
 8003392:	d000      	beq.n	8003396 <dodoes_ram+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:652
    adds r1, #2
 8003394:	3102      	adds	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:655
1:

  adds r1, #2  @ Am Anfang sollte das neudefinierte Wort ein push {lr} enthalten, richtig ?
 8003396:	3102      	adds	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:659
               @ Skip the push {lr} opcode in that definition.

  @ Change the Dictionarypointer to insert the long call with the normal comma mechanism.
      str r1, [r2] @ Dictionarypointer umbiegen
 8003398:	6011      	str	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:660
  bl callkommalang @ Aufruf einfügen
 800339a:	f7ff ff5c 	bl	8003256 <callkommalang>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:661
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen.
 800339e:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:663

  bl smudge
 80033a0:	f000 f9f5 	bl	800378e <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:664
  pop {pc}
 80033a4:	bd00      	pop	{pc}

080033a6 <Dictionary_779>:
Dictionary_779():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:664
 80033a6:	3402      	.short	0x3402
 80033a8:	00000800 	.word	0x00000800
 80033ac:	75623c07 	.word	0x75623c07
 80033b0:	73646c69 	.word	0x73646c69

080033b4 <Code_779>:
builds():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:673
  Wortbirne Flag_visible, "<builds"
builds: @ Beginnt ein Defining-Wort.  Start a defining definition.
        @ Dazu lege ich ein neues Wort an, lasse eine Lücke für den Call-Befehl. Create a new definition and leave space for inserting the does>-Call later.
        @ Keine Strukturkennung  No structure pattern matching here !
@ -----------------------------------------------------------------------------
  push {lr}
 80033b4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:674
  bl create       @ Neues Wort wird erzeugt
 80033b6:	f000 fbe1 	bl	8003b7c <Code_912>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:740

  .ifdef flash32bytesblockwrite
    @ It is necessary for STM32H74X that Flash writes are aligned on 32.
    @ So if we are compiling into Flash, we need to make sure that
    @ the block the user might write to later is properly aligned.
    ldr r0, =Dictionarypointer
 80033ba:	48e9      	ldr	r0, [pc, #932]	; (8003760 <Code_856+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:741
    ldr r1, [r0]
 80033bc:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:743

    ldr r2, =Backlinkgrenze
 80033be:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:744
    cmp r1, r2
 80033c2:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:748
.ifdef above_ram
    blo.n builds_ram
.else
    bhs.n builds_ram
 80033c4:	d209      	bcs.n	80033da <builds_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:754
.endif

      @ See where we are. The sequence written for <builds does> is 12 Bytes long on M3/M4.
      @ So we need to advance to 16n + 4 so that the opcode sequence ends on a suitable border.

2:    bl here
 80033c6:	f000 fe1f 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:755
      movs r0, #31
 80033ca:	201f      	movs	r0, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:756
      ands tos, r0
 80033cc:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:757
      cmp tos, #4
 80033ce:	2e04      	cmp	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:758
      drop
 80033d0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:759
      beq 1f
 80033d2:	d00a      	beq.n	80033ea <builds_ram+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:760
        bl nop_hkomma
 80033d4:	f000 fa62 	bl	800389c <nop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:761
        b 2b
 80033d8:	e7f5      	b.n	80033c6 <Code_779+0x12>

080033da <builds_ram>:
builds_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:767

builds_ram:
  .endif

  @ This is to align dictionary pointer to have does> target locations that are always 4-even
    bl here
 80033da:	f000 fe15 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:768
    movs r0, #2
 80033de:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:769
    ands tos, r0
 80033e0:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:770
    drop
 80033e2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:771
    beq 1f
 80033e4:	d001      	beq.n	80033ea <builds_ram+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:772
      bl nop_hkomma
 80033e6:	f000 fa59 	bl	800389c <nop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:775
1:

  pushdaconstw 0xb500 @ Opcode für push {lr} schreiben  Write opcode for push {lr}
 80033ea:	f847 6d04 	str.w	r6, [r7, #-4]!
 80033ee:	f24b 5600 	movw	r6, #46336	; 0xb500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:776
  bl hkomma
 80033f2:	f000 fa61 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:778

  pushdaconst 10  @ Hier kommt ein Call-Befehl hinein, aber ich weiß die Adresse noch nicht.
 80033f6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80033fa:	260a      	movs	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:779
  bl allot        @ Lasse also eine passende Lücke frei !  Leave space for a long call opcode sequence.
 80033fc:	f000 faca 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:780
  pop {pc}
 8003400:	bd00      	pop	{pc}

08003402 <Dictionary_786>:
Dictionary_786():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:780
 8003402:	340e      	.short	0x340e
 8003404:	00500800 	.word	0x00500800
 8003408:	5d275b03 	.word	0x5d275b03

0800340c <Code_786>:
Code_786():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:31
  .endif

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "[']" @ Sucht das nächste Wort im Eingabestrom  Searches the next token in input buffer and compiles its entry point as literal.
@------------------------------------------------------------------------------
  b.n tick @ So sah das mal aus: ['] ' immediate 0-foldable ;
 800340c:	e003      	b.n	8003416 <Code_787>

0800340e <Dictionary_787>:
Dictionary_787():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:31
 800340e:	3426      	.short	0x3426
 8003410:	00000800 	.word	0x00000800
 8003414:	2701      	.short	0x2701

08003416 <Code_787>:
tick():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:37

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "'" @ Searches next token in unput buffer and gives back its code entry point.
tick: @ Nimmt das nächste Token aus dem Puffer, suche es und gibt den Einsprungpunkt zurück.
@ -----------------------------------------------------------------------------
  push {lr}
 8003416:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:38
  bl token
 8003418:	f001 f962 	bl	80046e0 <Code_1129>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:39
  bl find_not_found
 800341c:	f000 fd91 	bl	8003f42 <find_not_found>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:40
  popda r0 @ Drop Flags into r0 - used by postpone !
 8003420:	0030      	movs	r0, r6
 8003422:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:41
  pop {pc}
 8003424:	bd00      	pop	{pc}

08003426 <Dictionary_789>:
Dictionary_789():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:41
 8003426:	345c      	.short	0x345c
 8003428:	00300800 	.word	0x00300800
 800342c:	736f7008 	.word	0x736f7008
 8003430:	6e6f7074 	.word	0x6e6f7074
 8003434:	65          	.byte	0x65
	...

08003436 <Code_789>:
Code_789():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:47

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "postpone" @ Sucht das nächste Wort im Eingabestrom  Search next token and fill it in Dictionary in a special way.
                                       @ und fügt es auf besondere Weise ein.
@------------------------------------------------------------------------------
  push {lr}
 8003436:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:49

  bl tick @ Stores Flags into r0 !
 8003438:	f7ff ffed 	bl	8003416 <Code_787>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:55

  @ ( Einsprungadresse )

  .ifdef registerallocator

  pushda r0
 800343c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003440:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:56
  swap
 8003442:	6839      	ldr	r1, [r7, #0]
 8003444:	603e      	str	r6, [r7, #0]
 8003446:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:57
  bl literalkomma
 8003448:	f7ff ff58 	bl	80032fc <Code_767>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:58
  bl literalkomma
 800344c:	f7ff ff56 	bl	80032fc <Code_767>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:59
  pushdatos
 8003450:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:60
  ldr tos, =kompilator
 8003454:	4ec4      	ldr	r6, [pc, #784]	; (8003768 <Code_856+0x38>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:61
  bl callkomma
 8003456:	f7ff ff1c 	bl	8003292 <Code_762>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:62
  pop {pc}
 800345a:	bd00      	pop	{pc}

0800345c <Dictionary_794>:
Dictionary_794():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:62
 800345c:	080034b2 	.word	0x080034b2
 8003460:	69070000 	.word	0x69070000
 8003464:	6e696c6e 	.word	0x6e696c6e
 8003468:	2c65      	.short	0x2c65

0800346a <Code_794>:
Code_794():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:91

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "inline," @ ( addr -- )
inlinekomma:
@ -----------------------------------------------------------------------------
  push {lr}
 800346a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:107
  .ifdef m0core
  ldr r1, =0xb500 @ push {lr}
  ldr r2, =0xbd00 @ pop {pc}
  ldr r3, =0x4770 @ bx lr
  .else
  movw r1, #0xb500 @ push {lr}
 800346c:	f24b 5100 	movw	r1, #46336	; 0xb500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:108
  movw r2, #0xbd00 @ pop {pc}
 8003470:	f64b 5200 	movw	r2, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:109
  movw r3, #0x4770 @ bx lr
 8003474:	f244 7370 	movw	r3, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:112
  .endif

1:ldrh r0, [tos] @ Hole die nächsten 16 Bits aus der Routine.  Fetch next opcode...
 8003478:	8830      	ldrh	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:113
  cmp r0, r1 @ push {lr}
 800347a:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:114
  beq 2f
 800347c:	d008      	beq.n	8003490 <Code_794+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:115
  cmp r0, r2 @ pop {pc}
 800347e:	4290      	cmp	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:116
  beq 3f
 8003480:	d008      	beq.n	8003494 <Code_794+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:117
  cmp r0, r3 @ bx lr
 8003482:	4298      	cmp	r0, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:118
  beq 3f
 8003484:	d006      	beq.n	8003494 <Code_794+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:120

  pushda r0
 8003486:	f847 6d04 	str.w	r6, [r7, #-4]!
 800348a:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:121
  bl hkomma @ Opcode einkompilieren  After checking is done, insert opcode into Dictionary.
 800348c:	f000 fa14 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:123

2:adds tos, #2 @ Pointer weiterrücken  Advance pointer
 8003490:	3602      	adds	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:124
  b 1b
 8003492:	e7f1      	b.n	8003478 <Code_794+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:126

3:drop
 8003494:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:127
  pop {pc}
 8003496:	bd00      	pop	{pc}

08003498 <suchedefinitionsende>:
suchedefinitionsende():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:135
@ -----------------------------------------------------------------------------
suchedefinitionsende: @ Rückt den Pointer in r0 ans Ende einer Definition vor.
                      @ Advance r0 to the end of code of current definition by searching for pop {pc} or bx lr opcodes.
@ -----------------------------------------------------------------------------
        @ Suche wie in inline, nach pop {pc} oder bx lr.
        push {r1, r2, r3}
 8003498:	b40e      	push	{r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:141

         .ifdef m0core
         ldr r2, =0xbd00 @ pop {pc}
         ldr r3, =0x4770 @ bx lr
         .else
         movw r2, #0xbd00 @ pop {pc}
 800349a:	f64b 5200 	movw	r2, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:142
         movw r3, #0x4770 @ bx lr
 800349e:	f244 7370 	movw	r3, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:146
         .endif


1:        ldrh r1, [r0]  @ Hole die nächsten 16 Bits aus der Routine.
 80034a2:	8801      	ldrh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:147
          adds r0, #2    @ Pointer Weiterrücken
 80034a4:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:149

          cmp r1, r2  @ pop {pc}
 80034a6:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:150
          beq 2f
 80034a8:	d001      	beq.n	80034ae <suchedefinitionsende+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:151
          cmp r1, r3  @ bx lr
 80034aa:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:152
          bne 1b
 80034ac:	d1f9      	bne.n	80034a2 <suchedefinitionsende+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:154

2:      pop {r1, r2, r3}
 80034ae:	bc0e      	pop	{r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:155
        bx lr
 80034b0:	4770      	bx	lr

080034b2 <Dictionary_798>:
Dictionary_798():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:155
 80034b2:	34c8      	.short	0x34c8
 80034b4:	00000800 	.word	0x00000800
 80034b8:	74657204 	.word	0x74657204
 80034bc:	2c          	.byte	0x2c
	...

080034be <Code_798>:
Code_798():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:163
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "ret," @ ( -- )
retkomma: @ Write pop {pc} opcode
@ -----------------------------------------------------------------------------
  @ Mache das mit pop {pc}
  pushdaconstw 0xbd00 @ Opcode für pop {pc} schreiben
 80034be:	f847 6d04 	str.w	r6, [r7, #-4]!
 80034c2:	f64b 5600 	movw	r6, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:164
  b.n hkomma
 80034c6:	e1f7      	b.n	80038b8 <Code_875>

080034c8 <Dictionary_801>:
Dictionary_801():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:164
 80034c8:	080034d6 	.word	0x080034d6
 80034cc:	65040030 	.word	0x65040030
 80034d0:	6978      	.short	0x6978
 80034d2:	74          	.byte	0x74
	...

080034d4 <Code_801>:
Code_801():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:170

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "exit" @ Kompiliert ein ret mitten in die Definition.
  @ Writes a ret opcode into current definition. Take care with inlining !
@------------------------------------------------------------------------------
  b.n retkomma
 80034d4:	e7f3      	b.n	80034be <Code_798>

080034d6 <Dictionary_802>:
Dictionary_802():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:170
 80034d6:	34ee      	.short	0x34ee
 80034d8:	00300800 	.word	0x00300800
 80034dc:	63657207 	.word	0x63657207
 80034e0:	65737275 	.word	0x65737275

080034e4 <Code_802>:
Code_802():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:179
@  : fac-rec ( acc n -- n! ) dup dup 1 = swap 0 = or if drop else dup 1 - rot rot * swap recurse then ; : facre ( n -- n! ) 1 swap fac-rec ;

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "recurse" @ Für Rekursion. Führt das gerade frische Wort aus. Execute freshly defined definition.
@------------------------------------------------------------------------------
  pushdatos
 80034e4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:180
  ldr tos, =Einsprungpunkt
 80034e8:	4e9e      	ldr	r6, [pc, #632]	; (8003764 <Code_856+0x34>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:181
  ldr tos, [tos]
 80034ea:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:182
  b.n callkomma
 80034ec:	e6d1      	b.n	8003292 <Code_762>

080034ee <Dictionary_804>:
Dictionary_804():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:182
 80034ee:	3506      	.short	0x3506
 80034f0:	00810800 	.word	0x00810800
 80034f4:	61747305 	.word	0x61747305
 80034f8:	6574      	.short	0x6574

080034fa <Code_804>:
Code_804():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:188

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "state" @ ( -- addr )
  CoreVariable state
@ -----------------------------------------------------------------------------
  pushdatos
 80034fa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:189
  ldr tos, =state
 80034fe:	4e9b      	ldr	r6, [pc, #620]	; (800376c <Code_856+0x3c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:190
  bx lr
 8003500:	4770      	bx	lr
 8003502:	0000      	.short	0x0000
	...

08003506 <Dictionary_807>:
Dictionary_807():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:190
 8003506:	3518      	.short	0x3518
 8003508:	00000800 	.word	0x00000800
 800350c:	5d01      	.short	0x5d01

0800350e <Code_807>:
Code_807():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:197

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "]" @ In den Compile-Modus übergehen  Switch to compile mode
compile_state:
@ -----------------------------------------------------------------------------
  ldr r0, =state
 800350e:	4897      	ldr	r0, [pc, #604]	; (800376c <Code_856+0x3c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:198
  movs r1, #0 @ true-Flag in State legen
 8003510:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:199
  mvns r1, r1 @ -1
 8003512:	43c9      	mvns	r1, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:200
  str r1, [r0]
 8003514:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:201
  bx lr
 8003516:	4770      	bx	lr

08003518 <Dictionary_808>:
Dictionary_808():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:201
 8003518:	08003528 	.word	0x08003528
 800351c:	5b010010 	.word	0x5b010010

08003520 <Code_808>:
Code_808():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:207

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate, "[" @ In den Execute-Modus übergehen  Switch to execute mode
execute_state:
@ -----------------------------------------------------------------------------
  ldr r0, =state
 8003520:	4892      	ldr	r0, [pc, #584]	; (800376c <Code_856+0x3c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:208
  movs r1, #0 @ false-Flag in State legen.
 8003522:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:209
  str r1, [r0]
 8003524:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:210
  bx lr
 8003526:	4770      	bx	lr

08003528 <Dictionary_809>:
Dictionary_809():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:210
 8003528:	08003548 	.word	0x08003548
 800352c:	3a010000 	.word	0x3a010000

08003530 <Code_809>:
Code_809():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:215

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, ":" @ ( -- )
@ -----------------------------------------------------------------------------
  push {lr}
 8003530:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:217

  ldr r0, =Datenstacksicherung @ Setzt den Füllstand des Datenstacks zur Probe.
 8003532:	488f      	ldr	r0, [pc, #572]	; (8003770 <Code_856+0x40>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:218
  str psp, [r0]                @ Save current datastack pointer to detect structure mismatch later.
 8003534:	6007      	str	r7, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:220

  bl create
 8003536:	f000 fb21 	bl	8003b7c <Code_912>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:225


  .ifdef registerallocator

    ldr r0, =state
 800353a:	488c      	ldr	r0, [pc, #560]	; (800376c <Code_856+0x3c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:226
    movs r1, #1 @ So eine Art bx lx-Kompilierzustand-Flag in State legen
 800353c:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:227
    str r1, [r0]
 800353e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:230

    @ Neue Definition: Auf jeden Fall den Inline-Cache frisch leeren !
    ldr r0, =inline_cache_count
 8003540:	488c      	ldr	r0, [pc, #560]	; (8003774 <Code_856+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:231
    movs r1, #0
 8003542:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:232
    str r1, [r0]  @ Inline Cache empty
 8003544:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:243

  bl compile_state

  .endif

  pop {pc}
 8003546:	bd00      	pop	{pc}

08003548 <Dictionary_810>:
Dictionary_810():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:243
 8003548:	080035c4 	.word	0x080035c4
 800354c:	3b010830 	.word	0x3b010830

08003550 <Code_810>:
Code_810():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:252
  Wortbirne Flag_immediate_compileonly|Flag_bxlr, ";" @ ( -- )
  .else
  Wortbirne Flag_immediate_compileonly, ";" @ ( -- )
  .endif
@ -----------------------------------------------------------------------------
  push {lr}
 8003550:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:254

  ldr r0, =Datenstacksicherung @ Prüft den Füllstand des Datenstacks.
 8003552:	4887      	ldr	r0, [pc, #540]	; (8003770 <Code_856+0x40>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:255
  ldr r1, [r0]                 @ Check fill level of datastack.
 8003554:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:256
  cmp r1, psp
 8003556:	42b9      	cmp	r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:257
  beq 1f
 8003558:	d014      	beq.n	8003584 <Code_810+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:259

  ldr r1, =stack_canary @ Stackintegrität prüfen.
 800355a:	4987      	ldr	r1, [pc, #540]	; (8003778 <Code_856+0x48>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:260
  cmp tos, r1           @ Check stack integrity.
 800355c:	428e      	cmp	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:261
  bne 5f
 800355e:	d102      	bne.n	8003566 <Code_810+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:263

    ldr tos, =dots+10 @ Fehlermeldung vorbereiten.
 8003560:	4e86      	ldr	r6, [pc, #536]	; (800377c <Code_856+0x4c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:264
    bl type           @ Prepare error message.
 8003562:	f7ff fc69 	bl	8002e38 <Code_700>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:265
5:  Fehler_Quit " Stack not balanced."
 8003566:	f7ff fc1f 	bl	8002da8 <dotgaensefuesschen>
 800356a:	2015      	.short	0x2015
 800356c:	63617453 	.word	0x63617453
 8003570:	6f6e206b 	.word	0x6f6e206b
 8003574:	61622074 	.word	0x61622074
 8003578:	636e616c 	.word	0x636e616c
 800357c:	0a2e6465 	.word	0x0a2e6465
 8003580:	f001 bc2c 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:273


  .ifdef registerallocator
    @ Jetzt entweder bx lr oder pop {pc} schreiben.

     ldr r0, =state
 8003584:	4879      	ldr	r0, [pc, #484]	; (800376c <Code_856+0x3c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:274
     ldr r0, [r0]
 8003586:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:275
     adds r1, r0, #1
 8003588:	1c41      	adds	r1, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:276
     beq 3f
 800358a:	d010      	beq.n	80035ae <Code_810+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:277
       cmp r0, #rawinlinelength + 1  @ Kurze Definitionen mit bis zu 5 Einfach-Opcodes (State zählt ab 1) werden direkt als inline markiert.
 800358c:	280b      	cmp	r0, #11
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:278
       bhi 2f
 800358e:	d805      	bhi.n	800359c <Code_810+0x4c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:279
         pushdaconstw (Flag_inline | Flag_bxlr ) & ~Flag_visible
 8003590:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003594:	f640 0620 	movw	r6, #2080	; 0x820
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:280
         bl setflags
 8003598:	f000 f930 	bl	80037fc <Code_863>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:281
2:     pushdaconstw 0x4770 @ bx lr
 800359c:	f847 6d04 	str.w	r6, [r7, #-4]!
 80035a0:	f244 7670 	movw	r6, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:282
       bl hkomma @ bx lr schreiben !
 80035a4:	f000 f988 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:288

       @ Prinzipiell ist diese Definition Inline-tauglich, auch wenn sie vielleicht ein bisschen zu lang geworden sein könnte.
       @ An dieser Stelle ist es also sicher, aus dem Inline-Cache heraus den RA zu bemühen.
       @ Mal schauen, was daraus wird !

       bl inline_cache_schreiben
 80035a8:	f001 fb18 	bl	8004bdc <inline_cache_schreiben>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:289
       b.n 4f
 80035ac:	e005      	b.n	80035ba <Code_810+0x6a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:293
3:   @ Doch ein pop {pc} ? Dann war wohl etwas enthalten, was nicht durch inline laufen darf.
  .endif

  pushdaconstw 0xbd00 @ Opcode für pop {pc} schreiben  Write opcode for pop {pc}
 80035ae:	f847 6d04 	str.w	r6, [r7, #-4]!
 80035b2:	f64b 5600 	movw	r6, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:294
  bl hkomma
 80035b6:	f000 f97f 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:296

4:bl smudge
 80035ba:	f000 f8e8 	bl	800378e <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:298

  bl execute_state
 80035be:	f7ff ffaf 	bl	8003520 <Code_808>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:300

  pop {pc}
 80035c2:	bd00      	pop	{pc}

080035c4 <Dictionary_818>:
Dictionary_818():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:300
 80035c4:	080035d8 	.word	0x080035d8
 80035c8:	65070000 	.word	0x65070000
 80035cc:	75636578 	.word	0x75636578
 80035d0:	6574      	.short	0x6574

080035d2 <Code_818>:
Code_818():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:306

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "execute"
execute:
@ -----------------------------------------------------------------------------
  popda r0
 80035d2:	0030      	movs	r0, r6
 80035d4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:307
  mov pc, r0
 80035d6:	4687      	mov	pc, r0

080035d8 <Dictionary_820>:
Dictionary_820():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:307
 80035d8:	080035f0 	.word	0x080035f0
 80035dc:	69090010 	.word	0x69090010
 80035e0:	64656d6d 	.word	0x64656d6d
 80035e4:	65746169 	.word	0x65746169

080035e8 <Code_820>:
Code_820():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:312

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate, "immediate" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_immediate & ~Flag_visible
 80035e8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80035ec:	2610      	movs	r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:313
  b.n setflags
 80035ee:	e105      	b.n	80037fc <Code_863>

080035f0 <Dictionary_823>:
Dictionary_823():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:313
 80035f0:	08003606 	.word	0x08003606
 80035f4:	69060050 	.word	0x69060050
 80035f8:	6e696c6e 	.word	0x6e696c6e
 80035fc:	65          	.byte	0x65
	...

080035fe <Code_823>:
Code_823():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:319

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "inline" @ ( -- )
setze_inlineflag:
@ -----------------------------------------------------------------------------
  pushdaconst Flag_inline & ~Flag_visible
 80035fe:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003602:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:320
  b.n setflags
 8003604:	e0fa      	b.n	80037fc <Code_863>

08003606 <Dictionary_826>:
Dictionary_826():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:320
 8003606:	3620      	.short	0x3620
 8003608:	00100800 	.word	0x00100800
 800360c:	6d6f630b 	.word	0x6d6f630b
 8003610:	656c6970 	.word	0x656c6970
 8003614:	796c6e6f 	.word	0x796c6e6f

08003618 <Code_826>:
Code_826():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:325

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate, "compileonly" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_immediate_compileonly & ~Flag_visible
 8003618:	f847 6d04 	str.w	r6, [r7, #-4]!
 800361c:	2630      	movs	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:326
  b.n setflags
 800361e:	e0ed      	b.n	80037fc <Code_863>

08003620 <Dictionary_829>:
Dictionary_829():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:326
 8003620:	0800363a 	.word	0x0800363a
 8003624:	300a0050 	.word	0x300a0050
 8003628:	6c6f662d 	.word	0x6c6f662d
 800362c:	6c626164 	.word	0x6c626164
 8003630:	65          	.byte	0x65
	...

08003632 <Code_829>:
Code_829():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:332

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "0-foldable" @ ( -- )
setze_faltbarflag:
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_0 & ~Flag_visible
 8003632:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003636:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:333
  b.n setflags
 8003638:	e0e0      	b.n	80037fc <Code_863>

0800363a <Dictionary_832>:
Dictionary_832():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:333
 800363a:	3654      	.short	0x3654
 800363c:	00500800 	.word	0x00500800
 8003640:	662d310a 	.word	0x662d310a
 8003644:	61646c6f 	.word	0x61646c6f
 8003648:	6c62      	.short	0x6c62
 800364a:	65          	.byte	0x65
	...

0800364c <Code_832>:
Code_832():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:338

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "1-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_1 & ~Flag_visible
 800364c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003650:	2641      	movs	r6, #65	; 0x41
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:339
  b.n setflags
 8003652:	e0d3      	b.n	80037fc <Code_863>

08003654 <Dictionary_835>:
Dictionary_835():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:339
 8003654:	0800366e 	.word	0x0800366e
 8003658:	320a0050 	.word	0x320a0050
 800365c:	6c6f662d 	.word	0x6c6f662d
 8003660:	6c626164 	.word	0x6c626164
 8003664:	65          	.byte	0x65
	...

08003666 <Code_835>:
Code_835():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:344

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "2-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_2 & ~Flag_visible
 8003666:	f847 6d04 	str.w	r6, [r7, #-4]!
 800366a:	2642      	movs	r6, #66	; 0x42
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:345
  b.n setflags
 800366c:	e0c6      	b.n	80037fc <Code_863>

0800366e <Dictionary_838>:
Dictionary_838():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:345
 800366e:	3688      	.short	0x3688
 8003670:	00500800 	.word	0x00500800
 8003674:	662d330a 	.word	0x662d330a
 8003678:	61646c6f 	.word	0x61646c6f
 800367c:	6c62      	.short	0x6c62
 800367e:	65          	.byte	0x65
	...

08003680 <Code_838>:
Code_838():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:350

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "3-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_3 & ~Flag_visible
 8003680:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003684:	2643      	movs	r6, #67	; 0x43
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:351
  b.n setflags
 8003686:	e0b9      	b.n	80037fc <Code_863>

08003688 <Dictionary_841>:
Dictionary_841():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:351
 8003688:	080036a2 	.word	0x080036a2
 800368c:	340a0050 	.word	0x340a0050
 8003690:	6c6f662d 	.word	0x6c6f662d
 8003694:	6c626164 	.word	0x6c626164
 8003698:	65          	.byte	0x65
	...

0800369a <Code_841>:
Code_841():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:356

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "4-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_4 & ~Flag_visible
 800369a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800369e:	2644      	movs	r6, #68	; 0x44
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:357
  b.n setflags
 80036a0:	e0ac      	b.n	80037fc <Code_863>

080036a2 <Dictionary_844>:
Dictionary_844():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:357
 80036a2:	36bc      	.short	0x36bc
 80036a4:	00500800 	.word	0x00500800
 80036a8:	662d350a 	.word	0x662d350a
 80036ac:	61646c6f 	.word	0x61646c6f
 80036b0:	6c62      	.short	0x6c62
 80036b2:	65          	.byte	0x65
	...

080036b4 <Code_844>:
Code_844():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:362

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "5-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_5 & ~Flag_visible
 80036b4:	f847 6d04 	str.w	r6, [r7, #-4]!
 80036b8:	2645      	movs	r6, #69	; 0x45
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:363
  b.n setflags
 80036ba:	e09f      	b.n	80037fc <Code_863>

080036bc <Dictionary_847>:
Dictionary_847():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:363
 80036bc:	080036d6 	.word	0x080036d6
 80036c0:	360a0050 	.word	0x360a0050
 80036c4:	6c6f662d 	.word	0x6c6f662d
 80036c8:	6c626164 	.word	0x6c626164
 80036cc:	65          	.byte	0x65
	...

080036ce <Code_847>:
Code_847():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:368

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "6-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_6 & ~Flag_visible
 80036ce:	f847 6d04 	str.w	r6, [r7, #-4]!
 80036d2:	2646      	movs	r6, #70	; 0x46
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:369
  b.n setflags
 80036d4:	e092      	b.n	80037fc <Code_863>

080036d6 <Dictionary_850>:
Dictionary_850():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:369
 80036d6:	36f0      	.short	0x36f0
 80036d8:	00500800 	.word	0x00500800
 80036dc:	662d370a 	.word	0x662d370a
 80036e0:	61646c6f 	.word	0x61646c6f
 80036e4:	6c62      	.short	0x6c62
 80036e6:	65          	.byte	0x65
	...

080036e8 <Code_850>:
Code_850():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:374

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "7-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_7 & ~Flag_visible
 80036e8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80036ec:	2647      	movs	r6, #71	; 0x47
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:375
  b.n setflags
 80036ee:	e085      	b.n	80037fc <Code_863>

080036f0 <Dictionary_853>:
Dictionary_853():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:375
 80036f0:	08003720 	.word	0x08003720
 80036f4:	63080000 	.word	0x63080000
 80036f8:	74736e6f 	.word	0x74736e6f
 80036fc:	6e61      	.short	0x6e61
 80036fe:	74          	.byte	0x74
	...

08003700 <Code_853>:
Code_853():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:380

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "constant" @ ( n -- )
@ -----------------------------------------------------------------------------
  push {lr}
 8003700:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:381
  bl create
 8003702:	f000 fa3b 	bl	8003b7c <Code_912>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:382
1:bl literalkomma
 8003706:	f7ff fdf9 	bl	80032fc <Code_767>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:383
  pushdaconstw 0x4770 @ Opcode for bx lr
 800370a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800370e:	f244 7670 	movw	r6, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:384
  bl hkomma
 8003712:	f000 f8d1 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:385
  bl setze_faltbarflag
 8003716:	f7ff ff8c 	bl	8003632 <Code_829>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:386
  bl smudge
 800371a:	f000 f838 	bl	800378e <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:387
  pop {pc}
 800371e:	bd00      	pop	{pc}

08003720 <Dictionary_856>:
Dictionary_856():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:387
 8003720:	08003780 	.word	0x08003780
 8003724:	32090000 	.word	0x32090000
 8003728:	736e6f63 	.word	0x736e6f63
 800372c:	746e6174 	.word	0x746e6174

08003730 <Code_856>:
Code_856():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:392

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "2constant" @ ( n -- )
@ -----------------------------------------------------------------------------
  push {lr}
 8003730:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:393
  bl create
 8003732:	f000 fa23 	bl	8003b7c <Code_912>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:394
  swap
 8003736:	6839      	ldr	r1, [r7, #0]
 8003738:	603e      	str	r6, [r7, #0]
 800373a:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:395
  bl literalkomma
 800373c:	f7ff fdde 	bl	80032fc <Code_767>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:396
  b.n 1b
 8003740:	e7e1      	b.n	8003706 <Code_853+0x6>
 8003742:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:227
  ldr tos, =0xf2400000 @ Opcode movw r0, #0
 8003744:	f2400000 	.word	0xf2400000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:259
  ldr tos, =0xf2c00000 @ Opcode movt r0, #0
 8003748:	f2c00000 	.word	0xf2c00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:313
    ldr r0, =0xF05F0000 @ movs r0, #imm12 Opcode
 800374c:	f05f0000 	.word	0xf05f0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:327
    ldr r0, =0xF07F0000 @ mvns r0, #imm12 Opcode
 8003750:	f07f0000 	.word	0xf07f0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:434
  ldr r1, =0xFFC00001   @ 21 Bits frei
 8003754:	ffc00001 	.word	0xffc00001
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:439
  ldr r2, =0xFFC00000
 8003758:	ffc00000 	.word	0xffc00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:457
    ldr r0, =0xF000F800  @ Opcode-Template
 800375c:	f000f800 	.word	0xf000f800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:578
      ldr r2, =Dictionarypointer
 8003760:	2407ffd0 	.word	0x2407ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/codegenerator-m3.s:581
  ldr r1, =Einsprungpunkt @ Get the address the long call has to be inserted.
 8003764:	2400000c 	.word	0x2400000c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:60
  ldr tos, =kompilator
 8003768:	08004ad6 	.word	0x08004ad6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:189
  ldr tos, =state
 800376c:	2407ffd8 	.word	0x2407ffd8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:217
  ldr r0, =Datenstacksicherung @ Setzt den Füllstand des Datenstacks zur Probe.
 8003770:	24000008 	.word	0x24000008
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:230
    ldr r0, =inline_cache_count
 8003774:	24000054 	.word	0x24000054
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:259
  ldr r1, =stack_canary @ Stackintegrität prüfen.
 8003778:	04121985 	.word	0x04121985
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:263
    ldr tos, =dots+10 @ Fehlermeldung vorbereiten.
 800377c:	08002eda 	.word	0x08002eda

08003780 <Dictionary_858>:
Dictionary_858():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler.s:263
 8003780:	080037ec 	.word	0x080037ec
 8003784:	73060000 	.word	0x73060000
 8003788:	6764756d 	.word	0x6764756d
 800378c:	65          	.byte	0x65
	...

0800378e <Code_858>:
smudge():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:28

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "smudge" @ ( -- )
smudge:
@ -----------------------------------------------------------------------------
  push {lr}
 800378e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:30

  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
 8003790:	48ea      	ldr	r0, [pc, #936]	; (8003b3c <Code_911+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:31
  ldr r1, [r0]
 8003792:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:33

  ldr r2, =Backlinkgrenze
 8003794:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:34
  cmp r1, r2
 8003798:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:38
.ifdef above_ram
  blo.n smudge_ram
.else
  bhs.n smudge_ram @ Befinde mich im Ram. Schalte um !
 800379a:	d220      	bcs.n	80037de <smudge_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:53
    @ Check if there is $FFFF at the end of the definition.
    @ That must not be ! It would be detected as free space on next Reset and simply overwritten.
    @ To prevent it a zero is applied at the end in this case.

    @ r1 enthält den DictionaryPointer.  r1 already contains Dictionarypointer
    subs r1, #2
 800379c:	3902      	subs	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:54
    ldrh r2, [r1]
 800379e:	880a      	ldrh	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:55
    ldr r3, =erasedhalfword
 80037a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:56
    cmp r2, r3
 80037a4:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:57
    bne 1f
 80037a6:	d105      	bne.n	80037b4 <Code_858+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:59
      @ writeln "Füge in Smudge eine Enderkennungs-Null ein."
      pushdatos
 80037a8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:60
      ldr tos, =writtenhalfword
 80037ac:	f04f 0600 	mov.w	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:61
      bl hkomma
 80037b0:	f000 f882 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:64
1:  @ Okay, Ende gut, alles gut. Fine :-)

    bl align4komma @ Align on 4 to make sure the last opcode is actually written to Flash and to fullfill ANS requirement.
 80037b4:	f000 f84f 	bl	8003856 <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:75
    .ifdef flash16bytesblockwrite
      bl align16komma
    .endif

    .ifdef flash32bytesblockwrite
      bl align32komma
 80037b8:	f000 f862 	bl	8003880 <Code_869>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:79
    .endif

    @ Brenne die gesammelten Flags:  Flash in the collected Flags:
    ldr r0, =FlashFlags
 80037bc:	48e0      	ldr	r0, [pc, #896]	; (8003b40 <Code_911+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:80
    ldr r0, [r0]
 80037be:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:81
    pushda r0
 80037c0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80037c4:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:83

    ldr r1, =Fadenende
 80037c6:	49df      	ldr	r1, [pc, #892]	; (8003b44 <Code_911+0x1c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:84
    ldr r1, [r1]
 80037c8:	6809      	ldr	r1, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:85
    adds r1, #4 @ Skip Link field
 80037ca:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:89

    @ Dictionary-Pointer verbiegen:  Change Dictionarypointer for flashing Flags in (saves code size)
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
 80037cc:	4adb      	ldr	r2, [pc, #876]	; (8003b3c <Code_911+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:90
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren  Keep old pointer !
 80037ce:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:92

      str r1, [r2] @ Dictionarypointer umbiegen  Change pointer
 80037d0:	6011      	str	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:93
      bl hkomma    @ Flags einfügen              Insert Flags
 80037d2:	f000 f871 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:94
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen.
 80037d6:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:98


    .ifdef flushflash
      bl flushflash
 80037d8:	f7fe fda8 	bl	800232c <Code_499>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:101
    .endif

    pop {pc}
 80037dc:	bd00      	pop	{pc}

080037de <smudge_ram>:
smudge_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:106

  @ -----------------------------------------------------------------------------
  @ Smudge for RAM
smudge_ram:
  bl align4komma @ Align on 4 to fullfill ANS requirement.
 80037de:	f000 f83a 	bl	8003856 <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:108

  pushdatos
 80037e2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:109
  ldr tos, =Flag_visible
 80037e6:	f04f 0600 	mov.w	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:111

  b.n setflags_intern
 80037ea:	e008      	b.n	80037fe <setflags_intern>

080037ec <Dictionary_863>:
Dictionary_863():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:111
 80037ec:	08003834 	.word	0x08003834
 80037f0:	73080000 	.word	0x73080000
 80037f4:	6c667465 	.word	0x6c667465
 80037f8:	6761      	.short	0x6761
 80037fa:	73          	.byte	0x73
	...

080037fc <Code_863>:
setflags():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:118
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "setflags" @ ( x -- )
setflags: @ Setflags collects the Flags if compiling for Flash, because we can write Flash field only once.
          @ For RAM, the bits are simply set directly.
@ -----------------------------------------------------------------------------
  push {lr}
 80037fc:	b500      	push	{lr}

080037fe <setflags_intern>:
setflags_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:121

setflags_intern:
  ldr r0, =Dictionarypointer
 80037fe:	48cf      	ldr	r0, [pc, #828]	; (8003b3c <Code_911+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:122
  ldr r1, [r0]
 8003800:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:124

  ldr r2, =Backlinkgrenze
 8003802:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:125
  cmp r1, r2
 8003806:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:129
.ifdef above_ram
  blo.n setflags_ram @ Befinde mich im Ram. Schalte um !
.else
  bhs.n setflags_ram @ Befinde mich im Ram. Schalte um !
 8003808:	d205      	bcs.n	8003816 <setflags_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:134
.endif

  @ -----------------------------------------------------------------------------
  @ Setflags for Flash
  ldr r0, =FlashFlags
 800380a:	48cd      	ldr	r0, [pc, #820]	; (8003b40 <Code_911+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:135
  ldr r1, [r0]
 800380c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:136
  orrs r1, tos  @ Flashflags beginnt von create aus immer mit "Sichtbar" = 0.
 800380e:	4331      	orrs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:137
  str r1, [r0]
 8003810:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:138
  drop
 8003812:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:139
  pop {pc}
 8003814:	bd00      	pop	{pc}

08003816 <setflags_ram>:
setflags_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:146
  @ -----------------------------------------------------------------------------
  @ Setflags for RAM
setflags_ram:

  @ Eigentlich ganz einfach im Ram:
  popda r2
 8003816:	0032      	movs	r2, r6
 8003818:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:148
  @ Hole die Flags des aktuellen Wortes   Fetch flags of current definition
  ldr r0, =Fadenende @ Current definition
 800381a:	48ca      	ldr	r0, [pc, #808]	; (8003b44 <Code_911+0x1c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:149
  ldr r0, [r0]
 800381c:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:150
  adds r0, #4 @ Skip Link field
 800381e:	3004      	adds	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:152

  ldrh r1, [r0] @ Flags des zuletzt definierten Wortes holen  Fetch its Flags
 8003820:	8801      	ldrh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:153
  ldr r3, =0xFFFF
 8003822:	f64f 73ff 	movw	r3, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:154
  cmp r1, r3
 8003826:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:156

  bne 1f
 8003828:	d101      	bne.n	800382e <setflags_ram+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:157
  movs r1, r2 @ Direkt setzen, falls an der Stelle noch -1 steht  Set directly, if there are no Flags before
 800382a:	0011      	movs	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:158
  b 2f
 800382c:	e000      	b.n	8003830 <setflags_ram+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:159
1:orrs r1, r2 @ Hinzuverodern, falls schon Flags da sind          If there already are Flags, OR them together.
 800382e:	4311      	orrs	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:162
2:

  strh r1, [r0]
 8003830:	8001      	strh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:163
  pop {pc}
 8003832:	bd00      	pop	{pc}

08003834 <Dictionary_866>:
Dictionary_866():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:163
 8003834:	0800384a 	.word	0x0800384a
 8003838:	61070041 	.word	0x61070041
 800383c:	6e67696c 	.word	0x6e67696c
 8003840:	6465      	.short	0x6465

08003842 <Code_866>:
Code_866():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:168

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_1, "aligned" @ ( c-addr -- a-addr )
@ -----------------------------------------------------------------------------
  adds r6, #3
 8003842:	3603      	adds	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:169
  movs r0, #3
 8003844:	2003      	movs	r0, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:170
  bics r6, r0
 8003846:	4386      	bics	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:171
  bx lr
 8003848:	4770      	bx	lr

0800384a <Dictionary_867>:
Dictionary_867():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:171
 800384a:	3870      	.short	0x3870
 800384c:	00000800 	.word	0x00000800
 8003850:	696c6105 	.word	0x696c6105
 8003854:	6e67      	.short	0x6e67

08003856 <Code_867>:
align4komma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:200

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "align" @ ( -- )
align4komma: @ Macht den Dictionarypointer auf 4 gerade
@ -----------------------------------------------------------------------------
  push {lr}
 8003856:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:206

  .ifdef charkommaavailable
  bl alignkomma
  .endif

  ldr r0, =Dictionarypointer
 8003858:	48b8      	ldr	r0, [pc, #736]	; (8003b3c <Code_911+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:207
  ldr r1, [r0] @ Hole den Dictionarypointer
 800385a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:209

  movs r0, #2
 800385c:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:210
  ands r1, r0
 800385e:	4001      	ands	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:212

  beq 1f
 8003860:	d005      	beq.n	800386e <Code_867+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:214

    pushdatos
 8003862:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:215
    ldr tos, =writtenhalfword
 8003866:	f04f 0600 	mov.w	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:216
    bl hkomma
 800386a:	f000 f825 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:219

1: @ Fertig.
  pop {pc}
 800386e:	bd00      	pop	{pc}

08003870 <Dictionary_869>:
Dictionary_869():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:219
 8003870:	080038ae 	.word	0x080038ae
 8003874:	61080000 	.word	0x61080000
 8003878:	6e67696c 	.word	0x6e67696c
 800387c:	3233      	.short	0x3233
 800387e:	2c          	.byte	0x2c
	...

08003880 <Code_869>:
align32komma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:271
  .ifdef flash32bytesblockwrite
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "align32," @ ( -- )
align32komma: @ Macht den Dictionarypointer auf 16 gerade
@ -----------------------------------------------------------------------------
  push {lr}
 8003880:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:273

1:ldr r0, =Dictionarypointer
 8003882:	48ae      	ldr	r0, [pc, #696]	; (8003b3c <Code_911+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:274
  ldr r1, [r0] @ Hole den Dictionarypointer
 8003884:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:276

  movs r0, #31
 8003886:	201f      	movs	r0, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:277
  ands r1, r0
 8003888:	4001      	ands	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:278
  beq 2f
 800388a:	d006      	beq.n	800389a <Code_869+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:280

    pushdatos
 800388c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:281
    ldr tos, =writtenhalfword
 8003890:	f04f 0600 	mov.w	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:282
    bl hkomma
 8003894:	f000 f810 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:283
    b 1b
 8003898:	e7f3      	b.n	8003882 <Code_869+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:285

2:pop {pc}
 800389a:	bd00      	pop	{pc}

0800389c <nop_hkomma>:
nop_hkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:322
  bl allot
  pop {pc}
  .endif

nop_hkomma:
  pushdaconst 0x0036  @ nop = movs tos, tos
 800389c:	f847 6d04 	str.w	r6, [r7, #-4]!
 80038a0:	2636      	movs	r6, #54	; 0x36
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:323
  b.n hkomma
 80038a2:	e009      	b.n	80038b8 <Code_875>

080038a4 <drop_hkomma>:
drop_hkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:326

drop_hkomma:
  pushdaconstw 0xcf40  @ Opcode for ldmia r7!, {r6} --> drop
 80038a4:	f847 6d04 	str.w	r6, [r7, #-4]!
 80038a8:	f64c 7640 	movw	r6, #53056	; 0xcf40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:327
  b.n hkomma
 80038ac:	e004      	b.n	80038b8 <Code_875>

080038ae <Dictionary_875>:
Dictionary_875():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:327
 80038ae:	38f4      	.short	0x38f4
 80038b0:	00000800 	.word	0x00000800
 80038b4:	6802      	.short	0x6802
 80038b6:	2c          	.byte	0x2c
	...

080038b8 <Code_875>:
hkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:333

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "h," @ ( x -- )
hkomma: @ Fügt 16 Bits an das Dictionary an.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 80038b8:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:334
  uxth tos, tos @ Mask low 16 Bits, just in case.
 80038ba:	b2b6      	uxth	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:341
  @ dup
  @ bl hexdot

  .ifdef registerallocator
    @ Schon geschriebene Opcodes zählen !
    ldr r0, =state
 80038bc:	48a2      	ldr	r0, [pc, #648]	; (8003b48 <Code_911+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:342
    ldr r1, [r0]
 80038be:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:343
    cmp r1, #0        @ Nicht aus dem Execute-Zustand herausschalten
 80038c0:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:344
    beq 1f
 80038c2:	d002      	beq.n	80038ca <Code_875+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:345
    adds r1, #1
 80038c4:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:346
    beq 1f            @ Das normale True-Flag nicht erhöhen :-)
 80038c6:	d000      	beq.n	80038ca <Code_875+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:347
      str r1, [r0]
 80038c8:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:351
1:
  .endif

  ldr r0, =Dictionarypointer @ Fetch Dictionarypointer to decide if compiling for RAM or for Flash
 80038ca:	489c      	ldr	r0, [pc, #624]	; (8003b3c <Code_911+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:352
  ldr r1, [r0] @ Hole den Dictionarypointer
 80038cc:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:357
  .ifdef within_os
  push {r1}                  @ Remember Dictionarypointer for cacheflush
  .endif

  ldr r2, =Backlinkgrenze
 80038ce:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:358
  cmp r1, r2
 80038d2:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:362
.ifdef above_ram
  blo.n hkomma_ram @ Befinde mich im Ram. Schalte um !
.else
  bhs.n hkomma_ram @ Befinde mich im Ram. Schalte um !
 80038d4:	d205      	bcs.n	80038e2 <hkomma_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:366
.endif

  @ hkomma for Flash:
  pushda r1 @ Adresse auch auf den Stack  Put target address on datastack, too !
 80038d6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80038da:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:367
  bl h_flashkomma
 80038dc:	f7fe fcad 	bl	800223a <Code_493>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:369

  b.n hkomma_fertig
 80038e0:	e002      	b.n	80038e8 <hkomma_fertig>

080038e2 <hkomma_ram>:
hkomma_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:372

hkomma_ram: @ Simply write directly if compiling for RAM.
  popda r2 @ Inhalt holen
 80038e2:	0032      	movs	r2, r6
 80038e4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:373
  strh r2, [r1] @ Schreibe das Halbword in das Dictionary
 80038e6:	800a      	strh	r2, [r1, #0]

080038e8 <hkomma_fertig>:
hkomma_fertig():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:376

hkomma_fertig:
  pushdaconst 2
 80038e8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80038ec:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:377
  bl allot
 80038ee:	f000 f851 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:386
  pop {r6}
  pushdaconst 2 @ push length of area to be flushed
  bl cacheflush
  .endif

  pop {r0, r1, r2, r3, pc}
 80038f2:	bd0f      	pop	{r0, r1, r2, r3, pc}

080038f4 <Dictionary_881>:
Dictionary_881():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:386
 80038f4:	0800390e 	.word	0x0800390e
 80038f8:	2c010000 	.word	0x2c010000

080038fc <Code_881>:
Code_881():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:393

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "," @ ( x -- )
komma: @ Fügt 32 Bits an das Dictionary an  Write 32 bits in Dictionary using 16 bit write access only.
@ -----------------------------------------------------------------------------
  push {r0, lr}
 80038fc:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:394
1:dup
 80038fe:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:395
  bl hkomma @ Low-Teil zuerst - Little Endian ! Außerdem stimmen so die Linkfelder.
 8003902:	f7ff ffd9 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:397

  lsrs tos, #16 @ High-Teil danach
 8003906:	0c36      	lsrs	r6, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:398
  bl hkomma
 8003908:	f7ff ffd6 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:399
  pop {r0, pc}
 800390c:	bd01      	pop	{r0, pc}

0800390e <Dictionary_884>:
Dictionary_884():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:399
 800390e:	3920      	.short	0x3920
 8003910:	00000800 	.word	0x00000800
 8003914:	2c3c3e03 	.word	0x2c3c3e03

08003918 <Code_884>:
reversekomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:405

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "><," @ ( x -- )
reversekomma: @ Fügt 32 Bits an das Dictionary an   Write 32 bits in Dictionary using 16 bit write access only, but reverse high and low order before.
@ -----------------------------------------------------------------------------
  push {r0, lr}
 8003918:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:406
  movs r0, #16
 800391a:	2010      	movs	r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:407
  rors r6, r0  @ Swap halfwords
 800391c:	41c6      	rors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:408
  b 1b
 800391e:	e7ee      	b.n	80038fe <Code_881+0x2>

08003920 <Dictionary_885>:
Dictionary_885():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:408
 8003920:	08003988 	.word	0x08003988
 8003924:	73070000 	.word	0x73070000
 8003928:	6e697274 	.word	0x6e697274
 800392c:	2c67      	.short	0x2c67

0800392e <Code_885>:
stringkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:414

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "string," @ ( c-addr length -- )
stringkomma: @ Fügt ein String an das Dictionary an  Write a string in Dictionary.
@ -----------------------------------------------------------------------------
   push {r0, r1, r2, lr}
 800392e:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:422
   @ write "string, : >"
   @ ddup
   @ bl stype
   @ writeln "<"

   movs r1, #0xFF @ Maximum counted string length
 8003930:	21ff      	movs	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:423
   ands r1, tos   @ Fetch string length
 8003932:	4031      	ands	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:424
   drop
 8003934:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:425
   popda r0 @ Fetch string address
 8003936:	0030      	movs	r0, r6
 8003938:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:427

   cmp r1, #0 @ Zero length string ?
 800393a:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:428
   bne 1f
 800393c:	d105      	bne.n	800394a <Code_885+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:430

     pushdaconst 0
 800393e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003942:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:431
     bl hkomma
 8003944:	f7ff ffb8 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:432
     pop {r0, r1, r2, pc}
 8003948:	bd07      	pop	{r0, r1, r2, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:435

1: @ Write length byte and the first character.
   pushdatos
 800394a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:436
   ldrb tos, [r0]
 800394e:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:437
   lsls tos, #8
 8003950:	0236      	lsls	r6, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:438
   orrs tos, r1
 8003952:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:439
   bl hkomma
 8003954:	f7ff ffb0 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:440
   adds r0, #1 @ Advance pointer
 8003958:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:441
   subs r1, #1 @ One character less left
 800395a:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:443

2: cmp r1, #2 @ Two or more characters left ?
 800395c:	2902      	cmp	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:444
   blo 3f
 800395e:	d30a      	bcc.n	8003976 <Code_885+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:446
   @ Write two characters.
   pushdatos
 8003960:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:447
   ldrb tos, [r0, #1]
 8003964:	7846      	ldrb	r6, [r0, #1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:448
   lsls tos, #8
 8003966:	0236      	lsls	r6, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:449
   ldrb r2, [r0]
 8003968:	7802      	ldrb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:450
   orrs tos, r2
 800396a:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:451
   bl hkomma
 800396c:	f7ff ffa4 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:452
   adds r0, #2 @ Advance pointer
 8003970:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:453
   subs r1, #2 @ One character less left
 8003972:	3902      	subs	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:454
   b 2b
 8003974:	e7f2      	b.n	800395c <Code_885+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:457

3: @ One or zero characters left.
   cmp r1, #0
 8003976:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:458
   bne 4f
 8003978:	d100      	bne.n	800397c <Code_885+0x4e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:459
     pop {r0, r1, r2, pc}
 800397a:	bd07      	pop	{r0, r1, r2, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:462

4: @ One character left
   pushdatos
 800397c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:463
   ldrb tos, [r0]
 8003980:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:464
   bl hkomma
 8003982:	f7ff ff99 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:465
   pop {r0, r1, r2, pc}
 8003986:	bd07      	pop	{r0, r1, r2, pc}

08003988 <Dictionary_893>:
Dictionary_893():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:465
 8003988:	080039e6 	.word	0x080039e6
 800398c:	61050000 	.word	0x61050000
 8003990:	746f6c6c 	.word	0x746f6c6c

08003994 <Code_893>:
allot():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:472
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "allot" @ Erhöht den Dictionaryzeiger, schafft Platz !  Advance Dictionarypointer and check if there is enough space left for the requested amount.
allot:  @ Überprüft auch gleich, ob ich mich noch im Ram befinde.
        @ Ansonsten verweigtert Allot seinen Dienst.
@------------------------------------------------------------------------------
  ldr r0, =Dictionarypointer
 8003994:	4869      	ldr	r0, [pc, #420]	; (8003b3c <Code_911+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:473
  ldr r1, [r0]
 8003996:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:475

  ldr r2, =Backlinkgrenze
 8003998:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:476
  cmp r1, r2
 800399c:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:480
.ifdef above_ram
  blo.n allot_ram @ Befinde mich im Ram. Schalte um !
.else
  bhs.n allot_ram @ Befinde mich im Ram. Schalte um !
 800399e:	d210      	bcs.n	80039c2 <allot_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:484
.endif

  @ Allot-Flash:
  popda r2    @ Gewünschte Länge
 80039a0:	0032      	movs	r2, r6
 80039a2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:485
  adds r1, r2  @ Pointer vorrücken
 80039a4:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:487

  ldr r2, =FlashDictionaryEnde
 80039a6:	f04f 6201 	mov.w	r2, #135266304	; 0x8100000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:489

  cmp r1, r2
 80039aa:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:490
  blo.n allot_ok
 80039ac:	d319      	bcc.n	80039e2 <allot_ok>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:491
    Fehler_Quit "Flash full"
 80039ae:	f7ff f9fb 	bl	8002da8 <dotgaensefuesschen>
 80039b2:	460b      	.short	0x460b
 80039b4:	6873616c 	.word	0x6873616c
 80039b8:	6c756620 	.word	0x6c756620
 80039bc:	0a6c      	.short	0x0a6c
 80039be:	f001 ba0d 	b.w	8004ddc <Code_1258>

080039c2 <allot_ram>:
allot_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:495

  @ Allot-Ram:
allot_ram:
  popda r2    @ Gewünschte Länge
 80039c2:	0032      	movs	r2, r6
 80039c4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:496
  adds r1, r2  @ Pointer vorrücken
 80039c6:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:499

@ ldr r2, =RamDictionaryEnde
  ldr r2, =VariablenPointer  @ Am Ende des RAMs liegen die Variablen. Diese sind die Ram-Voll-Grenze...
 80039c8:	4a60      	ldr	r2, [pc, #384]	; (8003b4c <Code_911+0x24>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:500
  ldr r2, [r2]               @ There are variables defined in Flash at the end of RAM. Don't overwrite them !
 80039ca:	6812      	ldr	r2, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:502

  cmp r1, r2
 80039cc:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:503
  blo.n allot_ok
 80039ce:	d308      	bcc.n	80039e2 <allot_ok>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:504
    Fehler_Quit "Ram full"
 80039d0:	f7ff f9ea 	bl	8002da8 <dotgaensefuesschen>
 80039d4:	6d615209 	.word	0x6d615209
 80039d8:	6c756620 	.word	0x6c756620
 80039dc:	0a6c      	.short	0x0a6c
 80039de:	f001 b9fd 	b.w	8004ddc <Code_1258>

080039e2 <allot_ok>:
allot_ok():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:507

allot_ok: @ Alles paletti, es ist noch Platz da !  Everything is fine, just allot it !
  str r1, [r0]
 80039e2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:508
  bx lr
 80039e4:	4770      	bx	lr

080039e6 <Dictionary_898>:
Dictionary_898():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:508
 80039e6:	3a02      	.short	0x3a02
 80039e8:	00810800 	.word	0x00810800
 80039ec:	616c2808 	.word	0x616c2808
 80039f0:	74736574 	.word	0x74736574
 80039f4:	29          	.byte	0x29
	...

080039f6 <Code_898>:
Code_898():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:514

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "(latest)" @ ( -- addr )
  CoreVariable Fadenende
@ -----------------------------------------------------------------------------
  pushdatos
 80039f6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:515
  ldr r6, =Fadenende
 80039fa:	4e55      	ldr	r6, [pc, #340]	; (8003b50 <Code_911+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:516
  bx lr
 80039fc:	4770      	bx	lr
 80039fe:	01e4      	.short	0x01e4
 8003a00:	0800      	.short	0x0800

08003a02 <Dictionary_901>:
Dictionary_901():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:516
 8003a02:	3a1a      	.short	0x3a1a
 8003a04:	00810800 	.word	0x00810800
 8003a08:	70642804 	.word	0x70642804
 8003a0c:	29          	.byte	0x29
	...

08003a0e <Code_901>:
Code_901():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:523

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "(dp)" @ ( -- addr )
  CoreVariable Dictionarypointer
@ -----------------------------------------------------------------------------
  pushdatos
 8003a0e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:524
  ldr r6, =Dictionarypointer
 8003a12:	4e50      	ldr	r6, [pc, #320]	; (8003b54 <Code_911+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:525
  bx lr
 8003a14:	4770      	bx	lr
 8003a16:	0808      	.short	0x0808
 8003a18:	2400      	.short	0x2400

08003a1a <Dictionary_904>:
Dictionary_904():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:525
 8003a1a:	3a3e      	.short	0x3a3e
 8003a1c:	00000800 	.word	0x00000800
 8003a20:	726f6609 	.word	0x726f6609
 8003a24:	72746567 	.word	0x72746567
 8003a28:	6d61      	.short	0x6d61

08003a2a <Code_904>:
Code_904():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:535
@ A small check takes care of the case if you are already in the memory you request.

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "forgetram"
@ -----------------------------------------------------------------------------
  push {lr}
 8003a2a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:536
  bl compiletoram
 8003a2c:	f000 f825 	bl	8003a7a <Code_907>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:539
    @ Dictionarypointer ins RAM setzen
    @ Set dictionary pointer into RAM first
    ldr r0, =Dictionarypointer
 8003a30:	4848      	ldr	r0, [pc, #288]	; (8003b54 <Code_911+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:540
    ldr r1, =RamDictionaryAnfang
 8003a32:	4949      	ldr	r1, [pc, #292]	; (8003b58 <Code_911+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:541
    str r1, [r0]
 8003a34:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:545

    @ Fadenende fürs RAM vorbereiten
    @ Set latest for RAM
    ldr r0, =Fadenende
 8003a36:	4846      	ldr	r0, [pc, #280]	; (8003b50 <Code_911+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:546
    ldr r1, =CoreDictionaryAnfang
 8003a38:	4948      	ldr	r1, [pc, #288]	; (8003b5c <Code_911+0x34>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:547
    str r1, [r0]
 8003a3a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:548
  pop {pc}
 8003a3c:	bd00      	pop	{pc}

08003a3e <Dictionary_905>:
Dictionary_905():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:548
 8003a3e:	3a66      	.short	0x3a66
 8003a40:	00000800 	.word	0x00000800
 8003a44:	6d6f630d 	.word	0x6d6f630d
 8003a48:	656c6970 	.word	0x656c6970
 8003a4c:	61726f74 	.word	0x61726f74
 8003a50:	3f6d      	.short	0x3f6d

08003a52 <Code_905>:
Code_905():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:553

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compiletoram?"
@ -----------------------------------------------------------------------------
  pushdatos
 8003a52:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:556

  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
 8003a56:	483f      	ldr	r0, [pc, #252]	; (8003b54 <Code_911+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:557
  ldr r0, [r0]
 8003a58:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:559

  ldr r1, =Backlinkgrenze
 8003a5a:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:560
  cmp r0, r1
 8003a5e:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:562

  sbcs tos, tos
 8003a60:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:565

  .ifndef above_ram
    mvns tos, tos
 8003a62:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:568
  .endif

  bx lr
 8003a64:	4770      	bx	lr

08003a66 <Dictionary_907>:
Dictionary_907():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:568
 8003a66:	3a88      	.short	0x3a88
 8003a68:	00000800 	.word	0x00000800
 8003a6c:	6d6f630c 	.word	0x6d6f630c
 8003a70:	656c6970 	.word	0x656c6970
 8003a74:	61726f74 	.word	0x61726f74
 8003a78:	6d          	.byte	0x6d
	...

08003a7a <Code_907>:
compiletoram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:575
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compiletoram"
compiletoram:
@ -----------------------------------------------------------------------------
  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
 8003a7a:	4836      	ldr	r0, [pc, #216]	; (8003b54 <Code_911+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:576
  ldr r0, [r0]
 8003a7c:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:578

  ldr r1, =Backlinkgrenze
 8003a7e:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:579
  cmp r0, r1
 8003a82:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:583
.ifdef above_ram
  bhs.n Zweitpointertausch @ Befinde mich im Flash. Schalte um !
.else
  blo.n Zweitpointertausch @ Befinde mich im Flash. Schalte um !
 8003a84:	d312      	bcc.n	8003aac <Zweitpointertausch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:585
.endif
  bx lr
 8003a86:	4770      	bx	lr

08003a88 <Dictionary_908>:
Dictionary_908():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:585
 8003a88:	08003afa 	.word	0x08003afa
 8003a8c:	630e0000 	.word	0x630e0000
 8003a90:	69706d6f 	.word	0x69706d6f
 8003a94:	6f74656c 	.word	0x6f74656c
 8003a98:	73616c66 	.word	0x73616c66
 8003a9c:	68          	.byte	0x68
	...

08003a9e <Code_908>:
Code_908():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:592
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compiletoflash"
compiletoflash:
@ -----------------------------------------------------------------------------
  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
 8003a9e:	482d      	ldr	r0, [pc, #180]	; (8003b54 <Code_911+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:593
  ldr r0, [r0]
 8003aa0:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:595

  ldr r1, =Backlinkgrenze
 8003aa2:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:596
  cmp r0, r1
 8003aa6:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:600
.ifdef above_ram
  blo.n Zweitpointertausch @ Befinde mich im Ram. Schalte um !
.else
  bhs.n Zweitpointertausch @ Befinde mich im Ram. Schalte um !
 8003aa8:	d200      	bcs.n	8003aac <Zweitpointertausch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:602
.endif
  bx lr
 8003aaa:	4770      	bx	lr

08003aac <Zweitpointertausch>:
Zweitpointertausch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:606


Zweitpointertausch:
  ldr r0, =Fadenende
 8003aac:	4828      	ldr	r0, [pc, #160]	; (8003b50 <Code_911+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:607
  ldr r1, =ZweitFadenende
 8003aae:	492c      	ldr	r1, [pc, #176]	; (8003b60 <Code_911+0x38>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:608
  ldr r2, [r0]
 8003ab0:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:609
  ldr r3, [r1]
 8003ab2:	680b      	ldr	r3, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:610
  str r2, [r1]
 8003ab4:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:611
  str r3, [r0]
 8003ab6:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:613

  ldr r0, =Dictionarypointer
 8003ab8:	4826      	ldr	r0, [pc, #152]	; (8003b54 <Code_911+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:614
  ldr r1, =ZweitDictionaryPointer
 8003aba:	492a      	ldr	r1, [pc, #168]	; (8003b64 <Code_911+0x3c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:615
  ldr r2, [r0]
 8003abc:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:616
  ldr r3, [r1]
 8003abe:	680b      	ldr	r3, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:617
  str r2, [r1]
 8003ac0:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:618
  str r3, [r0]
 8003ac2:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:626
  @ Der muss immer unterhalb des VariablenPointers sein !
  @ Compare Dictionarypointer to Variablepointer and give warning if they collide.
  @ That happens if your already have a lot of definitions in RAM,
  @ then define a lot of variables in Flash and then switch back for compiling to RAM.

  ldr r0, =VariablenPointer
 8003ac4:	4821      	ldr	r0, [pc, #132]	; (8003b4c <Code_911+0x24>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:627
  ldr r0, [r0]
 8003ac6:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:628
  cmp r3, r0
 8003ac8:	4283      	cmp	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:629
  blo 1f
 8003aca:	d315      	bcc.n	8003af8 <Zweitpointertausch+0x4c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:636
  @ Falls der Flash über dem RAM liegt wird immer ein DictionaryPointer über dem VariablenPointer sein.
  @ If the flash is above the RAM one of the dictionary pointers will always be above than the VariablePointer.
  cmp r2, r0
  blo 1f
.endif
   push {lr}
 8003acc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:637
   writeln " Variables collide with dictionary"
 8003ace:	f7ff f96b 	bl	8002da8 <dotgaensefuesschen>
 8003ad2:	2023      	.short	0x2023
 8003ad4:	69726156 	.word	0x69726156
 8003ad8:	656c6261 	.word	0x656c6261
 8003adc:	6f632073 	.word	0x6f632073
 8003ae0:	64696c6c 	.word	0x64696c6c
 8003ae4:	69772065 	.word	0x69772065
 8003ae8:	64206874 	.word	0x64206874
 8003aec:	69746369 	.word	0x69746369
 8003af0:	72616e6f 	.word	0x72616e6f
 8003af4:	0a79      	.short	0x0a79
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:638
   pop {pc}
 8003af6:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:640

1:bx lr
 8003af8:	4770      	bx	lr

08003afa <Dictionary_910>:
Dictionary_910():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:640
 8003afa:	3b16      	.short	0x3b16
 8003afc:	00000800 	.word	0x00000800
 8003b00:	6464610c 	.word	0x6464610c
 8003b04:	666e6972 	.word	0x666e6972
 8003b08:	6873616c 	.word	0x6873616c
 8003b0c:	3f          	.byte	0x3f
	...

08003b0e <Code_910>:
Code_910():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:645

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "addrinflash?" @ ( a-addr -- a-addr ) Permanent memory there ?
@ -----------------------------------------------------------------------------
  ldr r0, =CoreDictionaryAnfang
 8003b0e:	4813      	ldr	r0, [pc, #76]	; (8003b5c <Code_911+0x34>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:646
  ldr r1, =FlashDictionaryEnde
 8003b10:	f04f 6101 	mov.w	r1, #135266304	; 0x8100000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:647
  b.n 1f
 8003b14:	e00b      	b.n	8003b2e <Code_911+0x6>

08003b16 <Dictionary_911>:
Dictionary_911():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:647
 8003b16:	3b6c      	.short	0x3b6c
 8003b18:	00000800 	.word	0x00000800
 8003b1c:	6464610a 	.word	0x6464610a
 8003b20:	726e6972 	.word	0x726e6972
 8003b24:	6d61      	.short	0x6d61
 8003b26:	3f          	.byte	0x3f
	...

08003b28 <Code_911>:
Code_911():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:652

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "addrinram?" @ ( a-addr -- a-addr ) Volatile memory there ?
@ -----------------------------------------------------------------------------
  ldr r0, =RamAnfang
 8003b28:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:653
  ldr r1, =RamEnde
 8003b2c:	490e      	ldr	r1, [pc, #56]	; (8003b68 <Code_911+0x40>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:655

1:cmp tos, r0
 8003b2e:	4286      	cmp	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:656
  blo 2f
 8003b30:	d302      	bcc.n	8003b38 <Code_911+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:657
  cmp tos, r1
 8003b32:	428e      	cmp	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:658
    sbcs tos, tos
 8003b34:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:659
    bx lr
 8003b36:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:661

2:movs r6, 0
 8003b38:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:662
  bx lr
 8003b3a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:30
  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
 8003b3c:	2407ffd0 	.word	0x2407ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:79
    ldr r0, =FlashFlags
 8003b40:	24000018 	.word	0x24000018
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:83
    ldr r1, =Fadenende
 8003b44:	2407ffd4 	.word	0x2407ffd4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:341
    ldr r0, =state
 8003b48:	2407ffd8 	.word	0x2407ffd8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:499
  ldr r2, =VariablenPointer  @ Am Ende des RAMs liegen die Variablen. Diese sind die Ram-Voll-Grenze...
 8003b4c:	2400001c 	.word	0x2400001c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:515
  ldr r6, =Fadenende
 8003b50:	2407ffd4 	.word	0x2407ffd4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:524
  ldr r6, =Dictionarypointer
 8003b54:	2407ffd0 	.word	0x2407ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:540
    ldr r1, =RamDictionaryAnfang
 8003b58:	24000808 	.word	0x24000808
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:546
    ldr r1, =CoreDictionaryAnfang
 8003b5c:	080001e4 	.word	0x080001e4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:607
  ldr r1, =ZweitFadenende
 8003b60:	24000014 	.word	0x24000014
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:614
  ldr r1, =ZweitDictionaryPointer
 8003b64:	24000010 	.word	0x24000010
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:653
  ldr r1, =RamEnde
 8003b68:	24080000 	.word	0x24080000

08003b6c <Dictionary_912>:
Dictionary_912():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:653
 8003b6c:	08003c70 	.word	0x08003c70
 8003b70:	28080000 	.word	0x28080000
 8003b74:	61657263 	.word	0x61657263
 8003b78:	6574      	.short	0x6574
 8003b7a:	29          	.byte	0x29
	...

08003b7c <Code_912>:
create():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:674
        @ erstellt einen neuen Kopf im Dictionary und verlinkt ihn.
        @ Fetch new token from buffer, create a new dictionary header and take care of links.
        @ Links are very different for RAM and Flash !
        @ As we can write Flash only once, freshly created definitions have no code at all.
@ -----------------------------------------------------------------------------
  push {lr}
 8003b7c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:675
  bl token @ Hole den Namen der neuen Definition.  Fetch name for new definition.
 8003b7e:	f000 fdaf 	bl	80046e0 <Code_1129>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:678
  @ ( Tokenadresse Länge )

  cmp tos, #0     @ Check if token is empty. That happens if input buffer is empty after create.
 8003b82:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:679
  bne 1f
 8003b84:	d10e      	bne.n	8003ba4 <Code_912+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:681
    @ Token ist leer. Brauche Stacks nicht zu putzen.
    Fehler_Quit " Create needs name !"
 8003b86:	f7ff f90f 	bl	8002da8 <dotgaensefuesschen>
 8003b8a:	2015      	.short	0x2015
 8003b8c:	61657243 	.word	0x61657243
 8003b90:	6e206574 	.word	0x6e206574
 8003b94:	73646565 	.word	0x73646565
 8003b98:	6d616e20 	.word	0x6d616e20
 8003b9c:	0a212065 	.word	0x0a212065
 8003ba0:	f001 b91c 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:685

1:@ Tokenname ist okay.               Name is ok.
  @ Prüfe, ob er schon existiert.     Check if it already exists.
  ddup
 8003ba4:	6838      	ldr	r0, [r7, #0]
 8003ba6:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003baa:	3f04      	subs	r7, #4
 8003bac:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:687
  @ ( Tokenadresse Länge Tokenadresse Länge )
  bl find
 8003bae:	f000 f974 	bl	8003e9a <Code_961>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:689
  @ ( Tokenadresse Länge Einsprungadresse Flags )
  drop @ Benötige die Flags hier nicht. Möchte doch nur schauen, ob es das Wort schon gibt.  No need for the Flags...
 8003bb2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:693
  @ ( Tokenadresse Länge Einsprungadresse )

  @ Prüfe, ob die Suche erfolgreich gewesen ist.  Do we have a search result ?
  cmp tos, #0
 8003bb4:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:694
  drop
 8003bb6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:696
  @ ( Tokenadresse Länge )
  beq 2f
 8003bb8:	d011      	beq.n	8003bde <Code_912+0x62>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:697
    ddup
 8003bba:	6838      	ldr	r0, [r7, #0]
 8003bbc:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003bc0:	3f04      	subs	r7, #4
 8003bc2:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:707
    bl stype @ Den neuen Tokennamen nochmal ausgeben
    write ".\x1B[0m "

  .else

    write "Redefine "
 8003bc4:	f7ff f8f0 	bl	8002da8 <dotgaensefuesschen>
 8003bc8:	64655209 	.word	0x64655209
 8003bcc:	6e696665 	.word	0x6e696665
 8003bd0:	2065      	.short	0x2065
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:708
    bl stype @ Den neuen Tokennamen nochmal ausgeben
 8003bd2:	f7ff f93d 	bl	8002e50 <Code_701>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:709
    write ". "
 8003bd6:	f7ff f8e7 	bl	8002da8 <dotgaensefuesschen>
 8003bda:	2e02      	.short	0x2e02
 8003bdc:	20          	.byte	0x20
 8003bdd:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:716
  .endif


2:@ ( Tokenadresse Länge )

  bl align4komma
 8003bde:	f7ff fe3a 	bl	8003856 <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:719

  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
 8003be2:	4895      	ldr	r0, [pc, #596]	; (8003e38 <Code_956+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:720
  ldr r0, [r0]
 8003be4:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:722

  ldr r1, =Backlinkgrenze
 8003be6:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:723
  cmp r0, r1
 8003bea:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:727
.ifdef above_ram
  blo.n create_ram @ Befinde mich im Ram. Schalte um !
.else
  bhs.n create_ram @ Befinde mich im Ram. Schalte um !
 8003bec:	d227      	bcs.n	8003c3e <create_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:734

  @ -----------------------------------------------------------------------------
  @ Create for Flash
  @ ( Tokenadresse Länge )

  ldr r0, =FlashFlags
 8003bee:	4893      	ldr	r0, [pc, #588]	; (8003e3c <Code_956+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:735
  ldr r1, =Flag_visible
 8003bf0:	f04f 0100 	mov.w	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:736
  str r1, [r0]  @ Flags vorbereiten  Prepare Flags for collecting
 8003bf4:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:751
    pushdaconst 12  @ Es muss ein kompletter 16-Byte-Block für das Linkfeld reserviert werden
    bl allot        @ damit dies später noch nachträglich eingefügt werden kann.
  .endif

  .ifdef flash32bytesblockwrite
    bl align32komma @ Vorrücken auf die nächste passende Schreibstelle
 8003bf6:	f7ff fe43 	bl	8003880 <Code_869>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:752
    pushdaconst 28  @ Es muss ein kompletter 32-Byte-Block für das Linkfeld reserviert werden
 8003bfa:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003bfe:	261c      	movs	r6, #28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:753
    bl allot        @ damit dies später noch nachträglich eingefügt werden kann.
 8003c00:	f7ff fec8 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:756
  .endif

  bl here @ ( Tokenadresse Länge Neue-Linkadresse ) Das wird die neue Linkadresse
 8003c04:	f000 fa00 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:757
  pushdaconst 6 @ Lücke für die Flags und Link lassen  Leave space for Flags and Link - they are not known yet at this time.
 8003c08:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003c0c:	2606      	movs	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:758
  bl allot
 8003c0e:	f7ff fec1 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:760

  bl minusrot
 8003c12:	f7fd fa15 	bl	8001040 <Code_210>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:761
  bl stringkomma @ Den Namen einfügen  Insert Name
 8003c16:	f7ff fe8a 	bl	800392e <Code_885>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:768

  @ Jetzt den aktuellen Link an die passende Stelle im letzten Wort einfügen,
  @ falls dort FFFF FFFF steht:
  @ Insert Link to fresh definition into old latest if there is still -1 in its Link field:

  ldr r0, =Fadenende @ Hole das aktuelle Fadenende  Fetch old latest
 8003c1a:	4889      	ldr	r0, [pc, #548]	; (8003e40 <Code_956+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:769
  ldr r1, [r0]
 8003c1c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:771

  ldr r2, [r1] @ Inhalt des Link-Feldes holen  Check if Link is set
 8003c1e:	680a      	ldr	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:773

  ldr r3, =erasedword
 8003c20:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:774
  cmp r2, r3 @ Ist der Link ungesetzt ?      Isn't it ?
 8003c24:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:775
  bne 1f
 8003c26:	d107      	bne.n	8003c38 <Code_912+0xbc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:781

  @ Neuen Link einfügen: Im Prinzip str tos, [r1] über Komma.
  @ Insert new Link. This is str tos, [r1] rerouted over comma because Flash has to be written.
    @ Dictionary-Pointer verbiegen:
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
 8003c28:	4a83      	ldr	r2, [pc, #524]	; (8003e38 <Code_956+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:782
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren
 8003c2a:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:783
      str r1, [r2] @ Dictionarypointer umbiegen
 8003c2c:	6011      	str	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:784
      dup @ ( Neue-Linkadresse Neue-Linkadresse )
 8003c2e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:785
      bl komma     @ Link einfügen
 8003c32:	f7ff fe63 	bl	80038fc <Code_881>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:786
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen.
 8003c36:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:790

1:@ Backlink fertig gesetzt.  Finished Backlinking.
  @ Fadenende aktualisieren:  Set fresh latest.
  str tos, [r0] @ Neues-Fadenende in die Fadenende-Variable legen
 8003c38:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:791
  drop
 8003c3a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:793

  b.n create_ende
 8003c3c:	e013      	b.n	8003c66 <create_ende>

08003c3e <create_ram>:
create_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:799

  @ -----------------------------------------------------------------------------
  @ Create for RAM
create_ram:

  bl here @ ( Tokenadresse Länge Neue-Linkadresse ) Das wird die neue Linkadresse
 8003c3e:	f000 f9e3 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:802

  @ Link setzen  Write Link
  ldr r0, =Fadenende
 8003c42:	487f      	ldr	r0, [pc, #508]	; (8003e40 <Code_956+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:803
  pushdatos
 8003c44:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:804
  ldr tos, [r0] @ Das alte Fadenende hinein   Old latest
 8003c48:	6806      	ldr	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:805
  bl komma
 8003c4a:	f7ff fe57 	bl	80038fc <Code_881>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:808

  @ Flags setzen  Set initial Flags to Invisible.
  pushdatos
 8003c4e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:809
  ldr tos, =Flag_invisible
 8003c52:	f64f 76ff 	movw	r6, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:810
  bl hkomma
 8003c56:	f7ff fe2f 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:813

  @ Das Fadenende aktualisieren  Set new latest
  ldr r0, =Fadenende
 8003c5a:	4879      	ldr	r0, [pc, #484]	; (8003e40 <Code_956+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:814
  popda r1
 8003c5c:	0031      	movs	r1, r6
 8003c5e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:815
  str r1, [r0]
 8003c60:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:818

  @ Den Namen schreiben  Write Name
  bl stringkomma
 8003c62:	f7ff fe64 	bl	800392e <Code_885>

08003c66 <create_ende>:
create_ende():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:822


create_ende: @ Save code entry point of current definition for recurse and dodoes
  ldr r0, =Dictionarypointer
 8003c66:	4874      	ldr	r0, [pc, #464]	; (8003e38 <Code_956+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:823
  ldr r1, [r0]
 8003c68:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:824
  ldr r0, =Einsprungpunkt
 8003c6a:	4876      	ldr	r0, [pc, #472]	; (8003e44 <Code_956+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:825
  str r1, [r0]
 8003c6c:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:828

  @ Fertig :-)  Finished :-)
  pop {pc}
 8003c6e:	bd00      	pop	{pc}

08003c70 <Dictionary_932>:
Dictionary_932():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:828
 8003c70:	08003c88 	.word	0x08003c88
 8003c74:	76080000 	.word	0x76080000
 8003c78:	61697261 	.word	0x61697261
 8003c7c:	6c62      	.short	0x6c62
 8003c7e:	65          	.byte	0x65
	...

08003c80 <Code_932>:
Code_932():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:834


@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "variable" @ ( n -- )
@ -----------------------------------------------------------------------------
  pushdaconst 1
 8003c80:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003c84:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:835
  b.n nvariable
 8003c86:	e013      	b.n	8003cb0 <Code_938>

08003c88 <Dictionary_935>:
Dictionary_935():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:835
 8003c88:	08003ca0 	.word	0x08003ca0
 8003c8c:	32090000 	.word	0x32090000
 8003c90:	69726176 	.word	0x69726176
 8003c94:	656c6261 	.word	0x656c6261

08003c98 <Code_935>:
Code_935():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:840

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "2variable" @ ( d -- )
@ -----------------------------------------------------------------------------
  pushdaconst 2
 8003c98:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003c9c:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:841
  b.n nvariable
 8003c9e:	e007      	b.n	8003cb0 <Code_938>

08003ca0 <Dictionary_938>:
Dictionary_938():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:841
 8003ca0:	08003d12 	.word	0x08003d12
 8003ca4:	6e090000 	.word	0x6e090000
 8003ca8:	69726176 	.word	0x69726176
 8003cac:	656c6261 	.word	0x656c6261

08003cb0 <Code_938>:
nvariable():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:848
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "nvariable" @ ( Init-Values Length -- )
nvariable: @ Creates an initialised variable of given length.
@------------------------------------------------------------------------------

  push {lr}
 8003cb0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:849
  bl create
 8003cb2:	f7ff ff63 	bl	8003b7c <Code_912>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:851

  ldr r0, =Dictionarypointer
 8003cb6:	4860      	ldr	r0, [pc, #384]	; (8003e38 <Code_956+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:852
  ldr r1, [r0]
 8003cb8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:854

  ldr r2, =Backlinkgrenze
 8003cba:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:855
  cmp r1, r2
 8003cbe:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:859
.ifdef above_ram
  blo.n variable_ram @ Befinde mich im Ram. Schalte um !
.else
  bhs.n variable_ram @ Befinde mich im Ram. Schalte um !
 8003cc0:	d218      	bcs.n	8003cf4 <variable_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:879

      @ Eine echte Flash-Variable entsteht so, dass Platz im Ram angefordert wird.
      @ Prüfe hier, ob genug Ram da ist !?
      @ Maybe check in future if there is enough RAM left ?

  movs r0, #0x0F @ Maximum length for flash variables !
 8003cc2:	200f      	movs	r0, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:880
  ands tos, r0   @ Limit is important to not break Flags for catchflashpointers.
 8003cc4:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:884

  @ Variablenpointer erniedrigen und zurückschreiben   Decrement variable pointer

  lsls r2, tos, #2 @ Multiply number of elements with 4 to get byte count
 8003cc6:	00b2      	lsls	r2, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:885
  bl prepare_var_buf_flash
 8003cc8:	f000 f84c 	bl	8003d64 <prepare_var_buf_flash>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:891

  @ Amount of elements to write is in TOS.
  @ Write code and initialise elements.
  @ r1 is target location in RAM.

  popda r0   @ Fetch amount of cells
 8003ccc:	0030      	movs	r0, r6
 8003cce:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:892
  movs r2, r0 @ Save the value for generating flags for catchflashpointers later
 8003cd0:	0002      	movs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:893
  cmp r0, #0 @ If nvariable is called with length zero... Maybe this could be useful sometimes.
 8003cd2:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:894
  beq 2f
 8003cd4:	d005      	beq.n	8003ce2 <Code_938+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:896

1:str tos, [r1] @ Initialize RAM location
 8003cd6:	600e      	str	r6, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:897
  adds r1, #4
 8003cd8:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:898
  bl komma      @ Put initialisation value for catchflashpointers in place.
 8003cda:	f7ff fe0f 	bl	80038fc <Code_881>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:899
  subs r0, #1
 8003cde:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:900
  bne 1b
 8003ce0:	d1f9      	bne.n	8003cd6 <Code_938+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:904

2:@ Finished.

  pushdaconst Flag_ramallot & ~Flag_visible @ Finally (!) set Flags for RAM usage.
 8003ce2:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003ce6:	2680      	movs	r6, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:905
  orrs tos, r2               @ Or together with desired amount of cells.
 8003ce8:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:906
  bl setflags
 8003cea:	f7ff fd87 	bl	80037fc <Code_863>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:907
  bl smudge
 8003cee:	f7ff fd4e 	bl	800378e <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:908
  pop {pc}
 8003cf2:	bd00      	pop	{pc}

08003cf4 <variable_ram>:
variable_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:914

  @ -----------------------------------------------------------------------------
  @ Variable RAM
variable_ram:
  @ This is simple: Write code, write value, a classic Forth variable.
  bl prepare_var_buf_ram
 8003cf4:	f000 f850 	bl	8003d98 <prepare_var_buf_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:918

  @ Amount of elements to write is in TOS.

  popda r0   @ Fetch amount of cells
 8003cf8:	0030      	movs	r0, r6
 8003cfa:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:919
  cmp r0, #0 @ If nvariable is called with length zero... Maybe this could be useful sometimes.
 8003cfc:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:920
  beq.n finish_var_buf_ram
 8003cfe:	d003      	beq.n	8003d08 <finish_var_buf_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:922

1:bl komma
 8003d00:	f7ff fdfc 	bl	80038fc <Code_881>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:923
  subs r0, #1
 8003d04:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:924
  bne 1b
 8003d06:	d1fb      	bne.n	8003d00 <variable_ram+0xc>

08003d08 <finish_var_buf_ram>:
finish_var_buf_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:928

finish_var_buf_ram: @ Finished.

  bl setze_faltbarflag @ Variables and buffers always are 0-foldable as their address never changes.
 8003d08:	f7ff fc93 	bl	8003632 <Code_829>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:929
  bl smudge
 8003d0c:	f7ff fd3f 	bl	800378e <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:930
  pop {pc}
 8003d10:	bd00      	pop	{pc}

08003d12 <Dictionary_943>:
Dictionary_943():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:930
 8003d12:	3dcc      	.short	0x3dcc
 8003d14:	00000800 	.word	0x00000800
 8003d18:	66756207 	.word	0x66756207
 8003d1c:	3a726566 	.word	0x3a726566

08003d20 <Code_943>:
Code_943():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:938
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "buffer:" @ ( Length -- )
  @ Creates an uninitialised buffer of given bytes length.
@------------------------------------------------------------------------------

  push {lr}
 8003d20:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:939
  bl create
 8003d22:	f7ff ff2b 	bl	8003b7c <Code_912>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:942

  @ Round requested buffer length to next 4-Byte boundary to ensure alignment
  movs r0, #1
 8003d26:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:943
  ands r0, tos
 8003d28:	4030      	ands	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:944
  adds tos, r0
 8003d2a:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:946

  movs r0, #2
 8003d2c:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:947
  ands r0, tos
 8003d2e:	4030      	ands	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:948
  adds tos, r0
 8003d30:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:950

  ldr r0, =Dictionarypointer
 8003d32:	4841      	ldr	r0, [pc, #260]	; (8003e38 <Code_956+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:951
  ldr r1, [r0]
 8003d34:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:953

  ldr r2, =Backlinkgrenze
 8003d36:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:954
  cmp r1, r2
 8003d3a:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:958
.ifdef above_ram
  blo.n rambuffer_ram @ Befinde mich im Ram. Schalte um !
.else
  bhs.n rambuffer_ram @ Befinde mich im Ram. Schalte um !
 8003d3c:	d20d      	bcs.n	8003d5a <rambuffer_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:966
  @ -----------------------------------------------------------------------------
  @ Buffer Flash

  @ Variablenpointer erniedrigen und zurückschreiben   Decrement variable pointer

  movs r2, tos @ Number of bytes
 8003d3e:	0032      	movs	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:967
  bl prepare_var_buf_flash
 8003d40:	f000 f810 	bl	8003d64 <prepare_var_buf_flash>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:970

  @ Write desired size of buffer at the end of the definition
  bl komma
 8003d44:	f7ff fdda 	bl	80038fc <Code_881>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:973

  @ Finished
  pushdaconstw Flag_buffer_foldable  @ Finally (!) set Flags for buffer usage.
 8003d48:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003d4c:	f240 1640 	movw	r6, #320	; 0x140
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:974
  bl setflags
 8003d50:	f7ff fd54 	bl	80037fc <Code_863>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:975
  bl smudge
 8003d54:	f7ff fd1b 	bl	800378e <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:976
  pop {pc}
 8003d58:	bd00      	pop	{pc}

08003d5a <rambuffer_ram>:
rambuffer_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:982

  @ -----------------------------------------------------------------------------
  @ Buffer RAM
rambuffer_ram:
  @ This is simple: Write code, allot space, a classic Forth buffer.
  bl prepare_var_buf_ram
 8003d5a:	f000 f81d 	bl	8003d98 <prepare_var_buf_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:984

  bl allot @ Reserve space. Allot checks for itself if there is enough RAM left.
 8003d5e:	f7ff fe19 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:986

  b.n finish_var_buf_ram
 8003d62:	e7d1      	b.n	8003d08 <finish_var_buf_ram>

08003d64 <prepare_var_buf_flash>:
prepare_var_buf_flash():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:990

  @ -----------------------------------------------------------------------------
prepare_var_buf_flash:
  push {lr}
 8003d64:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:992

  ldr r0, =VariablenPointer
 8003d66:	4838      	ldr	r0, [pc, #224]	; (8003e48 <Code_956+0x36>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:993
  ldr r1, [r0]
 8003d68:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:994
  subs r1, r2  @ Ram voll ?  Maybe insert a check for enough RAM left ?
 8003d6a:	1a89      	subs	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:995
    ldr r2, =RamDictionaryAnfang
 8003d6c:	4a37      	ldr	r2, [pc, #220]	; (8003e4c <Code_956+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:996
    cmp r1, r2
 8003d6e:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:997
    bhs 1f
 8003d70:	d20b      	bcs.n	8003d8a <prepare_var_buf_flash+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:998
      Fehler_quit "Not enough RAM"
 8003d72:	f7ff f819 	bl	8002da8 <dotgaensefuesschen>
 8003d76:	4e0f      	.short	0x4e0f
 8003d78:	6520746f 	.word	0x6520746f
 8003d7c:	67756f6e 	.word	0x67756f6e
 8003d80:	41522068 	.word	0x41522068
 8003d84:	0a4d      	.short	0x0a4d
 8003d86:	f001 b829 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:999
1:str r1, [r0]
 8003d8a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1002

  @ Code schreiben:  Write code
  pushda r1
 8003d8c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003d90:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1003
  bl literalkomma    @ Adresse im Ram immer mit movt --> 12 Bytes
 8003d92:	f7ff fab3 	bl	80032fc <Code_767>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1004
  b.n bx_lr_komma    @ Opcode für bx lr --> 2 Bytes
 8003d96:	e012      	b.n	8003dbe <bx_lr_komma>

08003d98 <prepare_var_buf_ram>:
prepare_var_buf_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1008

  @ -----------------------------------------------------------------------------
prepare_var_buf_ram:
  push {lr}
 8003d98:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1011

    @ This is to align dictionary pointer to have variable locations that are always 4-even
    bl here
 8003d9a:	f000 f935 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1012
    movs r0, #2
 8003d9e:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1013
    ands tos, r0
 8003da0:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1014
    drop
 8003da2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1015
    bne 1f
 8003da4:	d101      	bne.n	8003daa <prepare_var_buf_ram+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1016
      bl nop_hkomma
 8003da6:	f7ff fd79 	bl	800389c <nop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1019
1:

  pushdatos
 8003daa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1020
  ldr tos, =0x3f04603e @ subs r7, #4    str r6, [r7, #0]
 8003dae:	4e28      	ldr	r6, [pc, #160]	; (8003e50 <Code_956+0x3e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1021
  bl reversekomma
 8003db0:	f7ff fdb2 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1022
  pushdatos
 8003db4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1023
  ldr tos, =0x467e3602 @ mov r6, pc     adds r6, #2
 8003db8:	4e26      	ldr	r6, [pc, #152]	; (8003e54 <Code_956+0x42>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1024
  bl reversekomma
 8003dba:	f7ff fdad 	bl	8003918 <Code_884>

08003dbe <bx_lr_komma>:
bx_lr_komma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1026
bx_lr_komma:
  pushdaconstw 0x4770  @ bx lr
 8003dbe:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003dc2:	f244 7670 	movw	r6, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1027
  bl hkomma
 8003dc6:	f7ff fd77 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1029

  pop {pc}
 8003dca:	bd00      	pop	{pc}

08003dcc <Dictionary_954>:
Dictionary_954():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1029
 8003dcc:	08003dfc 	.word	0x08003dfc
 8003dd0:	640f0000 	.word	0x640f0000
 8003dd4:	69746369 	.word	0x69746369
 8003dd8:	72616e6f 	.word	0x72616e6f
 8003ddc:	61747379 	.word	0x61747379
 8003de0:	7472      	.short	0x7472

08003de2 <Code_954>:
dictionarystart():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1041
                 @ Entry point for dictionary searches.
                 @ This is different for RAM and for Flash and it changes with new definitions.
@ -----------------------------------------------------------------------------

  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:  Are we compiling into RAM or into Flash ?
  ldr r0, =Dictionarypointer
 8003de2:	4815      	ldr	r0, [pc, #84]	; (8003e38 <Code_956+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1042
  ldr r0, [r0]
 8003de4:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1044

  ldr r1, =Backlinkgrenze
 8003de6:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1045
  pushdatos
 8003dea:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1046
  cmp r0, r1
 8003dee:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1050
.ifdef above_ram
  blo 1f
.else
  bhs 1f
 8003df0:	d201      	bcs.n	8003df6 <Code_954+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1052
.endif
  ldr tos, =CoreDictionaryAnfang @ Befinde mich im Flash mit Backlinks. Muss beim CoreDictionary anfangen:        In Flash: Start with core dictionary.
 8003df2:	4e19      	ldr	r6, [pc, #100]	; (8003e58 <Code_956+0x46>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1053
  bx lr
 8003df4:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1055

1:ldr tos, =Fadenende
 8003df6:	4e12      	ldr	r6, [pc, #72]	; (8003e40 <Code_956+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1056
  ldr tos, [tos]                   @ Oberhalb der Backlinkgrenze bin ich im Ram, kann mit dem Fadenende beginnen.   In RAM:   Start with latest definition.
 8003df8:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1057
  bx lr
 8003dfa:	4770      	bx	lr

08003dfc <Dictionary_956>:
Dictionary_956():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1057
 8003dfc:	08003e5c 	.word	0x08003e5c
 8003e00:	640e0000 	.word	0x640e0000
 8003e04:	69746369 	.word	0x69746369
 8003e08:	72616e6f 	.word	0x72616e6f
 8003e0c:	78656e79 	.word	0x78656e79
 8003e10:	74          	.byte	0x74
	...

08003e12 <Code_956>:
dictionarynext():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1089

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "dictionarynext" @ ( address -- address flag )
dictionarynext: @ Scans dictionary chain and returns true if end is reached.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
 8003e12:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1090
  ldr r1, [tos]
 8003e14:	6831      	ldr	r1, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1091
  ldr r0, =erasedword
 8003e16:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1092
  cmp r1, r0
 8003e1a:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1093
  beq 1f
 8003e1c:	d007      	beq.n	8003e2e <Code_956+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1094
    ldrb r0, [r1, #6]
 8003e1e:	7988      	ldrb	r0, [r1, #6]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1095
    cmp r0, #erasedbyte
 8003e20:	28ff      	cmp	r0, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1096
    beq 1f
 8003e22:	d004      	beq.n	8003e2e <Code_956+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1097
      movs tos, r1
 8003e24:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1098
      pushdaconst 0
 8003e26:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003e2a:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1099
      pop {r0, r1, pc}
 8003e2c:	bd03      	pop	{r0, r1, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1101

1:pushdatos
 8003e2e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1102
  movs tos, #0
 8003e32:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1103
  mvns tos, tos
 8003e34:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1104
  pop {r0, r1, pc}
 8003e36:	bd03      	pop	{r0, r1, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:719
  ldr r0, =Dictionarypointer
 8003e38:	2407ffd0 	.word	0x2407ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:734
  ldr r0, =FlashFlags
 8003e3c:	24000018 	.word	0x24000018
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:768
  ldr r0, =Fadenende @ Hole das aktuelle Fadenende  Fetch old latest
 8003e40:	2407ffd4 	.word	0x2407ffd4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:824
  ldr r0, =Einsprungpunkt
 8003e44:	2400000c 	.word	0x2400000c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:992
  ldr r0, =VariablenPointer
 8003e48:	2400001c 	.word	0x2400001c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:995
    ldr r2, =RamDictionaryAnfang
 8003e4c:	24000808 	.word	0x24000808
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1020
  ldr tos, =0x3f04603e @ subs r7, #4    str r6, [r7, #0]
 8003e50:	3f04603e 	.word	0x3f04603e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1023
  ldr tos, =0x467e3602 @ mov r6, pc     adds r6, #2
 8003e54:	467e3602 	.word	0x467e3602
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1052
  ldr tos, =CoreDictionaryAnfang @ Befinde mich im Flash mit Backlinks. Muss beim CoreDictionary anfangen:        In Flash: Start with core dictionary.
 8003e58:	080001e4 	.word	0x080001e4

08003e5c <Dictionary_960>:
Dictionary_960():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1052
 8003e5c:	08003e8e 	.word	0x08003e8e
 8003e60:	730a0000 	.word	0x730a0000
 8003e64:	7370696b 	.word	0x7370696b
 8003e68:	6e697274 	.word	0x6e697274
 8003e6c:	67          	.byte	0x67
	...

08003e6e <Code_960>:
Code_960():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1117

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "skipstring"
@ -----------------------------------------------------------------------------
    @ String überlesen und Pointer gerade machen
    ldrb r1, [tos] @ Länge des Strings holen      Fetch length
 8003e6e:	7831      	ldrb	r1, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1118
    adds r1, #1   @ Plus 1 Byte für die Länge   One more for length byte
 8003e70:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1120

    movs r2, #1  @ Wenn es ungerade ist, noch einen mehr:   Maybe one more for aligning.
 8003e72:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1121
    ands r2, r1
 8003e74:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1123

    adds r1, r2
 8003e76:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1124
    adds tos, r1
 8003e78:	1876      	adds	r6, r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1125
    bx lr
 8003e7a:	4770      	bx	lr

08003e7c <skipstring>:
skipstring():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1130

@ -----------------------------------------------------------------------------
skipstring: @ Überspringt einen String, dessen Adresse in r0 liegt.  Skip string which address is in r0.
@ -----------------------------------------------------------------------------
  push {r1, r2}
 8003e7c:	b406      	push	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1132
    @ String überlesen und Pointer gerade machen
    ldrb r1, [r0] @ Länge des Strings holen      Fetch length
 8003e7e:	7801      	ldrb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1133
    adds r1, #1   @ Plus 1 Byte für die Länge   One more for length byte
 8003e80:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1135

    movs r2, #1  @ Wenn es ungerade ist, noch einen mehr:   Maybe one more for aligning.
 8003e82:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1136
    ands r2, r1
 8003e84:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1138

    adds r1, r2
 8003e86:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1139
    adds r0, r1
 8003e88:	1840      	adds	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1140
  pop {r1, r2}
 8003e8a:	bc06      	pop	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1141
  bx lr
 8003e8c:	4770      	bx	lr

08003e8e <Dictionary_961>:
Dictionary_961():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1141
 8003e8e:	3ea0      	.short	0x3ea0
 8003e90:	00000800 	.word	0x00000800
 8003e94:	6e696604 	.word	0x6e696604
 8003e98:	64          	.byte	0x64
	...

08003e9a <Code_961>:
find():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1150

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "find"
find: @ ( address length -- Code-Adresse Flags )
@ -----------------------------------------------------------------------------
  ldr r0, =hook_find
 8003e9a:	4830      	ldr	r0, [pc, #192]	; (8003f5c <find_not_found+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1151
  ldr r0, [r0]
 8003e9c:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1152
  mov pc, r0
 8003e9e:	4687      	mov	pc, r0

08003ea0 <Dictionary_962>:
Dictionary_962():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1152
 8003ea0:	08003ebc 	.word	0x08003ebc
 8003ea4:	68090081 	.word	0x68090081
 8003ea8:	2d6b6f6f 	.word	0x2d6b6f6f
 8003eac:	646e6966 	.word	0x646e6966

08003eb0 <Code_962>:
Code_962():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1158

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-find" @ ( -- addr )
  CoreVariable hook_find
@------------------------------------------------------------------------------
  pushdatos
 8003eb0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1159
  ldr tos, =hook_find
 8003eb4:	4e2a      	ldr	r6, [pc, #168]	; (8003f60 <find_not_found+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1160
  bx lr
 8003eb6:	4770      	bx	lr
 8003eb8:	08003eca 	.word	0x08003eca

08003ebc <Dictionary_965>:
Dictionary_965():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1160
 8003ebc:	08003f64 	.word	0x08003f64
 8003ec0:	28060000 	.word	0x28060000
 8003ec4:	646e6966 	.word	0x646e6966
 8003ec8:	29          	.byte	0x29
	...

08003eca <Code_965>:
core_find():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1177
find: @ ( address length -- Code-Adresse Flags )
@ -----------------------------------------------------------------------------

.endif

  push {r4, r5, lr}
 8003eca:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1184
  @ r4  Adresse des zu suchenden Strings  Address of string that is searched for
  @ r5  Dessen Länge                      Length

  @ TOS Hangelpointer   Pointer for crawl the dictionary

  movs r0, #0   @ Noch keinen Treffer          No hits yet
 8003ecc:	2000      	movs	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1185
  movs r1, #0   @ Und noch keine Trefferflags  No hits have no Flags
 8003ece:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1186
  push {r0, r1} @ Auf dem Return-Stack merken  Save this to return stack
 8003ed0:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1188

  popda r5 @ Fetch string length
 8003ed2:	0035      	movs	r5, r6
 8003ed4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1189
  popda r4 @ Fetch string address
 8003ed6:	0034      	movs	r4, r6
 8003ed8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1191

  bl dictionarystart
 8003eda:	f7ff ff82 	bl	8003de2 <Code_954>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1194

1:@ Loop through the dictionary
  ldr r0, =Flag_invisible
 8003ede:	f64f 70ff 	movw	r0, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1195
  ldrh r1, [tos, #4] @ Fetch Flags to see if this definition is visible.
 8003ee2:	88b1      	ldrh	r1, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1196
  cmp r0, r1         @ Skip this definition if invisible
 8003ee4:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1197
  beq 2f
 8003ee6:	d01e      	beq.n	8003f26 <Code_965+0x5c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1201

  @ Definition is visible. Compare the name !

  ldrb r1, [tos, #6] @ Fetch count, skip link and flags
 8003ee8:	79b1      	ldrb	r1, [r6, #6]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1202
  cmp r1, r5
 8003eea:	42a9      	cmp	r1, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1203
  bne 2f @ Strings have different lengths, continue searching
 8003eec:	d11b      	bne.n	8003f26 <Code_965+0x5c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1208

    @ Same length. Compare strings, be case insensitive.
    @ Dictionary entries cannot have no name - string length therefore cannot be zero.

    adds r0, tos, #7 @ Get address, skip count, link and flags
 8003eee:	1df0      	adds	r0, r6, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1212

    @ Count backwards on length in r1

4:  subs r1, #1
 8003ef0:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1213
    ldrb r2, [r0, r1]
 8003ef2:	5c42      	ldrb	r2, [r0, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1214
    ldrb r3, [r4, r1]
 8003ef4:	5c63      	ldrb	r3, [r4, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1217

    @ Beide Zeichen in Kleinbuchstaben verwandeln.  Convert booth to lowercase.
    lowercase r2
 8003ef6:	2a41      	cmp	r2, #65	; 0x41
 8003ef8:	d302      	bcc.n	8003f00 <Code_965+0x36>
 8003efa:	2a5b      	cmp	r2, #91	; 0x5b
 8003efc:	bf38      	it	cc
 8003efe:	3220      	addcc	r2, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1218
    lowercase r3
 8003f00:	2b41      	cmp	r3, #65	; 0x41
 8003f02:	d302      	bcc.n	8003f0a <Code_965+0x40>
 8003f04:	2b5b      	cmp	r3, #91	; 0x5b
 8003f06:	bf38      	it	cc
 8003f08:	3320      	addcc	r3, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1220

    cmp r2, r3
 8003f0a:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1221
    bne 2f @ Different characters, continue searching
 8003f0c:	d10b      	bne.n	8003f26 <Code_965+0x5c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1224

    @ Equal characters: Next character ?
    cmp r1, #0
 8003f0e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1225
    bne 4b
 8003f10:	d1ee      	bne.n	8003ef0 <Code_965+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1229

      @ Gefunden ! Strings are equal: Found !

      add sp, #8 @ Forget old notes on return stack
 8003f12:	b002      	add	sp, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1230
      adds r0, tos, #6
 8003f14:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1231
      bl skipstring @ String überlesen und Pointer gerade machen   Skip name string in r0
 8003f16:	f7ff ffb1 	bl	8003e7c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1232
      ldrh r1, [tos, #4] @ Fetch flags, again.
 8003f1a:	88b1      	ldrh	r1, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1233
      push {r0, r1} @ Note code start address and flags
 8003f1c:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1236

      @ Prüfe, ob ich mich im Flash oder im Ram befinde.  Check if in RAM or in Flash.
      ldr r0, =Backlinkgrenze
 8003f1e:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1237
      cmp tos, r0
 8003f22:	4286      	cmp	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1241
.ifdef above_ram
      blo 3f @ Im Ram beim ersten Treffer ausspringen. Search is over in RAM with first hit.
.else
      bhs 3f @ Im Ram beim ersten Treffer ausspringen. Search is over in RAM with first hit.
 8003f24:	d207      	bcs.n	8003f36 <Code_965+0x6c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1249
             @ If in Flash, whole dictionary has to be searched because of backwards link dictionary structure.

2:@ Weiterhangeln  Continue crawl.
  @ This is the essence of "dictionarynext", inlined for speed.

  ldr tos, [tos]
 8003f26:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1250
  ldr r0, =erasedword
 8003f28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1251
  cmp tos, r0
 8003f2c:	4286      	cmp	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1252
  beq 3f
 8003f2e:	d002      	beq.n	8003f36 <Code_965+0x6c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1253
    ldrb r0, [tos, #6]
 8003f30:	79b0      	ldrb	r0, [r6, #6]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1254
    cmp r0, #erasedbyte
 8003f32:	28ff      	cmp	r0, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1255
    bne 1b
 8003f34:	d1d3      	bne.n	8003ede <Code_965+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1260

3:@ Durchgehangelt. Habe ich etwas gefunden ?  Finished. Found something ?
  @ Zieladresse gesetzt, also nicht Null bedeutet: Etwas gefunden !    Destination address <> 0 means successfully found.

  pop {r0, r1}
 8003f36:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1261
  movs tos, r0  @ Zieladresse    oder 0, falls nichts gefunden            Address = 0 means: Not found. Check for that !
 8003f38:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1262
  pushda r1     @ Zielflags      oder 0  --> @ ( 0 0 - Nicht gefunden )   Push Flags on Stack. ( Destination-Code Flags ) or ( 0 0 ).
 8003f3a:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003f3e:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1264

  pop {r4, r5, pc}
 8003f40:	bd30      	pop	{r4, r5, pc}

08003f42 <find_not_found>:
find_not_found():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1269

@ -----------------------------------------------------------------------------
find_not_found: @ Internal use. Gives "not found." message if find is not successful.
@ -----------------------------------------------------------------------------
  push {lr}
 8003f42:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1271

  movs r1, tos  @ Save string address for later use
 8003f44:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1272
  ldr r0, [psp]
 8003f46:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1274

  push {r0, r1}
 8003f48:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1275
    bl find
 8003f4a:	f7ff ffa6 	bl	8003e9a <Code_961>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1276
  pop {r0, r1}
 8003f4e:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1278

  ldr r2, [psp] @ Probe entry address
 8003f50:	683a      	ldr	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1279
  cmp r2, #0
 8003f52:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1280
  bne 1f
 8003f54:	d101      	bne.n	8003f5a <find_not_found+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1281
    bl not_found_addr_r0_len_r1
 8003f56:	f000 feef 	bl	8004d38 <not_found_addr_r0_len_r1>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1282
1:pop {pc}
 8003f5a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1150
  ldr r0, =hook_find
 8003f5c:	2407ffcc 	.word	0x2407ffcc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1159
  ldr tos, =hook_find
 8003f60:	2407ffcc 	.word	0x2407ffcc

08003f64 <Dictionary_972>:
Dictionary_972():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/compiler-flash.s:1159
 8003f64:	08003fc2 	.word	0x08003fc2
 8003f68:	63060000 	.word	0x63060000
 8003f6c:	706d756a 	.word	0x706d756a
 8003f70:	2c          	.byte	0x2c
	...

08003f72 <Code_972>:
Code_972():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:27
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "cjump," @ Fügt einen bedingten Sprung ein. Write a conditional jump into dictionary
cjumpgenerator: @ ( Adresse-der-Opcodelücke Sprungziel Bitmaske -- )
                @ ( Address-of-hole-for-jump Target Bitmask -- )
@------------------------------------------------------------------------------
  popda r2 @ Bitmaske    Bitmask for jump condition
 8003f72:	0032      	movs	r2, r6
 8003f74:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:28
  popda r1 @ Sprungziel  Target
 8003f76:	0031      	movs	r1, r6
 8003f78:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:32
  @ popda r0 @ Adresse-der-Opcodelücke - bleibt auf dem Stack  Hole to fill in opcode - keep that on stack

  @ Calculate jump offset.
  subs r3, r1, tos @ Differenz aus Lücken-Adresse und Sprungziel bilden  Calculate relative jump offset
 8003f7a:	1b8b      	subs	r3, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:33
  subs r3, #4      @ Da der aktuelle Befehl noch läuft und es komischerweise andere Offsets beim ARM gibt.  Current instruction still running...
 8003f7c:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:41
  @ also habe ich 7 freie Bits, das oberste muss mit dem restlichen Vorzeichen übereinstimmen.

  @ Short conditional B.. opcodes support 8 Bits jump range - one of that for sign.
  @ Check if opcodable range is enough to reach target:

  ldr r1, =0xFFFFFF01   @ 7 Bits frei
 8003f7e:	f06f 01fe 	mvn.w	r1, #254	; 0xfe
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:42
  ands r1, r3
 8003f82:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:43
  cmp r1, #0  @ Wenn dies Null ergibt, positive Distanz ok.
 8003f84:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:44
  beq 1f
 8003f86:	d00e      	beq.n	8003fa6 <jump_too_far+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:46

  ldr r0, =0xFFFFFF00
 8003f88:	f06f 00ff 	mvn.w	r0, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:47
  cmp r1, r0
 8003f8c:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:48
  beq 1f  @ Wenn es gleich ist: Negative Distanz ok.
 8003f8e:	d00a      	beq.n	8003fa6 <jump_too_far+0x16>

08003f90 <jump_too_far>:
jump_too_far():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:51
    @ Ansonsten ist die Sprungdistanz einfach zu groß.
jump_too_far:
    Fehler_Quit "Jump too far"
 8003f90:	f7fe ff0a 	bl	8002da8 <dotgaensefuesschen>
 8003f94:	6d754a0d 	.word	0x6d754a0d
 8003f98:	6f742070 	.word	0x6f742070
 8003f9c:	6166206f 	.word	0x6166206f
 8003fa0:	0a72      	.short	0x0a72
 8003fa2:	f000 bf1b 	b.w	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:55
1:

  @ Generate proper jump opcode:
  asrs r3, #1 @ Schieben, da die Sprünge immer auf geraden Adressen beginnen und enden.  Shift one bit out as jumps always have an even offset
 8003fa6:	105b      	asrs	r3, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:56
  movs r1, #0xFF @ Genau 8 Bits Sprungmaske.  Exactly 8 Bits available -
 8003fa8:	21ff      	movs	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:57
  ands r3, r1    @ Ausschnitt anwenden          mask them to clip sign bits
 8003faa:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:59

  orrs r3, r2    @ Sprungbedingung und den Rest des Opcodes hinzufügen  Or together with jump condition
 8003fac:	4313      	orrs	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:60
  movs r0, tos  @ Adresse-der-Opcodelücke in r0 holen                    Exchange registers
 8003fae:	0030      	movs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:61
  movs tos, r3  @ Sprungopcode stattdessen hineinlegen
 8003fb0:	001e      	movs	r6, r3

08003fb2 <sprungbefehl_einfuegen>:
sprungbefehl_einfuegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:64

sprungbefehl_einfuegen: @ strh r3, [r0] over h, to handle Flash writes
  push {lr}
 8003fb2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:68
    @ Opcode auf dem Stack, Adresse in r0
    @ Dictionary-Pointer verbiegen:
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
 8003fb4:	4acb      	ldr	r2, [pc, #812]	; (80042e4 <Code_1035+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:69
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren
 8003fb6:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:71

      str r0, [r2] @ Dictionarypointer umbiegen
 8003fb8:	6010      	str	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:72
      bl hkomma    @ Opcode einfügen
 8003fba:	f7ff fc7d 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:73
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen.
 8003fbe:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:74
  pop {pc}
 8003fc0:	bd00      	pop	{pc}

08003fc2 <Dictionary_976>:
Dictionary_976():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:74
 8003fc2:	3ffc      	.short	0x3ffc
 8003fc4:	00000800 	.word	0x00000800
 8003fc8:	6d756a05 	.word	0x6d756a05
 8003fcc:	2c70      	.short	0x2c70

08003fce <Code_976>:
Code_976():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:81
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "jump," @ Fügt einen unbedingten Sprung ein.  Write an unconditional jump into dictionary
jumpgenerator: @ ( Adresse-der-Opcodelücke Sprungziel -- )
               @ ( Address-of-hole-for-jump Target -- )
@------------------------------------------------------------------------------
  popda r1 @ Sprungziel  Target
 8003fce:	0031      	movs	r1, r6
 8003fd0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:82
  popda r0 @ Adresse-der-Opcodelücke  Hole to fill in opcode
 8003fd2:	0030      	movs	r0, r6
 8003fd4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:84

  subs r3, r1, r0 @ Differenz aus Lücken-Adresse und Sprungziel bilden  Calculate relative jump offset
 8003fd6:	1a0b      	subs	r3, r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:85
  subs r3, #4     @ Da der aktuelle Befehl noch läuft und es komischerweise andere Offsets beim ARM gibt.   Current instruction still running...
 8003fd8:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:93
  @ also habe ich 10 freie Bits, das oberste muss mit dem restlichen Vorzeichen übereinstimmen.

  @ Short unconditional B opcodes support 11 Bits jump range - one of that for sign.
  @ Check if opcodable range is enough to reach target:

  ldr r1, =0xFFFFF801  @ 10 Bits frei
 8003fda:	49c3      	ldr	r1, [pc, #780]	; (80042e8 <Code_1035+0x12>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:94
  ands r1, r3
 8003fdc:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:95
  cmp r1, #0  @ Wenn dies Null ergibt, positive Distanz ok.
 8003fde:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:96
  beq 1f
 8003fe0:	d002      	beq.n	8003fe8 <Code_976+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:98

  ldr r2, =0xFFFFF800
 8003fe2:	4ac2      	ldr	r2, [pc, #776]	; (80042ec <Code_1035+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:99
  cmp r1, r2
 8003fe4:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:100
  bne.n jump_too_far @ Wenn es gleich ist: Negative Distanz ok.
 8003fe6:	d1d3      	bne.n	8003f90 <jump_too_far>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:104

1:

  asrs r3, #1 @ Schieben, da die Sprünge immer auf geraden Adressen beginnen und enden. Shift one bit out as jumps always have an even offset
 8003fe8:	105b      	asrs	r3, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:105
  ldr r2, =0x7FF @ Genau 11 Bits Sprungmaske.  Exactly 11 Bits available -
 8003fea:	f240 72ff 	movw	r2, #2047	; 0x7ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:106
  ands r3, r2     @ Ausschnitt anwenden          mask them to clip sign bits
 8003fee:	4013      	ands	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:112

  .ifdef m0core
    ldr r2, =0xE000
    orrs r3, r2
  .else
    orrs r3, 0xE000  @ Rest des Opcodes hinzufügen  Or together with B opcode
 8003ff0:	f453 4360 	orrs.w	r3, r3, #57344	; 0xe000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:114
  .endif
  pushda r3
 8003ff4:	f847 6d04 	str.w	r6, [r7, #-4]!
 8003ff8:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:115
  b.n sprungbefehl_einfuegen @  Befehl einfügen. strh r3, [r0] over h, to handle Flash writes
 8003ffa:	e7da      	b.n	8003fb2 <sprungbefehl_einfuegen>

08003ffc <Dictionary_981>:
Dictionary_981():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:115
 8003ffc:	08004012 	.word	0x08004012
 8004000:	68040000 	.word	0x68040000
 8004004:	7265      	.short	0x7265
 8004006:	65          	.byte	0x65
	...

08004008 <Code_981>:
here():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:121

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "here" @ ( -- addr ) Gives Dictionarypointer
here: @ Gibt den Dictionarypointer zurück
@ -----------------------------------------------------------------------------
  pushdatos    @ Platz auf dem Datenstack schaffen
 8004008:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:122
  ldr tos, =Dictionarypointer
 800400c:	4eb5      	ldr	r6, [pc, #724]	; (80042e4 <Code_1035+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:123
  ldr tos, [tos] @ Hole den Dictionarypointer
 800400e:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:124
  bx lr
 8004010:	4770      	bx	lr

08004012 <Dictionary_983>:
Dictionary_983():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:124
 8004012:	4140      	.short	0x4140
 8004014:	00000800 	.word	0x00000800
 8004018:	616c660d 	.word	0x616c660d
 800401c:	61766873 	.word	0x61766873
 8004020:	65682d72 	.word	0x65682d72
 8004024:	6572      	.short	0x6572

08004026 <Code_983>:
flashvarhere():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:130

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "flashvar-here" @ ( -- a-addr ) Gives RAM management pointer
flashvarhere:
@ -----------------------------------------------------------------------------
  pushdatos
 8004026:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:131
  ldr tos, =VariablenPointer
 800402a:	4eb1      	ldr	r6, [pc, #708]	; (80042f0 <Code_1035+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:132
  ldr tos, [tos]
 800402c:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:133
  bx lr
 800402e:	4770      	bx	lr

08004030 <nullprobekomma>:
nullprobekomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:141
@ Verschiedene Sprünge, die von den Kontrollstrukturen gebracht werden.
@ Some jump primitives that are useful for building control structures
@------------------------------------------------------------------------------

nullprobekomma: @ Write code for comparing TOS to zero.
  push {lr}
 8004030:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:142
  pushdaconstw 0x2e00 @ cmp tos, #0
 8004032:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004036:	f642 6600 	movw	r6, #11776	; 0x2e00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:143
  bl hkomma
 800403a:	f7ff fc3d 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:144
  bl drop_hkomma
 800403e:	f7ff fc31 	bl	80038a4 <drop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:145
  pop {pc}
 8004042:	bd00      	pop	{pc}

08004044 <branch_r>:
branch_r():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:148

branch_r:     @ ( -- Sprungziel )  Einleitung bedingter und unbedingter Rückwärtssprung
    b.n here  @ ( -- Target )      Intro of conditional and unconditional backwards jump
 8004044:	e7e0      	b.n	8004008 <Code_981>

08004046 <r_branch_jne>:
r_branch_jne():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:151

r_branch_jne: @ ( Sprungziel -- )  Abschluss besonderer bedingter Rückwärtssprung für loop
  push {lr}   @ ( Target -- )      Finalisation of special conditional backwards jump for loop
 8004046:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:152
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
 8004048:	f000 f83a 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:153
  swap
 800404c:	6839      	ldr	r1, [r7, #0]
 800404e:	603e      	str	r6, [r7, #0]
 8004050:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:154
  pushdaconstw 0xD100 @ Opcode für den bedingten Sprung bne  Opcode for conditional jump BNE
 8004052:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004056:	f24d 1600 	movw	r6, #53504	; 0xd100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:155
  bl cjumpgenerator
 800405a:	f7ff ff8a 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:156
  pop {pc}
 800405e:	bd00      	pop	{pc}

08004060 <r_branch_jvc>:
r_branch_jvc():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:159

r_branch_jvc: @ ( Sprungziel -- )  Abschluss besonderer bedingter Rückwärtssprung bei Überlauf für +loop
  push {lr}   @ ( Target -- )      Finalisation of conditional backwards jump on overflow for +loop
 8004060:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:160
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
 8004062:	f000 f82d 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:161
  swap
 8004066:	6839      	ldr	r1, [r7, #0]
 8004068:	603e      	str	r6, [r7, #0]
 800406a:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:162
  pushdaconstw 0xD700 @ Opcode für den bedingten Sprung bvc  Opcode for conditional jump BVC, used for +loop
 800406c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004070:	f24d 7600 	movw	r6, #55040	; 0xd700
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:163
  bl cjumpgenerator
 8004074:	f7ff ff7d 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:164
  pop {pc}
 8004078:	bd00      	pop	{pc}

0800407a <r_nullbranch>:
r_nullbranch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:167

r_nullbranch: @ ( Sprungziel -- )  Abschluss bedingter Rückwärtssprung
  push {lr}   @ ( Target -- )      Finalisation of conditional backwards jump
 800407a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:168
  bl nullprobekomma
 800407c:	f7ff ffd8 	bl	8004030 <nullprobekomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:169
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
 8004080:	f000 f81e 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:170
  swap
 8004084:	6839      	ldr	r1, [r7, #0]
 8004086:	603e      	str	r6, [r7, #0]
 8004088:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:171
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
 800408a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800408e:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:172
  bl cjumpgenerator
 8004092:	f7ff ff6e 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:173
  pop {pc}
 8004096:	bd00      	pop	{pc}

08004098 <r_branch>:
r_branch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:176

r_branch:     @ ( Sprungziel -- )  Abschluss unbedingter Rückwärtssprung
  push {lr}   @ ( Target -- )      Finalisation of unconditional backwards jump
 8004098:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:177
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
 800409a:	f000 f811 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:178
  swap
 800409e:	6839      	ldr	r1, [r7, #0]
 80040a0:	603e      	str	r6, [r7, #0]
 80040a2:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:179
  bl jumpgenerator
 80040a4:	f7ff ff93 	bl	8003fce <Code_976>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:180
  pop {pc}
 80040a8:	bd00      	pop	{pc}

080040aa <nullbranch_v>:
nullbranch_v():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:184


nullbranch_v: @ ( -- Adresse-für-Sprungbefehl )  Einleitung bedingter Vorwärtssprung
  push {lr}   @ ( -- Address-for-Opcode )        Intro of conditional forward jump
 80040aa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:185
  bl nullprobekomma
 80040ac:	f7ff ffc0 	bl	8004030 <nullprobekomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:186
  bl here
 80040b0:	f7ff ffaa 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:187
  pushdaconst 2 @ Platz für die Opcodelücke schaffen  Allot space for filling in Opcode later
 80040b4:	f847 6d04 	str.w	r6, [r7, #-4]!
 80040b8:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:188
  bl allot
 80040ba:	f7ff fc6b 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:189
  pop {pc}
 80040be:	bd00      	pop	{pc}

080040c0 <branch_v>:
branch_v():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:192

branch_v:     @ ( -- Adresse-für-Sprungbefehl )  Einleitung unbedingter Vorwärtssprung
  push {lr}   @ ( -- Address-for-Opcode )        Intro of unconditional forward jump
 80040c0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:193
  bl here
 80040c2:	f7ff ffa1 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:194
  pushdaconst 2 @ Platz für die Opcodelücke schaffen  Allot space for filling in Opcode later
 80040c6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80040ca:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:195
  bl allot
 80040cc:	f7ff fc62 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:196
  pop {pc}
 80040d0:	bd00      	pop	{pc}

080040d2 <v_branch>:
v_branch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:200


v_branch:      @ ( Adresse-für-Sprungbefehl -- ) Abschluss unbedingter Vorwärtssprung
  push {lr}    @ ( Address-for-Opcode -- )       Finalisation of unconditional forward jump
 80040d2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:201
  bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
 80040d4:	f7ff ff98 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:202
  bl jumpgenerator
 80040d8:	f7ff ff79 	bl	8003fce <Code_976>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:203
  pop {pc}
 80040dc:	bd00      	pop	{pc}

080040de <v_nullbranch>:
v_nullbranch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:206

v_nullbranch:  @ ( Adresse-für-Sprungbefehl -- ) Abschluss bedingter Vorwärtssprung
  push {lr}    @ ( Address-for-Opcode -- )       Finalisation of conditional forward jump
 80040de:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:207
  bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
 80040e0:	f7ff ff92 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:208
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
 80040e4:	f847 6d04 	str.w	r6, [r7, #-4]!
 80040e8:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:209
  bl cjumpgenerator
 80040ec:	f7ff ff41 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:210
  pop {pc}
 80040f0:	bd00      	pop	{pc}

080040f2 <v_casebranch>:
v_casebranch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:213

v_casebranch:  @ ( Adresse-für-Sprungbefehl -- ) Abschluss besonderer bedingter Vorwärtssprung für case
  push {lr}    @ ( Address-for-Opcode -- )       Finalisation of special conditional forward jump for case
 80040f2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:214
  bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
 80040f4:	f7ff ff88 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:215
  pushdaconstw 0xD100 @ Opcode für den bedingten Sprung bne  Opcode for conditional jump BNE
 80040f8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80040fc:	f24d 1600 	movw	r6, #53504	; 0xd100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:216
  bl cjumpgenerator
 8004100:	f7ff ff37 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:217
  pop {pc}
 8004104:	bd00      	pop	{pc}

08004106 <allocator_nullsprungprobe>:
allocator_nullsprungprobe():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:223


@------------------------------------------------------------------------------
allocator_nullsprungprobe:
@------------------------------------------------------------------------------
  push {lr}
 8004106:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:230
      @ Der TOS-Register kann direkt untersucht und am Ende aus dem RA abgemeldet werden.
      @ Aufräumen am Ende, da wir zwei unterschiedliche Zweige anlegen werden.

      @ Benötige also zwei Elemente: Eins, um den Vergleich anzulegen und eins, welches nachrücken soll.

  bl expect_one_element @ Mindestens ein Element präparieren.
 8004108:	f7fc f9e6 	bl	80004d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:232

  bl tidyup_register_allocator_5os @ Alle anderen in Richtung des kanonischen Stacks putzen und aufräumen.
 800410c:	f7fc f91e 	bl	800034c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:233
  bl tidyup_register_allocator_4os
 8004110:	f7fc f921 	bl	8000356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:234
  bl tidyup_register_allocator_3os
 8004114:	f7fc f924 	bl	8000360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:236

  ldr r1, [r0, #offset_state_nos]
 8004118:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:237
  cmp r1, #constant
 800411a:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:238
  bne 1f
 800411c:	d101      	bne.n	8004122 <allocator_nullsprungprobe+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:239
    bl expect_nos_in_register @ Falls NOS eine Konstante ist, muss sie nun geladen werden
 800411e:	f7fc fa21 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:240
1:bl expect_tos_in_register @ TOS wird beprobt und muss im Register sein
 8004122:	f7fc fa15 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:244

  @ Vergleiche TOS mit Null - dafür muss eine Probe geschrieben werden !

  pushdaconstw 0x2800 @ cmp r0, #0
 8004126:	f847 6d04 	str.w	r6, [r7, #-4]!
 800412a:	f642 0600 	movw	r6, #10240	; 0x2800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:245
  lsls r1, #8 @ Register passend schieben
 800412e:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:246
  orrs tos, r1
 8004130:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:247
  bl hkomma
 8004132:	f7ff fbc1 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:249

  bl eliminiere_tos @ Wirf das gerade verglichene Element fort.
 8004136:	f7fc f8d2 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:251

  bl tidyup_register_allocator @ Das nachrückende Element ist bereits ein Register - so kann hier nur noch ein MOV-Opcode geschrieben werden, der die Flags erhält.
 800413a:	f7fc f8fb 	bl	8000334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:253

  pop {pc}
 800413e:	bd00      	pop	{pc}

08004140 <Dictionary_1007>:
Dictionary_1007():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:253
 8004140:	0800416c 	.word	0x0800416c
 8004144:	74040030 	.word	0x74040030
 8004148:	6568      	.short	0x6568
 800414a:	6e          	.byte	0x6e
	...

0800414c <Code_1007>:
Code_1007():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:261
  Wortbirne Flag_immediate_compileonly, "then"
  @ ( Adresse-für-Sprung Opcode"0" | Adresse-für-Sprung 5 -- )
  @ ( Address-for-Jump   Opcode"0" | Address-for-Jump 5 --)
struktur_then:
@------------------------------------------------------------------------------
  cmp tos, #5 @ Unbedingten Vorwärtssprung einfügen
 800414c:	2e05      	cmp	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:262
  bne 1f
 800414e:	d101      	bne.n	8004154 <Code_1007+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:263
    drop @ ( Sprunglücke )
 8004150:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:264
    b.n v_branch @ Abschluss unbedingter Vorwärtssprung  Fill in unconditional forward jummp
 8004152:	e7be      	b.n	80040d2 <v_branch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:266

1:uxtb r1, tos @ Das unterste Byte muss als Strukturerkennung 0 enthalten.
 8004154:	b2f1      	uxtb	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:267
  cmp r1, #0 @ Bedingten Vorwärtssprung einfügen
 8004156:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:268
  bne.n strukturen_passen_nicht
 8004158:	d16d      	bne.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:270
    @ ( Sprunglücke Opcode )
    push {lr}
 800415a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:271
    bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
 800415c:	f7ff ff54 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:272
    swap
 8004160:	6839      	ldr	r1, [r7, #0]
 8004162:	603e      	str	r6, [r7, #0]
 8004164:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:273
    bl cjumpgenerator @ Abschluss bedingter Vorwärtssprung v_nullbranch  Fill in conditional forward jump
 8004166:	f7ff ff04 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:274
    pop {pc}
 800416a:	bd00      	pop	{pc}

0800416c <Dictionary_1010>:
Dictionary_1010():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:274
 800416c:	08004188 	.word	0x08004188
 8004170:	65040030 	.word	0x65040030
 8004174:	736c      	.short	0x736c
 8004176:	65          	.byte	0x65
	...

08004178 <Code_1010>:
Code_1010():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:279

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "else"
@------------------------------------------------------------------------------
  push {lr}
 8004178:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:280
  bl struktur_ahead
 800417a:	f000 f836 	bl	80041ea <Code_1019>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:281
  bl dswap
 800417e:	f7fc fa76 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:282
  bl struktur_then
 8004182:	f7ff ffe3 	bl	800414c <Code_1007>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:283
  pop {pc}
 8004186:	bd00      	pop	{pc}

08004188 <Dictionary_1011>:
Dictionary_1011():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:283
 8004188:	080041de 	.word	0x080041de
 800418c:	69020630 	.word	0x69020630
 8004190:	66          	.byte	0x66
	...

08004192 <Code_1011>:
Code_1011():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:290
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator|Flag_Sprungschlucker, "if"
struktur_if: @ ( -- Adresse-für-Sprung Opcode"0" )
             @ ( -- Address-for-Jump   Opcode"0" )
@------------------------------------------------------------------------------
  push {lr}
 8004192:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:291
  bl nullbranch_v
 8004194:	f7ff ff89 	bl	80040aa <nullbranch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:292
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
 8004198:	f847 6d04 	str.w	r6, [r7, #-4]!
 800419c:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:293
  pop {pc}            @ Strukturerkennung  Structure matching "0" already in opcode
 80041a0:	bd00      	pop	{pc}

080041a2 <struktur_if_allokator>:
struktur_if_allokator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:296

struktur_if_allokator:
  push {lr} @ Spezialeinsprung des Registerallokators:
 80041a2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:298

  bl push_lr_nachholen
 80041a4:	f7fc fa2b 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:300

  bl eliminiere_tos_wenn_bmi
 80041a8:	f7fd fafd 	bl	80017a6 <eliminiere_tos_wenn_bmi>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:302

  ldr r1, [r0, #offset_sprungtrampolin]
 80041ac:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:303
  cmp r1, #0
 80041ae:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:304
  beq 1f
 80041b0:	d007      	beq.n	80041c2 <struktur_if_allokator+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:306

    push {r1} @ Der Sprungopcode liegt schon bereit !
 80041b2:	b402      	push	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:307
    bl tidyup_register_allocator @ Den kanonischen Stack wieder herstellen. In diesem Fall sind alle Elemente in Registern oder auf dem Stack, so dass dabei die Flags erhalten bleiben.
 80041b4:	f7fc f8be 	bl	8000334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:310
                                 @ Außerdem wird das Sprungtrampolin dabei gelöscht. Fein !

    bl branch_v   @ Sprunglücke erschaffen
 80041b8:	f7ff ff82 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:312

    pushdatos     @ Opcode bereitlegen mit Strukturerkennung "0"
 80041bc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:313
    pop {tos, pc}
 80041c0:	bd40      	pop	{r6, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:315

1:bl allocator_nullsprungprobe
 80041c2:	f7ff ffa0 	bl	8004106 <allocator_nullsprungprobe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:316
  bl here
 80041c6:	f7ff ff1f 	bl	8004008 <Code_981>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:317
  pushdaconst 2 @ Platz für die Opcodelücke schaffen  Allot space for filling in Opcode later
 80041ca:	f847 6d04 	str.w	r6, [r7, #-4]!
 80041ce:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:318
  bl allot
 80041d0:	f7ff fbe0 	bl	8003994 <Code_893>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:320

  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ mit Strukturerkennung "0"
 80041d4:	f847 6d04 	str.w	r6, [r7, #-4]!
 80041d8:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:321
  pop {pc}
 80041dc:	bd00      	pop	{pc}

080041de <Dictionary_1019>:
Dictionary_1019():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:321
 80041de:	41f8      	.short	0x41f8
 80041e0:	00300800 	.word	0x00300800
 80041e4:	65686105 	.word	0x65686105
 80041e8:	6461      	.short	0x6461

080041ea <Code_1019>:
struktur_ahead():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:327

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "ahead"
struktur_ahead: @ ( -- Adresse-für-Sprung 5 )   ( -- Address-for-Jump 5 )
@------------------------------------------------------------------------------
  push {lr}
 80041ea:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:328
  bl branch_v
 80041ec:	f7ff ff68 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:329
  pushdaconst 5           @ Strukturerkennung  Structure matching
 80041f0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80041f4:	2605      	movs	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:330
  pop {pc}
 80041f6:	bd00      	pop	{pc}

080041f8 <Dictionary_1022>:
Dictionary_1022():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:330
 80041f8:	08004212 	.word	0x08004212
 80041fc:	72060030 	.word	0x72060030
 8004200:	61657065 	.word	0x61657065
 8004204:	74          	.byte	0x74
	...

08004206 <Code_1022>:
Code_1022():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:335

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "repeat"
@------------------------------------------------------------------------------
  push {lr}
 8004206:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:336
  bl struktur_again
 8004208:	f000 f85b 	bl	80042c2 <Code_1033>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:337
  bl struktur_then
 800420c:	f7ff ff9e 	bl	800414c <Code_1007>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:338
  pop {pc}
 8004210:	bd00      	pop	{pc}

08004212 <Dictionary_1023>:
Dictionary_1023():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:338
 8004212:	4256      	.short	0x4256
 8004214:	06300800 	.word	0x06300800
 8004218:	69687705 	.word	0x69687705
 800421c:	656c      	.short	0x656c

0800421e <Code_1023>:
Code_1023():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:343

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator|Flag_Sprungschlucker, "while"
@------------------------------------------------------------------------------
  push {lr}
 800421e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:344
  bl struktur_if
 8004220:	f7ff ffb7 	bl	8004192 <Code_1011>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:345
  bl dswap
 8004224:	f7fc fa23 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:346
  pop {pc}
 8004228:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:348
  @------------------------------------------------------------
  push {lr}
 800422a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:349
  bl struktur_if_allokator
 800422c:	f7ff ffb9 	bl	80041a2 <struktur_if_allokator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:350
  bl dswap
 8004230:	f7fc fa1d 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:351
  pop {pc}
 8004234:	bd00      	pop	{pc}

08004236 <strukturen_passen_nicht>:
strukturen_passen_nicht():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:355

@ An diese Stelle gelegt, damit die Sprungweiten hinkommen.
strukturen_passen_nicht:
  Fehler_Quit "Structures don't match"
 8004236:	f7fe fdb7 	bl	8002da8 <dotgaensefuesschen>
 800423a:	5317      	.short	0x5317
 800423c:	63757274 	.word	0x63757274
 8004240:	65727574 	.word	0x65727574
 8004244:	6f642073 	.word	0x6f642073
 8004248:	2074276e 	.word	0x2074276e
 800424c:	6374616d 	.word	0x6374616d
 8004250:	0a68      	.short	0x0a68
 8004252:	f000 bdc3 	b.w	8004ddc <Code_1258>

08004256 <Dictionary_1025>:
Dictionary_1025():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:355
 8004256:	42b6      	.short	0x42b6
 8004258:	06300800 	.word	0x06300800
 800425c:	746e7505 	.word	0x746e7505
 8004260:	6c69      	.short	0x6c69

08004262 <Code_1025>:
Code_1025():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:361

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator|Flag_Sprungschlucker, "until"  @ Bedingte Schleife
  @ ( Sprungziel 1 -- )                                         @ Conditional loop
@------------------------------------------------------------------------------
  cmp tos, #1
 8004262:	2e01      	cmp	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:362
  bne.n strukturen_passen_nicht
 8004264:	d1e7      	bne.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:363
  drop
 8004266:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:364
  b.n r_nullbranch  @ Write conditional jump
 8004268:	e707      	b.n	800407a <r_nullbranch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:365
  bx lr @ Endmarkierung für den Allokatoreinsprung
 800426a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:367
@------------------------------------------------------------------------------
  cmp tos, #1
 800426c:	2e01      	cmp	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:368
  bne.n strukturen_passen_nicht
 800426e:	d1e2      	bne.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:369
  drop
 8004270:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:371

  push {lr}
 8004272:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:372
  bl eliminiere_tos_wenn_bmi
 8004274:	f7fd fa97 	bl	80017a6 <eliminiere_tos_wenn_bmi>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:374

  ldr r1, [r0, #offset_sprungtrampolin]
 8004278:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:375
  cmp r1, #0
 800427a:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:376
  beq 1f
 800427c:	d00d      	beq.n	800429a <Code_1025+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:378

    push {r1} @ Der Sprungopcode liegt schon bereit !
 800427e:	b402      	push	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:380

    bl tidyup_register_allocator @ Den kanonischen Stack wieder herstellen. In diesem Fall sind alle Elemente in Registern oder auf dem Stack, so dass dabei die Flags erhalten bleiben.
 8004280:	f7fc f858 	bl	8000334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:383
                                 @ Außerdem wird das Sprungtrampolin dabei gelöscht. Fein !

    bl branch_v @ ( pushda Dictionarypointer und 2 allot )
 8004284:	f7ff ff1c 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:385

    swap
 8004288:	6839      	ldr	r1, [r7, #0]
 800428a:	603e      	str	r6, [r7, #0]
 800428c:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:387

    pushdatos
 800428e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:388
    pop {tos}
 8004292:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:390

    bl cjumpgenerator
 8004294:	f7ff fe6d 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:391
    pop {pc}
 8004298:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:393

1:bl allocator_nullsprungprobe
 800429a:	f7ff ff34 	bl	8004106 <allocator_nullsprungprobe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:394
  bl branch_v @ ( pushda Dictionarypointer und 2 allot )
 800429e:	f7ff ff0f 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:395
  swap
 80042a2:	6839      	ldr	r1, [r7, #0]
 80042a4:	603e      	str	r6, [r7, #0]
 80042a6:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:396
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
 80042a8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80042ac:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:397
  bl cjumpgenerator
 80042b0:	f7ff fe5f 	bl	8003f72 <Code_972>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:398
  pop {pc}
 80042b4:	bd00      	pop	{pc}

080042b6 <Dictionary_1033>:
Dictionary_1033():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:398
 80042b6:	42ca      	.short	0x42ca
 80042b8:	00300800 	.word	0x00300800
 80042bc:	61676105 	.word	0x61676105
 80042c0:	6e69      	.short	0x6e69

080042c2 <Code_1033>:
struktur_again():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:404

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "again"  @ Endlosschleife
struktur_again:  @ ( Sprungziel 1 -- )           @ Unconditional loop
@------------------------------------------------------------------------------
  cmp tos, #1
 80042c2:	2e01      	cmp	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:405
  bne.n strukturen_passen_nicht
 80042c4:	d1b7      	bne.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:406
  drop
 80042c6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:407
  b.n r_branch      @ Write unconditional jump
 80042c8:	e6e6      	b.n	8004098 <r_branch>

080042ca <Dictionary_1035>:
Dictionary_1035():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:407
 80042ca:	42f4      	.short	0x42f4
 80042cc:	00300800 	.word	0x00300800
 80042d0:	67656205 	.word	0x67656205
 80042d4:	6e69      	.short	0x6e69

080042d6 <Code_1035>:
Code_1035():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:413

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "begin"
  @ ( -- Sprungziel 1 )  ( -- Jump-destination 1 )
@------------------------------------------------------------------------------
  push {lr}
 80042d6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:414
  bl branch_r
 80042d8:	f7ff feb4 	bl	8004044 <branch_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:415
  pushdaconst 1  @ Strukturerkennung  Structure matching
 80042dc:	f847 6d04 	str.w	r6, [r7, #-4]!
 80042e0:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:416
  pop {pc}
 80042e2:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:68
      ldr r2, =Dictionarypointer
 80042e4:	2407ffd0 	.word	0x2407ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:93
  ldr r1, =0xFFFFF801  @ 10 Bits frei
 80042e8:	fffff801 	.word	0xfffff801
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:98
  ldr r2, =0xFFFFF800
 80042ec:	fffff800 	.word	0xfffff800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:131
  ldr tos, =VariablenPointer
 80042f0:	2400001c 	.word	0x2400001c

080042f4 <Dictionary_1038>:
Dictionary_1038():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/controlstructures.s:131
 80042f4:	0800430e 	.word	0x0800430e
 80042f8:	6b010220 	.word	0x6b010220

080042fc <Code_1038>:
Code_1038():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:29

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "k" @ Kopiert den drittobersten Schleifenindex  Third loop index
@------------------------------------------------------------------------------
  @ Returnstack ( Limit Index Limit Index )
  pushdatos
 80042fc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:30
  ldr tos, [sp, #8]
 8004300:	9e02      	ldr	r6, [sp, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:31
  bx lr
 8004302:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:33
@------------------------------------------------------------------------------
  pushdaconstw 0x9802
 8004304:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004308:	f649 0602 	movw	r6, #38914	; 0x9802
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:34
  b.n loop_j_allocator
 800430c:	e00b      	b.n	8004326 <loop_j_allocator>

0800430e <Dictionary_1042>:
Dictionary_1042():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:34
 800430e:	433c      	.short	0x433c
 8004310:	02200800 	.word	0x02200800
 8004314:	6a01      	.short	0x6a01

08004316 <Code_1042>:
Code_1042():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:40

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "j" @ Kopiert den zweitobersten Schleifenindex  Second loop index
@------------------------------------------------------------------------------
  @ Returnstack ( Limit Index )
  pushdatos
 8004316:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:41
  ldr tos, [sp]
 800431a:	9e00      	ldr	r6, [sp, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:42
  bx lr
 800431c:	4770      	bx	lr

0800431e <rfetch_allocator>:
rfetch_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:46
@------------------------------------------------------------------------------

rfetch_allocator:
  pushdaconstw 0x9800
 800431e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004322:	f649 0600 	movw	r6, #38912	; 0x9800

08004326 <loop_j_allocator>:
loop_j_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:48
loop_j_allocator:
  push {lr}
 8004326:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:49
  bl befreie_tos
 8004328:	f7fb ffcf 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:50
  bl get_free_register
 800432c:	f7fc f8a0 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:51
  str r3, [r0, #offset_state_tos]
 8004330:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:52
  lsls r3, #8
 8004332:	021b      	lsls	r3, r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:53
  orrs tos, r3
 8004334:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:54
  bl hkomma
 8004336:	f7ff fabf 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:55
  pop {pc}
 800433a:	bd00      	pop	{pc}

0800433c <Dictionary_1046>:
Dictionary_1046():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:55
 800433c:	08004368 	.word	0x08004368
 8004340:	69010220 	.word	0x69010220

08004344 <Code_1046>:
Code_1046():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:61

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "i" @ Kopiert den obersten Schleifenindex       Innermost loop index
@------------------------------------------------------------------------------
  @ Returnstack ( )
  pushda rloopindex @ Ist immer im Register.
 8004344:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004348:	0026      	movs	r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:62
  bx lr
 800434a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:64
@------------------------------------------------------------------------------
  push {lr}
 800434c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:65
  pushdaconstw 0x0020
 800434e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004352:	f240 0620 	movw	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:66
  bl befreie_tos
 8004356:	f7fb ffb8 	bl	80002ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:67
  bl get_free_register
 800435a:	f7fc f889 	bl	8000470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:68
  str r3, [r0, #offset_state_tos]
 800435e:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:69
  orrs tos, r3
 8004360:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:70
  bl hkomma
 8004362:	f7ff faa9 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:71
  pop {pc}
 8004366:	bd00      	pop	{pc}

08004368 <Dictionary_1051>:
Dictionary_1051():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:71
 8004368:	080043a6 	.word	0x080043a6
 800436c:	6c050030 	.word	0x6c050030
 8004370:	65766165 	.word	0x65766165

08004374 <Code_1051>:
Code_1051():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:111
  @ Alle Stackelemente weiterschieben, Sprungadresse einfügen, Zähler erhöhen, Lücke anlegen.

  @ LeavePointer points to the location which counts the number of jumps that have to be inserted later.
  @ Leave moves all elements of stack further, inserts address for jump opcode, increments counter and allots space.

  push {lr}
 8004374:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:121
  @ Muss eine Lücke im Stack schaffen, alles NACH der Position des leavepointers muss weiterrücken.

  @ Make a hole in datastack at the lcoation the leavepointer points to for inserting the new location a jump opcode has to be patched in later
  @ by moving all other elements further one place in datastack.

  ldr r0, =leavepointer
 8004376:	4875      	ldr	r0, [pc, #468]	; (800454c <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:122
  ldr r1, [r0] @ Die Stelle, wohin er zeigt = Inhalt der Variable Leavepointer
 8004378:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:124

  movs r3, psp @ Alter Stackpointer  Old stackpointer
 800437a:	003b      	movs	r3, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:125
  subs psp, #4 @ Ein Element mehr auf dem Stack  One more element on stack after this
 800437c:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:128

1:@ Lückenschiebeschleife
  ldr r2, [r3]  @ mov @r10, -2(r10)
 800437e:	681a      	ldr	r2, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:129
  subs r3, #4
 8004380:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:130
  str r2, [r3]
 8004382:	601a      	str	r2, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:133
@  adds r3, #4

  adds r3, #8
 8004384:	3308      	adds	r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:134
  cmp r3, r1 @ r1 enthält die Stelle am Ende
 8004386:	428b      	cmp	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:135
  bne 1b
 8004388:	d1f9      	bne.n	800437e <Code_1051+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:141

  @ Muss jetzt die Stelle auf dem Stack, wo die Sprünge gezählt werden um Eins erhöhen
  @ und an der freigewordenen Stelle die Lückenadresse einfügen.
  @ Increment the number of jumps to be filled in later

  push {r0, r1}
 800438a:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:142
  bl branch_v
 800438c:	f7ff fe98 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:143
  pop {r0, r1}
 8004390:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:145

  popda r3 @ Die Lückenadresse
 8004392:	0033      	movs	r3, r6
 8004394:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:148

  @ Insert the address of location for jump opcode in datastack
  subs r1, #4  @ Weiter in Richtung Spitze des Stacks wandern
 8004396:	3904      	subs	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:149
  str r3, [r1] @ Lückenadresse einfügen
 8004398:	600b      	str	r3, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:152

  @ Den neuen Leavepointer vermerken  Update leavepointer
  str r1, [r0]
 800439a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:155

  @ Increment counter for number of jumps to be generated later
  subs r1, #4   @ Weiter in Richtung Spitze des Stacks wandern
 800439c:	3904      	subs	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:156
  ldr r2, [r1]  @ Sprungzähler aus dem Stack kopieren
 800439e:	680a      	ldr	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:158

  adds r2, #1   @ Den Sprungzähler um eins erhöhen
 80043a0:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:159
  str r2, [r1]  @ und zurückschreiben.
 80043a2:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:161

  pop {pc}
 80043a4:	bd00      	pop	{pc}

080043a6 <Dictionary_1053>:
Dictionary_1053():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:161
 80043a6:	43b8      	.short	0x43b8
 80043a8:	00200800 	.word	0x00200800
 80043ac:	6c6e7506 	.word	0x6c6e7506
 80043b0:	6f6f      	.short	0x6f6f
 80043b2:	70          	.byte	0x70
	...

080043b4 <Code_1053>:
Code_1053():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:168

@------------------------------------------------------------------------------
  Wortbirne Flag_inline, "unloop" @ Wirft die Schleifenstruktur vom Returnstack
unloop:                           @ Remove loop structure from returnstack
@------------------------------------------------------------------------------
  pop {rloopindex, rlooplimit}  @ Hole die alten Schleifenwerte zurück  Fetch back old loop values
 80043b4:	bc30      	pop	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:169
  bx lr
 80043b6:	4770      	bx	lr

080043b8 <Dictionary_1054>:
Dictionary_1054():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:169
 80043b8:	080043f0 	.word	0x080043f0
 80043bc:	2b050030 	.word	0x2b050030
 80043c0:	706f6f6c 	.word	0x706f6f6c

080043c4 <Code_1054>:
Code_1054():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:182
  @ ( AlterLeavePointer ... ZahlderAdressen Sprungziel 3 -- )

  @ Usage: ( Increment -- ).
  @ ( OldLeavePointer ... NumberofJumps Target 3 -- )
  @------------------------------------------------------------------------------
  cmp tos, #3 @ Structure matching
 80043c4:	2e03      	cmp	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:183
  beq 1f
 80043c6:	d000      	beq.n	80043ca <Code_1054+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:184
  b.n strukturen_passen_nicht
 80043c8:	e735      	b.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:185
1:drop
 80043ca:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:187

  push {lr}
 80043cc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:188
  pushdatos
 80043ce:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:189
  ldr tos, =struktur_plusloop
 80043d2:	4e5f      	ldr	r6, [pc, #380]	; (8004550 <gemeinsame_schleifenoptimierung+0x86>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:190
  bl inlinekomma  @ Inline the code needed for +loop
 80043d4:	f7ff f849 	bl	800346a <Code_794>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:191
  bl r_branch_jvc @ +loop entscheidet mit dem arithmetrischen Überlauf
 80043d8:	f7ff fe42 	bl	8004060 <r_branch_jvc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:194
                  @ Insert a jump on overflow for +loop logic

  b.n loop_intern
 80043dc:	e01a      	b.n	8004414 <loop_intern>

080043de <struktur_plusloop>:
struktur_plusloop():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:211
  bx lr

  .else

struktur_plusloop:
  adds rloopindex, #0x80000000  @ Index + $8000
 80043de:	f114 4400 	adds.w	r4, r4, #2147483648	; 0x80000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:212
  subs rloopindex, rlooplimit   @ Index + $8000 - Limit
 80043e2:	1b64      	subs	r4, r4, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:214

  adds rloopindex, tos         @ Index + $8000 - Limit + Schritt  Hier werden die Flags gesetzt. Überlauf bedeutet: Schleife beenden.
 80043e4:	19a4      	adds	r4, r4, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:216
                               @ Flags are set here, Overflow means: Terminate loop.
  drop                         @ Runterwerfen, dabei Flags nicht verändern  Drop, but don't change Flags anymore.
 80043e6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:218

  add rloopindex, rlooplimit   @ Index + $8000 + Schritt   Flags nicht verändern !
 80043e8:	442c      	add	r4, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:219
  sub rloopindex, #0x80000000  @ Index + Schritt           Flags nicht verändern !
 80043ea:	f1a4 4400 	sub.w	r4, r4, #2147483648	; 0x80000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:220
  bx lr
 80043ee:	4770      	bx	lr

080043f0 <Dictionary_1058>:
Dictionary_1058():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:220
 80043f0:	08004432 	.word	0x08004432
 80043f4:	6c040030 	.word	0x6c040030
 80043f8:	6f6f      	.short	0x6f6f
 80043fa:	70          	.byte	0x70
	...

080043fc <Code_1058>:
Code_1058():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:231
  @ ( AlterLeavePointer ... ZahlderAdressen Sprungziel 3 -- )

  @ Usage: ( -- ).
  @ ( OldLeavePointer ... NumberofJumps Target 3 -- )
@------------------------------------------------------------------------------
  cmp tos, #3 @ Structure matching
 80043fc:	2e03      	cmp	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:232
  beq 1f
 80043fe:	d000      	beq.n	8004402 <Code_1058+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:233
  b.n strukturen_passen_nicht
 8004400:	e719      	b.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:234
1:drop
 8004402:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:236

  push {lr}
 8004404:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:237
  pushdatos
 8004406:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:238
  ldr tos, =struktur_loop
 800440a:	4e52      	ldr	r6, [pc, #328]	; (8004554 <gemeinsame_schleifenoptimierung+0x8a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:239
  bl inlinekomma  @ Inline the code needed for +loop
 800440c:	f7ff f82d 	bl	800346a <Code_794>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:240
  bl r_branch_jne @ Jump if Limit and Index are not equal this time
 8004410:	f7ff fe19 	bl	8004046 <r_branch_jne>

08004414 <loop_intern>:
loop_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:243

loop_intern:
  bl spruenge_einpflegen @ Die gleiche Routine ist in Endcase am Werk
 8004414:	f000 f94a 	bl	80046ac <spruenge_einpflegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:245
                         @ Code to fill in jump opcodes is the same as in endcase.
  ldr r0, =leavepointer
 8004418:	484c      	ldr	r0, [pc, #304]	; (800454c <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:246
  popda r1               @ Zurückholen für die nächste Schleifenebene
 800441a:	0031      	movs	r1, r6
 800441c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:247
  str r1, [r0]           @ Fetch back old leavepointer for next loop layer.
 800441e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:249

  pushdatos
 8004420:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:250
  ldr tos, =unloop      @ Inline unloop code
 8004424:	4e4c      	ldr	r6, [pc, #304]	; (8004558 <gemeinsame_schleifenoptimierung+0x8e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:251
  bl inlinekomma
 8004426:	f7ff f820 	bl	800346a <Code_794>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:252
  pop {pc}
 800442a:	bd00      	pop	{pc}

0800442c <struktur_loop>:
struktur_loop():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:255

struktur_loop:
  adds rloopindex, #1          @ Index erhöhen           Increment Index
 800442c:	3401      	adds	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:256
  cmp rloopindex, rlooplimit   @ Mit Limit vergleichen   Compare with Limit
 800442e:	42ac      	cmp	r4, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:257
  bx lr @ Ende für inline,   End marker for inline,
 8004430:	4770      	bx	lr

08004432 <Dictionary_1063>:
Dictionary_1063():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:257
 8004432:	447a      	.short	0x447a
 8004434:	02300800 	.word	0x02300800
 8004438:	6402      	.short	0x6402
 800443a:	6f          	.byte	0x6f
	...

0800443c <Code_1063>:
Code_1063():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:267
  @ ( -- AlterLeavePointer 0 Sprungziel 3 )

  @ Usage: ( Limit Index -- ).
  @ ( -- OldLeavePointer 0 Target 3 )
@------------------------------------------------------------------------------
  push {lr}
 800443c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:269

  pushdatos
 800443e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:270
  ldr tos, =struktur_do  @ Inline opcodes for do
 8004442:	4e46      	ldr	r6, [pc, #280]	; (800455c <gemeinsame_schleifenoptimierung+0x92>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:271
  bl inlinekomma
 8004444:	f7ff f811 	bl	800346a <Code_794>

08004448 <do_rest_der_schleifenstruktur>:
do_rest_der_schleifenstruktur():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:274

do_rest_der_schleifenstruktur:
  ldr r0, =leavepointer
 8004448:	4840      	ldr	r0, [pc, #256]	; (800454c <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:275
  ldr r1, [r0]
 800444a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:276
  pushda r1     @ Alten Leavepointer sichern  Save old leavepointer
 800444c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004450:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:277
  pushdaconst 0
 8004452:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004456:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:278
  str psp, [r0] @ Aktuelle Position im Stack sichern  Save current position on datastack
 8004458:	6007      	str	r7, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:280

  bl branch_r    @ Schleifen-Rücksprung vorbereiten  Prepare loop jump back to the beginning
 800445a:	f7ff fdf3 	bl	8004044 <branch_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:281
  pushdaconst 3  @ Strukturerkennung  Structure matching
 800445e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004462:	2603      	movs	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:284
@  writeln "do-Struktur"
@  bl hexdots
  pop {pc}
 8004464:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:288

@------------------------------------------------------------------------------
  @ Opcodable optimisations enter here. At least one folding constant available.
  push {lr}
 8004466:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:289
  bl gemeinsame_schleifenoptimierung
 8004468:	f000 f82f 	bl	80044ca <gemeinsame_schleifenoptimierung>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:290
  b.n do_rest_der_schleifenstruktur
 800446c:	e7ec      	b.n	8004448 <do_rest_der_schleifenstruktur>

0800446e <struktur_do>:
struktur_do():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:293

struktur_do:
  push {rloopindex, rlooplimit}
 800446e:	b430      	push	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:294
  popda rloopindex
 8004470:	0034      	movs	r4, r6
 8004472:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:295
  popda rlooplimit
 8004474:	0035      	movs	r5, r6
 8004476:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:296
  bx lr @ Ende für inline,  End for inline,
 8004478:	4770      	bx	lr

0800447a <Dictionary_1073>:
Dictionary_1073():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:296
 800447a:	4560      	.short	0x4560
 800447c:	02300800 	.word	0x02300800
 8004480:	6f643f03 	.word	0x6f643f03

08004484 <Code_1073>:
Code_1073():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:309

  @ Usage: ( Limit Index -- ).
  @ ( -- OldLeavePointer Forward-Jump-Target 1 Target 3 )
  @ This loop terminates immediately if Limit=Index.
@------------------------------------------------------------------------------
  push {lr}
 8004484:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:310
  pushdatos
 8004486:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:311
  ldr tos, =struktur_do  @ Inline opcodes for do
 800448a:	4e34      	ldr	r6, [pc, #208]	; (800455c <gemeinsame_schleifenoptimierung+0x92>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:312
  bl inlinekomma
 800448c:	f7fe ffed 	bl	800346a <Code_794>

08004490 <qdo_rest_der_schleifenstruktur>:
qdo_rest_der_schleifenstruktur():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:315

qdo_rest_der_schleifenstruktur:
  pushdaconstw 0x42AC @ cmp rloopindex, rlooplimit @ Vergleiche die beiden Schleifenparameter  Compare both loop registers
 8004490:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004494:	f244 26ac 	movw	r6, #17068	; 0x42ac
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:316
  bl hkomma
 8004498:	f7ff fa0e 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:318

  ldr r0, =leavepointer
 800449c:	482b      	ldr	r0, [pc, #172]	; (800454c <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:319
  ldr r1, [r0]
 800449e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:320
  pushda r1     @ Alten Leavepointer sichern  Save old leavepointer
 80044a0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80044a4:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:324

  @ An diese Stelle nun die Vorwärtssprunglücke einfügen:
  @ Allot an hole in which a forward jump is inserted later.
  bl branch_v    @ here 2 allot
 80044a6:	f7ff fe0b 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:325
  adds tos, #1   @ Markierung anbringen, dass ich mir einen bedingten Sprung wünsche
 80044aa:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:328
                 @ This bit indicates that we need a conditional jump to be filled in here later.

  pushdaconst 1
 80044ac:	f847 6d04 	str.w	r6, [r7, #-4]!
 80044b0:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:329
  ldr r0, =leavepointer
 80044b2:	4826      	ldr	r0, [pc, #152]	; (800454c <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:330
  str psp, [r0] @ Aktuelle Position im Stack sichern  Save current position on datastack
 80044b4:	6007      	str	r7, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:332

  bl branch_r    @ Schleifen-Rücksprung vorbereiten  Prepare loop jump back to the beginning
 80044b6:	f7ff fdc5 	bl	8004044 <branch_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:333
  pushdaconst 3  @ Strukturerkennung  Structure matching
 80044ba:	f847 6d04 	str.w	r6, [r7, #-4]!
 80044be:	2603      	movs	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:334
  pop {pc}
 80044c0:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:338

@------------------------------------------------------------------------------
  @ Opcodable optimisations enter here. At least one folding constant available.
  push {lr}
 80044c2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:339
  bl gemeinsame_schleifenoptimierung
 80044c4:	f000 f801 	bl	80044ca <gemeinsame_schleifenoptimierung>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:340
  b.n qdo_rest_der_schleifenstruktur
 80044c8:	e7e2      	b.n	8004490 <qdo_rest_der_schleifenstruktur>

080044ca <gemeinsame_schleifenoptimierung>:
gemeinsame_schleifenoptimierung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:346


@------------------------------------------------------------------------------
gemeinsame_schleifenoptimierung: @ This is a common part for opcoding optimized do and ?do
@------------------------------------------------------------------------------
  push {lr}
 80044ca:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:347
  bl push_lr_nachholen
 80044cc:	f7fc f897 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:348
  bl expect_two_elements
 80044d0:	f7fc f80c 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:350

  bl tidyup_register_allocator_5os
 80044d4:	f7fb ff3a 	bl	800034c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:351
  bl tidyup_register_allocator_4os
 80044d8:	f7fb ff3d 	bl	8000356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:352
  bl tidyup_register_allocator_3os
 80044dc:	f7fb ff40 	bl	8000360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:354

  pushdaconstw 0xB430 @ push {rloopindex, rlooplimit}
 80044e0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80044e4:	f24b 4630 	movw	r6, #46128	; 0xb430
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:355
  bl hkomma
 80044e8:	f7ff f9e6 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:357

  ldr r1, [r0, #offset_state_tos]
 80044ec:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:358
  cmp r1, #constant
 80044ee:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:359
  beq 1f
 80044f0:	d008      	beq.n	8004504 <gemeinsame_schleifenoptimierung+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:361
    @ TOS, the Index, is in a Register.
    pushdaconstw 0x0004
 80044f2:	f847 6d04 	str.w	r6, [r7, #-4]!
 80044f6:	f240 0604 	movw	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:362
    lsls r1, #3
 80044fa:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:363
    orrs tos, r1
 80044fc:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:364
    bl hkomma
 80044fe:	f7ff f9db 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:365
    b 2f
 8004502:	e007      	b.n	8004514 <gemeinsame_schleifenoptimierung+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:367
1:  @ TOS is a constant.
    pushdatos
 8004504:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:368
    ldr tos, [r0, #offset_constant_tos]
 8004508:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:369
    pushdaconst 4
 800450a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800450e:	2604      	movs	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:370
    bl registerliteralkomma
 8004510:	f7fe fe62 	bl	80031d8 <Code_750>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:375
2:



  ldr r1, [r0, #offset_state_nos]
 8004514:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:376
  cmp r1, #constant
 8004516:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:377
  beq 1f
 8004518:	d008      	beq.n	800452c <gemeinsame_schleifenoptimierung+0x62>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:379
    @ NOS, the Limit, is in a Register.
    pushdaconstw 0x0005
 800451a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800451e:	f240 0605 	movw	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:380
    lsls r1, #3
 8004522:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:381
    orrs tos, r1
 8004524:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:382
    bl hkomma
 8004526:	f7ff f9c7 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:383
    b 2f
 800452a:	e007      	b.n	800453c <gemeinsame_schleifenoptimierung+0x72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:385
1:  @ NOS is a constant.
    pushdatos
 800452c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:386
    ldr tos, [r0, #offset_constant_nos]
 8004530:	68c6      	ldr	r6, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:387
    pushdaconst 5
 8004532:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004536:	2605      	movs	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:388
    bl registerliteralkomma
 8004538:	f7fe fe4e 	bl	80031d8 <Code_750>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:391
2:

  bl eliminiere_tos
 800453c:	f7fb fecf 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:392
  bl eliminiere_tos
 8004540:	f7fb fecd 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:394

  bl tidyup_register_allocator_tos @ TOS wieder in einen blitzeblanken Zustand versetzen !
 8004544:	f7fb ff16 	bl	8000374 <tidyup_register_allocator_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:398

    @ writeln "Schleifenoptimierung fertig"
    @ bl hexdots
  pop {pc}
 8004548:	bd00      	pop	{pc}
 800454a:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:121
  ldr r0, =leavepointer
 800454c:	24000004 	.word	0x24000004
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:189
  ldr tos, =struktur_plusloop
 8004550:	080043de 	.word	0x080043de
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:238
  ldr tos, =struktur_loop
 8004554:	0800442c 	.word	0x0800442c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:250
  ldr tos, =unloop      @ Inline unloop code
 8004558:	080043b4 	.word	0x080043b4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:270
  ldr tos, =struktur_do  @ Inline opcodes for do
 800455c:	0800446e 	.word	0x0800446e

08004560 <Dictionary_1095>:
Dictionary_1095():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/doloop.s:270
 8004560:	08004580 	.word	0x08004580
 8004564:	63040030 	.word	0x63040030
 8004568:	7361      	.short	0x7361
 800456a:	65          	.byte	0x65
	...

0800456c <Code_1095>:
Code_1095():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:27
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "case"
  @ ( -- 0 8 )
case:
@------------------------------------------------------------------------------
  push {lr}
 800456c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:28
  bl push_lr_nachholen
 800456e:	f7fc f846 	bl	80005fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:29
  pushdaconst 0 @ Zahl der Zweige    Current number of branches
 8004572:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004576:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:30
  pushdaconst 8 @ Strukturerkennung  Structure pattern
 8004578:	f847 6d04 	str.w	r6, [r7, #-4]!
 800457c:	2608      	movs	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:31
  pop {pc}
 800457e:	bd00      	pop	{pc}

08004580 <Dictionary_1100>:
Dictionary_1100():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:31
 8004580:	08004596 	.word	0x08004596
 8004584:	3f030030 	.word	0x3f030030
 8004588:	666f      	.short	0x666f

0800458a <Code_1100>:
Code_1100():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:43
  @ ( ... #of 8 -- ... addr #of+1 9 )
  @ Nimmt einen Flag statt einer Konstanten entgegen.
  @ Kann so eigene Vergleiche aufbauen.
  @ Takes flag instead of constant to build your own comparisions.
@------------------------------------------------------------------------------
  ldr r0, =struktur_qof
 800458a:	486b      	ldr	r0, [pc, #428]	; (8004738 <Code_1131+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:44
  b.n of_inneneinsprung
 800458c:	e009      	b.n	80045a2 <of_inneneinsprung>

0800458e <struktur_qof>:
struktur_qof():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:47

struktur_qof: @ Will be inlined.
  subs tos, #1
 800458e:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:48
  sbcs tos, tos
 8004590:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:49
  drop
 8004592:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:51
  @ bne... is generated here.
  bx lr
 8004594:	4770      	bx	lr

08004596 <Dictionary_1102>:
Dictionary_1102():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:51
 8004596:	4654      	.short	0x4654
 8004598:	02300800 	.word	0x02300800
 800459c:	6f02      	.short	0x6f02
 800459e:	66          	.byte	0x66
	...

080045a0 <Code_1102>:
Code_1102():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:57

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator, "of"
  @ ( ... #of 8 -- ... addr #of+1 9 )
@------------------------------------------------------------------------------
  ldr r0, =struktur_of
 80045a0:	4866      	ldr	r0, [pc, #408]	; (800473c <Code_1131+0x48>)

080045a2 <of_inneneinsprung>:
of_inneneinsprung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:60

of_inneneinsprung:
  cmp tos, #8                  @ Check for structure pattern: Give error message and quit if wrong.
 80045a2:	2e08      	cmp	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:61
  beq 1f
 80045a4:	d000      	beq.n	80045a8 <of_inneneinsprung+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:62
  b.n strukturen_passen_nicht
 80045a6:	e646      	b.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:63
1:drop
 80045a8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:65

  push {lr}
 80045aa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:67

  pushda r0
 80045ac:	f847 6d04 	str.w	r6, [r7, #-4]!
 80045b0:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:68
  bl inlinekomma  @ Insert opcodes for structure
 80045b2:	f7fe ff5a 	bl	800346a <Code_794>

080045b6 <of_opcodiereinsprung>:
of_opcodiereinsprung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:73

of_opcodiereinsprung:
  @ ( #of --> Addr #of+1)

  bl branch_v @ here 2 allot
 80045b6:	f7ff fd83 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:74
  swap
 80045ba:	6839      	ldr	r1, [r7, #0]
 80045bc:	603e      	str	r6, [r7, #0]
 80045be:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:75
  adds tos, #1 @ Eine Adresse mehr, die abzuarbeiten ist  One more location a branch opcode has to be written in later.
 80045c0:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:77

  pushdaconst 9 @ Strukturerkennung bereitlegen  Structure pattern
 80045c2:	f847 6d04 	str.w	r6, [r7, #-4]!
 80045c6:	2609      	movs	r6, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:79

  bl drop_hkomma
 80045c8:	f7ff f96c 	bl	80038a4 <drop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:81

  pop {pc}
 80045cc:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:85

@------------------------------------------------------------------------------

  cmp tos, #8                  @ Check for structure pattern: Give error message and quit if wrong.
 80045ce:	2e08      	cmp	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:86
  beq 1f
 80045d0:	d000      	beq.n	80045d4 <of_opcodiereinsprung+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:87
  b.n strukturen_passen_nicht
 80045d2:	e630      	b.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:88
1:drop
 80045d4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:90

  push {lr}
 80045d6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:93

  @ Mich interessieren nur die beiden obersten Elemente, die verglichen werden sollen.
  bl expect_two_elements @ Mindestens 2 Elemente
 80045d8:	f7fb ff88 	bl	80004ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:95

  bl tidyup_register_allocator_5os
 80045dc:	f7fb feb6 	bl	800034c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:96
  bl tidyup_register_allocator_4os
 80045e0:	f7fb feb9 	bl	8000356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:97
  bl tidyup_register_allocator_3os @ Maximal 2 Elemente, das dritte gleich in den Stack schieben.
 80045e4:	f7fb febc 	bl	8000360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:102

  @ Jetzt habe ich genau zwei Elemente im Allokator.
  @ NOS bleibt im Falle von CASE eigentlich die ganze Zeit gleich - erwarte NOS also in jedem Fall in einem Register.

  pushdaconstw 0x4280 @ cmp r0, r0
 80045e8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80045ec:	f244 2680 	movw	r6, #17024	; 0x4280
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:103
  bl expect_nos_in_register @ Dieser Register ist anschließend in r1.
 80045f0:	f7fb ffb8 	bl	8000564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:104
  orrs tos, r1
 80045f4:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:107

  @ TOS könnte eine Konstante sein. Diese darf ich jetzt aber nicht über die beiden Konstantenregister generieren...
  ldr r2, [r0, #offset_state_tos]
 80045f6:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:108
  cmp r2, #constant
 80045f8:	2a28      	cmp	r2, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:109
  bne 2f
 80045fa:	d11e      	bne.n	800463a <of_opcodiereinsprung+0x84>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:112
    @ TOS ist eine Konstante.
    @ Kleine Konstanten direkt als cmp-opcode schreiben:
    ldr r2, [r0, #offset_constant_tos]
 80045fc:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:113
    cmp r2, #0xFF
 80045fe:	2aff      	cmp	r2, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:114
    bhi 3f
 8004600:	d808      	bhi.n	8004614 <of_opcodiereinsprung+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:116
      @ Kleine Konstante:
      drop
 8004602:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:117
      pushdaconstw 0x2800
 8004604:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004608:	f642 0600 	movw	r6, #10240	; 0x2800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:118
      orrs tos, r2
 800460c:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:119
      lsls r1, #8
 800460e:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:120
      orrs tos, r1
 8004610:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:121
      b.n 4f
 8004612:	e014      	b.n	800463e <of_opcodiereinsprung+0x88>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:129

.ifndef m0core
  @ TOS ist eine Konstante, aber zu groß für Imm8.
  @ Vielleicht passt sie in Imm12 ?

        pushdatos
 8004614:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:130
        ldr tos, [r0, #offset_constant_tos]
 8004618:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:131
        bl twelvebitencoding @ Hole sie und prüfe, ob sie als Imm12 darstellbar ist.
 800461a:	f7fe fd29 	bl	8003070 <Code_741>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:132
        ldmia psp!, {r2} @ Entweder die Bitmaske oder wieder die Konstante
 800461e:	cf04      	ldmia	r7!, {r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:134

        cmp tos, #0
 8004620:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:135
        drop   @ Preserves Flags !
 8004622:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:136
        beq 3f
 8004624:	d006      	beq.n	8004634 <of_opcodiereinsprung+0x7e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:142
          @ Die Konstante lässt sich als Imm12 darstellen - fein ! Bitmaske liegt in r1 bereit
          @ Prüfe nun den Opcode, und ersetze ihn, falls möglich.

          @ drop @ Den alten cmp r0, r0 Opcode vergessen
          @ pushdatos
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
 8004626:	4e46      	ldr	r6, [pc, #280]	; (8004740 <Code_1131+0x4c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:143
          orrs tos, r2
 8004628:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:145

          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
 800462a:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:146
          bl reversekomma
 800462e:	f7ff f973 	bl	8003918 <Code_884>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:147
          b 5f
 8004632:	e006      	b.n	8004642 <of_opcodiereinsprung+0x8c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:153
3:
.endif

    @ Konstante zu groß. Lade die Konstante in einen freien Register:

    bl expect_tos_in_register
 8004634:	f7fb ff8c 	bl	8000550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:154
    movs r2, r1
 8004638:	000a      	movs	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:157

2:@ TOS ist auch ein Register.
  lsls r2, #3
 800463a:	00d2      	lsls	r2, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:158
  orrs tos, r2
 800463c:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:160

4:bl hkomma
 800463e:	f7ff f93b 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:162

5:bl eliminiere_tos
 8004642:	f7fb fe4c 	bl	80002de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:163
  bl tidyup_register_allocator_tos @ Falls TOS <> r6 an diesem Moment... Falls es eine Konstante gewesen ist, wurde sie eben gerade schon generiert.
 8004646:	f7fb fe95 	bl	8000374 <tidyup_register_allocator_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:165

  b.n of_opcodiereinsprung @ Der klassische Abschluss
 800464a:	e7b4      	b.n	80045b6 <of_opcodiereinsprung>

0800464c <struktur_of>:
struktur_of():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:169


struktur_of:
  popda r0
 800464c:	0030      	movs	r0, r6
 800464e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:170
  cmp r0, tos
 8004650:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:171
  bx lr
 8004652:	4770      	bx	lr

08004654 <Dictionary_1118>:
Dictionary_1118():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:171
 8004654:	0800468a 	.word	0x0800468a
 8004658:	65050030 	.word	0x65050030
 800465c:	666f646e 	.word	0x666f646e

08004660 <Code_1118>:
Code_1118():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:192
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "endof"
  @ ( ... addr-jne #of 9 -- ... addr-jmp #of 8 )
strukturendof:
@------------------------------------------------------------------------------
  cmp tos, #9
 8004660:	2e09      	cmp	r6, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:193
  beq 1f
 8004662:	d000      	beq.n	8004666 <Code_1118+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:194
  b.n strukturen_passen_nicht
 8004664:	e5e7      	b.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:195
1:drop
 8004666:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:197

  push {lr}
 8004668:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:198
  to_r @ #of auf Returnstack  Move #of to Returnstack and out of the way
 800466a:	b440      	push	{r6}
 800466c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:200

    bl branch_v @ here 2 allot
 800466e:	f7ff fd27 	bl	80040c0 <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:201
    swap @ ( here Addr-jne )
 8004672:	6839      	ldr	r1, [r7, #0]
 8004674:	603e      	str	r6, [r7, #0]
 8004676:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:202
    bl v_casebranch @ Den aktuellen of-Block mit bne überspringen   Skip current of-block with a bne opcode
 8004678:	f7ff fd3b 	bl	80040f2 <v_casebranch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:204

  r_from @ #of zurückholen fetch back of#
 800467c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004680:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:205
  pushdaconst 8
 8004682:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004686:	2608      	movs	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:206
  pop {pc}
 8004688:	bd00      	pop	{pc}

0800468a <Dictionary_1126>:
Dictionary_1126():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:206
 800468a:	46d4      	.short	0x46d4
 800468c:	00300800 	.word	0x00300800
 8004690:	646e6507 	.word	0x646e6507
 8004694:	65736163 	.word	0x65736163

08004698 <Code_1126>:
Code_1126():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:213
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "endcase"
  @ ( ... addrs-jmp #of 8 -- )
strukturendcase:
@------------------------------------------------------------------------------
  cmp tos, #8
 8004698:	2e08      	cmp	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:214
  beq 1f
 800469a:	d000      	beq.n	800469e <Code_1126+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:215
  b.n strukturen_passen_nicht
 800469c:	e5cb      	b.n	8004236 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:216
1:drop
 800469e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:218

  push {lr}
 80046a0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:219
  bl drop_hkomma
 80046a2:	f7ff f8ff 	bl	80038a4 <drop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:221

  bl spruenge_einpflegen
 80046a6:	f000 f801 	bl	80046ac <spruenge_einpflegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:222
  pop {pc}
 80046aa:	bd00      	pop	{pc}

080046ac <spruenge_einpflegen>:
spruenge_einpflegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:228


@------------------------------------------------------------------------------
spruenge_einpflegen: @ Internal use only.
@------------------------------------------------------------------------------
  push {lr}
 80046ac:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:231
  @ Einpflegen der gesammelten Sprünge
  @ Fill in collected jumps.
  popda r0 @ Zahl der einzupflegenden Sprünge holen Fetch number of jumps that need to be generated
 80046ae:	0030      	movs	r0, r6
 80046b0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:233

1:cmp r0, #0 @ Sind noch Sprünge zu bearbeiten ? Any jumps left ?
 80046b2:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:234
  beq 2f
 80046b4:	d00d      	beq.n	80046d2 <spruenge_einpflegen+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:236

  push {r0, r1}
 80046b6:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:237
  movs r1, #1          @ Check if this shall be a conditional jump instead. Needed for ?do which reuses this code.
 80046b8:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:238
  ands r1, tos         @ Prüfe, ob es ein bedingter Sprung werden soll - ?do benötigt solche.
 80046ba:	4031      	ands	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:240

  cmp r1, #0
 80046bc:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:241
  beq 3f
 80046be:	d003      	beq.n	80046c8 <spruenge_einpflegen+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:242
    subs tos, #1 @ Markierung für den bedingten Sprung entfernen  Remove temporary bit for this beeing a conditional jump
 80046c0:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:243
    bl v_nullbranch  @ Insert conditional jump
 80046c2:	f7ff fd0c 	bl	80040de <v_nullbranch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:244
    b 4f
 80046c6:	e001      	b.n	80046cc <spruenge_einpflegen+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:246

3:bl v_branch @ Unbedingten Sprung einpflegen  Insert unconditional jump
 80046c8:	f7ff fd03 	bl	80040d2 <v_branch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:248

4:pop {r0, r1}
 80046cc:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:250

  subs r0, #1 @ Ein Sprung weniger übrig  One jump less to do.
 80046ce:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:251
  b 1b
 80046d0:	e7ef      	b.n	80046b2 <spruenge_einpflegen+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:253

2: pop {pc}
 80046d2:	bd00      	pop	{pc}

080046d4 <Dictionary_1129>:
Dictionary_1129():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:253
 80046d4:	080046e8 	.word	0x080046e8
 80046d8:	74050000 	.word	0x74050000
 80046dc:	6e656b6f 	.word	0x6e656b6f

080046e0 <Code_1129>:
token():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:26

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "token" @ ( -- c-addr length )
token:
@ -----------------------------------------------------------------------------
  pushdatos
 80046e0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:27
  movs tos, #32 @ Leerzeichen  Space
 80046e4:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:28
  b.n parse
 80046e6:	e005      	b.n	80046f4 <Code_1131>

080046e8 <Dictionary_1131>:
Dictionary_1131():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:28
 80046e8:	0800474c 	.word	0x0800474c
 80046ec:	70050000 	.word	0x70050000
 80046f0:	65737261 	.word	0x65737261

080046f4 <Code_1131>:
parse():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:34

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "parse" @ ( c -- c-addr length )
parse:
@ -----------------------------------------------------------------------------
  push {r4, lr} @ Eigentlich nur r4 nötig
 80046f4:	b510      	push	{r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:37
  @ Parse nochmal neu überdenken:
     
  ldr r0, =current_source
 80046f6:	4813      	ldr	r0, [pc, #76]	; (8004744 <Code_1131+0x50>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:38
  ldr r1, [r0]     @ Length  of input buffer
 80046f8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:39
  ldr r0, [r0, #4] @ Pointer to input buffer
 80046fa:	6840      	ldr	r0, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:41

  ldr r2, =Pufferstand
 80046fc:	4a12      	ldr	r2, [pc, #72]	; (8004748 <Code_1131+0x54>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:42
  ldr r2, [r2] @ Current >IN gauge
 80046fe:	6812      	ldr	r2, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:44

  adds r4, r0, r2 @ Start address of parsed string
 8004700:	1884      	adds	r4, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:47

  @ Speziell for Token, falls das Trennzeichen das Leerzeichen ist:
  cmp tos, #32
 8004702:	2e20      	cmp	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:48
  bne 2f
 8004704:	d107      	bne.n	8004716 <Code_1131+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:50

1:  cmp r1, r2 @ Any characters left ?
 8004706:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:51
    beq 3f
 8004708:	d00f      	beq.n	800472a <Code_1131+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:52
      ldrb r3, [r0, r2] @ Fetch character
 800470a:	5c83      	ldrb	r3, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:53
      cmp r3, tos @ Ist es das Leerzeichen ? Is this the delimiter which is space in this loop ?
 800470c:	42b3      	cmp	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:54
      bne 2f
 800470e:	d102      	bne.n	8004716 <Code_1131+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:55
        adds r2, #1     @ Don't collect spaces, advance >IN to skip.
 8004710:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:56
        adds r4, r0, r2 @ Recalculate start address of parsed string
 8004712:	1884      	adds	r4, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:57
        b 1b
 8004714:	e7f7      	b.n	8004706 <Code_1131+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:60

2:@ Sammelschleife. Collecting loop.
  cmp r1, r2 @ Any characters left ?
 8004716:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:61
  beq 3f
 8004718:	d007      	beq.n	800472a <Code_1131+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:62
    ldrb r3, [r0, r2] @ Fetch character
 800471a:	5c83      	ldrb	r3, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:63
    adds r2, #1       @ Advance >IN
 800471c:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:64
    cmp r3, tos @ Is this the delimiter ?
 800471e:	42b3      	cmp	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:65
    bne 2b
 8004720:	d1f9      	bne.n	8004716 <Code_1131+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:67
      @ Finished, fallthrough for delimiter detected.
      adds tos, r0, r2
 8004722:	1886      	adds	r6, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:68
      subs tos, r4
 8004724:	1b36      	subs	r6, r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:69
      subs tos, #1 @ Delimiter should not be part of the parsed string but needs to be count in >IN
 8004726:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:70
      b 4f
 8004728:	e001      	b.n	800472e <Code_1131+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:73

3:@ Finished. Fallthrough for end-of-string. Calculate length of parsed string
  adds tos, r0, r2
 800472a:	1886      	adds	r6, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:74
  subs tos, r4
 800472c:	1b36      	subs	r6, r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:77

4:@ Store start address
  subs psp, #4
 800472e:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:78
  str r4, [psp]
 8004730:	603c      	str	r4, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:81

  @ Store new >IN
  ldr r0, =Pufferstand
 8004732:	4805      	ldr	r0, [pc, #20]	; (8004748 <Code_1131+0x54>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:82
  str r2, [r0] @ Fresh >IN gauge
 8004734:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:84

  pop {r4, pc}
 8004736:	bd10      	pop	{r4, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:43
  ldr r0, =struktur_qof
 8004738:	0800458e 	.word	0x0800458e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:57
  ldr r0, =struktur_of
 800473c:	0800464c 	.word	0x0800464c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/case.s:142
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
 8004740:	f1b00f00 	.word	0xf1b00f00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:37
  ldr r0, =current_source
 8004744:	2407ffdc 	.word	0x2407ffdc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:41
  ldr r2, =Pufferstand
 8004748:	2407ffe4 	.word	0x2407ffe4

0800474c <Dictionary_1132>:
Dictionary_1132():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/token.s:41
 800474c:	0800478a 	.word	0x0800478a
 8004750:	64050000 	.word	0x64050000
 8004754:	74696769 	.word	0x74696769

08004758 <Code_1132>:
Code_1132():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:32

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "digit" @ ( Zeichen -- false / Ziffer true )
digit:  @ ( c -- false / u true ) Converts a character into a digit.
@ -----------------------------------------------------------------------------
  ldr r3, =base
 8004758:	4bcf      	ldr	r3, [pc, #828]	; (8004a98 <Code_1195+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:33
  ldr r3, [r3]
 800475a:	681b      	ldr	r3, [r3, #0]

0800475c <digit_base_r3>:
digit_base_r3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:36

digit_base_r3:  @ Erwartet Base in r3  Base has to be in r3 if you enter here.
  subs tos, #48 @ "0" abziehen.  Subtract "0"
 800475c:	3e30      	subs	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:37
  blo 5f        @ negativ --> Zeichen war "unter Null"  Negative ? --> Invalid character.
 800475e:	d30b      	bcc.n	8004778 <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:39

  cmp tos, #10  @ Im Bereich bis "9" ?  In range up to "9" ?
 8004760:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:40
  blo 4f        @ Ziffer korrekt erkannt.  Digit recognized properly.
 8004762:	d30b      	bcc.n	800477c <digit_base_r3+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:46

  @ Nein: Also ist die Ziffer nicht in den Zahlen 0-9 enthalten gewesen.
  @ Prüfe Buchstaben.
  @ Character is a letter.

  subs tos, #7  @ Anfang der Großbuchstaben, "A"   Beginning of capital letters "A"
 8004764:	3e07      	subs	r6, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:47
  cmp tos, #10  @ Buchstabenwerte beginnen bei 10  Values of letters start with 10
 8004766:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:48
  blo 5f        @ --> Zeichen war ein Sonderzeichen zwischen Ziffern und Großbuchstaben.
 8004768:	d306      	bcc.n	8004778 <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:51
                @ --> Character has been a special one between numbers and capital letters.

  cmp tos, #36  @ Es gibt 26 Buchstaben.  26 letters available.
 800476a:	2e24      	cmp	r6, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:52
  blo 4f        @ In dem Bereich: Ziffer korrekt erkannt.  In this range ? Digit recognized properly.
 800476c:	d306      	bcc.n	800477c <digit_base_r3+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:57

  @ Für den Fall, dass die Ziffer immer noch nicht erkannt ist, probiere es mit den Kleinbuchstaben.
  @ Try to recognize small letters.

  subs tos, #32 @ Schiebe zum Anfang der Kleinbuchstaben, "a"  Beginning of small letters "a"
 800476e:	3e20      	subs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:58
  cmp tos, #10  @ Buchstabenwerte beginnen bei 10  Values of letters start with 10
 8004770:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:59
  blo 5f        @ --> Zeichen war ein Sonderzeichen zwischen Großbuchstaben und Kleinbuchstaben.
 8004772:	d301      	bcc.n	8004778 <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:62
                @ --> Character has been a special one between small and capital letters.

  cmp tos, #36  @ Es gibt 26 Buchstaben.  26 letters available.
 8004774:	2e24      	cmp	r6, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:63
  blo 4f        @ In dem Bereich: Ziffer korrekt erkannt.  In this range ? Digit recognized properly.
 8004776:	d301      	bcc.n	800477c <digit_base_r3+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:72
  @ Not yet recognized ? --> Character has been a special one above small letters or in Unicode.
  @ No valid digit then..


5: @ Aussprung mit Fehler  Error.
  movs tos, #0    @ False-Flag
 8004778:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:73
  bx lr
 800477a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:79

4: @ Korrekt erkannt. Ziffer in tos

  @ Prüfe nun noch, ob die Ziffer innerhalb der Basis liegt !
  @ Do not accept digits greater than current base
  cmp tos, r3 @ r3 enthält von number aus die Basis.
 800477c:	429e      	cmp	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:80
  bhs 5b     @ Außerhalb der Basis werden keine Buchstaben als Zahlen akzeptiert.
 800477e:	d2fb      	bcs.n	8004778 <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:82

  pushdatos
 8004780:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:83
  movs tos, #0
 8004784:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:84
  mvns tos, tos @ True-Flag bereitlegen
 8004786:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:85
  bx lr
 8004788:	4770      	bx	lr

0800478a <Dictionary_1134>:
Dictionary_1134():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:85
 800478a:	4894      	.short	0x4894
 800478c:	00000800 	.word	0x00000800
 8004790:	6d756e06 	.word	0x6d756e06
 8004794:	6562      	.short	0x6562
 8004796:	72          	.byte	0x72
	...

08004798 <Code_1134>:
Code_1134():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:113
  @ r2: Character or helper
  @ r3: Base
  @ r4: Result-Low
  @ r5: Result-High

  push {r0, r1, r2, r3, r4, r5, lr}
 8004798:	b53f      	push	{r0, r1, r2, r3, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:115

  popda r1          @ Hole die Länge des Strings  Fetch length of string
 800479a:	0031      	movs	r1, r6
 800479c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:116
  subs r0, tos, #1  @ Hole die Stringadresse      Fetch string address
 800479e:	1e70      	subs	r0, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:118

  movs tos, #1  @ Single length result
 80047a0:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:120

  movs r2, #1   @ Positive Sign
 80047a2:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:121
  push {r2}
 80047a4:	b404      	push	{r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:123

  ldr r3, =base
 80047a6:	4bbc      	ldr	r3, [pc, #752]	; (8004a98 <Code_1195+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:124
  ldr r3, [r3]
 80047a8:	681b      	ldr	r3, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:126

  movs r4, #0   @ Clear result low
 80047aa:	2400      	movs	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:127
  movs r5, #0   @              high
 80047ac:	2500      	movs	r5, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:133

  @ ( Single R: Positive )


1: @ Sind noch Zeichen da ?  Any characters left ?
  cmp r1, #0
 80047ae:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:134
  beq 4f @ String ist leer, bin fertig !
 80047b0:	d03c      	beq.n	800482c <Code_1134+0x94>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:137

  @ Hole ein Zeichen:  Fetch a character
  adds r0, #1 @ Pointer weiterrücken
 80047b2:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:138
  subs r1, #1 @ Länge um eins verringern
 80047b4:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:139
  ldrb r2, [r0] @ Zeichen holen.
 80047b6:	7802      	ldrb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:142

  @ Vorzeichen und Basisvorsilben:  Sign and base prefixes:
  cmp r2, #45   @ Minus ?
 80047b8:	2a2d      	cmp	r2, #45	; 0x2d
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:143
  bne 2f
 80047ba:	d104      	bne.n	80047c6 <Code_1134+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:144
    add sp, #4   @ rdrop
 80047bc:	b001      	add	sp, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:145
    movs r2, #0
 80047be:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:146
    mvns r2, r2   @ -1
 80047c0:	43d2      	mvns	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:147
    push {r2}
 80047c2:	b404      	push	{r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:148
    b 1b
 80047c4:	e7f3      	b.n	80047ae <Code_1134+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:150

2:cmp r2, #35   @ # ?
 80047c6:	2a23      	cmp	r2, #35	; 0x23
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:151
  bne 2f
 80047c8:	d101      	bne.n	80047ce <Code_1134+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:152
    movs r3, #10 @ Umschalten auf Dezimal
 80047ca:	230a      	movs	r3, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:153
    b 1b
 80047cc:	e7ef      	b.n	80047ae <Code_1134+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:155

2:cmp r2, #36   @ $ ?
 80047ce:	2a24      	cmp	r2, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:156
  bne 2f
 80047d0:	d101      	bne.n	80047d6 <Code_1134+0x3e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:157
    movs r3, #16 @ Umschalten auf Hexadezimal
 80047d2:	2310      	movs	r3, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:158
    b 1b
 80047d4:	e7eb      	b.n	80047ae <Code_1134+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:160

2:cmp r2, #37   @ % ?
 80047d6:	2a25      	cmp	r2, #37	; 0x25
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:161
  bne 2f
 80047d8:	d101      	bne.n	80047de <Code_1134+0x46>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:162
    movs r3, #2  @ Umschalten auf Binär
 80047da:	2302      	movs	r3, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:163
    b 1b
 80047dc:	e7e7      	b.n	80047ae <Code_1134+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:165

2:cmp r2, #46   @ . ?
 80047de:	2a2e      	cmp	r2, #46	; 0x2e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:166
  bne 2f
 80047e0:	d101      	bne.n	80047e6 <Code_1134+0x4e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:167
    movs tos, #2   @ Double length result !
 80047e2:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:168
    b 1b
 80047e4:	e7e3      	b.n	80047ae <Code_1134+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:170

2:cmp r2, #44  @ , ?
 80047e6:	2a2c      	cmp	r2, #44	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:171
  beq.n number_nachkommastellen
 80047e8:	d036      	beq.n	8004858 <number_nachkommastellen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:175


  @ Wandele das Zeichen  Convert character
  pushda r2
 80047ea:	f847 6d04 	str.w	r6, [r7, #-4]!
 80047ee:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:176
  bl digit_base_r3
 80047f0:	f7ff ffb4 	bl	800475c <digit_base_r3>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:177
  cmp tos, #0 @ Bei false mochte digit das Zeichen nicht.  Error ?
 80047f4:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:178
  drop        @ Flag runterwerfen  Drop the Flag from digit
 80047f6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:179
    beq 5f      @ Aussprung mit Fehler.
 80047f8:	d02b      	beq.n	8004852 <Code_1134+0xba>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:184

  @ Zeichen wurde gemocht.  Character has been successfully converted to a digit.

  @ Multiply old result with base:
  pushda r4 @ Low
 80047fa:	f847 6d04 	str.w	r6, [r7, #-4]!
 80047fe:	0026      	movs	r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:185
  pushda r5 @ High
 8004800:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004804:	002e      	movs	r6, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:186
  pushda r3 @ Base-Low
 8004806:	f847 6d04 	str.w	r6, [r7, #-4]!
 800480a:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:187
  pushdaconst 0 @ Base-High
 800480c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004810:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:189

  push {r0, r1, r2, r3}
 8004812:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:190
    bl ud_star
 8004814:	f7fc f8fb 	bl	8000a0e <Code_116>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:191
  pop {r0, r1, r2, r3}
 8004818:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:193

  popda r5 @ High
 800481a:	0035      	movs	r5, r6
 800481c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:194
  popda r4 @ Low
 800481e:	0034      	movs	r4, r6
 8004820:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:196

  movs r2, #0 @ For addition with Carry
 8004822:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:197
  adds r4, tos
 8004824:	19a4      	adds	r4, r4, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:198
  adcs r5, r2
 8004826:	4155      	adcs	r5, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:199
  drop
 8004828:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:201

  b 1b
 800482a:	e7c0      	b.n	80047ae <Code_1134+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:206


4:@ String ist leer und wurde korrekt umgewandelt.  String is empty. Almost done...
  @ Vorzeichen beachten:  Take care of sign.
  pop {r2} @ Fetch back sign
 800482c:	bc04      	pop	{r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:207
  cmp r2, #0
 800482e:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:208
  bpl 3f
 8004830:	d504      	bpl.n	800483c <Code_1134+0xa4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:211

    @ dnegate in Register:
    movs r2, #0
 8004832:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:212
    mvns r4, r4
 8004834:	43e4      	mvns	r4, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:213
    mvns r5, r5
 8004836:	43ed      	mvns	r5, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:214
    adds r4, #1
 8004838:	3401      	adds	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:215
    adcs r5, r2
 800483a:	4155      	adcs	r5, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:217

3:movs r3, tos  @ Length of result:
 800483c:	0033      	movs	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:218
  movs tos, r4  @ Low or single result
 800483e:	0026      	movs	r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:219
  cmp r3, #1
 8004840:	2b01      	cmp	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:220
  beq 3f
 8004842:	d002      	beq.n	800484a <Code_1134+0xb2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:221
    pushda r5   @ High result
 8004844:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004848:	002e      	movs	r6, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:222
3:pushda r3     @ Length on Stack
 800484a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800484e:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:224

  pop {r0, r1, r2, r3, r4, r5, pc}
 8004850:	bd3f      	pop	{r0, r1, r2, r3, r4, r5, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:228


5: @ Digit mochte das Zeichen nicht. Return without success.
  add sp, #4   @ Forget sign
 8004852:	b001      	add	sp, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:229
  movs tos, #0  @ No result
 8004854:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:230
  pop {r0, r1, r2, r3, r4, r5, pc}
 8004856:	bd3f      	pop	{r0, r1, r2, r3, r4, r5, pc}

08004858 <number_nachkommastellen>:
number_nachkommastellen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:235



number_nachkommastellen: @ Digits after the decimal point.
  movs r5, r4   @ Low part is "high" part before comma now.
 8004858:	0025      	movs	r5, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:236
  movs r4, #0   @ Clear low part. To be filled with digits after comma.
 800485a:	2400      	movs	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:237
  movs tos, #2  @ Double length result !
 800485c:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:240

1: @ Sind noch Zeichen da ?  Any characters left ?
  cmp r1, #0
 800485e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:241
  beq 4b @ String ist leer, bin fertig !
 8004860:	d0e4      	beq.n	800482c <Code_1134+0x94>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:244

  @ Fetch a character from end of string:
  ldrb r2, [r0, r1] @ Zeichen holen.
 8004862:	5c42      	ldrb	r2, [r0, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:245
  subs r1, #1 @ Länge um eins verringern
 8004864:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:247

  cmp r2, #46   @ . ?
 8004866:	2a2e      	cmp	r2, #46	; 0x2e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:248
  beq 1b        @ Accept more dots for clarity, already double result.
 8004868:	d0f9      	beq.n	800485e <number_nachkommastellen+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:252


 @ Wandele das Zeichen  Convert character
  pushda r2
 800486a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800486e:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:253
  bl digit_base_r3
 8004870:	f7ff ff74 	bl	800475c <digit_base_r3>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:254
  cmp tos, #0 @ Bei false mochte digit das Zeichen nicht.  Error ?
 8004874:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:255
  drop        @ Flag runterwerfen  Drop the Flag from digit
 8004876:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:256
    beq 5b      @ Aussprung mit Fehler.
 8004878:	d0eb      	beq.n	8004852 <Code_1134+0xba>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:260

  @ Zeichen wurde gemocht.  Character has been successfully converted to a digit.

  subs psp, #4
 800487a:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:261
  str r4, [psp] @ Low-Old
 800487c:	603c      	str	r4, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:262
  pushda r3 @ Base
 800487e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004882:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:265

  @ ( Old New-Digit Base )
  push {r0, r1, r2, r3}
 8004884:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:266
  bl um_slash_mod @ ( Remainder New.. )
 8004886:	f7fc f971 	bl	8000b6c <Code_152>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:267
  pop {r0, r1, r2, r3}
 800488a:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:268
  popda r4
 800488c:	0034      	movs	r4, r6
 800488e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:269
  drop
 8004890:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:271

  b 1b
 8004892:	e7e4      	b.n	800485e <number_nachkommastellen+0x6>

08004894 <Dictionary_1161>:
Dictionary_1161():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:271
 8004894:	080048b6 	.word	0x080048b6
 8004898:	2e060000 	.word	0x2e060000
 800489c:	69676964 	.word	0x69676964
 80048a0:	74          	.byte	0x74
	...

080048a2 <Code_1161>:
Code_1161():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:286
               @ Wenn ein Zahlensystem größer 36 angestrebt wird,
               @ werden nicht druckbare Zeichen einfach mit # beschrieben.
digitausgeben: @ ( u -- c ) Converts a digit into a character.
               @ If base is bigger than 36, unprintable digits are written as #
@ -----------------------------------------------------------------------------
  cmp tos, #10   @ Von 0-9:
 80048a2:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:287
  bhs 1f
 80048a4:	d201      	bcs.n	80048aa <Code_1161+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:288
    adds tos, #48 @ Schiebe zum Anfang der Zahlen  Shift to beginning of ASCII numbers
 80048a6:	3630      	adds	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:289
    bx lr
 80048a8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:291

1:cmp tos, #36   @ Von A-Z:
 80048aa:	2e24      	cmp	r6, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:292
  bhs 2f
 80048ac:	d201      	bcs.n	80048b2 <Code_1161+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:293
    adds tos, #55 @ Alternative für Kleinbuchstaben: 87.                 For small letters: 87.
 80048ae:	3637      	adds	r6, #55	; 0x37
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:294
    bx lr
 80048b0:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:296

2:movs tos, #35 @ Zeichen #, falls diese Ziffer nicht darstellbar ist. Character #, if digit is not printable
 80048b2:	2623      	movs	r6, #35	; 0x23
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:297
  bx lr
 80048b4:	4770      	bx	lr

080048b6 <Dictionary_1162>:
Dictionary_1162():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:297
 80048b6:	48ec      	.short	0x48ec
 80048b8:	00000800 	.word	0x00000800
 80048bc:	6c6f6804 	.word	0x6c6f6804
 80048c0:	64          	.byte	0x64
	...

080048c2 <Code_1162>:
Code_1162():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:316
  @ New String:  | Length + 1 | New |

  @ Old String:  | Length     | I   | II  | III |     |
  @ New String:  | Length + 1 | New | I   | II  | III |

  popda r3 @ Das einzufügende Zeichen
 80048c2:	0033      	movs	r3, r6
 80048c4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:318

  ldr r0, =Zahlenpuffer
 80048c6:	4875      	ldr	r0, [pc, #468]	; (8004a9c <Code_1195+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:319
  ldrb r1, [r0] @ Länge holen
 80048c8:	7801      	ldrb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:321

  cmp r1, #Zahlenpufferlaenge  @ Ist der Puffer voll ? Number buffer full ?
 80048ca:	2943      	cmp	r1, #67	; 0x43
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:322
  bhs 3f                       @ Keine weiteren Zeichen mehr annehmen.
 80048cc:	d20d      	bcs.n	80048ea <Code_1162+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:325

  @ Länge des Puffers um 1 erhöhen  Increment length
  adds r1, #1
 80048ce:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:326
  strb r1, [r0] @ Aktualisierte Länge schreiben
 80048d0:	7001      	strb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:329

  @ Am Ende anfangen:  Start moving with the end
  adds r0, r1 @ Zeiger an die freie Stelle für das neue Zeichen
 80048d2:	1840      	adds	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:332

  @ Ist die Länge jetzt genau 1 Zeichen ? Dann muss ich nichs schieben.
  cmp r1, #1  @ Check if at least one character has to be moved
 80048d4:	2901      	cmp	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:333
  beq 2f
 80048d6:	d007      	beq.n	80048e8 <Code_1162+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:336

1:@ Schiebeschleife:  Move characters !
  subs r0, #1
 80048d8:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:337
  ldrb r2, [r0] @ Holen an der Stelle-1  Fetch from current location-1
 80048da:	7802      	ldrb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:338
  adds r0, #1
 80048dc:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:339
  strb r2, [r0] @ Schreiben an der Stelle  Write current location
 80048de:	7002      	strb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:340
  subs r0, #1 @ Weiterrücken  Advance Pointers
 80048e0:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:342

  subs r1, #1
 80048e2:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:343
  cmp r1, #1 @ Bis nur noch ein Zeichen bleibt. Das ist das Neue.
 80048e4:	2901      	cmp	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:344
  bne 1b     @ Until there is only one character left - the new one.
 80048e6:	d1f7      	bne.n	80048d8 <Code_1162+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:347

2:@ Das neue Zeichen an seinen Platz legen
  strb r3, [r0] @ Insert new character
 80048e8:	7003      	strb	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:349

3:bx lr
 80048ea:	4770      	bx	lr

080048ec <Dictionary_1164>:
Dictionary_1164():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:349
 80048ec:	0800490c 	.word	0x0800490c
 80048f0:	68050000 	.word	0x68050000
 80048f4:	3c646c6f 	.word	0x3c646c6f

080048f8 <Code_1164>:
Code_1164():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:355

@------------------------------------------------------------------------------
 Wortbirne Flag_visible, "hold<"
zahlanhaengen: @ ( Character -- ) Insert one character at the end of number buffer
@------------------------------------------------------------------------------
  popda r3 @ Das einzufügende Zeichen
 80048f8:	0033      	movs	r3, r6
 80048fa:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:357

  ldr r0, =Zahlenpuffer
 80048fc:	4867      	ldr	r0, [pc, #412]	; (8004a9c <Code_1195+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:358
  ldrb r1, [r0] @ Länge holen
 80048fe:	7801      	ldrb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:360

  cmp r1, #Zahlenpufferlaenge  @ Ist der Puffer voll ? Number buffer full ?
 8004900:	2943      	cmp	r1, #67	; 0x43
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:361
  bhs 3f                       @ Keine weiteren Zeichen mehr annehmen.
 8004902:	d202      	bcs.n	800490a <Code_1164+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:363

    adds r1, #1 @ Ein Zeichen mehr
 8004904:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:364
    strb r1, [r0] @ Neue Länge schreiben
 8004906:	7001      	strb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:365
    strb r3, [r0, r1] @ Neues Zeichen am Ende anhängen
 8004908:	5443      	strb	r3, [r0, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:366
3:bx lr
 800490a:	4770      	bx	lr

0800490c <Dictionary_1166>:
Dictionary_1166():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:366
 800490c:	08004924 	.word	0x08004924
 8004910:	73040000 	.word	0x73040000
 8004914:	6769      	.short	0x6769
 8004916:	6e          	.byte	0x6e
	...

08004918 <Code_1166>:
Code_1166():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:375
vorzeichen: @ ( Vorzeichen -- )
      @ Prüft die Zahl auf dem Stack auf ihr Vorzeichen hin und
      @ fügt bei Bedarf ein Minus an den Ziffernstring an.
      @ Checks flag of number on stack and adds a minus to number buffer if it is negative.
@------------------------------------------------------------------------------
  cmp tos, #0
 8004918:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:376
  bmi 1f
 800491a:	d401      	bmi.n	8004920 <Code_1166+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:377
  drop
 800491c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:378
  bx lr
 800491e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:380

1:movs tos, #45  @ Minuszeichen  ASCII for minus
 8004920:	262d      	movs	r6, #45	; 0x2d
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:381
  b.n hold         @ an den Zahlenpuffer anhängen  put it into number buffer
 8004922:	e7ce      	b.n	80048c2 <Code_1162>

08004924 <Dictionary_1168>:
Dictionary_1168():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:381
 8004924:	08004938 	.word	0x08004938
 8004928:	23020000 	.word	0x23020000
 800492c:	3e          	.byte	0x3e
	...

0800492e <Code_1168>:
Code_1168():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:389
  Wortbirne Flag_visible, "#>" @ ( ZahlenrestL (ZahlenrestH) -- Addr Len )
zifferstringende:  @ Schließt einen neuen Ziffernstring ab und gibt seine Adresse zurück.
                   @ Benutzt dafür einfach den Zahlenpuffer.
                   @ Finishes a number string and gives back its address.
@------------------------------------------------------------------------------
  ldr r0, =Zahlenpuffer
 800492e:	485b      	ldr	r0, [pc, #364]	; (8004a9c <Code_1195+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:390
  ldrb tos, [r0]
 8004930:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:391
  adds r0, #1
 8004932:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:392
  str r0, [psp]
 8004934:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:393
  bx lr
 8004936:	4770      	bx	lr

08004938 <Dictionary_1169>:
Dictionary_1169():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:393
 8004938:	08004950 	.word	0x08004950
 800493c:	66030000 	.word	0x66030000
 8004940:	5323      	.short	0x5323

08004942 <Code_1169>:
Code_1169():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:400
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "f#S"
falleziffern: @ ( u -- u=0 )
      @ Inserts all digits, at least one, into number buffer.
@------------------------------------------------------------------------------
  push {r4, lr}
 8004942:	b510      	push	{r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:401
  movs r4, #32
 8004944:	2420      	movs	r4, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:403

1:bl fziffer
 8004946:	f000 f808 	bl	800495a <Code_1170>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:404
  subs r4, #1
 800494a:	3c01      	subs	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:405
  bne 1b
 800494c:	d1fb      	bne.n	8004946 <Code_1169+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:407

  pop {r4, pc}
 800494e:	bd10      	pop	{r4, pc}

08004950 <Dictionary_1170>:
Dictionary_1170():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:407
 8004950:	08004972 	.word	0x08004972
 8004954:	66020000 	.word	0x66020000
 8004958:	23          	.byte	0x23
	...

0800495a <Code_1170>:
fziffer():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:416
fziffer: @ ( u -- u )
      @ Insert one more digit into number buffer
@------------------------------------------------------------------------------
  @ Handles parts after decimal point
  @ Idea: Multiply with base, next digit will be shifted into high-part of multiplication result.
  push {lr}
 800495a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:417
    pushdatos
 800495c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:418
    ldr tos, =base
 8004960:	4e4d      	ldr	r6, [pc, #308]	; (8004a98 <Code_1195+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:419
    ldr tos, [tos] @ Base
 8004962:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:420
    bl um_star     @ ( After-Decimal-Point Base -- Low High )
 8004964:	f7fc f815 	bl	8000992 <Code_112>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:421
    bl digitausgeben @ ( Low=Still-after-decimal-point Character )
 8004968:	f7ff ff9b 	bl	80048a2 <Code_1161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:422
    bl zahlanhaengen @ Add character to number buffer
 800496c:	f7ff ffc4 	bl	80048f8 <Code_1164>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:423
  pop {pc}
 8004970:	bd00      	pop	{pc}

08004972 <Dictionary_1172>:
Dictionary_1172():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:423
 8004972:	498e      	.short	0x498e
 8004974:	00000800 	.word	0x00000800
 8004978:	2302      	.short	0x2302
 800497a:	53          	.byte	0x53
	...

0800497c <Code_1172>:
Code_1172():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:432
alleziffern: @ ( d-Zahl -- d-Zahl=0 )
      @ Fügt alle Ziffern, jedoch mindestens eine,
      @ an den im Aufbau befindlichen String an.
      @ Inserts all digits, at least one, into number buffer.
@------------------------------------------------------------------------------
  push {lr}
 800497c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:433
1:bl ziffer
 800497e:	f000 f80a 	bl	8004996 <Code_1173>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:434
  cmp tos, #0
 8004982:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:435
  bne 1b
 8004984:	d1fb      	bne.n	800497e <Code_1172+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:437

  ldr r0, [psp]
 8004986:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:438
  cmp r0, #0
 8004988:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:439
  bne 1b
 800498a:	d1f8      	bne.n	800497e <Code_1172+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:440
  pop {pc}
 800498c:	bd00      	pop	{pc}

0800498e <Dictionary_1173>:
Dictionary_1173():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:440
 800498e:	49ba      	.short	0x49ba
 8004990:	00000800 	.word	0x00000800
 8004994:	2301      	.short	0x2301

08004996 <Code_1173>:
ziffer():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:452
@------------------------------------------------------------------------------
  @ Idea: Divide by base. Remainder is digit, Result is to be handled in next run.
  @ Idee dahinter: Teile durch die Basis.
  @ Bekomme einen Rest, und einen Teil, den ich im nächsten Durchlauf
  @ behandeln muss. Der Rest ist die Ziffer.
  push {lr}
 8004996:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:453
    pushdatos
 8004998:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:454
    ldr tos, =base
 800499c:	4e3e      	ldr	r6, [pc, #248]	; (8004a98 <Code_1195+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:455
    ldr tos, [tos] @ Base-Low
 800499e:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:456
    pushdaconst 0  @ Base-High
 80049a0:	f847 6d04 	str.w	r6, [r7, #-4]!
 80049a4:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:458
    @ ( uL uH BaseL BaseH )
    bl ud_slash_mod
 80049a6:	f7fc f900 	bl	8000baa <Code_161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:460
    @ ( RemainderL RemainderH uL uH )
    bl dswap
 80049aa:	f7fb fe60 	bl	800066e <Code_72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:462
    @ ( uL uH RemainderL RemainderH )
    drop
 80049ae:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:464
    @ ( uL uH RemainderL )
    bl digitausgeben
 80049b0:	f7ff ff77 	bl	80048a2 <Code_1161>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:466
    @ ( uL uH digit )
    bl hold
 80049b4:	f7ff ff85 	bl	80048c2 <Code_1162>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:468
    @ ( uL uH )
  pop {pc}
 80049b8:	bd00      	pop	{pc}

080049ba <Dictionary_1178>:
Dictionary_1178():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:468
 80049ba:	49cc      	.short	0x49cc
 80049bc:	00000800 	.word	0x00000800
 80049c0:	3c02      	.short	0x3c02
 80049c2:	23          	.byte	0x23
	...

080049c4 <Code_1178>:
Code_1178():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:476
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "<#" @ ( d-Zahl -- d-Zahl )
zifferstringanfang: @ Eröffnet einen neuen Ziffernstring.
                    @ Opens a number string
@------------------------------------------------------------------------------
  ldr r0, =Zahlenpuffer @ Länge löschen, bisherige Länge Null.
 80049c4:	4835      	ldr	r0, [pc, #212]	; (8004a9c <Code_1195+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:477
  movs r1, #0
 80049c6:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:478
  strb r1, [r0]
 80049c8:	7001      	strb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:479
  bx lr
 80049ca:	4770      	bx	lr

080049cc <Dictionary_1179>:
Dictionary_1179():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:479
 80049cc:	080049de 	.word	0x080049de
 80049d0:	66020000 	.word	0x66020000
 80049d4:	2e          	.byte	0x2e
	...

080049d6 <Code_1179>:
Code_1179():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:486
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "f."
      @ ( Low High -- )
      @ Prints a s31.32 number
@------------------------------------------------------------------------------
  pushdaconst 32
 80049d6:	f847 6d04 	str.w	r6, [r7, #-4]!
 80049da:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:487
  b.n fdotn
 80049dc:	e004      	b.n	80049e8 <Code_1182>

080049de <Dictionary_1182>:
Dictionary_1182():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:487
 80049de:	4a2c      	.short	0x4a2c
 80049e0:	00000800 	.word	0x00000800
 80049e4:	6e2e6603 	.word	0x6e2e6603

080049e8 <Code_1182>:
fdotn():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:495
  Wortbirne Flag_visible, "f.n"
      @ ( Low High n -- )
      @ Prints a s31.32 number with given number of fractional digits
fdotn:
@------------------------------------------------------------------------------
  push {lr}
 80049e8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:496
  push {r4}
 80049ea:	b410      	push	{r4}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:497
  popda r4
 80049ec:	0034      	movs	r4, r6
 80049ee:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:500

  @ ( Low High -- )
  bl tuck @ ( Sign Low High )
 80049f0:	f7fc faf8 	bl	8000fe4 <Code_208>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:501
  bl dabs @ ( Sign uLow uHigh )
 80049f4:	f7fb ff52 	bl	800089c <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:503

  pushdaconst 0  @ ( Sign After-decimal-point=uL Before-decimal-point-low=uH Before-decimal-point-high=0 )
 80049f8:	f847 6d04 	str.w	r6, [r7, #-4]!
 80049fc:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:504
  bl zifferstringanfang
 80049fe:	f7ff ffe1 	bl	80049c4 <Code_1178>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:506

  bl alleziffern @ Processing of high-part finished. ( Sign uL 0 0 )
 8004a02:	f7ff ffbb 	bl	800497c <Code_1172>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:507
  drop @ ( Sign uL 0 )
 8004a06:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:509

  movs tos, #44 @ Add a comma to number buffer ( Sign uL 44 )
 8004a08:	262c      	movs	r6, #44	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:510
  bl zahlanhaengen @ ( Sign uL )
 8004a0a:	f7ff ff75 	bl	80048f8 <Code_1164>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:512

  cmp r4, #0
 8004a0e:	2c00      	cmp	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:513
  beq 2f
 8004a10:	d003      	beq.n	8004a1a <Code_1182+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:515

1:bl fziffer   @ Processing of fractional parts ( Sign 0 )
 8004a12:	f7ff ffa2 	bl	800495a <Code_1170>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:516
  subs r4, #1
 8004a16:	3c01      	subs	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:517
  bne 1b
 8004a18:	d1fb      	bne.n	8004a12 <Code_1182+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:519

2:pop {r4}
 8004a1a:	bc10      	pop	{r4}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:520
  drop
 8004a1c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:521
  bl vorzeichen
 8004a1e:	f7ff ff7b 	bl	8004918 <Code_1166>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:523

  pushdatos @ Will be removed later
 8004a22:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:524
  pushdatos
 8004a26:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:525
  b.n abschluss_zahlenausgabe
 8004a2a:	e01c      	b.n	8004a66 <abschluss_zahlenausgabe>

08004a2c <Dictionary_1190>:
Dictionary_1190():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:525
 8004a2c:	08004a42 	.word	0x08004a42
 8004a30:	75030000 	.word	0x75030000
 8004a34:	2e64      	.short	0x2e64

08004a36 <Code_1190>:
Code_1190():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:532
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "ud." @ ( ud -- )
uddot:  @ Prints an unsigned double number
@------------------------------------------------------------------------------
  @ In Forth: <# #S #>
  push {lr}
 8004a36:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:533
  bl zifferstringanfang
 8004a38:	f7ff ffc4 	bl	80049c4 <Code_1178>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:534
  bl alleziffern
 8004a3c:	f7ff ff9e 	bl	800497c <Code_1172>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:535
  b.n abschluss_zahlenausgabe
 8004a40:	e011      	b.n	8004a66 <abschluss_zahlenausgabe>

08004a42 <Dictionary_1191>:
Dictionary_1191():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:535
 8004a42:	4a74      	.short	0x4a74
 8004a44:	00000800 	.word	0x00000800
 8004a48:	6402      	.short	0x6402
 8004a4a:	2e          	.byte	0x2e
	...

08004a4c <Code_1191>:
Code_1191():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:541

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "d." @ ( d -- )
ddot:   @ Prints a signed double number
@------------------------------------------------------------------------------
  push {lr}
 8004a4c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:542
  bl tuck
 8004a4e:	f7fc fac9 	bl	8000fe4 <Code_208>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:543
  bl dabs
 8004a52:	f7fb ff23 	bl	800089c <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:545

  bl zifferstringanfang
 8004a56:	f7ff ffb5 	bl	80049c4 <Code_1178>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:546
  bl alleziffern @ ( Sign 0 0 )
 8004a5a:	f7ff ff8f 	bl	800497c <Code_1172>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:547
  bl rot
 8004a5e:	f7fc fad3 	bl	8001008 <Code_209>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:548
  bl vorzeichen
 8004a62:	f7ff ff59 	bl	8004918 <Code_1166>

08004a66 <abschluss_zahlenausgabe>:
abschluss_zahlenausgabe():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:551

abschluss_zahlenausgabe:
  bl zifferstringende
 8004a66:	f7ff ff62 	bl	800492e <Code_1168>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:552
  bl stype
 8004a6a:	f7fe f9f1 	bl	8002e50 <Code_701>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:553
  bl space
 8004a6e:	f7fe f94a 	bl	8002d06 <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:554
  pop {pc}
 8004a72:	bd00      	pop	{pc}

08004a74 <Dictionary_1192>:
Dictionary_1192():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:554
 8004a74:	08004a86 	.word	0x08004a86
 8004a78:	75020000 	.word	0x75020000
 8004a7c:	2e          	.byte	0x2e
	...

08004a7e <Code_1192>:
udot():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:564
      @ ( Zahl -- )
      @ Gibt eine vorzeichenlose Zahl aus.
      @ Prints an unsigned single number
@ -----------------------------------------------------------------------------
udot:
  pushdaconst 0 @ Convert to unsigned double
 8004a7e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004a82:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:565
  b.n uddot
 8004a84:	e7d7      	b.n	8004a36 <Code_1190>

08004a86 <Dictionary_1195>:
Dictionary_1195():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:565
 8004a86:	4c64      	.short	0x4c64
 8004a88:	00000800 	.word	0x00000800
 8004a8c:	2e01      	.short	0x2e01

08004a8e <Code_1195>:
dot():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:573
  Wortbirne Flag_visible, "." @ ( Zahl -- )
     @ Gibt eine vorzeichenbehaftete Zahl aus.
     @ Prints a signed single number
@ -----------------------------------------------------------------------------
dot:
  pushdatos
 8004a8e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:574
  movs tos, tos, asr #31    @ s>d - Turn MSB into 0xffffffff or 0x00000000
 8004a92:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:575
  b.n ddot
 8004a94:	e7da      	b.n	8004a4c <Code_1191>
 8004a96:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:32
  ldr r3, =base
 8004a98:	2407fffc 	.word	0x2407fffc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/numberstrings.s:318
  ldr r0, =Zahlenpuffer
 8004a9c:	2400007c 	.word	0x2400007c

08004aa0 <konstantenfaltungszeiger_setzen>:
konstantenfaltungszeiger_setzen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:22
@

@------------------------------------------------------------------------------
konstantenfaltungszeiger_setzen:
@------------------------------------------------------------------------------
  push {r4, r5, lr}
 8004aa0:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:26

  @ Konstantenfaltungszeiger setzen, falls er das noch nicht ist.
  @ Set Constant-Folding-Pointer
  ldr r4, =konstantenfaltungszeiger
 8004aa2:	f04f 5410 	mov.w	r4, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:27
  ldr r5, [r4]
 8004aa6:	6825      	ldr	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:28
  cmp r5, #0
 8004aa8:	2d00      	cmp	r5, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:29
  bne.n 3f
 8004aaa:	d101      	bne.n	8004ab0 <konstantenfaltungszeiger_setzen+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:32
    @ Konstantenfaltungszeiger setzen.
    @ If not set yet, set it now.
    movs r5, psp
 8004aac:	003d      	movs	r5, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:33
    str r5, [r4]
 8004aae:	6025      	str	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:35

3:pop {r4, r5, pc}
 8004ab0:	bd30      	pop	{r4, r5, pc}

08004ab2 <konstantenfaltungszeiger_neusetzen>:
konstantenfaltungszeiger_neusetzen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:40

@------------------------------------------------------------------------------
konstantenfaltungszeiger_neusetzen:
@------------------------------------------------------------------------------
  push {r4, r5, lr}
 8004ab2:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:41
  ldr r4, =konstantenfaltungszeiger
 8004ab4:	f04f 5410 	mov.w	r4, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:42
  movs r5, psp
 8004ab8:	003d      	movs	r5, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:43
  str r5, [r4]
 8004aba:	6025      	str	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:44
  pop {r4, r5, pc}
 8004abc:	bd30      	pop	{r4, r5, pc}

08004abe <konstantenfaltungszeiger_loeschen>:
konstantenfaltungszeiger_loeschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:49

@------------------------------------------------------------------------------
konstantenfaltungszeiger_loeschen:
@------------------------------------------------------------------------------
  push {r4, r5, lr}
 8004abe:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:50
  ldr r4, =konstantenfaltungszeiger
 8004ac0:	f04f 5410 	mov.w	r4, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:51
  movs r5, #0
 8004ac4:	2500      	movs	r5, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:52
  str r5, [r4]
 8004ac6:	6025      	str	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:53
  pop {r4, r5, pc}
 8004ac8:	bd30      	pop	{r4, r5, pc}

08004aca <wievielefaltkonstanten>:
wievielefaltkonstanten():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:58

@------------------------------------------------------------------------------
wievielefaltkonstanten:
@------------------------------------------------------------------------------
  ldr r3, =konstantenfaltungszeiger
 8004aca:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:59
  ldr r3, [r3]
 8004ace:	681b      	ldr	r3, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:60
  subs r3, psp  @ Konstantenfüllstandszeiger - Aktuellen Stackpointer
 8004ad0:	1bdb      	subs	r3, r3, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:61
  lsrs r3, #2   @ Durch 4 teilen  Divide by 4 to get number of stack elements.
 8004ad2:	089b      	lsrs	r3, r3, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:62
  bx lr
 8004ad4:	4770      	bx	lr

08004ad6 <kompilator>:
kompilator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:67

@------------------------------------------------------------------------------
kompilator:
@------------------------------------------------------------------------------
  push {lr}
 8004ad6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:68
  popda r1 @ Flags
 8004ad8:	0031      	movs	r1, r6
 8004ada:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:70

    ldr r0, =Flag_inlinecache & ~Flag_visible
 8004adc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:71
    ands r0, r1
 8004ae0:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:72
    beq 4f
 8004ae2:	d002      	beq.n	8004aea <kompilator+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:73
      bl inline_cache_parser
 8004ae4:	f000 f8a6 	bl	8004c34 <inline_cache_parser>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:74
      pop {pc} @ Fertig.
 8004ae8:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:77
4:

    ldr r0, =Flag_Sprungschlucker & ~Flag_visible
 8004aea:	f44f 6080 	mov.w	r0, #1024	; 0x400
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:78
    ands r0, r1
 8004aee:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:79
    bne 4f
 8004af0:	d101      	bne.n	8004af6 <kompilator+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:80
      bl sprungschreiber_flaggenerator
 8004af2:	f7fc fe11 	bl	8001718 <sprungschreiber_flaggenerator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:84
4:
    @ Jetzt dürfen keine Sprünge mehr im Sprungtrampolin warten, falls sie nicht vom Allokator später eingebaut werden.

  popda r2 @ Einsprungadresse
 8004af6:	0032      	movs	r2, r6
 8004af8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:85
  bl konstantenfaltungszeiger_setzen
 8004afa:	f7ff ffd1 	bl	8004aa0 <konstantenfaltungszeiger_setzen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:88

    @ Für die Konstanten, die über den Inline-Cache eintrudeln !
    ldr r0, =Flag_Literator & ~Flag_visible  
 8004afe:	f44f 5000 	mov.w	r0, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:89
    ands r0, r1
 8004b02:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:90
    beq 4f
 8004b04:	d003      	beq.n	8004b0e <kompilator+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:91
      pushda r2 @ Einfach wieder auf den jetzt der Faltung zugänglichen Stack bereitlegen.
 8004b06:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004b0a:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:92
      pop {pc}
 8004b0c:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:95
4:

  bl wievielefaltkonstanten @ Number of folding constants now available in r3.
 8004b0e:	f7ff ffdc 	bl	8004aca <wievielefaltkonstanten>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:107
    @ Prüfe das Ramallot-Flag, das automatisch 0-faltbar bedeutet:
    @ Ramallot-Words always are 0-foldable !
    @ Check this first, as Ramallot is set together with foldability,
    @ but the meaning of the lower 4 bits is different.

    movs r0, #Flag_ramallot & ~Flag_visible
 8004b12:	2080      	movs	r0, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:108
    ands r0, r1 @ Flagfeld auf Faltbarkeit hin prüfen
 8004b14:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:109
    bne.n .interpret_faltoptimierung
 8004b16:	d106      	bne.n	8004b26 <.interpret_faltoptimierung>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:114

    @ Prüfe die Faltbarkeit des aktuellen Tokens:
    @ Check for foldability.

    movs r0, #Flag_foldable & ~Flag_visible
 8004b18:	2040      	movs	r0, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:115
    ands r0, r1 @ Flagfeld auf Faltbarkeit hin prüfen
 8004b1a:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:116
    beq.n .interpret_allocator @ Not foldable, but maybe the allocator can handle this.
 8004b1c:	d009      	beq.n	8004b32 <.interpret_allocator>

08004b1e <.interpret_genugkonstanten>:
.interpret_genugkonstanten():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:121

.interpret_genugkonstanten: @ Not opcodable. Maybe foldable.
      @ Prüfe, ob genug Konstanten da sind:
      @ How many constants are necessary to fold this word ?
      movs r0, #0x0F
 8004b1e:	200f      	movs	r0, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:122
      ands r0, r1 @ Zahl der benötigten Konstanten maskieren
 8004b20:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:124

      cmp r3, r0
 8004b22:	4283      	cmp	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:125
      blo.n .interpret_allocator @ Not enough folding constants available, but maybe the allocator can handle this.
 8004b24:	d305      	bcc.n	8004b32 <.interpret_allocator>

08004b26 <.interpret_faltoptimierung>:
.interpret_faltoptimierung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:130

.interpret_faltoptimierung:
        @ Do folding by running the definition.
        @ Note that Constant-Folding-Pointer is already set to keep track of results calculated.
        pushda r2 @ Einsprungadresse bereitlegen  Code entry point
 8004b26:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004b2a:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:131
        bl execute @ Durch Ausführung falten      Fold by executing
 8004b2c:	f7fe fd51 	bl	80035d2 <Code_818>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:132
        pop {pc} @ Interpretschleife weitermachen     Finished.
 8004b30:	bd00      	pop	{pc}

08004b32 <.interpret_allocator>:
.interpret_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:147
  @ Number of folding constants available in r3

  @ Ab hier wird begonnen, wirklich Code zu generieren.
  @ Was hier vorbei kommt, muss vererbt werden.

  ldr r0, =Flag_allocator & ~Flag_visible
 8004b32:	f44f 7000 	mov.w	r0, #512	; 0x200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:148
  ands r0, r1
 8004b36:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:149
  beq.n .interpret_allocator_finished
 8004b38:	d014      	beq.n	8004b64 <.interpret_allocator_finished>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:151

    bl nflush_faltkonstanten @ Jetzt werden die restlichen Faltkonstanten in den RA-Cache geschoben.
 8004b3a:	f7fb fb68 	bl	800020e <Code_31>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:156
    @ Dies kommt einem partiellen Konstantenschreiben gleich, wobei allerdings die fünf obersten Stackelemente
    @ im RA-Cache hängenbleiben. Dabei werden nur vielleicht Opcodes generiert, falls der RA-Cache zu klein ist, alle zu fassen.

      @ Erst wurden alle Konstanten weitervererbt, jetzt kommt die darauf wirkende Operation.
      pushda r2
 8004b3e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004b42:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:157
      pushda r1
 8004b44:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004b48:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:158
      bl add_to_inline_cache
 8004b4a:	f000 f831 	bl	8004bb0 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:161

    @ Der Allokatoreinsprung ist am Ende der Definition
    movs r0, r2
 8004b4e:	0010      	movs	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:162
    bl suchedefinitionsende
 8004b50:	f7fe fca2 	bl	8003498 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:163
    adds r2, r0, #1 @ One more for Thumb
 8004b54:	1c42      	adds	r2, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:165

    ldr r0, =allocator_base
 8004b56:	48b3      	ldr	r0, [pc, #716]	; (8004e24 <quit_innenschleife+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:166
    blx r2
 8004b58:	4790      	blx	r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:170

    @ Keine Konstantenfaltung über den Allokator hinweg - sonst würde z.B. do/loop die Struktur nicht auf dem Stack lagern können.
    @ Vor dem Aufschwimmen lassen den Konstantenfaltungszeiger neu setzen.
    bl konstantenfaltungszeiger_neusetzen
 8004b5a:	f7ff ffaa 	bl	8004ab2 <konstantenfaltungszeiger_neusetzen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:172
    
    bl nfaltkonstanten_aufschwimmen @ Sollten am Ende noch Faltkonstanten im Cache liegen, lasse sie aufschwimmen
 8004b5e:	f7fb fb65 	bl	800022c <nfaltkonstanten_aufschwimmen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:173
    pop {pc} @ Interpretschleife weitermachen     Finished.
 8004b62:	bd00      	pop	{pc}

08004b64 <.interpret_allocator_finished>:
.interpret_allocator_finished():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:180
.interpret_allocator_finished:

  @ No optimizations possible. Go back to canonical stack for classic compilation.
  @ Write all folding constants left into dictionary.

  bl nflush_faltkonstanten     @ Vorhandene Faltkonstanten, soweit möglich, erstmal in den Registerallokator laden.
 8004b64:	f7fb fb53 	bl	800020e <Code_31>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:182

      pushda r2
 8004b68:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004b6c:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:183
      pushda r1
 8004b6e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004b72:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:184
      bl add_to_inline_cache
 8004b74:	f000 f81c 	bl	8004bb0 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:186

  bl tidyup_register_allocator @ Alle Registerbewegungen opcodieren
 8004b78:	f7fb fbdc 	bl	8000334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:187
  bl konstantenfaltungszeiger_loeschen
 8004b7c:	f7ff ff9f 	bl	8004abe <konstantenfaltungszeiger_loeschen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:192

@ -----------------------------------------------------------------------------
  @ Write push {lr} if this definition still is in bx lr mode.

  ldr r0, =Flag_bxlr & ~Flag_visible
 8004b80:	f44f 6000 	mov.w	r0, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:193
  ands r0, r1
 8004b84:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:194
  bne.n .prepared_for_classic
 8004b86:	d101      	bne.n	8004b8c <.prepared_for_classic>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:195
    bl push_lr_nachholen
 8004b88:	f7fb fd39 	bl	80005fe <push_lr_nachholen>

08004b8c <.prepared_for_classic>:
.prepared_for_classic():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:200
.prepared_for_classic:

@ -----------------------------------------------------------------------------
  @ Classic compilation.
  pushda r2 @ Adresse zum klassischen Bearbeiten. Put code entry point on datastack.
 8004b8c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004b90:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:202

  movs r2, #Flag_immediate & ~Flag_visible
 8004b92:	2210      	movs	r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:203
  ands r2, r1
 8004b94:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:204
  beq.n 6f
 8004b96:	d002      	beq.n	8004b9e <.prepared_for_classic+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:206
    @ Es ist immediate. Immer ausführen. Always execute immediate definitions.
    bl execute @ Ausführen.
 8004b98:	f7fe fd1b 	bl	80035d2 <Code_818>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:207
    pop {pc} @ Zurück in die Interpret-Schleife.  Finished.
 8004b9c:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:209

6:movs r2, #Flag_inline & ~Flag_visible
 8004b9e:	2220      	movs	r2, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:210
  ands r2, r1
 8004ba0:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:211
  beq.n 7f
 8004ba2:	d002      	beq.n	8004baa <.prepared_for_classic+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:213

  bl inlinekomma @ Direkt einfügen.        Inline the code
 8004ba4:	f7fe fc61 	bl	800346a <Code_794>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:214
  pop {pc} @ Zurück in die Interpret-Schleife  Finished.
 8004ba8:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:216

7:bl callkomma @ Klassisch einkompilieren  Simply compile a BL or Call.
 8004baa:	f7fe fb72 	bl	8003292 <Code_762>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:217
  pop {pc} @ Zurück in die Interpret-Schleife  Finished.
 8004bae:	bd00      	pop	{pc}

08004bb0 <add_to_inline_cache>:
add_to_inline_cache():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:24
@ Inline-Cache for Optimisation across the inlined definitions

@ -----------------------------------------------------------------------------
add_to_inline_cache: @ ( Address|Literal Flag -- )
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr} @ Sollte noch Platz im Inline-Cache sein, füge dieses Paar hinzu. Ansonsten markiere die Definition als zu lang, um sie einfügen zu können.
 8004bb0:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:26

  popda r2 @ Flag
 8004bb2:	0032      	movs	r2, r6
 8004bb4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:27
  popda r3 @ Address|Literal
 8004bb6:	0033      	movs	r3, r6
 8004bb8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:29

  ldr r0, =inline_cache_count
 8004bba:	489b      	ldr	r0, [pc, #620]	; (8004e28 <quit_innenschleife+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:30
  ldr r1, [r0]
 8004bbc:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:32

  cmp r1, #inline_cache_length
 8004bbe:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:33
  bhs 1f
 8004bc0:	d207      	bcs.n	8004bd2 <add_to_inline_cache+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:36

    @ Fein. Ein neues Element kommt in den Cache hinein !
    movs r0, #6 @ Jedes Element benötigt 6 Bytes
 8004bc2:	2006      	movs	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:37
    muls r1, r0    
 8004bc4:	4341      	muls	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:39

    ldr r0, =inline_cache @ Startadresse des Caches
 8004bc6:	4899      	ldr	r0, [pc, #612]	; (8004e2c <quit_innenschleife+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:40
    adds r0, r1           @ Elementoffser dazuaddieren
 8004bc8:	1840      	adds	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:43

    @ Zuerst die Adresse:
    strh r3, [r0, #0] @ Low
 8004bca:	8003      	strh	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:44
    lsrs r3, #16
 8004bcc:	0c1b      	lsrs	r3, r3, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:45
    strh r3, [r0, #2] @ High
 8004bce:	8043      	strh	r3, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:47
    @ Dann die Flags
    strh r2, [r0, #4]
 8004bd0:	8082      	strh	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:51

1:@ Zu lang ! Es passt nichts mehr in den Cache hinein. 

  ldr r0, =inline_cache_count
 8004bd2:	4895      	ldr	r0, [pc, #596]	; (8004e28 <quit_innenschleife+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:52
  ldr r1, [r0]  
 8004bd4:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:53
  adds r1, #1  @ Die Anzahl von Elementen im Inline-Cache aktualisieren
 8004bd6:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:54
  str r1, [r0]
 8004bd8:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:56

  pop {r0, r1, r2, r3, pc}
 8004bda:	bd0f      	pop	{r0, r1, r2, r3, pc}

08004bdc <inline_cache_schreiben>:
inline_cache_schreiben():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:61

@ -----------------------------------------------------------------------------
inline_cache_schreiben:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
 8004bdc:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:63
@  writeln "Inline-Cache-Schreiben"
  ldr r0, =inline_cache_count
 8004bde:	4892      	ldr	r0, [pc, #584]	; (8004e28 <quit_innenschleife+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:64
  ldr r1, [r0]
 8004be0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:66

  cmp r1, #inline_cache_length
 8004be2:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:67
  bhi 3f @ Ein Element mehr zulassen als bei add_to_inline_cache - da das letzte Element stets ; ist.
 8004be4:	d81f      	bhi.n	8004c26 <inline_cache_schreiben+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:71
    @ Fein. Der Inline-Cache enthält die komplette Kompilationssequenz zum Vererben der Optimierungen !

    @ Jetzt den Inhalt des Inline-Caches fein säuberlich einkompilieren :-)
    ldr r0, =inline_cache @ r1 enthält die Anzahl von Elementen.
 8004be6:	4891      	ldr	r0, [pc, #580]	; (8004e2c <quit_innenschleife+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:72
    subs r1, #1 @ Insgesamt ein Element weniger, weil ; auch mit in den Inline-Cache kommt.
 8004be8:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:73
    beq 4f @ Sonst nichts vorhanden ? Bei einer leeren Definition kann diese als 0-faltbar markiert und komplett wegoptimiert werden.
 8004bea:	d01d      	beq.n	8004c28 <inline_cache_schreiben+0x4c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:75

    pushda r1 @ Zahl der Elemente schreiben
 8004bec:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004bf0:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:76
    bl hkomma
 8004bf2:	f7fe fe61 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:79

1:  @ Ein Element einkompilieren:
    pushdatos
 8004bf6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:80
    ldrh tos, [r0, #0] @ Adresse low
 8004bfa:	8806      	ldrh	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:81
    bl hkomma
 8004bfc:	f7fe fe5c 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:83

    pushdatos
 8004c00:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:84
    ldrh tos, [r0, #2] @ Adresse high
 8004c04:	8846      	ldrh	r6, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:85
    bl hkomma
 8004c06:	f7fe fe57 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:87

    pushdatos
 8004c0a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:88
    ldrh tos, [r0, #4] @ Flags zuletzt, damit dieses Flag nie als leerer Flash erkannt wird !
 8004c0e:	8886      	ldrh	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:89
    bl hkomma
 8004c10:	f7fe fe52 	bl	80038b8 <Code_875>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:91

    adds r0, #6
 8004c14:	3006      	adds	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:92
    subs r1, #1
 8004c16:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:93
    bne 1b @ Noch ein Element ?
 8004c18:	d1ed      	bne.n	8004bf6 <inline_cache_schreiben+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:96

2:  @ Flag für den jetzt vorhandenen RA-Optimierungsteil setzen !
    pushdaconstw Flag_inlinecache & ~Flag_visible
 8004c1a:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004c1e:	f241 0600 	movw	r6, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:97
    bl setflags
 8004c22:	f7fe fdeb 	bl	80037fc <Code_863>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:100

3:@ Zu lang, nicht komplett erfasst ! Kann leider keine Optimiervererbungssequenz schreiben.
  pop {r0, r1, r2, r3, pc}
 8004c26:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:103

4:@ Leere Definition. als 0-faltbar markieren, damit sie komplett wegoptimiert werden kann.
  pushdaconst Flag_foldable_0 & ~Flag_visible
 8004c28:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004c2c:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:104
  bl setflags
 8004c2e:	f7fe fde5 	bl	80037fc <Code_863>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:105
  pop {r0, r1, r2, r3, pc}
 8004c32:	bd0f      	pop	{r0, r1, r2, r3, pc}

08004c34 <inline_cache_parser>:
inline_cache_parser():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:110

@ -----------------------------------------------------------------------------
inline_cache_parser: @ ( Einsprungadresse -- )
@ -----------------------------------------------------------------------------
  push {lr} @ Wenn die Optimiersequenz geschrieben worden ist, ist auch mindestens ein Element darin vorhanden.
 8004c34:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:112

  popda r0
 8004c36:	0030      	movs	r0, r6
 8004c38:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:113
  bl suchedefinitionsende
 8004c3a:	f7fe fc2d 	bl	8003498 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:114
  ldrh r1, [r0] @ Länge der Sequenz abholen
 8004c3e:	8801      	ldrh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:115
  adds r0, #2
 8004c40:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:119

1:@ Hole das nächste Element !

  pushdatos
 8004c42:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:120
  ldrh tos, [r0, #0] @ Adresse low
 8004c46:	8806      	ldrh	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:121
  ldrh r2,  [r0, #2] @ Adresse high
 8004c48:	8842      	ldrh	r2, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:122
  lsls r2, #16
 8004c4a:	0412      	lsls	r2, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:123
  orrs tos, r2
 8004c4c:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:125

  pushdatos
 8004c4e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:126
  ldrh tos, [r0, #4] @ Flags
 8004c52:	8886      	ldrh	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:128

  push {r0, r1}
 8004c54:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:129
  bl kompilator
 8004c56:	f7ff ff3e 	bl	8004ad6 <kompilator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:130
  pop {r0, r1}
 8004c5a:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:131
  adds r0, #6
 8004c5c:	3006      	adds	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:132
  subs r1, #1
 8004c5e:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:133
  bne 1b
 8004c60:	d1ef      	bne.n	8004c42 <inline_cache_parser+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:135

  pop {pc}
 8004c62:	bd00      	pop	{pc}

08004c64 <Dictionary_1227>:
Dictionary_1227():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:135
 8004c64:	08004cac 	.word	0x08004cac
 8004c68:	65080000 	.word	0x65080000
 8004c6c:	756c6176 	.word	0x756c6176
 8004c70:	7461      	.short	0x7461
 8004c72:	65          	.byte	0x65
	...

08004c74 <Code_1227>:
Code_1227():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:25
@ Interpreter and optimisations

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "evaluate" @ ( -- )
@ -----------------------------------------------------------------------------
  push {lr}
 8004c74:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:26
  bl source             @ Save current source
 8004c76:	f7fd ffe4 	bl	8002c42 <Code_653>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:29

  @ 2>r
  ldm psp!, {r0}
 8004c7a:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:30
  push {r0}
 8004c7c:	b401      	push	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:31
  push {tos}
 8004c7e:	b440      	push	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:32
  ldm psp!, {tos}
 8004c80:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:34

  ldr r0, =Pufferstand  @ Save >in and set to zero
 8004c82:	486b      	ldr	r0, [pc, #428]	; (8004e30 <quit_innenschleife+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:35
  ldr r1, [r0]
 8004c84:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:36
  push {r1}
 8004c86:	b402      	push	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:37
  movs r1, #0
 8004c88:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:38
  str r1, [r0]
 8004c8a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:40

  bl setsource          @ Set new source
 8004c8c:	f7fd ffcc 	bl	8002c28 <Code_651>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:41
  bl interpret          @ Interpret
 8004c90:	f000 f814 	bl	8004cbc <Code_1229>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:43

  ldr r0, =Pufferstand  @ Restore >in
 8004c94:	4866      	ldr	r0, [pc, #408]	; (8004e30 <quit_innenschleife+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:44
  pop {r1}
 8004c96:	bc02      	pop	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:45
  str r1, [r0]
 8004c98:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:48

  @ 2r>
  pushdatos
 8004c9a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:49
  pop {tos}
 8004c9e:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:50
  pop {r0}
 8004ca0:	bc01      	pop	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:51
  subs psp, #4
 8004ca2:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:52
  str r0, [psp]
 8004ca4:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:54

  bl setsource          @ Restore old source
 8004ca6:	f7fd ffbf 	bl	8002c28 <Code_651>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:56

  pop {pc}
 8004caa:	bd00      	pop	{pc}

08004cac <Dictionary_1229>:
Dictionary_1229():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:56
 8004cac:	08004db4 	.word	0x08004db4
 8004cb0:	69090000 	.word	0x69090000
 8004cb4:	7265746e 	.word	0x7265746e
 8004cb8:	74657270 	.word	0x74657270

08004cbc <Code_1229>:
interpret():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:62

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "interpret" @ ( -- )
interpret:
@ -----------------------------------------------------------------------------
  push {lr}
 8004cbc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:70
  @ Stay in loop as long token can fetch something from input buffer.

  @ Probe des Datenstackpointers.
  @ Check pointer for datastack.

  ldr r0, =datenstackanfang   @ Stacks fangen oben an und wachsen nach unten.
 8004cbe:	485d      	ldr	r0, [pc, #372]	; (8004e34 <quit_innenschleife+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:71
  cmp psp, r0                 @ Wenn die Adresse kleiner oder gleich der Anfangsadresse ist, ist alles okay.
 8004cc0:	4287      	cmp	r7, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:72
  bls.n 2f
 8004cc2:	d90b      	bls.n	8004cdc <Code_1229+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:73
    Fehler_Quit_n "Stack underflow"
 8004cc4:	f7fe f870 	bl	8002da8 <dotgaensefuesschen>
 8004cc8:	61745310 	.word	0x61745310
 8004ccc:	75206b63 	.word	0x75206b63
 8004cd0:	7265646e 	.word	0x7265646e
 8004cd4:	776f6c66 	.word	0x776f6c66
 8004cd8:	0a          	.byte	0x0a
 8004cd9:	00          	.byte	0x00
 8004cda:	e07f      	b.n	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:75

2:ldr r0, =datenstackende     @ Solange der Stackzeiger oberhalb des Endes liegt, ist alles okay.
 8004cdc:	4856      	ldr	r0, [pc, #344]	; (8004e38 <quit_innenschleife+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:76
  cmp psp, r0
 8004cde:	4287      	cmp	r7, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:77
  bhs.n 3f
 8004ce0:	d20a      	bcs.n	8004cf8 <Code_1229+0x3c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:78
    Fehler_Quit_N "Stack overflow"
 8004ce2:	f7fe f861 	bl	8002da8 <dotgaensefuesschen>
 8004ce6:	530f      	.short	0x530f
 8004ce8:	6b636174 	.word	0x6b636174
 8004cec:	65766f20 	.word	0x65766f20
 8004cf0:	6f6c6672 	.word	0x6f6c6672
 8004cf4:	0a77      	.short	0x0a77
 8004cf6:	e071      	b.n	8004ddc <Code_1258>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:83

3: @ Alles ok.  Stacks are fine.

@ -----------------------------------------------------------------------------
  bl konstantenfaltungszeiger_setzen
 8004cf8:	f7ff fed2 	bl	8004aa0 <konstantenfaltungszeiger_setzen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:86
@ -----------------------------------------------------------------------------

  bl token
 8004cfc:	f7ff fcf0 	bl	80046e0 <Code_1129>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:90
  @ ( Address Length )

  @ Prüfe, ob der String leer ist  Check if token is empty - that designates an empty input buffer.
  cmp tos, #0
 8004d00:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:91
  bne.n 2f
 8004d02:	d102      	bne.n	8004d0a <Code_1229+0x4e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:92
    ddrop
 8004d04:	3704      	adds	r7, #4
 8004d06:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:93
    pop {pc}
 8004d08:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:104

  @ Registerkarte:
  @  r4: Adresse des Konstantenfaltungszeigers  Address of constant folding pointer
  @  r5: Konstantenfaltungszeiger               Constant folding pointer

  ddup
 8004d0a:	6838      	ldr	r0, [r7, #0]
 8004d0c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004d10:	3f04      	subs	r7, #4
 8004d12:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:105
  bl find @ Probe, ob es sich um ein Wort aus dem Dictionary handelt:  Attemp to find token in dictionary.
 8004d14:	f7ff f8c1 	bl	8003e9a <Code_961>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:108
  @ ( Token-Addr Token-Length Addr Flags )

  popda r1 @ Flags
 8004d18:	0031      	movs	r1, r6
 8004d1a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:109
  popda r2 @ Einsprungadresse
 8004d1c:	0032      	movs	r2, r6
 8004d1e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:117

  @ Registerkarte:
  @  r1: Flags                                  Flags
  @  r2: Einsprungadresse                       Code entry point

  cmp r2, #0
 8004d20:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:118
  bne.n .interpret_token_found
 8004d22:	d11b      	bne.n	8004d5c <.interpret_token_found>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:122
    @ Nicht gefunden. Ein Fall für Number.
    @ Entry-Address is zero if not found ! Note that Flags have very special meanings in Mecrisp !

    ldr r0, [psp] @ Den String für die not-found Meldung vermerken.
 8004d24:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:123
    movs r1, tos
 8004d26:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:125

    bl sprungschreiber_flaggenerator @ Wenn noch mehr Faltkonstanten kommen, müssen die Ergebnisse von Vergleichen vorher geschrieben werden.
 8004d28:	f7fc fcf6 	bl	8001718 <sprungschreiber_flaggenerator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:127

    bl number
 8004d2c:	f7ff fd34 	bl	8004798 <Code_1134>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:134
  @ Number gives back ( 0 ) or ( x 1 ) or ( x y 2 ).
  @ Zero means: Not recognized.
  @ Note that literals actually are not written/compiled here.
  @ They are simply placed on stack and constant folding takes care of them later.

    popda r2   @ Flag von Number holen
 8004d30:	0032      	movs	r2, r6
 8004d32:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:135
    cmp r2, #0 @ Did number recognize the string ?
 8004d34:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:136
    bne.n 1b   @ Zahl gefunden, alles gut. Interpretschleife fortsetzen.  Finished.
 8004d36:	d1c2      	bne.n	8004cbe <Code_1229+0x2>

08004d38 <not_found_addr_r0_len_r1>:
not_found_addr_r0_len_r1():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:140

    @ Number mochte das Token auch nicht.
not_found_addr_r0_len_r1:
    pushda r0
 8004d38:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004d3c:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:141
    pushda r1
 8004d3e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004d42:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:142
    bl stype
 8004d44:	f7fe f884 	bl	8002e50 <Code_701>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:143
    Fehler_Quit_n " not found."
 8004d48:	f7fe f82e 	bl	8002da8 <dotgaensefuesschen>
 8004d4c:	6f6e200c 	.word	0x6f6e200c
 8004d50:	6f662074 	.word	0x6f662074
 8004d54:	2e646e75 	.word	0x2e646e75
 8004d58:	0a          	.byte	0x0a
 8004d59:	00          	.byte	0x00
 8004d5a:	e03f      	b.n	8004ddc <Code_1258>

08004d5c <.interpret_token_found>:
.interpret_token_found():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:155

  @ Registerkarte:
  @  r1: Flags                                  Flags
  @  r2: Einsprungadresse                       Code entry point

  ldr r3, =state
 8004d5c:	4b37      	ldr	r3, [pc, #220]	; (8004e3c <quit_innenschleife+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:156
  ldr r3, [r3]
 8004d5e:	681b      	ldr	r3, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:157
  cmp r3, #0
 8004d60:	2b00      	cmp	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:158
  bne.n 5f
 8004d62:	d11c      	bne.n	8004d9e <.ausfuehren+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:160
    @ Im Ausführzustand.  Execute.
    bl konstantenfaltungszeiger_loeschen
 8004d64:	f7ff feab 	bl	8004abe <konstantenfaltungszeiger_loeschen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:162

    movs r3, #Flag_immediate_compileonly & ~Flag_visible
 8004d68:	2330      	movs	r3, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:163
    ands r3, r1
 8004d6a:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:164
    cmp r3, #Flag_immediate_compileonly & ~Flag_visible
 8004d6c:	2b30      	cmp	r3, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:165
    bne.n .ausfuehren
 8004d6e:	d10e      	bne.n	8004d8e <.ausfuehren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:166
      bl stype
 8004d70:	f7fe f86e 	bl	8002e50 <Code_701>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:167
      Fehler_Quit_n " is compile-only."
 8004d74:	f7fe f818 	bl	8002da8 <dotgaensefuesschen>
 8004d78:	73692012 	.word	0x73692012
 8004d7c:	6d6f6320 	.word	0x6d6f6320
 8004d80:	656c6970 	.word	0x656c6970
 8004d84:	6c6e6f2d 	.word	0x6c6e6f2d
 8004d88:	2e79      	.short	0x2e79
 8004d8a:	0a          	.byte	0x0a
 8004d8b:	00          	.byte	0x00
 8004d8c:	e026      	b.n	8004ddc <Code_1258>

08004d8e <.ausfuehren>:
.ausfuehren():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:170

.ausfuehren:
    ddrop
 8004d8e:	3704      	adds	r7, #4
 8004d90:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:171
    pushda r2    @ Adresse zum Ausführen   Code entry point
 8004d92:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004d96:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:172
    bl execute   @                         Execute it
 8004d98:	f7fe fc1b 	bl	80035d2 <Code_818>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:173
    b.n 1b @ Interpretschleife fortsetzen.  Finished.
 8004d9c:	e78f      	b.n	8004cbe <Code_1229+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:181
  @  r1: Flags
  @  r2: Einsprungadresse                        Code entry point

@ -----------------------------------------------------------------------------
5:@ Im Kompilierzustand.  In compile state.
    ddrop
 8004d9e:	3704      	adds	r7, #4
 8004da0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:183

    pushda r2 @ Einsprungadresse
 8004da2:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004da6:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:184
    pushda r1 @ Flags
 8004da8:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004dac:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:186

    bl kompilator
 8004dae:	f7ff fe92 	bl	8004ad6 <kompilator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:187
    b.n 1b @ Interpretschleife weitermachen     Finished.
 8004db2:	e784      	b.n	8004cbe <Code_1229+0x2>

08004db4 <Dictionary_1255>:
Dictionary_1255():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:187
 8004db4:	08004dd0 	.word	0x08004dd0
 8004db8:	68090081 	.word	0x68090081
 8004dbc:	2d6b6f6f 	.word	0x2d6b6f6f
 8004dc0:	74697571 	.word	0x74697571

08004dc4 <Code_1255>:
Code_1255():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:194

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-quit" @ ( -- addr )
  CoreVariable hook_quit
@------------------------------------------------------------------------------
  pushdatos
 8004dc4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:195
  ldr tos, =hook_quit
 8004dc8:	4e1d      	ldr	r6, [pc, #116]	; (8004e40 <quit_innenschleife+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:196
  bx lr
 8004dca:	4770      	bx	lr
 8004dcc:	08004e0e 	.word	0x08004e0e

08004dd0 <Dictionary_1258>:
Dictionary_1258():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:196
 8004dd0:	08004e54 	.word	0x08004e54
 8004dd4:	71040000 	.word	0x71040000
 8004dd8:	6975      	.short	0x6975
 8004dda:	74          	.byte	0x74
	...

08004ddc <Code_1258>:
quit():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:210
  @ Clear stacks and tidy up.
  .ifdef m0core
  ldr r0, =returnstackanfang
  mov sp, r0
  .else
  ldr sp, =returnstackanfang
 8004ddc:	f8df d064 	ldr.w	sp, [pc, #100]	; 8004e44 <quit_innenschleife+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:213
  .endif

  ldr psp, =datenstackanfang
 8004de0:	4f14      	ldr	r7, [pc, #80]	; (8004e34 <quit_innenschleife+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:216

  .ifdef initflash
   bl initflash
 8004de2:	f7fd f9c1 	bl	8002168 <Code_478>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:221
  .endif

  @ Base und State setzen

  ldr r0, =base
 8004de6:	4818      	ldr	r0, [pc, #96]	; (8004e48 <quit_innenschleife+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:222
  movs r1, #10   @ Base decimal
 8004de8:	210a      	movs	r1, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:223
  str r1, [r0]
 8004dea:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:225

  ldr r0, =state
 8004dec:	4813      	ldr	r0, [pc, #76]	; (8004e3c <quit_innenschleife+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:226
  movs r1, #0    @ Execute mode
 8004dee:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:227
  str r1, [r0]
 8004df0:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:229

  ldr r0, =konstantenfaltungszeiger
 8004df2:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:231
  @ movs r1, #0  @ Clear constant folding pointer
  str r1, [r0]
 8004df6:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:233

  bl init_register_allocator
 8004df8:	f7fb fae3 	bl	80003c2 <init_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:235

  ldr r0, =Pufferstand
 8004dfc:	480c      	ldr	r0, [pc, #48]	; (8004e30 <quit_innenschleife+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:237
  @ movs r1, #0  @ Set >IN to 0
  str r1, [r0]
 8004dfe:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:239

  ldr r0, =current_source
 8004e00:	4812      	ldr	r0, [pc, #72]	; (8004e4c <quit_innenschleife+0x3e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:241
  @ movs r1, #0  @ Empty TIB is source
  str r1, [r0]
 8004e02:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:242
  ldr r1, =Eingabepuffer
 8004e04:	4912      	ldr	r1, [pc, #72]	; (8004e50 <quit_innenschleife+0x42>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:243
  str r1, [r0, #4]
 8004e06:	6041      	str	r1, [r0, #4]

08004e08 <quit_intern>:
quit_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:246

quit_intern:
  ldr r0, =hook_quit
 8004e08:	480d      	ldr	r0, [pc, #52]	; (8004e40 <quit_innenschleife+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:247
  ldr r0, [r0]
 8004e0a:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:248
  mov pc, r0
 8004e0c:	4687      	mov	pc, r0

08004e0e <quit_innenschleife>:
quit_innenschleife():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:251

quit_innenschleife:  @ Main loop of Forth system.
  bl query
 8004e0e:	f7fd ff26 	bl	8002c5e <Code_655>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:252
  bl interpret
 8004e12:	f7ff ff53 	bl	8004cbc <Code_1229>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:285
1:  writeln "ok.\x1B[0m"
    b.n quit_innenschleife

  .else

    writeln " ok."
 8004e16:	f7fd ffc7 	bl	8002da8 <dotgaensefuesschen>
 8004e1a:	2005      	.short	0x2005
 8004e1c:	0a2e6b6f 	.word	0x0a2e6b6f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:286
    b.n quit_innenschleife
 8004e20:	e7f5      	b.n	8004e0e <quit_innenschleife>
 8004e22:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-kompilator.s:165
    ldr r0, =allocator_base
 8004e24:	24000020 	.word	0x24000020
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:29
  ldr r0, =inline_cache_count
 8004e28:	24000054 	.word	0x24000054
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/ra-inline.s:39
    ldr r0, =inline_cache @ Startadresse des Caches
 8004e2c:	24000058 	.word	0x24000058
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:34
  ldr r0, =Pufferstand  @ Save >in and set to zero
 8004e30:	2407ffe4 	.word	0x2407ffe4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:70
  ldr r0, =datenstackanfang   @ Stacks fangen oben an und wachsen nach unten.
 8004e34:	24000288 	.word	0x24000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:75
2:ldr r0, =datenstackende     @ Solange der Stackzeiger oberhalb des Endes liegt, ist alles okay.
 8004e38:	24000188 	.word	0x24000188
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:155
  ldr r3, =state
 8004e3c:	2407ffd8 	.word	0x2407ffd8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:195
  ldr tos, =hook_quit
 8004e40:	2407ffc8 	.word	0x2407ffc8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:210
  ldr sp, =returnstackanfang
 8004e44:	24000388 	.word	0x24000388
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:221
  ldr r0, =base
 8004e48:	2407fffc 	.word	0x2407fffc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:239
  ldr r0, =current_source
 8004e4c:	2407ffdc 	.word	0x2407ffdc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:242
  ldr r1, =Eingabepuffer
 8004e50:	240000c0 	.word	0x240000c0

08004e54 <Dictionary_1260>:
Dictionary_1260():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/ra/interpreter.s:242
 8004e54:	08004e6e 	.word	0x08004e6e
 8004e58:	65050000 	.word	0x65050000
 8004e5c:	3f746e69 	.word	0x3f746e69

08004e60 <Code_1260>:
Code_1260():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:24
@ Common interrupt helpers

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "eint?" @ ( -- ) Are Interrupts enabled ?
@ ----------------------------------------------------------------------------- 
  pushdatos
 8004e60:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:25
  mrs tos, PRIMASK
 8004e64:	f3ef 8610 	mrs	r6, PRIMASK
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:26
  subs tos, #1
 8004e68:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:27
  sbcs tos, tos
 8004e6a:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:28
  bx lr
 8004e6c:	4770      	bx	lr

08004e6e <Dictionary_1262>:
Dictionary_1262():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:28
 8004e6e:	4e7e      	.short	0x4e7e
 8004e70:	00200800 	.word	0x00200800
 8004e74:	6e696504 	.word	0x6e696504
 8004e78:	74          	.byte	0x74
	...

08004e7a <Code_1262>:
Code_1262():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:33

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "eint" @ ( -- ) Aktiviert Interrupts  Enables Interrupts
@ ----------------------------------------------------------------------------- 
  cpsie i @ Interrupt-Handler
 8004e7a:	b662      	cpsie	i
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:34
  bx lr
 8004e7c:	4770      	bx	lr

08004e7e <Dictionary_1263>:
Dictionary_1263():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:34
 8004e7e:	4e8e      	.short	0x4e8e
 8004e80:	00200800 	.word	0x00200800
 8004e84:	6e696404 	.word	0x6e696404
 8004e88:	74          	.byte	0x74
	...

08004e8a <Code_1263>:
Code_1263():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:39

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "dint" @ ( -- ) Deaktiviert Interrupts  Disables Interrupts
@ ----------------------------------------------------------------------------- 
  cpsid i @ Interrupt-Handler
 8004e8a:	b672      	cpsid	i
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:40
  bx lr
 8004e8c:	4770      	bx	lr

08004e8e <Dictionary_1264>:
Dictionary_1264():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:40
 8004e8e:	4ea4      	.short	0x4ea4
 8004e90:	00200800 	.word	0x00200800
 8004e94:	73706904 	.word	0x73706904
 8004e98:	72          	.byte	0x72
	...

08004e9a <Code_1264>:
Code_1264():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:45

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "ipsr" @ ( -- int ) Read IPSR by Mark Schweizer
@ ----------------------------------------------------------------------------- 
  pushdatos
 8004e9a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:46
  mrs tos, ipsr
 8004e9e:	f3ef 8605 	mrs	r6, IPSR
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:47
  bx lr
 8004ea2:	4770      	bx	lr

08004ea4 <Dictionary_1266>:
Dictionary_1266():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:47
 8004ea4:	08004eb0 	.word	0x08004eb0
 8004ea8:	6e030000 	.word	0x6e030000
 8004eac:	706f      	.short	0x706f

08004eae <Code_1266>:
nop_vektor():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:53

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "nop" @ ( -- ) @ Handler for unused hooks
nop_vektor:                    
@ ----------------------------------------------------------------------------- 
  bx lr
 8004eae:	4770      	bx	lr

08004eb0 <Dictionary_1267>:
Dictionary_1267():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:53
 8004eb0:	08004ef2 	.word	0x08004ef2
 8004eb4:	75090000 	.word	0x75090000
 8004eb8:	6e61686e 	.word	0x6e61686e
 8004ebc:	64656c64 	.word	0x64656c64

08004ec0 <Code_1267>:
Code_1267():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:59

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "unhandled" @ Message for wild interrupts
unhandled:                            @   and handler for unused interrupts
@ -----------------------------------------------------------------------------
  push {lr} 
 8004ec0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:61
  @ writeln "Unhandled Interrupt !"
  write "Unhandled Interrupt "
 8004ec2:	f7fd ff71 	bl	8002da8 <dotgaensefuesschen>
 8004ec6:	5514      	.short	0x5514
 8004ec8:	6e61686e 	.word	0x6e61686e
 8004ecc:	64656c64 	.word	0x64656c64
 8004ed0:	746e4920 	.word	0x746e4920
 8004ed4:	75727265 	.word	0x75727265
 8004ed8:	7470      	.short	0x7470
 8004eda:	20          	.byte	0x20
 8004edb:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:62
  pushdatos
 8004edc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:63
  mrs tos, ipsr
 8004ee0:	f3ef 8605 	mrs	r6, IPSR
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:64
  bl hexdot
 8004ee4:	f7fd ffc8 	bl	8002e78 <Code_704>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:65
  writeln "!"
 8004ee8:	f7fd ff5e 	bl	8002da8 <dotgaensefuesschen>
 8004eec:	2102      	.short	0x2102
 8004eee:	0a          	.byte	0x0a
 8004eef:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:66
  pop {pc}
 8004ef0:	bd00      	pop	{pc}

08004ef2 <Dictionary_1271>:
Dictionary_1271():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:66
 8004ef2:	4f04      	.short	0x4f04
 8004ef4:	00000800 	.word	0x00000800
 8004ef8:	73657205 	.word	0x73657205
 8004efc:	7465      	.short	0x7465

08004efe <Code_1271>:
Restart():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:72

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "reset" @ ( -- ) Hardware level reset
Restart:
@ ----------------------------------------------------------------------------- 
  ldr r0, =0xE000ED0C
 8004efe:	48c8      	ldr	r0, [pc, #800]	; (8005220 <init_name+0x6>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:73
  ldr r1, =0x5FA0004
 8004f00:	49c8      	ldr	r1, [pc, #800]	; (8005224 <init_name+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:74
  str r1, [r0]
 8004f02:	6001      	str	r1, [r0, #0]

08004f04 <Dictionary_1273>:
Dictionary_1273():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:74
 8004f04:	08004f2e 	.word	0x08004f2e
 8004f08:	690b0081 	.word	0x690b0081
 8004f0c:	732d7172 	.word	0x732d7172
 8004f10:	69747379 	.word	0x69747379
 8004f14:	6b63      	.short	0x6b63

08004f16 <Code_1273>:
Code_1273():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:143

@ -----------------------------------------------------------------------------
@ Common interrupt handlers for all targets
@ -----------------------------------------------------------------------------

interrupt systick
 8004f16:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004f1a:	4ec3      	ldr	r6, [pc, #780]	; (8005228 <init_name+0xe>)
 8004f1c:	4770      	bx	lr
 8004f1e:	4ec0      	.short	0x4ec0
 8004f20:	0800      	.short	0x0800

08004f22 <irq_vektor_systick>:
irq_vektor_systick():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:143
 8004f22:	f64f 70c4 	movw	r0, #65476	; 0xffc4
 8004f26:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8004f2a:	6800      	ldr	r0, [r0, #0]
 8004f2c:	4687      	mov	pc, r0

08004f2e <Dictionary_1277>:
Dictionary_1277():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:143
 8004f2e:	4f56      	.short	0x4f56
 8004f30:	00810800 	.word	0x00810800
 8004f34:	71726909 	.word	0x71726909
 8004f38:	7561662d 	.word	0x7561662d
 8004f3c:	746c      	.short	0x746c

08004f3e <Code_1277>:
Code_1277():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:144
initinterrupt fault, faulthandler, unhandled
 8004f3e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004f42:	4eba      	ldr	r6, [pc, #744]	; (800522c <init_name+0x12>)
 8004f44:	4770      	bx	lr
 8004f46:	4ec0      	.short	0x4ec0
 8004f48:	0800      	.short	0x0800

08004f4a <faulthandler>:
faulthandler():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:144
 8004f4a:	f64f 70c0 	movw	r0, #65472	; 0xffc0
 8004f4e:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8004f52:	6800      	ldr	r0, [r0, #0]
 8004f54:	4687      	mov	pc, r0

08004f56 <Dictionary_1281>:
Dictionary_1281():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:144
 8004f56:	4f84      	.short	0x4f84
 8004f58:	00810800 	.word	0x00810800
 8004f5c:	7172690e 	.word	0x7172690e
 8004f60:	6c6f632d 	.word	0x6c6f632d
 8004f64:	7463656c 	.word	0x7463656c
 8004f68:	6f69      	.short	0x6f69
 8004f6a:	6e          	.byte	0x6e
	...

08004f6c <Code_1281>:
Code_1281():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:145
initinterrupt collection, nullhandler, unhandled
 8004f6c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004f70:	4eaf      	ldr	r6, [pc, #700]	; (8005230 <init_name+0x16>)
 8004f72:	4770      	bx	lr
 8004f74:	08004ec0 	.word	0x08004ec0

08004f78 <nullhandler>:
nullhandler():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:145
 8004f78:	f64f 70bc 	movw	r0, #65468	; 0xffbc
 8004f7c:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8004f80:	6800      	ldr	r0, [r0, #0]
 8004f82:	4687      	mov	pc, r0

08004f84 <Dictionary_1285>:
Dictionary_1285():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:145
 8004f84:	08004fac 	.word	0x08004fac
 8004f88:	69090081 	.word	0x69090081
 8004f8c:	652d7172 	.word	0x652d7172
 8004f90:	30697478 	.word	0x30697478

08004f94 <Code_1285>:
Code_1285():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:27
@------------------------------------------------------------------------------
@ Alle Interrupthandler funktionieren gleich und werden komfortabel mit einem Makro erzeugt:
@ All interrupt handlers work the same way and are generated with a macro:
@------------------------------------------------------------------------------

interrupt exti0
 8004f94:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004f98:	4ea6      	ldr	r6, [pc, #664]	; (8005234 <init_name+0x1a>)
 8004f9a:	4770      	bx	lr
 8004f9c:	08004ec0 	.word	0x08004ec0

08004fa0 <irq_vektor_exti0>:
irq_vektor_exti0():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:27
 8004fa0:	f64f 70b8 	movw	r0, #65464	; 0xffb8
 8004fa4:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8004fa8:	6800      	ldr	r0, [r0, #0]
 8004faa:	4687      	mov	pc, r0

08004fac <Dictionary_1289>:
Dictionary_1289():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:27
 8004fac:	08004fd4 	.word	0x08004fd4
 8004fb0:	69090081 	.word	0x69090081
 8004fb4:	652d7172 	.word	0x652d7172
 8004fb8:	31697478 	.word	0x31697478

08004fbc <Code_1289>:
Code_1289():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:28
interrupt exti1
 8004fbc:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004fc0:	4e9d      	ldr	r6, [pc, #628]	; (8005238 <init_name+0x1e>)
 8004fc2:	4770      	bx	lr
 8004fc4:	08004ec0 	.word	0x08004ec0

08004fc8 <irq_vektor_exti1>:
irq_vektor_exti1():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:28
 8004fc8:	f64f 70b4 	movw	r0, #65460	; 0xffb4
 8004fcc:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8004fd0:	6800      	ldr	r0, [r0, #0]
 8004fd2:	4687      	mov	pc, r0

08004fd4 <Dictionary_1293>:
Dictionary_1293():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:28
 8004fd4:	08004ffc 	.word	0x08004ffc
 8004fd8:	69090081 	.word	0x69090081
 8004fdc:	652d7172 	.word	0x652d7172
 8004fe0:	32697478 	.word	0x32697478

08004fe4 <Code_1293>:
Code_1293():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:29
interrupt exti2
 8004fe4:	f847 6d04 	str.w	r6, [r7, #-4]!
 8004fe8:	4e94      	ldr	r6, [pc, #592]	; (800523c <init_name+0x22>)
 8004fea:	4770      	bx	lr
 8004fec:	08004ec0 	.word	0x08004ec0

08004ff0 <irq_vektor_exti2>:
irq_vektor_exti2():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:29
 8004ff0:	f64f 70b0 	movw	r0, #65456	; 0xffb0
 8004ff4:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8004ff8:	6800      	ldr	r0, [r0, #0]
 8004ffa:	4687      	mov	pc, r0

08004ffc <Dictionary_1297>:
Dictionary_1297():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:29
 8004ffc:	08005024 	.word	0x08005024
 8005000:	69090081 	.word	0x69090081
 8005004:	652d7172 	.word	0x652d7172
 8005008:	33697478 	.word	0x33697478

0800500c <Code_1297>:
Code_1297():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:30
interrupt exti3
 800500c:	f847 6d04 	str.w	r6, [r7, #-4]!
 8005010:	4e8b      	ldr	r6, [pc, #556]	; (8005240 <init_name+0x26>)
 8005012:	4770      	bx	lr
 8005014:	08004ec0 	.word	0x08004ec0

08005018 <irq_vektor_exti3>:
irq_vektor_exti3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:30
 8005018:	f64f 70ac 	movw	r0, #65452	; 0xffac
 800501c:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8005020:	6800      	ldr	r0, [r0, #0]
 8005022:	4687      	mov	pc, r0

08005024 <Dictionary_1301>:
Dictionary_1301():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:30
 8005024:	0800504c 	.word	0x0800504c
 8005028:	69090081 	.word	0x69090081
 800502c:	652d7172 	.word	0x652d7172
 8005030:	34697478 	.word	0x34697478

08005034 <Code_1301>:
Code_1301():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:31
interrupt exti4
 8005034:	f847 6d04 	str.w	r6, [r7, #-4]!
 8005038:	4e82      	ldr	r6, [pc, #520]	; (8005244 <init_name+0x2a>)
 800503a:	4770      	bx	lr
 800503c:	08004ec0 	.word	0x08004ec0

08005040 <irq_vektor_exti4>:
irq_vektor_exti4():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:31
 8005040:	f64f 70a8 	movw	r0, #65448	; 0xffa8
 8005044:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8005048:	6800      	ldr	r0, [r0, #0]
 800504a:	4687      	mov	pc, r0

0800504c <Dictionary_1305>:
Dictionary_1305():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:31
 800504c:	08005072 	.word	0x08005072
 8005050:	69070081 	.word	0x69070081
 8005054:	612d7172 	.word	0x612d7172
 8005058:	6364      	.short	0x6364

0800505a <Code_1305>:
Code_1305():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:32
interrupt adc
 800505a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800505e:	4e7a      	ldr	r6, [pc, #488]	; (8005248 <init_name+0x2e>)
 8005060:	4770      	bx	lr
 8005062:	4ec0      	.short	0x4ec0
 8005064:	0800      	.short	0x0800

08005066 <irq_vektor_adc>:
irq_vektor_adc():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:32
 8005066:	f64f 70a4 	movw	r0, #65444	; 0xffa4
 800506a:	f2c2 4007 	movt	r0, #9223	; 0x2407
 800506e:	6800      	ldr	r0, [r0, #0]
 8005070:	4687      	mov	pc, r0

08005072 <Dictionary_1309>:
Dictionary_1309():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:32
 8005072:	509a      	.short	0x509a
 8005074:	00810800 	.word	0x00810800
 8005078:	71726908 	.word	0x71726908
 800507c:	6d69742d 	.word	0x6d69742d
 8005080:	32          	.byte	0x32
	...

08005082 <Code_1309>:
Code_1309():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:33
interrupt tim2
 8005082:	f847 6d04 	str.w	r6, [r7, #-4]!
 8005086:	4e71      	ldr	r6, [pc, #452]	; (800524c <init_name+0x32>)
 8005088:	4770      	bx	lr
 800508a:	4ec0      	.short	0x4ec0
 800508c:	0800      	.short	0x0800

0800508e <irq_vektor_tim2>:
irq_vektor_tim2():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:33
 800508e:	f64f 70a0 	movw	r0, #65440	; 0xffa0
 8005092:	f2c2 4007 	movt	r0, #9223	; 0x2407
 8005096:	6800      	ldr	r0, [r0, #0]
 8005098:	4687      	mov	pc, r0

0800509a <Dictionary_1313>:
Dictionary_1313():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:33
 800509a:	50c2      	.short	0x50c2
 800509c:	00810800 	.word	0x00810800
 80050a0:	71726908 	.word	0x71726908
 80050a4:	6d69742d 	.word	0x6d69742d
 80050a8:	33          	.byte	0x33
	...

080050aa <Code_1313>:
Code_1313():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:34
interrupt tim3
 80050aa:	f847 6d04 	str.w	r6, [r7, #-4]!
 80050ae:	4e68      	ldr	r6, [pc, #416]	; (8005250 <init_name+0x36>)
 80050b0:	4770      	bx	lr
 80050b2:	4ec0      	.short	0x4ec0
 80050b4:	0800      	.short	0x0800

080050b6 <irq_vektor_tim3>:
irq_vektor_tim3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:34
 80050b6:	f64f 709c 	movw	r0, #65436	; 0xff9c
 80050ba:	f2c2 4007 	movt	r0, #9223	; 0x2407
 80050be:	6800      	ldr	r0, [r0, #0]
 80050c0:	4687      	mov	pc, r0

080050c2 <Dictionary_1317>:
Dictionary_1317():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:34
 80050c2:	50ea      	.short	0x50ea
 80050c4:	00810800 	.word	0x00810800
 80050c8:	71726908 	.word	0x71726908
 80050cc:	6d69742d 	.word	0x6d69742d
 80050d0:	34          	.byte	0x34
	...

080050d2 <Code_1317>:
Code_1317():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:35
interrupt tim4
 80050d2:	f847 6d04 	str.w	r6, [r7, #-4]!
 80050d6:	4e5f      	ldr	r6, [pc, #380]	; (8005254 <init_name+0x3a>)
 80050d8:	4770      	bx	lr
 80050da:	4ec0      	.short	0x4ec0
 80050dc:	0800      	.short	0x0800

080050de <irq_vektor_tim4>:
irq_vektor_tim4():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:35
 80050de:	f64f 7098 	movw	r0, #65432	; 0xff98
 80050e2:	f2c2 4007 	movt	r0, #9223	; 0x2407
 80050e6:	6800      	ldr	r0, [r0, #0]
 80050e8:	4687      	mov	pc, r0

080050ea <Dictionary_1320>:
Dictionary_1320():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:35
 80050ea:	801c      	.short	0x801c
 80050ec:	ffff0800 	.word	0xffff0800
 80050f0:	2d2d2d18 	.word	0x2d2d2d18
 80050f4:	616c4620 	.word	0x616c4620
 80050f8:	44206873 	.word	0x44206873
 80050fc:	69746369 	.word	0x69746369
 8005100:	72616e6f 	.word	0x72616e6f
 8005104:	2d2d2079 	.word	0x2d2d2079
 8005108:	2d          	.byte	0x2d
	...

0800510a <Code_1320>:
Reset():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/mecrisp-stellaris-stm32h745.s:74
@ -----------------------------------------------------------------------------
Reset: @ Einsprung zu Beginn
@ -----------------------------------------------------------------------------
   @ Initialisierungen der Hardware, habe und brauche noch keinen Datenstack dafür
   @ Initialisations for Terminal hardware, without Datastack.
   bl uart_init
 800510a:	f7fd fbbf 	bl	800288c <uart_init>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:28
@ Initialises pointers and variables for flash dictionary after Reset.
@ This runs one time after Reset, no registers are saved here.

   @ Hardware sets return stack pointer on startup from vector table.
   @ Set Return stack pointer here (again) just in case this might be a software re-entry.
   ldr r0, =returnstackanfang
 800510e:	4852      	ldr	r0, [pc, #328]	; (8005258 <init_name+0x3e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:29
   mov sp, r0
 8005110:	4685      	mov	sp, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:33

   @ Return stack pointer already set up. Time to set data stack pointer !
   @ Normaler Stackpointer bereits gesetzt. Setze den Datenstackpointer:
   ldr psp, =datenstackanfang
 8005112:	4f52      	ldr	r7, [pc, #328]	; (800525c <init_name+0x42>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:38

   @ TOS setzen, um Pufferunterläufe gut erkennen zu können
   @ TOS magic number to see spurious stack underflows in .s
   @ ldr tos, =0xAFFEBEEF
   movs tos, #42
 8005114:	262a      	movs	r6, #42	; 0x2a
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:51
  @  r1 Aktuelle Flags      Current Flags
  @  r3 Für dies und das    Temporary this and that
  @  r5 Belegtes Ram.       Keeps track of allocated RAM
  @ TOS Adresshangelzeiger  Pointer that crawls through dictionary

  pushdatos
 8005116:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:52
  ldr tos, =CoreDictionaryAnfang  @ Hier fängt es an.  Start at the beginning
 800511a:	4e51      	ldr	r6, [pc, #324]	; (8005260 <init_name+0x46>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:53
  ldr r5,  =RamDictionaryEnde     @ Fürs Abzählen des Variablenplatzes  Variables start at the end of RAM dictionary
 800511c:	4d51      	ldr	r5, [pc, #324]	; (8005264 <init_name+0x4a>)

0800511e <SucheFlashPointer_Hangelschleife>:
SucheFlashPointer_Hangelschleife():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:56

SucheFlashPointer_Hangelschleife:
  ldrh r1, [tos, #4]  @ Aktuelle Flags lesen  Fetch current Flags
 800511e:	88b1      	ldrh	r1, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:58

  ldr r3, =Flag_invisible
 8005120:	f64f 73ff 	movw	r3, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:60

  cmp r1, r3   @ Flag_invisible ? Überspringen !  Skip invisible definitions
 8005124:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:61
  beq.n Sucheflashpointer_Speicherbelegung_fertig
 8005126:	d025      	beq.n	8005174 <Sucheflashpointer_Speicherbelegung_fertig>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:65
    @ Dies Wort ist sichtbar. Prüfe, ob es Ram-Speicher anfordert und belegt.
    @ This definition is visible. Check if it allocates RAM.

    ldr r3, =Flag_buffer & ~Flag_visible
 8005128:	f44f 7380 	mov.w	r3, #256	; 0x100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:66
    ands r3, r1
 800512c:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:67
    beq 1f @ No buffer requested.
 800512e:	d00a      	beq.n	8005146 <SucheFlashPointer_Hangelschleife+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:70

      @ Search for end of code of current definition.
      adds r0, tos, #6
 8005130:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:71
      bl skipstring
 8005132:	f7fe fea3 	bl	8003e7c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:73
      @ r0 zeigt nun an den Codebeginn des aktuellen Wortes.  r0 points to start of code of current definition
      bl suchedefinitionsende @ Advance pointer to end of code. This is detected by "bx lr" or "pop {pc}" opcodes.
 8005136:	f7fe f9af 	bl	8003498 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:77
      @ r0 ist nun an der Stelle, wo die Initialisierungsdaten liegen. r0 now points to the location of the initialisation at the end of code of current definition.

      @ Fetch required length of buffer, do this in two steps because of alignment issues
      ldrh r3, [r0]
 800513a:	8803      	ldrh	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:78
      ldrh r0, [r0, #2]
 800513c:	8840      	ldrh	r0, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:79
      lsls r0, #16
 800513e:	0400      	lsls	r0, r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:80
      orrs r3, r0
 8005140:	4303      	orrs	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:83

      @ Ramvariablenpointer wandern lassen  Subtract from the pointer that points to the next free location
      subs r5, r3
 8005142:	1aed      	subs	r5, r5, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:84
      b.n Sucheflashpointer_Speicherbelegung_fertig @ Finished
 8005144:	e016      	b.n	8005174 <Sucheflashpointer_Speicherbelegung_fertig>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:86

1:  movs r3, #Flag_ramallot & ~Flag_visible
 8005146:	2380      	movs	r3, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:87
    ands r3, r1
 8005148:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:89

    beq.n Sucheflashpointer_Speicherbelegung_fertig @ Benötigt doch kein RAM.
 800514a:	d013      	beq.n	8005174 <Sucheflashpointer_Speicherbelegung_fertig>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:94
      @ writeln "Speicher gewünscht !"
      @ Die Flags werden später nicht mehr gebraucht.
      @ This one allocates RAM, Flags are not needed anymore.

      movs r3, #0x0F @ Das unterste Nibble maskieren  Mask lower 4 bits that contains amount of 32 bit locations requested.
 800514c:	230f      	movs	r3, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:95
      ands r1, r3
 800514e:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:99

        @ Bei Null Bytes brauche ich nichts zu kopieren, den Fall erkennt move.
        @ Zero byte requests are handled by move itself, no need to catch this special case. Sounds strange, but is useful to have two handles for one variable.
        lsls r1, #2 @ Mit vier malnehmen                  Multiply by 4
 8005150:	0089      	lsls	r1, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:100
        subs r5, r1 @ Ramvariablenpointer wandern lassen  Subtract from the pointer that points to the next free location
 8005152:	1a6d      	subs	r5, r5, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:111
        @ r3: ist frei für uns.                                                     Free for use !
        @ r5: die Startadresse des Ram-Bereiches, der geschrieben werden soll.      Contains address in RAM the initialisation values have to be written in.

        @ Muss zuerst schaffen, das Ende der aktuellen Definition zu finden.
        @ Search for end of code of current definition.
        adds r0, tos, #6
 8005154:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:112
        bl skipstring
 8005156:	f7fe fe91 	bl	8003e7c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:114
        @ r0 zeigt nun an den Codebeginn des aktuellen Wortes.  r0 points to start of code of current definition
        bl suchedefinitionsende @ Advance pointer to end of code. This is detected by "bx lr" or "pop {pc}" opcodes.
 800515a:	f7fe f99d 	bl	8003498 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:117
        @ r0 ist nun an der Stelle, wo die Initialisierungsdaten liegen. r0 now points to the location of the initialisation at the end of code of current definition.
        @ Kopiere die gewünschte Zahl von r1 Bytes von [r0] an [r5]  Copy desired amount of r1 bytes from [r0] to [r5].
        pushda r0 @ Quelle  Source
 800515e:	f847 6d04 	str.w	r6, [r7, #-4]!
 8005162:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:118
        pushda r5 @ Ziel    Target
 8005164:	f847 6d04 	str.w	r6, [r7, #-4]!
 8005168:	002e      	movs	r6, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:119
        pushda r1 @ Anzahl an Bytes  Amount
 800516a:	f847 6d04 	str.w	r6, [r7, #-4]!
 800516e:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:120
        bl move
 8005170:	f7fc fb98 	bl	80018a4 <Code_373>

08005174 <Sucheflashpointer_Speicherbelegung_fertig>:
Sucheflashpointer_Speicherbelegung_fertig():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:127
Sucheflashpointer_Speicherbelegung_fertig:
  @ Speicherbelegung und -initialisierung abgeschlossen.
  @ Finished RAM allocation and initialisation.

  @ Weiterhangeln  Continue crawl.
  bl dictionarynext
 8005174:	f7fe fe4d 	bl	8003e12 <Code_956>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:128
  popda r0
 8005178:	0030      	movs	r0, r6
 800517a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:129
  beq.n SucheFlashPointer_Hangelschleife
 800517c:	d0cf      	beq.n	800511e <SucheFlashPointer_Hangelschleife>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:132


  ldr r0, =ZweitFadenende
 800517e:	483a      	ldr	r0, [pc, #232]	; (8005268 <init_name+0x4e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:133
  str tos, [r0] @ Das Fadenende für den Flash setzen.  Set pointer to latest definition.
 8005180:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:134
  drop
 8005182:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:136

  ldr r0, =VariablenPointer @ Set pointer to current end-of-ram-dictionary for later permanent RAM allocations by variables defined in Flash.
 8005184:	4839      	ldr	r0, [pc, #228]	; (800526c <init_name+0x52>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:137
  str r5, [r0]
 8005186:	6005      	str	r5, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:143

  @ Mache mich auf die Suche nach dem Dictionarypointer im Flash:
  @ Suche jetzt gleich noch den DictionaryPointer.
  @ Time to search the Dictionarypointer !

  ldr r0, =FlashDictionaryEnde
 8005188:	f04f 6001 	mov.w	r0, #135266304	; 0x8100000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:144
  ldr r1, =FlashDictionaryAnfang
 800518c:	4938      	ldr	r1, [pc, #224]	; (8005270 <init_name+0x56>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:145
  ldr r2, =erasedhalfword
 800518e:	f64f 72ff 	movw	r2, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:149

  @ Gehe Rückwärts, bis ich aus dem $FFFF-Freigebiet in Daten komme.
  @ Run backwards through whole Flash memory to find DictionaryPointer.
1:cmp r0, r1 @  Wenn ich am Anfang angelangt bin, ist das der DictionaryPointer.
 8005192:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:150
  beq.n 2f     @  Finished if beginning of Flash is hit.
 8005194:	d004      	beq.n	80051a0 <Sucheflashpointer_Speicherbelegung_fertig+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:152

  subs r0, #2
 8005196:	3802      	subs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:153
  ldrh r3, [r0]
 8005198:	8803      	ldrh	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:154
  cmp r3, r2 @ 0xFFFF
 800519a:	4293      	cmp	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:155
  beq.n 1b @ Wenn es nicht gleich ist, habe ich eine Füllung gefunden.
 800519c:	d0f9      	beq.n	8005192 <Sucheflashpointer_Speicherbelegung_fertig+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:158
           @ If there is not $FFFF on that location I have found "end of free space".

  adds r0, #2
 800519e:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:161

2:@ Dictionarypointer gefunden. Found DictionaryPointer.
  ldr r1, =ZweitDictionaryPointer @ We start to compile into RAM - the pointer found goes to the second set of pointers that are swapped with compiletoflash/compiletoram.
 80051a0:	4934      	ldr	r1, [pc, #208]	; (8005274 <init_name+0x5a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:162
  str r0, [r1]
 80051a2:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:165

  .ifdef initflash
   bl initflash
 80051a4:	f7fc ffe0 	bl	8002168 <Code_478>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/mecrisp-stellaris-stm32h745.s:79

   @ Catch the pointers for Flash dictionary
   .include "../common/catchflashpointers.s"

   welcome " for STM32H745 Nucleo by Matthias Koch"
 80051a8:	f7fd fdfe 	bl	8002da8 <dotgaensefuesschen>
 80051ac:	63654d41 	.word	0x63654d41
 80051b0:	70736972 	.word	0x70736972
 80051b4:	6574532d 	.word	0x6574532d
 80051b8:	72616c6c 	.word	0x72616c6c
 80051bc:	52207369 	.word	0x52207369
 80051c0:	2e322041 	.word	0x2e322041
 80051c4:	20352e36 	.word	0x20352e36
 80051c8:	20726f66 	.word	0x20726f66
 80051cc:	334d5453 	.word	0x334d5453
 80051d0:	34374832 	.word	0x34374832
 80051d4:	754e2035 	.word	0x754e2035
 80051d8:	6f656c63 	.word	0x6f656c63
 80051dc:	20796220 	.word	0x20796220
 80051e0:	7474614d 	.word	0x7474614d
 80051e4:	73616968 	.word	0x73616968
 80051e8:	636f4b20 	.word	0x636f4b20
 80051ec:	0a68      	.short	0x0a68
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:24
@ Common startup code for all implementations

   @ Einige der Kernvariablen müssen hier unbedingt frisch gesetzt werden, damit quit nicht nach dem Init-Einsprung nochmal tätig werden muss.
   @ Some of the core variables must be set fresh here so that quit does not have to take action again after the init jump.

   ldr r0, =konstantenfaltungszeiger
 80051ee:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:25
   movs r1, #0    @ Clear constant folding pointer
 80051f2:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:26
   str r1, [r0]
 80051f4:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:29

  .ifdef registerallocator
    bl init_register_allocator
 80051f6:	f7fb f8e4 	bl	80003c2 <init_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:34
  .endif

   @ Suche nach der init-Definition:
   @ Search for current init definition in dictionary:
   pushdatos
 80051fa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:35
   ldr tos, =init_name
 80051fe:	4e1e      	ldr	r6, [pc, #120]	; (8005278 <init_name+0x5e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:36
   pushdaconst 4
 8005200:	f847 6d04 	str.w	r6, [r7, #-4]!
 8005204:	2604      	movs	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:37
   bl find
 8005206:	f7fe fe48 	bl	8003e9a <Code_961>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:38
   drop @ Flags brauche ich nicht No need for flags
 800520a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:39
   cmp tos, #0
 800520c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:40
   beq 1f
 800520e:	d002      	beq.n	8005216 <Sucheflashpointer_Speicherbelegung_fertig+0xa2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:42
     @ Gefunden ! Found !
     bl execute
 8005210:	f7fe f9df 	bl	80035d2 <Code_818>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:43
     b quit_intern
 8005214:	e5f8      	b.n	8004e08 <quit_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:45
1:
   drop @ Die 0-Adresse von find. Wird hier heruntergeworfen, damit der Startwert AFFEBEEF erhalten bleibt !
 8005216:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:46
   b quit @ Drop 0-address of find to keep magic TOS value intact.
 8005218:	e5e0      	b.n	8004ddc <Code_1258>

0800521a <init_name>:
init_name():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:46
 800521a:	6e69      	.short	0x6e69
 800521c:	00007469 	.word	0x00007469
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:72
  ldr r0, =0xE000ED0C
 8005220:	e000ed0c 	.word	0xe000ed0c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:73
  ldr r1, =0x5FA0004
 8005224:	05fa0004 	.word	0x05fa0004
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:143
interrupt systick
 8005228:	2407ffc4 	.word	0x2407ffc4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:144
initinterrupt fault, faulthandler, unhandled
 800522c:	2407ffc0 	.word	0x2407ffc0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/interrupts-common.s:145
initinterrupt collection, nullhandler, unhandled
 8005230:	2407ffbc 	.word	0x2407ffbc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:27
interrupt exti0
 8005234:	2407ffb8 	.word	0x2407ffb8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:28
interrupt exti1
 8005238:	2407ffb4 	.word	0x2407ffb4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:29
interrupt exti2
 800523c:	2407ffb0 	.word	0x2407ffb0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:30
interrupt exti3
 8005240:	2407ffac 	.word	0x2407ffac
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:31
interrupt exti4
 8005244:	2407ffa8 	.word	0x2407ffa8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:32
interrupt adc
 8005248:	2407ffa4 	.word	0x2407ffa4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:33
interrupt tim2
 800524c:	2407ffa0 	.word	0x2407ffa0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:34
interrupt tim3
 8005250:	2407ff9c 	.word	0x2407ff9c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/interrupts.s:35
interrupt tim4
 8005254:	2407ff98 	.word	0x2407ff98
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:28
   ldr r0, =returnstackanfang
 8005258:	24000388 	.word	0x24000388
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:33
   ldr psp, =datenstackanfang
 800525c:	24000288 	.word	0x24000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:52
  ldr tos, =CoreDictionaryAnfang  @ Hier fängt es an.  Start at the beginning
 8005260:	080001e4 	.word	0x080001e4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:53
  ldr r5,  =RamDictionaryEnde     @ Fürs Abzählen des Variablenplatzes  Variables start at the end of RAM dictionary
 8005264:	24080000 	.word	0x24080000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:132
  ldr r0, =ZweitFadenende
 8005268:	24000014 	.word	0x24000014
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:136
  ldr r0, =VariablenPointer @ Set pointer to current end-of-ram-dictionary for later permanent RAM allocations by variables defined in Flash.
 800526c:	2400001c 	.word	0x2400001c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:144
  ldr r1, =FlashDictionaryAnfang
 8005270:	08008000 	.word	0x08008000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/catchflashpointers.s:161
  ldr r1, =ZweitDictionaryPointer @ We start to compile into RAM - the pointer found goes to the second set of pointers that are swapped with compiletoflash/compiletoram.
 8005274:	24000010 	.word	0x24000010
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h745-ra/../common/boot.s:35
   ldr tos, =init_name
 8005278:	0800521a 	.word	0x0800521a
