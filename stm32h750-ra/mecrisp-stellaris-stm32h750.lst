
mecrisp-stellaris-stm32h750.elf:     file format elf32-littlearm
mecrisp-stellaris-stm32h750.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x000054c0 memsz 0x000054c0 flags r-x
private flags = 0x5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .text           000054c0  00000000  00000000  00010000  2**6  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.attributes 00000021  00000000  00000000  000154c0  2**0  CONTENTS, READONLY
  2 .debug_line     00001ab9  00000000  00000000  000154e1  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  3 .debug_info     00000026  00000000  00000000  00016f9a  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_abbrev   00000014  00000000  00000000  00016fc0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_aranges  00000020  00000000  00000000  00016fd8  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_str      00000084  00000000  00000000  00016ff8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 mecrisp-stellaris-stm32h750.o
58003800 l       *ABS*	00000000 COMP1_BASE
58003800 l       *ABS*	00000000 COMP1_SR
00000001 l       *ABS*	00000000 COMP1_SR_C1VAL
00000002 l       *ABS*	00000000 COMP1_SR_C2VAL
00010000 l       *ABS*	00000000 COMP1_SR_C1IF
00020000 l       *ABS*	00000000 COMP1_SR_C2IF
58003804 l       *ABS*	00000000 COMP1_ICFR
00010000 l       *ABS*	00000000 COMP1_ICFR_CC1IF
00020000 l       *ABS*	00000000 COMP1_ICFR_CC2IF
58003808 l       *ABS*	00000000 COMP1_OR
00000000 l       *ABS*	00000000 COMP1_OR_AFOP_Shift
0000000b l       *ABS*	00000000 COMP1_OR_OR_Shift
5800380c l       *ABS*	00000000 COMP1_CFGR1
00000001 l       *ABS*	00000000 COMP1_CFGR1_EN
00000002 l       *ABS*	00000000 COMP1_CFGR1_BRGEN
00000004 l       *ABS*	00000000 COMP1_CFGR1_SCALEN
00000008 l       *ABS*	00000000 COMP1_CFGR1_POLARITY
00000040 l       *ABS*	00000000 COMP1_CFGR1_ITEN
00000008 l       *ABS*	00000000 COMP1_CFGR1_HYST_Shift
0000000c l       *ABS*	00000000 COMP1_CFGR1_PWRMODE_Shift
00000010 l       *ABS*	00000000 COMP1_CFGR1_INMSEL_Shift
00100000 l       *ABS*	00000000 COMP1_CFGR1_INPSEL
00000018 l       *ABS*	00000000 COMP1_CFGR1_BLANKING_Shift
80000000 l       *ABS*	00000000 COMP1_CFGR1_LOCK
58003810 l       *ABS*	00000000 COMP1_CFGR2
00000001 l       *ABS*	00000000 COMP1_CFGR2_EN
00000002 l       *ABS*	00000000 COMP1_CFGR2_BRGEN
00000004 l       *ABS*	00000000 COMP1_CFGR2_SCALEN
00000008 l       *ABS*	00000000 COMP1_CFGR2_POLARITY
00000010 l       *ABS*	00000000 COMP1_CFGR2_WINMODE
00000040 l       *ABS*	00000000 COMP1_CFGR2_ITEN
00000008 l       *ABS*	00000000 COMP1_CFGR2_HYST_Shift
0000000c l       *ABS*	00000000 COMP1_CFGR2_PWRMODE_Shift
00000010 l       *ABS*	00000000 COMP1_CFGR2_INMSEL_Shift
00100000 l       *ABS*	00000000 COMP1_CFGR2_INPSEL
00000018 l       *ABS*	00000000 COMP1_CFGR2_BLANKING_Shift
80000000 l       *ABS*	00000000 COMP1_CFGR2_LOCK
40008400 l       *ABS*	00000000 CRS_BASE
40008400 l       *ABS*	00000000 CRS_CR
00000001 l       *ABS*	00000000 CRS_CR_SYNCOKIE
00000002 l       *ABS*	00000000 CRS_CR_SYNCWARNIE
00000004 l       *ABS*	00000000 CRS_CR_ERRIE
00000008 l       *ABS*	00000000 CRS_CR_ESYNCIE
00000020 l       *ABS*	00000000 CRS_CR_CEN
00000040 l       *ABS*	00000000 CRS_CR_AUTOTRIMEN
00000080 l       *ABS*	00000000 CRS_CR_SWSYNC
00000008 l       *ABS*	00000000 CRS_CR_TRIM_Shift
40008404 l       *ABS*	00000000 CRS_CFGR
00000000 l       *ABS*	00000000 CRS_CFGR_RELOAD_Shift
00000010 l       *ABS*	00000000 CRS_CFGR_FELIM_Shift
00000018 l       *ABS*	00000000 CRS_CFGR_SYNCDIV_Shift
0000001c l       *ABS*	00000000 CRS_CFGR_SYNCSRC_Shift
80000000 l       *ABS*	00000000 CRS_CFGR_SYNCPOL
40008408 l       *ABS*	00000000 CRS_ISR
00000001 l       *ABS*	00000000 CRS_ISR_SYNCOKF
00000002 l       *ABS*	00000000 CRS_ISR_SYNCWARNF
00000004 l       *ABS*	00000000 CRS_ISR_ERRF
00000008 l       *ABS*	00000000 CRS_ISR_ESYNCF
00000100 l       *ABS*	00000000 CRS_ISR_SYNCERR
00000200 l       *ABS*	00000000 CRS_ISR_SYNCMISS
00000400 l       *ABS*	00000000 CRS_ISR_TRIMOVF
00008000 l       *ABS*	00000000 CRS_ISR_FEDIR
00000010 l       *ABS*	00000000 CRS_ISR_FECAP_Shift
4000840c l       *ABS*	00000000 CRS_ICR
00000001 l       *ABS*	00000000 CRS_ICR_SYNCOKC
00000002 l       *ABS*	00000000 CRS_ICR_SYNCWARNC
00000004 l       *ABS*	00000000 CRS_ICR_ERRC
00000008 l       *ABS*	00000000 CRS_ICR_ESYNCC
40007400 l       *ABS*	00000000 DAC_BASE
40007400 l       *ABS*	00000000 DAC_CR
00000001 l       *ABS*	00000000 DAC_CR_EN1
00000002 l       *ABS*	00000000 DAC_CR_TEN1
00000002 l       *ABS*	00000000 DAC_CR_TSEL1_Shift
00000006 l       *ABS*	00000000 DAC_CR_WAVE1_Shift
00000008 l       *ABS*	00000000 DAC_CR_MAMP1_Shift
00001000 l       *ABS*	00000000 DAC_CR_DMAEN1
00002000 l       *ABS*	00000000 DAC_CR_DMAUDRIE1
00004000 l       *ABS*	00000000 DAC_CR_CEN1
00010000 l       *ABS*	00000000 DAC_CR_EN2
00020000 l       *ABS*	00000000 DAC_CR_TEN2
00000012 l       *ABS*	00000000 DAC_CR_TSEL2_Shift
00000016 l       *ABS*	00000000 DAC_CR_WAVE2_Shift
00000018 l       *ABS*	00000000 DAC_CR_MAMP2_Shift
10000000 l       *ABS*	00000000 DAC_CR_DMAEN2
20000000 l       *ABS*	00000000 DAC_CR_DMAUDRIE2
40000000 l       *ABS*	00000000 DAC_CR_CEN2
40007404 l       *ABS*	00000000 DAC_SWTRGR
00000001 l       *ABS*	00000000 DAC_SWTRGR_SWTRIG1
00000002 l       *ABS*	00000000 DAC_SWTRGR_SWTRIG2
40007408 l       *ABS*	00000000 DAC_DHR12R1
00000000 l       *ABS*	00000000 DAC_DHR12R1_DACC1DHR_Shift
4000740c l       *ABS*	00000000 DAC_DHR12L1
00000004 l       *ABS*	00000000 DAC_DHR12L1_DACC1DHR_Shift
40007410 l       *ABS*	00000000 DAC_DHR8R1
00000000 l       *ABS*	00000000 DAC_DHR8R1_DACC1DHR_Shift
40007414 l       *ABS*	00000000 DAC_DHR12R2
00000000 l       *ABS*	00000000 DAC_DHR12R2_DACC2DHR_Shift
40007418 l       *ABS*	00000000 DAC_DHR12L2
00000004 l       *ABS*	00000000 DAC_DHR12L2_DACC2DHR_Shift
4000741c l       *ABS*	00000000 DAC_DHR8R2
00000000 l       *ABS*	00000000 DAC_DHR8R2_DACC2DHR_Shift
40007420 l       *ABS*	00000000 DAC_DHR12RD
00000000 l       *ABS*	00000000 DAC_DHR12RD_DACC1DHR_Shift
00000010 l       *ABS*	00000000 DAC_DHR12RD_DACC2DHR_Shift
40007424 l       *ABS*	00000000 DAC_DHR12LD
00000004 l       *ABS*	00000000 DAC_DHR12LD_DACC1DHR_Shift
00000014 l       *ABS*	00000000 DAC_DHR12LD_DACC2DHR_Shift
40007428 l       *ABS*	00000000 DAC_DHR8RD
00000000 l       *ABS*	00000000 DAC_DHR8RD_DACC1DHR_Shift
00000008 l       *ABS*	00000000 DAC_DHR8RD_DACC2DHR_Shift
4000742c l       *ABS*	00000000 DAC_DOR1
00000000 l       *ABS*	00000000 DAC_DOR1_DACC1DOR_Shift
40007430 l       *ABS*	00000000 DAC_DOR2
00000000 l       *ABS*	00000000 DAC_DOR2_DACC2DOR_Shift
40007434 l       *ABS*	00000000 DAC_SR
00002000 l       *ABS*	00000000 DAC_SR_DMAUDR1
00004000 l       *ABS*	00000000 DAC_SR_CAL_FLAG1
00008000 l       *ABS*	00000000 DAC_SR_BWST1
20000000 l       *ABS*	00000000 DAC_SR_DMAUDR2
40000000 l       *ABS*	00000000 DAC_SR_CAL_FLAG2
80000000 l       *ABS*	00000000 DAC_SR_BWST2
40007438 l       *ABS*	00000000 DAC_CCR
00000000 l       *ABS*	00000000 DAC_CCR_OTRIM1_Shift
00000010 l       *ABS*	00000000 DAC_CCR_OTRIM2_Shift
4000743c l       *ABS*	00000000 DAC_MCR
00000000 l       *ABS*	00000000 DAC_MCR_MODE1_Shift
00000010 l       *ABS*	00000000 DAC_MCR_MODE2_Shift
40007440 l       *ABS*	00000000 DAC_SHSR1
00000000 l       *ABS*	00000000 DAC_SHSR1_TSAMPLE1_Shift
40007444 l       *ABS*	00000000 DAC_SHSR2
00000000 l       *ABS*	00000000 DAC_SHSR2_TSAMPLE2_Shift
40007448 l       *ABS*	00000000 DAC_SHHR
00000000 l       *ABS*	00000000 DAC_SHHR_THOLD1_Shift
00000010 l       *ABS*	00000000 DAC_SHHR_THOLD2_Shift
4000744c l       *ABS*	00000000 DAC_SHRR
00000000 l       *ABS*	00000000 DAC_SHRR_TREFRESH1_Shift
00000010 l       *ABS*	00000000 DAC_SHRR_TREFRESH2_Shift
58025400 l       *ABS*	00000000 BDMA_BASE
58025400 l       *ABS*	00000000 BDMA_ISR
00000001 l       *ABS*	00000000 BDMA_ISR_GIF1
00000002 l       *ABS*	00000000 BDMA_ISR_TCIF1
00000004 l       *ABS*	00000000 BDMA_ISR_HTIF1
00000008 l       *ABS*	00000000 BDMA_ISR_TEIF1
00000010 l       *ABS*	00000000 BDMA_ISR_GIF2
00000020 l       *ABS*	00000000 BDMA_ISR_TCIF2
00000040 l       *ABS*	00000000 BDMA_ISR_HTIF2
00000080 l       *ABS*	00000000 BDMA_ISR_TEIF2
00000100 l       *ABS*	00000000 BDMA_ISR_GIF3
00000200 l       *ABS*	00000000 BDMA_ISR_TCIF3
00000400 l       *ABS*	00000000 BDMA_ISR_HTIF3
00000800 l       *ABS*	00000000 BDMA_ISR_TEIF3
00001000 l       *ABS*	00000000 BDMA_ISR_GIF4
00002000 l       *ABS*	00000000 BDMA_ISR_TCIF4
00004000 l       *ABS*	00000000 BDMA_ISR_HTIF4
00008000 l       *ABS*	00000000 BDMA_ISR_TEIF4
00010000 l       *ABS*	00000000 BDMA_ISR_GIF5
00020000 l       *ABS*	00000000 BDMA_ISR_TCIF5
00040000 l       *ABS*	00000000 BDMA_ISR_HTIF5
00080000 l       *ABS*	00000000 BDMA_ISR_TEIF5
00100000 l       *ABS*	00000000 BDMA_ISR_GIF6
00200000 l       *ABS*	00000000 BDMA_ISR_TCIF6
00400000 l       *ABS*	00000000 BDMA_ISR_HTIF6
00800000 l       *ABS*	00000000 BDMA_ISR_TEIF6
01000000 l       *ABS*	00000000 BDMA_ISR_GIF7
02000000 l       *ABS*	00000000 BDMA_ISR_TCIF7
04000000 l       *ABS*	00000000 BDMA_ISR_HTIF7
08000000 l       *ABS*	00000000 BDMA_ISR_TEIF7
10000000 l       *ABS*	00000000 BDMA_ISR_GIF8
20000000 l       *ABS*	00000000 BDMA_ISR_TCIF8
40000000 l       *ABS*	00000000 BDMA_ISR_HTIF8
80000000 l       *ABS*	00000000 BDMA_ISR_TEIF8
58025404 l       *ABS*	00000000 BDMA_IFCR
00000001 l       *ABS*	00000000 BDMA_IFCR_CGIF1
00000002 l       *ABS*	00000000 BDMA_IFCR_CTCIF1
00000004 l       *ABS*	00000000 BDMA_IFCR_CHTIF1
00000008 l       *ABS*	00000000 BDMA_IFCR_CTEIF1
00000010 l       *ABS*	00000000 BDMA_IFCR_CGIF2
00000020 l       *ABS*	00000000 BDMA_IFCR_CTCIF2
00000040 l       *ABS*	00000000 BDMA_IFCR_CHTIF2
00000080 l       *ABS*	00000000 BDMA_IFCR_CTEIF2
00000100 l       *ABS*	00000000 BDMA_IFCR_CGIF3
00000200 l       *ABS*	00000000 BDMA_IFCR_CTCIF3
00000400 l       *ABS*	00000000 BDMA_IFCR_CHTIF3
00000800 l       *ABS*	00000000 BDMA_IFCR_CTEIF3
00001000 l       *ABS*	00000000 BDMA_IFCR_CGIF4
00002000 l       *ABS*	00000000 BDMA_IFCR_CTCIF4
00004000 l       *ABS*	00000000 BDMA_IFCR_CHTIF4
00008000 l       *ABS*	00000000 BDMA_IFCR_CTEIF4
00010000 l       *ABS*	00000000 BDMA_IFCR_CGIF5
00020000 l       *ABS*	00000000 BDMA_IFCR_CTCIF5
00040000 l       *ABS*	00000000 BDMA_IFCR_CHTIF5
00080000 l       *ABS*	00000000 BDMA_IFCR_CTEIF5
00100000 l       *ABS*	00000000 BDMA_IFCR_CGIF6
00200000 l       *ABS*	00000000 BDMA_IFCR_CTCIF6
00400000 l       *ABS*	00000000 BDMA_IFCR_CHTIF6
00800000 l       *ABS*	00000000 BDMA_IFCR_CTEIF6
01000000 l       *ABS*	00000000 BDMA_IFCR_CGIF7
02000000 l       *ABS*	00000000 BDMA_IFCR_CTCIF7
04000000 l       *ABS*	00000000 BDMA_IFCR_CHTIF7
08000000 l       *ABS*	00000000 BDMA_IFCR_CTEIF7
10000000 l       *ABS*	00000000 BDMA_IFCR_CGIF8
20000000 l       *ABS*	00000000 BDMA_IFCR_CTCIF8
40000000 l       *ABS*	00000000 BDMA_IFCR_CHTIF8
80000000 l       *ABS*	00000000 BDMA_IFCR_CTEIF8
58025408 l       *ABS*	00000000 BDMA_CCR1
00000001 l       *ABS*	00000000 BDMA_CCR1_EN
00000002 l       *ABS*	00000000 BDMA_CCR1_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR1_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR1_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR1_DIR
00000020 l       *ABS*	00000000 BDMA_CCR1_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR1_PINC
00000080 l       *ABS*	00000000 BDMA_CCR1_MINC
00000008 l       *ABS*	00000000 BDMA_CCR1_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR1_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR1_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR1_MEM2MEM
5802540c l       *ABS*	00000000 BDMA_CNDTR1
00000000 l       *ABS*	00000000 BDMA_CNDTR1_NDT_Shift
58025410 l       *ABS*	00000000 BDMA_CPAR1
00000000 l       *ABS*	00000000 BDMA_CPAR1_PA_Shift
58025414 l       *ABS*	00000000 BDMA_CMAR1
00000000 l       *ABS*	00000000 BDMA_CMAR1_MA_Shift
5802541c l       *ABS*	00000000 BDMA_CCR2
00000001 l       *ABS*	00000000 BDMA_CCR2_EN
00000002 l       *ABS*	00000000 BDMA_CCR2_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR2_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR2_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR2_DIR
00000020 l       *ABS*	00000000 BDMA_CCR2_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR2_PINC
00000080 l       *ABS*	00000000 BDMA_CCR2_MINC
00000008 l       *ABS*	00000000 BDMA_CCR2_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR2_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR2_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR2_MEM2MEM
58025420 l       *ABS*	00000000 BDMA_CNDTR2
00000000 l       *ABS*	00000000 BDMA_CNDTR2_NDT_Shift
58025424 l       *ABS*	00000000 BDMA_CPAR2
00000000 l       *ABS*	00000000 BDMA_CPAR2_PA_Shift
58025428 l       *ABS*	00000000 BDMA_CMAR2
00000000 l       *ABS*	00000000 BDMA_CMAR2_MA_Shift
58025430 l       *ABS*	00000000 BDMA_CCR3
00000001 l       *ABS*	00000000 BDMA_CCR3_EN
00000002 l       *ABS*	00000000 BDMA_CCR3_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR3_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR3_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR3_DIR
00000020 l       *ABS*	00000000 BDMA_CCR3_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR3_PINC
00000080 l       *ABS*	00000000 BDMA_CCR3_MINC
00000008 l       *ABS*	00000000 BDMA_CCR3_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR3_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR3_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR3_MEM2MEM
58025434 l       *ABS*	00000000 BDMA_CNDTR3
00000000 l       *ABS*	00000000 BDMA_CNDTR3_NDT_Shift
58025438 l       *ABS*	00000000 BDMA_CPAR3
00000000 l       *ABS*	00000000 BDMA_CPAR3_PA_Shift
5802543c l       *ABS*	00000000 BDMA_CMAR3
00000000 l       *ABS*	00000000 BDMA_CMAR3_MA_Shift
58025444 l       *ABS*	00000000 BDMA_CCR4
00000001 l       *ABS*	00000000 BDMA_CCR4_EN
00000002 l       *ABS*	00000000 BDMA_CCR4_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR4_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR4_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR4_DIR
00000020 l       *ABS*	00000000 BDMA_CCR4_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR4_PINC
00000080 l       *ABS*	00000000 BDMA_CCR4_MINC
00000008 l       *ABS*	00000000 BDMA_CCR4_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR4_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR4_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR4_MEM2MEM
58025448 l       *ABS*	00000000 BDMA_CNDTR4
00000000 l       *ABS*	00000000 BDMA_CNDTR4_NDT_Shift
5802544c l       *ABS*	00000000 BDMA_CPAR4
00000000 l       *ABS*	00000000 BDMA_CPAR4_PA_Shift
58025450 l       *ABS*	00000000 BDMA_CMAR4
00000000 l       *ABS*	00000000 BDMA_CMAR4_MA_Shift
58025458 l       *ABS*	00000000 BDMA_CCR5
00000001 l       *ABS*	00000000 BDMA_CCR5_EN
00000002 l       *ABS*	00000000 BDMA_CCR5_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR5_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR5_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR5_DIR
00000020 l       *ABS*	00000000 BDMA_CCR5_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR5_PINC
00000080 l       *ABS*	00000000 BDMA_CCR5_MINC
00000008 l       *ABS*	00000000 BDMA_CCR5_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR5_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR5_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR5_MEM2MEM
5802545c l       *ABS*	00000000 BDMA_CNDTR5
00000000 l       *ABS*	00000000 BDMA_CNDTR5_NDT_Shift
58025460 l       *ABS*	00000000 BDMA_CPAR5
00000000 l       *ABS*	00000000 BDMA_CPAR5_PA_Shift
58025464 l       *ABS*	00000000 BDMA_CMAR5
00000000 l       *ABS*	00000000 BDMA_CMAR5_MA_Shift
5802546c l       *ABS*	00000000 BDMA_CCR6
00000001 l       *ABS*	00000000 BDMA_CCR6_EN
00000002 l       *ABS*	00000000 BDMA_CCR6_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR6_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR6_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR6_DIR
00000020 l       *ABS*	00000000 BDMA_CCR6_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR6_PINC
00000080 l       *ABS*	00000000 BDMA_CCR6_MINC
00000008 l       *ABS*	00000000 BDMA_CCR6_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR6_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR6_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR6_MEM2MEM
58025470 l       *ABS*	00000000 BDMA_CNDTR6
00000000 l       *ABS*	00000000 BDMA_CNDTR6_NDT_Shift
58025474 l       *ABS*	00000000 BDMA_CPAR6
00000000 l       *ABS*	00000000 BDMA_CPAR6_PA_Shift
58025478 l       *ABS*	00000000 BDMA_CMAR6
00000000 l       *ABS*	00000000 BDMA_CMAR6_MA_Shift
58025480 l       *ABS*	00000000 BDMA_CCR7
00000001 l       *ABS*	00000000 BDMA_CCR7_EN
00000002 l       *ABS*	00000000 BDMA_CCR7_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR7_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR7_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR7_DIR
00000020 l       *ABS*	00000000 BDMA_CCR7_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR7_PINC
00000080 l       *ABS*	00000000 BDMA_CCR7_MINC
00000008 l       *ABS*	00000000 BDMA_CCR7_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR7_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR7_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR7_MEM2MEM
58025484 l       *ABS*	00000000 BDMA_CNDTR7
00000000 l       *ABS*	00000000 BDMA_CNDTR7_NDT_Shift
58025488 l       *ABS*	00000000 BDMA_CPAR7
00000000 l       *ABS*	00000000 BDMA_CPAR7_PA_Shift
5802548c l       *ABS*	00000000 BDMA_CMAR7
00000000 l       *ABS*	00000000 BDMA_CMAR7_MA_Shift
58025494 l       *ABS*	00000000 BDMA_CCR8
00000001 l       *ABS*	00000000 BDMA_CCR8_EN
00000002 l       *ABS*	00000000 BDMA_CCR8_TCIE
00000004 l       *ABS*	00000000 BDMA_CCR8_HTIE
00000008 l       *ABS*	00000000 BDMA_CCR8_TEIE
00000010 l       *ABS*	00000000 BDMA_CCR8_DIR
00000020 l       *ABS*	00000000 BDMA_CCR8_CIRC
00000040 l       *ABS*	00000000 BDMA_CCR8_PINC
00000080 l       *ABS*	00000000 BDMA_CCR8_MINC
00000008 l       *ABS*	00000000 BDMA_CCR8_PSIZE_Shift
0000000a l       *ABS*	00000000 BDMA_CCR8_MSIZE_Shift
0000000c l       *ABS*	00000000 BDMA_CCR8_PL_Shift
00004000 l       *ABS*	00000000 BDMA_CCR8_MEM2MEM
58025498 l       *ABS*	00000000 BDMA_CNDTR8
00000000 l       *ABS*	00000000 BDMA_CNDTR8_NDT_Shift
5802549c l       *ABS*	00000000 BDMA_CPAR8
00000000 l       *ABS*	00000000 BDMA_CPAR8_PA_Shift
580254a0 l       *ABS*	00000000 BDMA_CMAR8
00000000 l       *ABS*	00000000 BDMA_CMAR8_MA_Shift
52001000 l       *ABS*	00000000 DMA2D_BASE
52001000 l       *ABS*	00000000 DMA2D_CR
00000001 l       *ABS*	00000000 DMA2D_CR_START
00000002 l       *ABS*	00000000 DMA2D_CR_SUSP
00000004 l       *ABS*	00000000 DMA2D_CR_ABORT
00000100 l       *ABS*	00000000 DMA2D_CR_TEIE
00000200 l       *ABS*	00000000 DMA2D_CR_TCIE
00000400 l       *ABS*	00000000 DMA2D_CR_TWIE
00000800 l       *ABS*	00000000 DMA2D_CR_CAEIE
00001000 l       *ABS*	00000000 DMA2D_CR_CTCIE
00002000 l       *ABS*	00000000 DMA2D_CR_CEIE
00000010 l       *ABS*	00000000 DMA2D_CR_MODE_Shift
52001004 l       *ABS*	00000000 DMA2D_ISR
00000001 l       *ABS*	00000000 DMA2D_ISR_TEIF
00000002 l       *ABS*	00000000 DMA2D_ISR_TCIF
00000004 l       *ABS*	00000000 DMA2D_ISR_TWIF
00000008 l       *ABS*	00000000 DMA2D_ISR_CAEIF
00000010 l       *ABS*	00000000 DMA2D_ISR_CTCIF
00000020 l       *ABS*	00000000 DMA2D_ISR_CEIF
52001008 l       *ABS*	00000000 DMA2D_IFCR
00000001 l       *ABS*	00000000 DMA2D_IFCR_CTEIF
00000002 l       *ABS*	00000000 DMA2D_IFCR_CTCIF
00000004 l       *ABS*	00000000 DMA2D_IFCR_CTWIF
00000008 l       *ABS*	00000000 DMA2D_IFCR_CAECIF
00000010 l       *ABS*	00000000 DMA2D_IFCR_CCTCIF
00000020 l       *ABS*	00000000 DMA2D_IFCR_CCEIF
5200100c l       *ABS*	00000000 DMA2D_FGMAR
00000000 l       *ABS*	00000000 DMA2D_FGMAR_MA_Shift
52001010 l       *ABS*	00000000 DMA2D_FGOR
00000000 l       *ABS*	00000000 DMA2D_FGOR_LO_Shift
52001014 l       *ABS*	00000000 DMA2D_BGMAR
00000000 l       *ABS*	00000000 DMA2D_BGMAR_MA_Shift
52001018 l       *ABS*	00000000 DMA2D_BGOR
00000000 l       *ABS*	00000000 DMA2D_BGOR_LO_Shift
5200101c l       *ABS*	00000000 DMA2D_FGPFCCR
00000000 l       *ABS*	00000000 DMA2D_FGPFCCR_CM_Shift
00000010 l       *ABS*	00000000 DMA2D_FGPFCCR_CCM
00000020 l       *ABS*	00000000 DMA2D_FGPFCCR_START
00000008 l       *ABS*	00000000 DMA2D_FGPFCCR_CS_Shift
00000010 l       *ABS*	00000000 DMA2D_FGPFCCR_AM_Shift
00000012 l       *ABS*	00000000 DMA2D_FGPFCCR_CSS_Shift
00100000 l       *ABS*	00000000 DMA2D_FGPFCCR_AI
00200000 l       *ABS*	00000000 DMA2D_FGPFCCR_RBS
00000018 l       *ABS*	00000000 DMA2D_FGPFCCR_ALPHA_Shift
52001020 l       *ABS*	00000000 DMA2D_FGCOLR
00000000 l       *ABS*	00000000 DMA2D_FGCOLR_BLUE_Shift
00000008 l       *ABS*	00000000 DMA2D_FGCOLR_GREEN_Shift
00000010 l       *ABS*	00000000 DMA2D_FGCOLR_RED_Shift
52001024 l       *ABS*	00000000 DMA2D_BGPFCCR
00000000 l       *ABS*	00000000 DMA2D_BGPFCCR_CM_Shift
00000010 l       *ABS*	00000000 DMA2D_BGPFCCR_CCM
00000020 l       *ABS*	00000000 DMA2D_BGPFCCR_START
00000008 l       *ABS*	00000000 DMA2D_BGPFCCR_CS_Shift
00000010 l       *ABS*	00000000 DMA2D_BGPFCCR_AM_Shift
00100000 l       *ABS*	00000000 DMA2D_BGPFCCR_AI
00200000 l       *ABS*	00000000 DMA2D_BGPFCCR_RBS
00000018 l       *ABS*	00000000 DMA2D_BGPFCCR_ALPHA_Shift
52001028 l       *ABS*	00000000 DMA2D_BGCOLR
00000000 l       *ABS*	00000000 DMA2D_BGCOLR_BLUE_Shift
00000008 l       *ABS*	00000000 DMA2D_BGCOLR_GREEN_Shift
00000010 l       *ABS*	00000000 DMA2D_BGCOLR_RED_Shift
5200102c l       *ABS*	00000000 DMA2D_FGCMAR
00000000 l       *ABS*	00000000 DMA2D_FGCMAR_MA_Shift
52001030 l       *ABS*	00000000 DMA2D_BGCMAR
00000000 l       *ABS*	00000000 DMA2D_BGCMAR_MA_Shift
52001034 l       *ABS*	00000000 DMA2D_OPFCCR
00000000 l       *ABS*	00000000 DMA2D_OPFCCR_CM_Shift
00100000 l       *ABS*	00000000 DMA2D_OPFCCR_AI
00200000 l       *ABS*	00000000 DMA2D_OPFCCR_RBS
52001038 l       *ABS*	00000000 DMA2D_OCOLR
00000000 l       *ABS*	00000000 DMA2D_OCOLR_BLUE_Shift
00000008 l       *ABS*	00000000 DMA2D_OCOLR_GREEN_Shift
00000010 l       *ABS*	00000000 DMA2D_OCOLR_RED_Shift
00000018 l       *ABS*	00000000 DMA2D_OCOLR_ALPHA_Shift
5200103c l       *ABS*	00000000 DMA2D_OMAR
00000000 l       *ABS*	00000000 DMA2D_OMAR_MA_Shift
52001040 l       *ABS*	00000000 DMA2D_OOR
00000000 l       *ABS*	00000000 DMA2D_OOR_LO_Shift
52001044 l       *ABS*	00000000 DMA2D_NLR
00000000 l       *ABS*	00000000 DMA2D_NLR_NL_Shift
00000010 l       *ABS*	00000000 DMA2D_NLR_PL_Shift
52001048 l       *ABS*	00000000 DMA2D_LWR
00000000 l       *ABS*	00000000 DMA2D_LWR_LW_Shift
5200104c l       *ABS*	00000000 DMA2D_AMTCR
00000001 l       *ABS*	00000000 DMA2D_AMTCR_EN
00000008 l       *ABS*	00000000 DMA2D_AMTCR_DT_Shift
58025800 l       *ABS*	00000000 DMAMUX2_BASE
58025800 l       *ABS*	00000000 DMAMUX2_C0CR
00000000 l       *ABS*	00000000 DMAMUX2_C0CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C0CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C0CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C0CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C0CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C0CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C0CR_SYNC_ID_Shift
58025804 l       *ABS*	00000000 DMAMUX2_C1CR
00000000 l       *ABS*	00000000 DMAMUX2_C1CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C1CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C1CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C1CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C1CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C1CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C1CR_SYNC_ID_Shift
58025808 l       *ABS*	00000000 DMAMUX2_C2CR
00000000 l       *ABS*	00000000 DMAMUX2_C2CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C2CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C2CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C2CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C2CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C2CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C2CR_SYNC_ID_Shift
5802580c l       *ABS*	00000000 DMAMUX2_C3CR
00000000 l       *ABS*	00000000 DMAMUX2_C3CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C3CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C3CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C3CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C3CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C3CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C3CR_SYNC_ID_Shift
58025810 l       *ABS*	00000000 DMAMUX2_C4CR
00000000 l       *ABS*	00000000 DMAMUX2_C4CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C4CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C4CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C4CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C4CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C4CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C4CR_SYNC_ID_Shift
58025814 l       *ABS*	00000000 DMAMUX2_C5CR
00000000 l       *ABS*	00000000 DMAMUX2_C5CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C5CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C5CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C5CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C5CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C5CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C5CR_SYNC_ID_Shift
58025818 l       *ABS*	00000000 DMAMUX2_C6CR
00000000 l       *ABS*	00000000 DMAMUX2_C6CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C6CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C6CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C6CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C6CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C6CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C6CR_SYNC_ID_Shift
5802581c l       *ABS*	00000000 DMAMUX2_C7CR
00000000 l       *ABS*	00000000 DMAMUX2_C7CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_C7CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX2_C7CR_EGE
00010000 l       *ABS*	00000000 DMAMUX2_C7CR_SE
00000011 l       *ABS*	00000000 DMAMUX2_C7CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_C7CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX2_C7CR_SYNC_ID_Shift
58025900 l       *ABS*	00000000 DMAMUX2_RG0CR
00000000 l       *ABS*	00000000 DMAMUX2_RG0CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG0CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG0CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG0CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG0CR_GNBREQ_Shift
58025904 l       *ABS*	00000000 DMAMUX2_RG1CR
00000000 l       *ABS*	00000000 DMAMUX2_RG1CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG1CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG1CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG1CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG1CR_GNBREQ_Shift
58025908 l       *ABS*	00000000 DMAMUX2_RG2CR
00000000 l       *ABS*	00000000 DMAMUX2_RG2CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG2CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG2CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG2CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG2CR_GNBREQ_Shift
5802590c l       *ABS*	00000000 DMAMUX2_RG3CR
00000000 l       *ABS*	00000000 DMAMUX2_RG3CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG3CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG3CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG3CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG3CR_GNBREQ_Shift
58025910 l       *ABS*	00000000 DMAMUX2_RG4CR
00000000 l       *ABS*	00000000 DMAMUX2_RG4CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG4CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG4CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG4CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG4CR_GNBREQ_Shift
58025914 l       *ABS*	00000000 DMAMUX2_RG5CR
00000000 l       *ABS*	00000000 DMAMUX2_RG5CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG5CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG5CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG5CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG5CR_GNBREQ_Shift
58025918 l       *ABS*	00000000 DMAMUX2_RG6CR
00000000 l       *ABS*	00000000 DMAMUX2_RG6CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG6CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG6CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG6CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG6CR_GNBREQ_Shift
5802591c l       *ABS*	00000000 DMAMUX2_RG7CR
00000000 l       *ABS*	00000000 DMAMUX2_RG7CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX2_RG7CR_OIE
00010000 l       *ABS*	00000000 DMAMUX2_RG7CR_GE
00000011 l       *ABS*	00000000 DMAMUX2_RG7CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX2_RG7CR_GNBREQ_Shift
58025940 l       *ABS*	00000000 DMAMUX2_RGSR
00000000 l       *ABS*	00000000 DMAMUX2_RGSR_OF_Shift
58025944 l       *ABS*	00000000 DMAMUX2_RGCFR
00000000 l       *ABS*	00000000 DMAMUX2_RGCFR_COF_Shift
58025880 l       *ABS*	00000000 DMAMUX2_CSR
00000000 l       *ABS*	00000000 DMAMUX2_CSR_SOF_Shift
58025884 l       *ABS*	00000000 DMAMUX2_CFR
00000000 l       *ABS*	00000000 DMAMUX2_CFR_CSOF_Shift
52004000 l       *ABS*	00000000 FMC_BASE
52004000 l       *ABS*	00000000 FMC_BCR1
00000001 l       *ABS*	00000000 FMC_BCR1_MBKEN
00000002 l       *ABS*	00000000 FMC_BCR1_MUXEN
00000002 l       *ABS*	00000000 FMC_BCR1_MTYP_Shift
00000004 l       *ABS*	00000000 FMC_BCR1_MWID_Shift
00000040 l       *ABS*	00000000 FMC_BCR1_FACCEN
00000100 l       *ABS*	00000000 FMC_BCR1_BURSTEN
00000200 l       *ABS*	00000000 FMC_BCR1_WAITPOL
00000800 l       *ABS*	00000000 FMC_BCR1_WAITCFG
00001000 l       *ABS*	00000000 FMC_BCR1_WREN
00002000 l       *ABS*	00000000 FMC_BCR1_WAITEN
00004000 l       *ABS*	00000000 FMC_BCR1_EXTMOD
00008000 l       *ABS*	00000000 FMC_BCR1_ASYNCWAIT
00000010 l       *ABS*	00000000 FMC_BCR1_CPSIZE_Shift
00080000 l       *ABS*	00000000 FMC_BCR1_CBURSTRW
00100000 l       *ABS*	00000000 FMC_BCR1_CCLKEN
00200000 l       *ABS*	00000000 FMC_BCR1_WFDIS
00000018 l       *ABS*	00000000 FMC_BCR1_BMAP_Shift
80000000 l       *ABS*	00000000 FMC_BCR1_FMCEN
52004004 l       *ABS*	00000000 FMC_BTR1
00000000 l       *ABS*	00000000 FMC_BTR1_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BTR1_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BTR1_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BTR1_BUSTURN_Shift
00000014 l       *ABS*	00000000 FMC_BTR1_CLKDIV_Shift
00000018 l       *ABS*	00000000 FMC_BTR1_DATLAT_Shift
0000001c l       *ABS*	00000000 FMC_BTR1_ACCMOD_Shift
52004008 l       *ABS*	00000000 FMC_BCR2
00000001 l       *ABS*	00000000 FMC_BCR2_MBKEN
00000002 l       *ABS*	00000000 FMC_BCR2_MUXEN
00000002 l       *ABS*	00000000 FMC_BCR2_MTYP_Shift
00000004 l       *ABS*	00000000 FMC_BCR2_MWID_Shift
00000040 l       *ABS*	00000000 FMC_BCR2_FACCEN
00000100 l       *ABS*	00000000 FMC_BCR2_BURSTEN
00000200 l       *ABS*	00000000 FMC_BCR2_WAITPOL
00000800 l       *ABS*	00000000 FMC_BCR2_WAITCFG
00001000 l       *ABS*	00000000 FMC_BCR2_WREN
00002000 l       *ABS*	00000000 FMC_BCR2_WAITEN
00004000 l       *ABS*	00000000 FMC_BCR2_EXTMOD
00008000 l       *ABS*	00000000 FMC_BCR2_ASYNCWAIT
00000010 l       *ABS*	00000000 FMC_BCR2_CPSIZE_Shift
00080000 l       *ABS*	00000000 FMC_BCR2_CBURSTRW
00100000 l       *ABS*	00000000 FMC_BCR2_CCLKEN
00200000 l       *ABS*	00000000 FMC_BCR2_WFDIS
00000018 l       *ABS*	00000000 FMC_BCR2_BMAP_Shift
80000000 l       *ABS*	00000000 FMC_BCR2_FMCEN
5200400c l       *ABS*	00000000 FMC_BTR2
00000000 l       *ABS*	00000000 FMC_BTR2_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BTR2_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BTR2_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BTR2_BUSTURN_Shift
00000014 l       *ABS*	00000000 FMC_BTR2_CLKDIV_Shift
00000018 l       *ABS*	00000000 FMC_BTR2_DATLAT_Shift
0000001c l       *ABS*	00000000 FMC_BTR2_ACCMOD_Shift
52004010 l       *ABS*	00000000 FMC_BCR3
00000001 l       *ABS*	00000000 FMC_BCR3_MBKEN
00000002 l       *ABS*	00000000 FMC_BCR3_MUXEN
00000002 l       *ABS*	00000000 FMC_BCR3_MTYP_Shift
00000004 l       *ABS*	00000000 FMC_BCR3_MWID_Shift
00000040 l       *ABS*	00000000 FMC_BCR3_FACCEN
00000100 l       *ABS*	00000000 FMC_BCR3_BURSTEN
00000200 l       *ABS*	00000000 FMC_BCR3_WAITPOL
00000800 l       *ABS*	00000000 FMC_BCR3_WAITCFG
00001000 l       *ABS*	00000000 FMC_BCR3_WREN
00002000 l       *ABS*	00000000 FMC_BCR3_WAITEN
00004000 l       *ABS*	00000000 FMC_BCR3_EXTMOD
00008000 l       *ABS*	00000000 FMC_BCR3_ASYNCWAIT
00000010 l       *ABS*	00000000 FMC_BCR3_CPSIZE_Shift
00080000 l       *ABS*	00000000 FMC_BCR3_CBURSTRW
00100000 l       *ABS*	00000000 FMC_BCR3_CCLKEN
00200000 l       *ABS*	00000000 FMC_BCR3_WFDIS
00000018 l       *ABS*	00000000 FMC_BCR3_BMAP_Shift
80000000 l       *ABS*	00000000 FMC_BCR3_FMCEN
52004014 l       *ABS*	00000000 FMC_BTR3
00000000 l       *ABS*	00000000 FMC_BTR3_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BTR3_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BTR3_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BTR3_BUSTURN_Shift
00000014 l       *ABS*	00000000 FMC_BTR3_CLKDIV_Shift
00000018 l       *ABS*	00000000 FMC_BTR3_DATLAT_Shift
0000001c l       *ABS*	00000000 FMC_BTR3_ACCMOD_Shift
52004018 l       *ABS*	00000000 FMC_BCR4
00000001 l       *ABS*	00000000 FMC_BCR4_MBKEN
00000002 l       *ABS*	00000000 FMC_BCR4_MUXEN
00000002 l       *ABS*	00000000 FMC_BCR4_MTYP_Shift
00000004 l       *ABS*	00000000 FMC_BCR4_MWID_Shift
00000040 l       *ABS*	00000000 FMC_BCR4_FACCEN
00000100 l       *ABS*	00000000 FMC_BCR4_BURSTEN
00000200 l       *ABS*	00000000 FMC_BCR4_WAITPOL
00000800 l       *ABS*	00000000 FMC_BCR4_WAITCFG
00001000 l       *ABS*	00000000 FMC_BCR4_WREN
00002000 l       *ABS*	00000000 FMC_BCR4_WAITEN
00004000 l       *ABS*	00000000 FMC_BCR4_EXTMOD
00008000 l       *ABS*	00000000 FMC_BCR4_ASYNCWAIT
00000010 l       *ABS*	00000000 FMC_BCR4_CPSIZE_Shift
00080000 l       *ABS*	00000000 FMC_BCR4_CBURSTRW
00100000 l       *ABS*	00000000 FMC_BCR4_CCLKEN
00200000 l       *ABS*	00000000 FMC_BCR4_WFDIS
00000018 l       *ABS*	00000000 FMC_BCR4_BMAP_Shift
80000000 l       *ABS*	00000000 FMC_BCR4_FMCEN
5200401c l       *ABS*	00000000 FMC_BTR4
00000000 l       *ABS*	00000000 FMC_BTR4_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BTR4_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BTR4_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BTR4_BUSTURN_Shift
00000014 l       *ABS*	00000000 FMC_BTR4_CLKDIV_Shift
00000018 l       *ABS*	00000000 FMC_BTR4_DATLAT_Shift
0000001c l       *ABS*	00000000 FMC_BTR4_ACCMOD_Shift
52004080 l       *ABS*	00000000 FMC_PCR
00000002 l       *ABS*	00000000 FMC_PCR_PWAITEN
00000004 l       *ABS*	00000000 FMC_PCR_PBKEN
00000004 l       *ABS*	00000000 FMC_PCR_PWID_Shift
00000040 l       *ABS*	00000000 FMC_PCR_ECCEN
00000009 l       *ABS*	00000000 FMC_PCR_TCLR_Shift
0000000d l       *ABS*	00000000 FMC_PCR_TAR_Shift
00000011 l       *ABS*	00000000 FMC_PCR_ECCPS_Shift
52004084 l       *ABS*	00000000 FMC_SR
00000001 l       *ABS*	00000000 FMC_SR_IRS
00000002 l       *ABS*	00000000 FMC_SR_ILS
00000004 l       *ABS*	00000000 FMC_SR_IFS
00000008 l       *ABS*	00000000 FMC_SR_IREN
00000010 l       *ABS*	00000000 FMC_SR_ILEN
00000020 l       *ABS*	00000000 FMC_SR_IFEN
00000040 l       *ABS*	00000000 FMC_SR_FEMPT
52004088 l       *ABS*	00000000 FMC_PMEM
00000000 l       *ABS*	00000000 FMC_PMEM_MEMSET_Shift
00000008 l       *ABS*	00000000 FMC_PMEM_MEMWAIT_Shift
00000010 l       *ABS*	00000000 FMC_PMEM_MEMHOLD_Shift
00000018 l       *ABS*	00000000 FMC_PMEM_MEMHIZ_Shift
5200408c l       *ABS*	00000000 FMC_PATT
00000000 l       *ABS*	00000000 FMC_PATT_ATTSET_Shift
00000008 l       *ABS*	00000000 FMC_PATT_ATTWAIT_Shift
00000010 l       *ABS*	00000000 FMC_PATT_ATTHOLD_Shift
00000018 l       *ABS*	00000000 FMC_PATT_ATTHIZ_Shift
52004094 l       *ABS*	00000000 FMC_ECCR
00000000 l       *ABS*	00000000 FMC_ECCR_ECC_Shift
52004104 l       *ABS*	00000000 FMC_BWTR1
00000000 l       *ABS*	00000000 FMC_BWTR1_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BWTR1_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BWTR1_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BWTR1_BUSTURN_Shift
0000001c l       *ABS*	00000000 FMC_BWTR1_ACCMOD_Shift
5200410c l       *ABS*	00000000 FMC_BWTR2
00000000 l       *ABS*	00000000 FMC_BWTR2_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BWTR2_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BWTR2_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BWTR2_BUSTURN_Shift
0000001c l       *ABS*	00000000 FMC_BWTR2_ACCMOD_Shift
52004114 l       *ABS*	00000000 FMC_BWTR3
00000000 l       *ABS*	00000000 FMC_BWTR3_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BWTR3_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BWTR3_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BWTR3_BUSTURN_Shift
0000001c l       *ABS*	00000000 FMC_BWTR3_ACCMOD_Shift
5200411c l       *ABS*	00000000 FMC_BWTR4
00000000 l       *ABS*	00000000 FMC_BWTR4_ADDSET_Shift
00000004 l       *ABS*	00000000 FMC_BWTR4_ADDHLD_Shift
00000008 l       *ABS*	00000000 FMC_BWTR4_DATAST_Shift
00000010 l       *ABS*	00000000 FMC_BWTR4_BUSTURN_Shift
0000001c l       *ABS*	00000000 FMC_BWTR4_ACCMOD_Shift
52004140 l       *ABS*	00000000 FMC_SDCR1
00000000 l       *ABS*	00000000 FMC_SDCR1_NC_Shift
00000002 l       *ABS*	00000000 FMC_SDCR1_NR_Shift
00000004 l       *ABS*	00000000 FMC_SDCR1_MWID_Shift
00000040 l       *ABS*	00000000 FMC_SDCR1_NB
00000007 l       *ABS*	00000000 FMC_SDCR1_CAS_Shift
00000200 l       *ABS*	00000000 FMC_SDCR1_WP
0000000a l       *ABS*	00000000 FMC_SDCR1_SDCLK_Shift
00001000 l       *ABS*	00000000 FMC_SDCR1_RBURST
0000000d l       *ABS*	00000000 FMC_SDCR1_RPIPE_Shift
52004144 l       *ABS*	00000000 FMC_SDCR2
00000000 l       *ABS*	00000000 FMC_SDCR2_NC_Shift
00000002 l       *ABS*	00000000 FMC_SDCR2_NR_Shift
00000004 l       *ABS*	00000000 FMC_SDCR2_MWID_Shift
00000040 l       *ABS*	00000000 FMC_SDCR2_NB
00000007 l       *ABS*	00000000 FMC_SDCR2_CAS_Shift
00000200 l       *ABS*	00000000 FMC_SDCR2_WP
0000000a l       *ABS*	00000000 FMC_SDCR2_SDCLK_Shift
00001000 l       *ABS*	00000000 FMC_SDCR2_RBURST
0000000d l       *ABS*	00000000 FMC_SDCR2_RPIPE_Shift
52004148 l       *ABS*	00000000 FMC_SDTR1
00000000 l       *ABS*	00000000 FMC_SDTR1_TMRD_Shift
00000004 l       *ABS*	00000000 FMC_SDTR1_TXSR_Shift
00000008 l       *ABS*	00000000 FMC_SDTR1_TRAS_Shift
0000000c l       *ABS*	00000000 FMC_SDTR1_TRC_Shift
00000010 l       *ABS*	00000000 FMC_SDTR1_TWR_Shift
00000014 l       *ABS*	00000000 FMC_SDTR1_TRP_Shift
00000018 l       *ABS*	00000000 FMC_SDTR1_TRCD_Shift
5200414c l       *ABS*	00000000 FMC_SDTR2
00000000 l       *ABS*	00000000 FMC_SDTR2_TMRD_Shift
00000004 l       *ABS*	00000000 FMC_SDTR2_TXSR_Shift
00000008 l       *ABS*	00000000 FMC_SDTR2_TRAS_Shift
0000000c l       *ABS*	00000000 FMC_SDTR2_TRC_Shift
00000010 l       *ABS*	00000000 FMC_SDTR2_TWR_Shift
00000014 l       *ABS*	00000000 FMC_SDTR2_TRP_Shift
00000018 l       *ABS*	00000000 FMC_SDTR2_TRCD_Shift
52004150 l       *ABS*	00000000 FMC_SDCMR
00000000 l       *ABS*	00000000 FMC_SDCMR_MODE_Shift
00000008 l       *ABS*	00000000 FMC_SDCMR_CTB2
00000010 l       *ABS*	00000000 FMC_SDCMR_CTB1
00000005 l       *ABS*	00000000 FMC_SDCMR_NRFS_Shift
00000009 l       *ABS*	00000000 FMC_SDCMR_MRD_Shift
52004154 l       *ABS*	00000000 FMC_SDRTR
00000001 l       *ABS*	00000000 FMC_SDRTR_CRE
00000001 l       *ABS*	00000000 FMC_SDRTR_COUNT_Shift
00004000 l       *ABS*	00000000 FMC_SDRTR_REIE
52004158 l       *ABS*	00000000 FMC_SDSR
00000001 l       *ABS*	00000000 FMC_SDSR_RE
00000001 l       *ABS*	00000000 FMC_SDSR_MODES1_Shift
00000003 l       *ABS*	00000000 FMC_SDSR_MODES2_Shift
40006c00 l       *ABS*	00000000 CEC_BASE
40006c00 l       *ABS*	00000000 CEC_CR
00000001 l       *ABS*	00000000 CEC_CR_CECEN
00000002 l       *ABS*	00000000 CEC_CR_TXSOM
00000004 l       *ABS*	00000000 CEC_CR_TXEOM
40006c04 l       *ABS*	00000000 CEC_CFGR
00000000 l       *ABS*	00000000 CEC_CFGR_SFT_Shift
00000008 l       *ABS*	00000000 CEC_CFGR_RXTOL
00000010 l       *ABS*	00000000 CEC_CFGR_BRESTP
00000020 l       *ABS*	00000000 CEC_CFGR_BREGEN
00000040 l       *ABS*	00000000 CEC_CFGR_LBPEGEN
00000080 l       *ABS*	00000000 CEC_CFGR_BRDNOGEN
00000100 l       *ABS*	00000000 CEC_CFGR_SFTOPT
00000010 l       *ABS*	00000000 CEC_CFGR_OAR_Shift
80000000 l       *ABS*	00000000 CEC_CFGR_LSTN
40006c08 l       *ABS*	00000000 CEC_TXDR
00000000 l       *ABS*	00000000 CEC_TXDR_TXD_Shift
40006c0c l       *ABS*	00000000 CEC_RXDR
00000000 l       *ABS*	00000000 CEC_RXDR_RXD_Shift
40006c10 l       *ABS*	00000000 CEC_ISR
00000001 l       *ABS*	00000000 CEC_ISR_RXBR
00000002 l       *ABS*	00000000 CEC_ISR_RXEND
00000004 l       *ABS*	00000000 CEC_ISR_RXOVR
00000008 l       *ABS*	00000000 CEC_ISR_BRE
00000010 l       *ABS*	00000000 CEC_ISR_SBPE
00000020 l       *ABS*	00000000 CEC_ISR_LBPE
00000040 l       *ABS*	00000000 CEC_ISR_RXACKE
00000080 l       *ABS*	00000000 CEC_ISR_ARBLST
00000100 l       *ABS*	00000000 CEC_ISR_TXBR
00000200 l       *ABS*	00000000 CEC_ISR_TXEND
00000400 l       *ABS*	00000000 CEC_ISR_TXUDR
00000800 l       *ABS*	00000000 CEC_ISR_TXERR
00001000 l       *ABS*	00000000 CEC_ISR_TXACKE
40006c14 l       *ABS*	00000000 CEC_IER
00000001 l       *ABS*	00000000 CEC_IER_RXBRIE
00000002 l       *ABS*	00000000 CEC_IER_RXENDIE
00000004 l       *ABS*	00000000 CEC_IER_RXOVRIE
00000008 l       *ABS*	00000000 CEC_IER_BREIE
00000010 l       *ABS*	00000000 CEC_IER_SBPEIE
00000020 l       *ABS*	00000000 CEC_IER_LBPEIE
00000040 l       *ABS*	00000000 CEC_IER_RXACKIE
00000080 l       *ABS*	00000000 CEC_IER_ARBLSTIE
00000100 l       *ABS*	00000000 CEC_IER_TXBRIE
00000200 l       *ABS*	00000000 CEC_IER_TXENDIE
00000400 l       *ABS*	00000000 CEC_IER_TXUDRIE
00000800 l       *ABS*	00000000 CEC_IER_TXERRIE
00001000 l       *ABS*	00000000 CEC_IER_TXACKIE
58026400 l       *ABS*	00000000 HSEM_BASE
58026400 l       *ABS*	00000000 HSEM_HSEM_R0
00000000 l       *ABS*	00000000 HSEM_HSEM_R0_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R0_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R0_LOCK
58026404 l       *ABS*	00000000 HSEM_HSEM_R1
00000000 l       *ABS*	00000000 HSEM_HSEM_R1_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R1_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R1_LOCK
58026408 l       *ABS*	00000000 HSEM_HSEM_R2
00000000 l       *ABS*	00000000 HSEM_HSEM_R2_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R2_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R2_LOCK
5802640c l       *ABS*	00000000 HSEM_HSEM_R3
00000000 l       *ABS*	00000000 HSEM_HSEM_R3_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R3_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R3_LOCK
58026410 l       *ABS*	00000000 HSEM_HSEM_R4
00000000 l       *ABS*	00000000 HSEM_HSEM_R4_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R4_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R4_LOCK
58026414 l       *ABS*	00000000 HSEM_HSEM_R5
00000000 l       *ABS*	00000000 HSEM_HSEM_R5_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R5_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R5_LOCK
58026418 l       *ABS*	00000000 HSEM_HSEM_R6
00000000 l       *ABS*	00000000 HSEM_HSEM_R6_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R6_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R6_LOCK
5802641c l       *ABS*	00000000 HSEM_HSEM_R7
00000000 l       *ABS*	00000000 HSEM_HSEM_R7_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R7_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R7_LOCK
58026420 l       *ABS*	00000000 HSEM_HSEM_R8
00000000 l       *ABS*	00000000 HSEM_HSEM_R8_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R8_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R8_LOCK
58026424 l       *ABS*	00000000 HSEM_HSEM_R9
00000000 l       *ABS*	00000000 HSEM_HSEM_R9_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R9_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R9_LOCK
58026428 l       *ABS*	00000000 HSEM_HSEM_R10
00000000 l       *ABS*	00000000 HSEM_HSEM_R10_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R10_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R10_LOCK
5802642c l       *ABS*	00000000 HSEM_HSEM_R11
00000000 l       *ABS*	00000000 HSEM_HSEM_R11_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R11_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R11_LOCK
58026430 l       *ABS*	00000000 HSEM_HSEM_R12
00000000 l       *ABS*	00000000 HSEM_HSEM_R12_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R12_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R12_LOCK
58026434 l       *ABS*	00000000 HSEM_HSEM_R13
00000000 l       *ABS*	00000000 HSEM_HSEM_R13_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R13_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R13_LOCK
58026438 l       *ABS*	00000000 HSEM_HSEM_R14
00000000 l       *ABS*	00000000 HSEM_HSEM_R14_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R14_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R14_LOCK
5802643c l       *ABS*	00000000 HSEM_HSEM_R15
00000000 l       *ABS*	00000000 HSEM_HSEM_R15_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R15_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R15_LOCK
58026440 l       *ABS*	00000000 HSEM_HSEM_R16
00000000 l       *ABS*	00000000 HSEM_HSEM_R16_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R16_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R16_LOCK
58026444 l       *ABS*	00000000 HSEM_HSEM_R17
00000000 l       *ABS*	00000000 HSEM_HSEM_R17_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R17_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R17_LOCK
58026448 l       *ABS*	00000000 HSEM_HSEM_R18
00000000 l       *ABS*	00000000 HSEM_HSEM_R18_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R18_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R18_LOCK
5802644c l       *ABS*	00000000 HSEM_HSEM_R19
00000000 l       *ABS*	00000000 HSEM_HSEM_R19_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R19_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R19_LOCK
58026450 l       *ABS*	00000000 HSEM_HSEM_R20
00000000 l       *ABS*	00000000 HSEM_HSEM_R20_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R20_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R20_LOCK
58026454 l       *ABS*	00000000 HSEM_HSEM_R21
00000000 l       *ABS*	00000000 HSEM_HSEM_R21_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R21_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R21_LOCK
58026458 l       *ABS*	00000000 HSEM_HSEM_R22
00000000 l       *ABS*	00000000 HSEM_HSEM_R22_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R22_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R22_LOCK
5802645c l       *ABS*	00000000 HSEM_HSEM_R23
00000000 l       *ABS*	00000000 HSEM_HSEM_R23_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R23_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R23_LOCK
58026460 l       *ABS*	00000000 HSEM_HSEM_R24
00000000 l       *ABS*	00000000 HSEM_HSEM_R24_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R24_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R24_LOCK
58026464 l       *ABS*	00000000 HSEM_HSEM_R25
00000000 l       *ABS*	00000000 HSEM_HSEM_R25_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R25_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R25_LOCK
58026468 l       *ABS*	00000000 HSEM_HSEM_R26
00000000 l       *ABS*	00000000 HSEM_HSEM_R26_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R26_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R26_LOCK
5802646c l       *ABS*	00000000 HSEM_HSEM_R27
00000000 l       *ABS*	00000000 HSEM_HSEM_R27_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R27_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R27_LOCK
58026470 l       *ABS*	00000000 HSEM_HSEM_R28
00000000 l       *ABS*	00000000 HSEM_HSEM_R28_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R28_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R28_LOCK
58026474 l       *ABS*	00000000 HSEM_HSEM_R29
00000000 l       *ABS*	00000000 HSEM_HSEM_R29_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R29_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R29_LOCK
58026478 l       *ABS*	00000000 HSEM_HSEM_R30
00000000 l       *ABS*	00000000 HSEM_HSEM_R30_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R30_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R30_LOCK
5802647c l       *ABS*	00000000 HSEM_HSEM_R31
00000000 l       *ABS*	00000000 HSEM_HSEM_R31_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_R31_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_R31_LOCK
58026480 l       *ABS*	00000000 HSEM_HSEM_RLR0
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR0_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR0_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR0_LOCK
58026484 l       *ABS*	00000000 HSEM_HSEM_RLR1
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR1_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR1_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR1_LOCK
58026488 l       *ABS*	00000000 HSEM_HSEM_RLR2
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR2_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR2_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR2_LOCK
5802648c l       *ABS*	00000000 HSEM_HSEM_RLR3
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR3_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR3_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR3_LOCK
58026490 l       *ABS*	00000000 HSEM_HSEM_RLR4
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR4_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR4_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR4_LOCK
58026494 l       *ABS*	00000000 HSEM_HSEM_RLR5
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR5_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR5_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR5_LOCK
58026498 l       *ABS*	00000000 HSEM_HSEM_RLR6
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR6_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR6_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR6_LOCK
5802649c l       *ABS*	00000000 HSEM_HSEM_RLR7
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR7_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR7_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR7_LOCK
580264a0 l       *ABS*	00000000 HSEM_HSEM_RLR8
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR8_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR8_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR8_LOCK
580264a4 l       *ABS*	00000000 HSEM_HSEM_RLR9
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR9_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR9_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR9_LOCK
580264a8 l       *ABS*	00000000 HSEM_HSEM_RLR10
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR10_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR10_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR10_LOCK
580264ac l       *ABS*	00000000 HSEM_HSEM_RLR11
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR11_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR11_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR11_LOCK
580264b0 l       *ABS*	00000000 HSEM_HSEM_RLR12
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR12_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR12_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR12_LOCK
580264b4 l       *ABS*	00000000 HSEM_HSEM_RLR13
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR13_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR13_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR13_LOCK
580264b8 l       *ABS*	00000000 HSEM_HSEM_RLR14
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR14_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR14_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR14_LOCK
580264bc l       *ABS*	00000000 HSEM_HSEM_RLR15
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR15_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR15_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR15_LOCK
580264c0 l       *ABS*	00000000 HSEM_HSEM_RLR16
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR16_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR16_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR16_LOCK
580264c4 l       *ABS*	00000000 HSEM_HSEM_RLR17
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR17_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR17_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR17_LOCK
580264c8 l       *ABS*	00000000 HSEM_HSEM_RLR18
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR18_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR18_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR18_LOCK
580264cc l       *ABS*	00000000 HSEM_HSEM_RLR19
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR19_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR19_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR19_LOCK
580264d0 l       *ABS*	00000000 HSEM_HSEM_RLR20
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR20_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR20_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR20_LOCK
580264d4 l       *ABS*	00000000 HSEM_HSEM_RLR21
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR21_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR21_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR21_LOCK
580264d8 l       *ABS*	00000000 HSEM_HSEM_RLR22
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR22_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR22_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR22_LOCK
580264dc l       *ABS*	00000000 HSEM_HSEM_RLR23
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR23_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR23_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR23_LOCK
580264e0 l       *ABS*	00000000 HSEM_HSEM_RLR24
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR24_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR24_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR24_LOCK
580264e4 l       *ABS*	00000000 HSEM_HSEM_RLR25
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR25_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR25_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR25_LOCK
580264e8 l       *ABS*	00000000 HSEM_HSEM_RLR26
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR26_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR26_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR26_LOCK
580264ec l       *ABS*	00000000 HSEM_HSEM_RLR27
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR27_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR27_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR27_LOCK
580264f0 l       *ABS*	00000000 HSEM_HSEM_RLR28
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR28_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR28_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR28_LOCK
580264f4 l       *ABS*	00000000 HSEM_HSEM_RLR29
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR29_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR29_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR29_LOCK
580264f8 l       *ABS*	00000000 HSEM_HSEM_RLR30
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR30_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR30_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR30_LOCK
580264fc l       *ABS*	00000000 HSEM_HSEM_RLR31
00000000 l       *ABS*	00000000 HSEM_HSEM_RLR31_PROCID_Shift
00000008 l       *ABS*	00000000 HSEM_HSEM_RLR31_MASTERID_Shift
80000000 l       *ABS*	00000000 HSEM_HSEM_RLR31_LOCK
58026500 l       *ABS*	00000000 HSEM_HSEM_IER
00000001 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM0
00000002 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM1
00000004 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM2
00000008 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM3
00000010 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM4
00000020 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM5
00000040 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM6
00000080 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM7
00000100 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM8
00000200 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM9
00000400 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM10
00000800 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM11
00001000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM12
00002000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM13
00004000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM14
00008000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM15
00010000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM16
00020000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM17
00040000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM18
00080000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM19
00100000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM20
00200000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM21
00400000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM22
00800000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM23
01000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM24
02000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM25
04000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM26
08000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM27
10000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM28
20000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM29
40000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM30
80000000 l       *ABS*	00000000 HSEM_HSEM_IER_ISEM31
58026504 l       *ABS*	00000000 HSEM_HSEM_ICR
00000001 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM0
00000002 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM1
00000004 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM2
00000008 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM3
00000010 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM4
00000020 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM5
00000040 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM6
00000080 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM7
00000100 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM8
00000200 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM9
00000400 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM10
00000800 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM11
00001000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM12
00002000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM13
00004000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM14
00008000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM15
00010000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM16
00020000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM17
00040000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM18
00080000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM19
00100000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM20
00200000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM21
00400000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM22
00800000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM23
01000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM24
02000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM25
04000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM26
08000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM27
10000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM28
20000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM29
40000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM30
80000000 l       *ABS*	00000000 HSEM_HSEM_ICR_ISEM31
58026508 l       *ABS*	00000000 HSEM_HSEM_ISR
00000001 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM0
00000002 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM1
00000004 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM2
00000008 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM3
00000010 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM4
00000020 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM5
00000040 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM6
00000080 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM7
00000100 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM8
00000200 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM9
00000400 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM10
00000800 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM11
00001000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM12
00002000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM13
00004000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM14
00008000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM15
00010000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM16
00020000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM17
00040000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM18
00080000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM19
00100000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM20
00200000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM21
00400000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM22
00800000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM23
01000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM24
02000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM25
04000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM26
08000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM27
10000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM28
20000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM29
40000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM30
80000000 l       *ABS*	00000000 HSEM_HSEM_ISR_ISEM31
5802650c l       *ABS*	00000000 HSEM_HSEM_MISR
00000001 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM0
00000002 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM1
00000004 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM2
00000008 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM3
00000010 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM4
00000020 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM5
00000040 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM6
00000080 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM7
00000100 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM8
00000200 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM9
00000400 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM10
00000800 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM11
00001000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM12
00002000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM13
00004000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM14
00008000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM15
00010000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM16
00020000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM17
00040000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM18
00080000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM19
00100000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM20
00200000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM21
00400000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM22
00800000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM23
01000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM24
02000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM25
04000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM26
08000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM27
10000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM28
20000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM29
40000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM30
80000000 l       *ABS*	00000000 HSEM_HSEM_MISR_ISEM31
58026540 l       *ABS*	00000000 HSEM_HSEM_CR
00000008 l       *ABS*	00000000 HSEM_HSEM_CR_MASTERID_Shift
00000010 l       *ABS*	00000000 HSEM_HSEM_CR_KEY_Shift
58026544 l       *ABS*	00000000 HSEM_HSEM_KEYR
00000010 l       *ABS*	00000000 HSEM_HSEM_KEYR_KEY_Shift
40005400 l       *ABS*	00000000 I2C1_BASE
40005400 l       *ABS*	00000000 I2C1_CR1
00000001 l       *ABS*	00000000 I2C1_CR1_PE
00000002 l       *ABS*	00000000 I2C1_CR1_TXIE
00000004 l       *ABS*	00000000 I2C1_CR1_RXIE
00000008 l       *ABS*	00000000 I2C1_CR1_ADDRIE
00000010 l       *ABS*	00000000 I2C1_CR1_NACKIE
00000020 l       *ABS*	00000000 I2C1_CR1_STOPIE
00000040 l       *ABS*	00000000 I2C1_CR1_TCIE
00000080 l       *ABS*	00000000 I2C1_CR1_ERRIE
00000008 l       *ABS*	00000000 I2C1_CR1_DNF_Shift
00001000 l       *ABS*	00000000 I2C1_CR1_ANFOFF
00004000 l       *ABS*	00000000 I2C1_CR1_TXDMAEN
00008000 l       *ABS*	00000000 I2C1_CR1_RXDMAEN
00010000 l       *ABS*	00000000 I2C1_CR1_SBC
00020000 l       *ABS*	00000000 I2C1_CR1_NOSTRETCH
00040000 l       *ABS*	00000000 I2C1_CR1_WUPEN
00080000 l       *ABS*	00000000 I2C1_CR1_GCEN
00100000 l       *ABS*	00000000 I2C1_CR1_SMBHEN
00200000 l       *ABS*	00000000 I2C1_CR1_SMBDEN
00400000 l       *ABS*	00000000 I2C1_CR1_ALERTEN
00800000 l       *ABS*	00000000 I2C1_CR1_PECEN
40005404 l       *ABS*	00000000 I2C1_CR2
00000001 l       *ABS*	00000000 I2C1_CR2_SADD0
00000002 l       *ABS*	00000000 I2C1_CR2_SADD1
00000004 l       *ABS*	00000000 I2C1_CR2_SADD2
00000008 l       *ABS*	00000000 I2C1_CR2_SADD3
00000010 l       *ABS*	00000000 I2C1_CR2_SADD4
00000020 l       *ABS*	00000000 I2C1_CR2_SADD5
00000040 l       *ABS*	00000000 I2C1_CR2_SADD6
00000080 l       *ABS*	00000000 I2C1_CR2_SADD7
00000100 l       *ABS*	00000000 I2C1_CR2_SADD8
00000200 l       *ABS*	00000000 I2C1_CR2_SADD9
00000400 l       *ABS*	00000000 I2C1_CR2_RD_WRN
00000800 l       *ABS*	00000000 I2C1_CR2_ADD10
00001000 l       *ABS*	00000000 I2C1_CR2_HEAD10R
00002000 l       *ABS*	00000000 I2C1_CR2_START
00004000 l       *ABS*	00000000 I2C1_CR2_STOP
00008000 l       *ABS*	00000000 I2C1_CR2_NACK
00000010 l       *ABS*	00000000 I2C1_CR2_NBYTES_Shift
01000000 l       *ABS*	00000000 I2C1_CR2_RELOAD
02000000 l       *ABS*	00000000 I2C1_CR2_AUTOEND
04000000 l       *ABS*	00000000 I2C1_CR2_PECBYTE
40005408 l       *ABS*	00000000 I2C1_OAR1
00000000 l       *ABS*	00000000 I2C1_OAR1_OA1_Shift
00000400 l       *ABS*	00000000 I2C1_OAR1_OA1MODE
00008000 l       *ABS*	00000000 I2C1_OAR1_OA1EN
4000540c l       *ABS*	00000000 I2C1_OAR2
00000001 l       *ABS*	00000000 I2C1_OAR2_OA2_Shift
00000008 l       *ABS*	00000000 I2C1_OAR2_OA2MSK_Shift
00008000 l       *ABS*	00000000 I2C1_OAR2_OA2EN
40005410 l       *ABS*	00000000 I2C1_TIMINGR
00000000 l       *ABS*	00000000 I2C1_TIMINGR_SCLL_Shift
00000008 l       *ABS*	00000000 I2C1_TIMINGR_SCLH_Shift
00000010 l       *ABS*	00000000 I2C1_TIMINGR_SDADEL_Shift
00000014 l       *ABS*	00000000 I2C1_TIMINGR_SCLDEL_Shift
0000001c l       *ABS*	00000000 I2C1_TIMINGR_PRESC_Shift
40005414 l       *ABS*	00000000 I2C1_TIMEOUTR
00000000 l       *ABS*	00000000 I2C1_TIMEOUTR_TIMEOUTA_Shift
00001000 l       *ABS*	00000000 I2C1_TIMEOUTR_TIDLE
00008000 l       *ABS*	00000000 I2C1_TIMEOUTR_TIMOUTEN
00000010 l       *ABS*	00000000 I2C1_TIMEOUTR_TIMEOUTB_Shift
80000000 l       *ABS*	00000000 I2C1_TIMEOUTR_TEXTEN
40005418 l       *ABS*	00000000 I2C1_ISR
00000001 l       *ABS*	00000000 I2C1_ISR_TXE
00000002 l       *ABS*	00000000 I2C1_ISR_TXIS
00000004 l       *ABS*	00000000 I2C1_ISR_RXNE
00000008 l       *ABS*	00000000 I2C1_ISR_ADDR
00000010 l       *ABS*	00000000 I2C1_ISR_NACKF
00000020 l       *ABS*	00000000 I2C1_ISR_STOPF
00000040 l       *ABS*	00000000 I2C1_ISR_TC
00000080 l       *ABS*	00000000 I2C1_ISR_TCR
00000100 l       *ABS*	00000000 I2C1_ISR_BERR
00000200 l       *ABS*	00000000 I2C1_ISR_ARLO
00000400 l       *ABS*	00000000 I2C1_ISR_OVR
00000800 l       *ABS*	00000000 I2C1_ISR_PECERR
00001000 l       *ABS*	00000000 I2C1_ISR_TIMEOUT
00002000 l       *ABS*	00000000 I2C1_ISR_ALERT
00008000 l       *ABS*	00000000 I2C1_ISR_BUSY
00010000 l       *ABS*	00000000 I2C1_ISR_DIR
00000011 l       *ABS*	00000000 I2C1_ISR_ADDCODE_Shift
4000541c l       *ABS*	00000000 I2C1_ICR
00000008 l       *ABS*	00000000 I2C1_ICR_ADDRCF
00000010 l       *ABS*	00000000 I2C1_ICR_NACKCF
00000020 l       *ABS*	00000000 I2C1_ICR_STOPCF
00000100 l       *ABS*	00000000 I2C1_ICR_BERRCF
00000200 l       *ABS*	00000000 I2C1_ICR_ARLOCF
00000400 l       *ABS*	00000000 I2C1_ICR_OVRCF
00000800 l       *ABS*	00000000 I2C1_ICR_PECCF
00001000 l       *ABS*	00000000 I2C1_ICR_TIMOUTCF
00002000 l       *ABS*	00000000 I2C1_ICR_ALERTCF
40005420 l       *ABS*	00000000 I2C1_PECR
00000000 l       *ABS*	00000000 I2C1_PECR_PEC_Shift
40005424 l       *ABS*	00000000 I2C1_RXDR
00000000 l       *ABS*	00000000 I2C1_RXDR_RXDATA_Shift
40005428 l       *ABS*	00000000 I2C1_TXDR
00000000 l       *ABS*	00000000 I2C1_TXDR_TXDATA_Shift
40005800 l       *ABS*	00000000 I2C2_BASE
40005800 l       *ABS*	00000000 I2C2_CR1
00000001 l       *ABS*	00000000 I2C2_CR1_PE
00000002 l       *ABS*	00000000 I2C2_CR1_TXIE
00000004 l       *ABS*	00000000 I2C2_CR1_RXIE
00000008 l       *ABS*	00000000 I2C2_CR1_ADDRIE
00000010 l       *ABS*	00000000 I2C2_CR1_NACKIE
00000020 l       *ABS*	00000000 I2C2_CR1_STOPIE
00000040 l       *ABS*	00000000 I2C2_CR1_TCIE
00000080 l       *ABS*	00000000 I2C2_CR1_ERRIE
00000008 l       *ABS*	00000000 I2C2_CR1_DNF_Shift
00001000 l       *ABS*	00000000 I2C2_CR1_ANFOFF
00004000 l       *ABS*	00000000 I2C2_CR1_TXDMAEN
00008000 l       *ABS*	00000000 I2C2_CR1_RXDMAEN
00010000 l       *ABS*	00000000 I2C2_CR1_SBC
00020000 l       *ABS*	00000000 I2C2_CR1_NOSTRETCH
00040000 l       *ABS*	00000000 I2C2_CR1_WUPEN
00080000 l       *ABS*	00000000 I2C2_CR1_GCEN
00100000 l       *ABS*	00000000 I2C2_CR1_SMBHEN
00200000 l       *ABS*	00000000 I2C2_CR1_SMBDEN
00400000 l       *ABS*	00000000 I2C2_CR1_ALERTEN
00800000 l       *ABS*	00000000 I2C2_CR1_PECEN
40005804 l       *ABS*	00000000 I2C2_CR2
00000001 l       *ABS*	00000000 I2C2_CR2_SADD0
00000002 l       *ABS*	00000000 I2C2_CR2_SADD1
00000004 l       *ABS*	00000000 I2C2_CR2_SADD2
00000008 l       *ABS*	00000000 I2C2_CR2_SADD3
00000010 l       *ABS*	00000000 I2C2_CR2_SADD4
00000020 l       *ABS*	00000000 I2C2_CR2_SADD5
00000040 l       *ABS*	00000000 I2C2_CR2_SADD6
00000080 l       *ABS*	00000000 I2C2_CR2_SADD7
00000100 l       *ABS*	00000000 I2C2_CR2_SADD8
00000200 l       *ABS*	00000000 I2C2_CR2_SADD9
00000400 l       *ABS*	00000000 I2C2_CR2_RD_WRN
00000800 l       *ABS*	00000000 I2C2_CR2_ADD10
00001000 l       *ABS*	00000000 I2C2_CR2_HEAD10R
00002000 l       *ABS*	00000000 I2C2_CR2_START
00004000 l       *ABS*	00000000 I2C2_CR2_STOP
00008000 l       *ABS*	00000000 I2C2_CR2_NACK
00000010 l       *ABS*	00000000 I2C2_CR2_NBYTES_Shift
01000000 l       *ABS*	00000000 I2C2_CR2_RELOAD
02000000 l       *ABS*	00000000 I2C2_CR2_AUTOEND
04000000 l       *ABS*	00000000 I2C2_CR2_PECBYTE
40005808 l       *ABS*	00000000 I2C2_OAR1
00000000 l       *ABS*	00000000 I2C2_OAR1_OA1_Shift
00000400 l       *ABS*	00000000 I2C2_OAR1_OA1MODE
00008000 l       *ABS*	00000000 I2C2_OAR1_OA1EN
4000580c l       *ABS*	00000000 I2C2_OAR2
00000001 l       *ABS*	00000000 I2C2_OAR2_OA2_Shift
00000008 l       *ABS*	00000000 I2C2_OAR2_OA2MSK_Shift
00008000 l       *ABS*	00000000 I2C2_OAR2_OA2EN
40005810 l       *ABS*	00000000 I2C2_TIMINGR
00000000 l       *ABS*	00000000 I2C2_TIMINGR_SCLL_Shift
00000008 l       *ABS*	00000000 I2C2_TIMINGR_SCLH_Shift
00000010 l       *ABS*	00000000 I2C2_TIMINGR_SDADEL_Shift
00000014 l       *ABS*	00000000 I2C2_TIMINGR_SCLDEL_Shift
0000001c l       *ABS*	00000000 I2C2_TIMINGR_PRESC_Shift
40005814 l       *ABS*	00000000 I2C2_TIMEOUTR
00000000 l       *ABS*	00000000 I2C2_TIMEOUTR_TIMEOUTA_Shift
00001000 l       *ABS*	00000000 I2C2_TIMEOUTR_TIDLE
00008000 l       *ABS*	00000000 I2C2_TIMEOUTR_TIMOUTEN
00000010 l       *ABS*	00000000 I2C2_TIMEOUTR_TIMEOUTB_Shift
80000000 l       *ABS*	00000000 I2C2_TIMEOUTR_TEXTEN
40005818 l       *ABS*	00000000 I2C2_ISR
00000001 l       *ABS*	00000000 I2C2_ISR_TXE
00000002 l       *ABS*	00000000 I2C2_ISR_TXIS
00000004 l       *ABS*	00000000 I2C2_ISR_RXNE
00000008 l       *ABS*	00000000 I2C2_ISR_ADDR
00000010 l       *ABS*	00000000 I2C2_ISR_NACKF
00000020 l       *ABS*	00000000 I2C2_ISR_STOPF
00000040 l       *ABS*	00000000 I2C2_ISR_TC
00000080 l       *ABS*	00000000 I2C2_ISR_TCR
00000100 l       *ABS*	00000000 I2C2_ISR_BERR
00000200 l       *ABS*	00000000 I2C2_ISR_ARLO
00000400 l       *ABS*	00000000 I2C2_ISR_OVR
00000800 l       *ABS*	00000000 I2C2_ISR_PECERR
00001000 l       *ABS*	00000000 I2C2_ISR_TIMEOUT
00002000 l       *ABS*	00000000 I2C2_ISR_ALERT
00008000 l       *ABS*	00000000 I2C2_ISR_BUSY
00010000 l       *ABS*	00000000 I2C2_ISR_DIR
00000011 l       *ABS*	00000000 I2C2_ISR_ADDCODE_Shift
4000581c l       *ABS*	00000000 I2C2_ICR
00000008 l       *ABS*	00000000 I2C2_ICR_ADDRCF
00000010 l       *ABS*	00000000 I2C2_ICR_NACKCF
00000020 l       *ABS*	00000000 I2C2_ICR_STOPCF
00000100 l       *ABS*	00000000 I2C2_ICR_BERRCF
00000200 l       *ABS*	00000000 I2C2_ICR_ARLOCF
00000400 l       *ABS*	00000000 I2C2_ICR_OVRCF
00000800 l       *ABS*	00000000 I2C2_ICR_PECCF
00001000 l       *ABS*	00000000 I2C2_ICR_TIMOUTCF
00002000 l       *ABS*	00000000 I2C2_ICR_ALERTCF
40005820 l       *ABS*	00000000 I2C2_PECR
00000000 l       *ABS*	00000000 I2C2_PECR_PEC_Shift
40005824 l       *ABS*	00000000 I2C2_RXDR
00000000 l       *ABS*	00000000 I2C2_RXDR_RXDATA_Shift
40005828 l       *ABS*	00000000 I2C2_TXDR
00000000 l       *ABS*	00000000 I2C2_TXDR_TXDATA_Shift
40005c00 l       *ABS*	00000000 I2C3_BASE
40005c00 l       *ABS*	00000000 I2C3_CR1
00000001 l       *ABS*	00000000 I2C3_CR1_PE
00000002 l       *ABS*	00000000 I2C3_CR1_TXIE
00000004 l       *ABS*	00000000 I2C3_CR1_RXIE
00000008 l       *ABS*	00000000 I2C3_CR1_ADDRIE
00000010 l       *ABS*	00000000 I2C3_CR1_NACKIE
00000020 l       *ABS*	00000000 I2C3_CR1_STOPIE
00000040 l       *ABS*	00000000 I2C3_CR1_TCIE
00000080 l       *ABS*	00000000 I2C3_CR1_ERRIE
00000008 l       *ABS*	00000000 I2C3_CR1_DNF_Shift
00001000 l       *ABS*	00000000 I2C3_CR1_ANFOFF
00004000 l       *ABS*	00000000 I2C3_CR1_TXDMAEN
00008000 l       *ABS*	00000000 I2C3_CR1_RXDMAEN
00010000 l       *ABS*	00000000 I2C3_CR1_SBC
00020000 l       *ABS*	00000000 I2C3_CR1_NOSTRETCH
00040000 l       *ABS*	00000000 I2C3_CR1_WUPEN
00080000 l       *ABS*	00000000 I2C3_CR1_GCEN
00100000 l       *ABS*	00000000 I2C3_CR1_SMBHEN
00200000 l       *ABS*	00000000 I2C3_CR1_SMBDEN
00400000 l       *ABS*	00000000 I2C3_CR1_ALERTEN
00800000 l       *ABS*	00000000 I2C3_CR1_PECEN
40005c04 l       *ABS*	00000000 I2C3_CR2
00000001 l       *ABS*	00000000 I2C3_CR2_SADD0
00000002 l       *ABS*	00000000 I2C3_CR2_SADD1
00000004 l       *ABS*	00000000 I2C3_CR2_SADD2
00000008 l       *ABS*	00000000 I2C3_CR2_SADD3
00000010 l       *ABS*	00000000 I2C3_CR2_SADD4
00000020 l       *ABS*	00000000 I2C3_CR2_SADD5
00000040 l       *ABS*	00000000 I2C3_CR2_SADD6
00000080 l       *ABS*	00000000 I2C3_CR2_SADD7
00000100 l       *ABS*	00000000 I2C3_CR2_SADD8
00000200 l       *ABS*	00000000 I2C3_CR2_SADD9
00000400 l       *ABS*	00000000 I2C3_CR2_RD_WRN
00000800 l       *ABS*	00000000 I2C3_CR2_ADD10
00001000 l       *ABS*	00000000 I2C3_CR2_HEAD10R
00002000 l       *ABS*	00000000 I2C3_CR2_START
00004000 l       *ABS*	00000000 I2C3_CR2_STOP
00008000 l       *ABS*	00000000 I2C3_CR2_NACK
00000010 l       *ABS*	00000000 I2C3_CR2_NBYTES_Shift
01000000 l       *ABS*	00000000 I2C3_CR2_RELOAD
02000000 l       *ABS*	00000000 I2C3_CR2_AUTOEND
04000000 l       *ABS*	00000000 I2C3_CR2_PECBYTE
40005c08 l       *ABS*	00000000 I2C3_OAR1
00000000 l       *ABS*	00000000 I2C3_OAR1_OA1_Shift
00000400 l       *ABS*	00000000 I2C3_OAR1_OA1MODE
00008000 l       *ABS*	00000000 I2C3_OAR1_OA1EN
40005c0c l       *ABS*	00000000 I2C3_OAR2
00000001 l       *ABS*	00000000 I2C3_OAR2_OA2_Shift
00000008 l       *ABS*	00000000 I2C3_OAR2_OA2MSK_Shift
00008000 l       *ABS*	00000000 I2C3_OAR2_OA2EN
40005c10 l       *ABS*	00000000 I2C3_TIMINGR
00000000 l       *ABS*	00000000 I2C3_TIMINGR_SCLL_Shift
00000008 l       *ABS*	00000000 I2C3_TIMINGR_SCLH_Shift
00000010 l       *ABS*	00000000 I2C3_TIMINGR_SDADEL_Shift
00000014 l       *ABS*	00000000 I2C3_TIMINGR_SCLDEL_Shift
0000001c l       *ABS*	00000000 I2C3_TIMINGR_PRESC_Shift
40005c14 l       *ABS*	00000000 I2C3_TIMEOUTR
00000000 l       *ABS*	00000000 I2C3_TIMEOUTR_TIMEOUTA_Shift
00001000 l       *ABS*	00000000 I2C3_TIMEOUTR_TIDLE
00008000 l       *ABS*	00000000 I2C3_TIMEOUTR_TIMOUTEN
00000010 l       *ABS*	00000000 I2C3_TIMEOUTR_TIMEOUTB_Shift
80000000 l       *ABS*	00000000 I2C3_TIMEOUTR_TEXTEN
40005c18 l       *ABS*	00000000 I2C3_ISR
00000001 l       *ABS*	00000000 I2C3_ISR_TXE
00000002 l       *ABS*	00000000 I2C3_ISR_TXIS
00000004 l       *ABS*	00000000 I2C3_ISR_RXNE
00000008 l       *ABS*	00000000 I2C3_ISR_ADDR
00000010 l       *ABS*	00000000 I2C3_ISR_NACKF
00000020 l       *ABS*	00000000 I2C3_ISR_STOPF
00000040 l       *ABS*	00000000 I2C3_ISR_TC
00000080 l       *ABS*	00000000 I2C3_ISR_TCR
00000100 l       *ABS*	00000000 I2C3_ISR_BERR
00000200 l       *ABS*	00000000 I2C3_ISR_ARLO
00000400 l       *ABS*	00000000 I2C3_ISR_OVR
00000800 l       *ABS*	00000000 I2C3_ISR_PECERR
00001000 l       *ABS*	00000000 I2C3_ISR_TIMEOUT
00002000 l       *ABS*	00000000 I2C3_ISR_ALERT
00008000 l       *ABS*	00000000 I2C3_ISR_BUSY
00010000 l       *ABS*	00000000 I2C3_ISR_DIR
00000011 l       *ABS*	00000000 I2C3_ISR_ADDCODE_Shift
40005c1c l       *ABS*	00000000 I2C3_ICR
00000008 l       *ABS*	00000000 I2C3_ICR_ADDRCF
00000010 l       *ABS*	00000000 I2C3_ICR_NACKCF
00000020 l       *ABS*	00000000 I2C3_ICR_STOPCF
00000100 l       *ABS*	00000000 I2C3_ICR_BERRCF
00000200 l       *ABS*	00000000 I2C3_ICR_ARLOCF
00000400 l       *ABS*	00000000 I2C3_ICR_OVRCF
00000800 l       *ABS*	00000000 I2C3_ICR_PECCF
00001000 l       *ABS*	00000000 I2C3_ICR_TIMOUTCF
00002000 l       *ABS*	00000000 I2C3_ICR_ALERTCF
40005c20 l       *ABS*	00000000 I2C3_PECR
00000000 l       *ABS*	00000000 I2C3_PECR_PEC_Shift
40005c24 l       *ABS*	00000000 I2C3_RXDR
00000000 l       *ABS*	00000000 I2C3_RXDR_RXDATA_Shift
40005c28 l       *ABS*	00000000 I2C3_TXDR
00000000 l       *ABS*	00000000 I2C3_TXDR_TXDATA_Shift
58001c00 l       *ABS*	00000000 I2C4_BASE
58001c00 l       *ABS*	00000000 I2C4_CR1
00000001 l       *ABS*	00000000 I2C4_CR1_PE
00000002 l       *ABS*	00000000 I2C4_CR1_TXIE
00000004 l       *ABS*	00000000 I2C4_CR1_RXIE
00000008 l       *ABS*	00000000 I2C4_CR1_ADDRIE
00000010 l       *ABS*	00000000 I2C4_CR1_NACKIE
00000020 l       *ABS*	00000000 I2C4_CR1_STOPIE
00000040 l       *ABS*	00000000 I2C4_CR1_TCIE
00000080 l       *ABS*	00000000 I2C4_CR1_ERRIE
00000008 l       *ABS*	00000000 I2C4_CR1_DNF_Shift
00001000 l       *ABS*	00000000 I2C4_CR1_ANFOFF
00004000 l       *ABS*	00000000 I2C4_CR1_TXDMAEN
00008000 l       *ABS*	00000000 I2C4_CR1_RXDMAEN
00010000 l       *ABS*	00000000 I2C4_CR1_SBC
00020000 l       *ABS*	00000000 I2C4_CR1_NOSTRETCH
00040000 l       *ABS*	00000000 I2C4_CR1_WUPEN
00080000 l       *ABS*	00000000 I2C4_CR1_GCEN
00100000 l       *ABS*	00000000 I2C4_CR1_SMBHEN
00200000 l       *ABS*	00000000 I2C4_CR1_SMBDEN
00400000 l       *ABS*	00000000 I2C4_CR1_ALERTEN
00800000 l       *ABS*	00000000 I2C4_CR1_PECEN
58001c04 l       *ABS*	00000000 I2C4_CR2
00000001 l       *ABS*	00000000 I2C4_CR2_SADD0
00000002 l       *ABS*	00000000 I2C4_CR2_SADD1
00000004 l       *ABS*	00000000 I2C4_CR2_SADD2
00000008 l       *ABS*	00000000 I2C4_CR2_SADD3
00000010 l       *ABS*	00000000 I2C4_CR2_SADD4
00000020 l       *ABS*	00000000 I2C4_CR2_SADD5
00000040 l       *ABS*	00000000 I2C4_CR2_SADD6
00000080 l       *ABS*	00000000 I2C4_CR2_SADD7
00000100 l       *ABS*	00000000 I2C4_CR2_SADD8
00000200 l       *ABS*	00000000 I2C4_CR2_SADD9
00000400 l       *ABS*	00000000 I2C4_CR2_RD_WRN
00000800 l       *ABS*	00000000 I2C4_CR2_ADD10
00001000 l       *ABS*	00000000 I2C4_CR2_HEAD10R
00002000 l       *ABS*	00000000 I2C4_CR2_START
00004000 l       *ABS*	00000000 I2C4_CR2_STOP
00008000 l       *ABS*	00000000 I2C4_CR2_NACK
00000010 l       *ABS*	00000000 I2C4_CR2_NBYTES_Shift
01000000 l       *ABS*	00000000 I2C4_CR2_RELOAD
02000000 l       *ABS*	00000000 I2C4_CR2_AUTOEND
04000000 l       *ABS*	00000000 I2C4_CR2_PECBYTE
58001c08 l       *ABS*	00000000 I2C4_OAR1
00000000 l       *ABS*	00000000 I2C4_OAR1_OA1_Shift
00000400 l       *ABS*	00000000 I2C4_OAR1_OA1MODE
00008000 l       *ABS*	00000000 I2C4_OAR1_OA1EN
58001c0c l       *ABS*	00000000 I2C4_OAR2
00000001 l       *ABS*	00000000 I2C4_OAR2_OA2_Shift
00000008 l       *ABS*	00000000 I2C4_OAR2_OA2MSK_Shift
00008000 l       *ABS*	00000000 I2C4_OAR2_OA2EN
58001c10 l       *ABS*	00000000 I2C4_TIMINGR
00000000 l       *ABS*	00000000 I2C4_TIMINGR_SCLL_Shift
00000008 l       *ABS*	00000000 I2C4_TIMINGR_SCLH_Shift
00000010 l       *ABS*	00000000 I2C4_TIMINGR_SDADEL_Shift
00000014 l       *ABS*	00000000 I2C4_TIMINGR_SCLDEL_Shift
0000001c l       *ABS*	00000000 I2C4_TIMINGR_PRESC_Shift
58001c14 l       *ABS*	00000000 I2C4_TIMEOUTR
00000000 l       *ABS*	00000000 I2C4_TIMEOUTR_TIMEOUTA_Shift
00001000 l       *ABS*	00000000 I2C4_TIMEOUTR_TIDLE
00008000 l       *ABS*	00000000 I2C4_TIMEOUTR_TIMOUTEN
00000010 l       *ABS*	00000000 I2C4_TIMEOUTR_TIMEOUTB_Shift
80000000 l       *ABS*	00000000 I2C4_TIMEOUTR_TEXTEN
58001c18 l       *ABS*	00000000 I2C4_ISR
00000001 l       *ABS*	00000000 I2C4_ISR_TXE
00000002 l       *ABS*	00000000 I2C4_ISR_TXIS
00000004 l       *ABS*	00000000 I2C4_ISR_RXNE
00000008 l       *ABS*	00000000 I2C4_ISR_ADDR
00000010 l       *ABS*	00000000 I2C4_ISR_NACKF
00000020 l       *ABS*	00000000 I2C4_ISR_STOPF
00000040 l       *ABS*	00000000 I2C4_ISR_TC
00000080 l       *ABS*	00000000 I2C4_ISR_TCR
00000100 l       *ABS*	00000000 I2C4_ISR_BERR
00000200 l       *ABS*	00000000 I2C4_ISR_ARLO
00000400 l       *ABS*	00000000 I2C4_ISR_OVR
00000800 l       *ABS*	00000000 I2C4_ISR_PECERR
00001000 l       *ABS*	00000000 I2C4_ISR_TIMEOUT
00002000 l       *ABS*	00000000 I2C4_ISR_ALERT
00008000 l       *ABS*	00000000 I2C4_ISR_BUSY
00010000 l       *ABS*	00000000 I2C4_ISR_DIR
00000011 l       *ABS*	00000000 I2C4_ISR_ADDCODE_Shift
58001c1c l       *ABS*	00000000 I2C4_ICR
00000008 l       *ABS*	00000000 I2C4_ICR_ADDRCF
00000010 l       *ABS*	00000000 I2C4_ICR_NACKCF
00000020 l       *ABS*	00000000 I2C4_ICR_STOPCF
00000100 l       *ABS*	00000000 I2C4_ICR_BERRCF
00000200 l       *ABS*	00000000 I2C4_ICR_ARLOCF
00000400 l       *ABS*	00000000 I2C4_ICR_OVRCF
00000800 l       *ABS*	00000000 I2C4_ICR_PECCF
00001000 l       *ABS*	00000000 I2C4_ICR_TIMOUTCF
00002000 l       *ABS*	00000000 I2C4_ICR_ALERTCF
58001c20 l       *ABS*	00000000 I2C4_PECR
00000000 l       *ABS*	00000000 I2C4_PECR_PEC_Shift
58001c24 l       *ABS*	00000000 I2C4_RXDR
00000000 l       *ABS*	00000000 I2C4_RXDR_RXDATA_Shift
58001c28 l       *ABS*	00000000 I2C4_TXDR
00000000 l       *ABS*	00000000 I2C4_TXDR_TXDATA_Shift
58020000 l       *ABS*	00000000 GPIOA_BASE
58020000 l       *ABS*	00000000 GPIOA_MODER
00000000 l       *ABS*	00000000 GPIOA_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOA_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOA_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOA_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOA_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOA_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOA_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOA_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOA_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOA_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOA_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOA_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOA_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOA_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOA_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOA_MODER_MODE15_Shift
58020004 l       *ABS*	00000000 GPIOA_OTYPER
00000001 l       *ABS*	00000000 GPIOA_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOA_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOA_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOA_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOA_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOA_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOA_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOA_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOA_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOA_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOA_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOA_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOA_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOA_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOA_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOA_OTYPER_OT15
58020008 l       *ABS*	00000000 GPIOA_OSPEEDR
00000000 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOA_OSPEEDR_OSPEED15_Shift
5802000c l       *ABS*	00000000 GPIOA_PUPDR
00000000 l       *ABS*	00000000 GPIOA_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOA_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOA_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOA_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOA_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOA_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOA_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOA_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOA_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOA_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOA_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOA_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOA_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOA_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOA_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOA_PUPDR_PUPD15_Shift
58020010 l       *ABS*	00000000 GPIOA_IDR
00000001 l       *ABS*	00000000 GPIOA_IDR_ID0
00000002 l       *ABS*	00000000 GPIOA_IDR_ID1
00000004 l       *ABS*	00000000 GPIOA_IDR_ID2
00000008 l       *ABS*	00000000 GPIOA_IDR_ID3
00000010 l       *ABS*	00000000 GPIOA_IDR_ID4
00000020 l       *ABS*	00000000 GPIOA_IDR_ID5
00000040 l       *ABS*	00000000 GPIOA_IDR_ID6
00000080 l       *ABS*	00000000 GPIOA_IDR_ID7
00000100 l       *ABS*	00000000 GPIOA_IDR_ID8
00000200 l       *ABS*	00000000 GPIOA_IDR_ID9
00000400 l       *ABS*	00000000 GPIOA_IDR_ID10
00000800 l       *ABS*	00000000 GPIOA_IDR_ID11
00001000 l       *ABS*	00000000 GPIOA_IDR_ID12
00002000 l       *ABS*	00000000 GPIOA_IDR_ID13
00004000 l       *ABS*	00000000 GPIOA_IDR_ID14
00008000 l       *ABS*	00000000 GPIOA_IDR_ID15
58020014 l       *ABS*	00000000 GPIOA_ODR
00000001 l       *ABS*	00000000 GPIOA_ODR_OD0
00000002 l       *ABS*	00000000 GPIOA_ODR_OD1
00000004 l       *ABS*	00000000 GPIOA_ODR_OD2
00000008 l       *ABS*	00000000 GPIOA_ODR_OD3
00000010 l       *ABS*	00000000 GPIOA_ODR_OD4
00000020 l       *ABS*	00000000 GPIOA_ODR_OD5
00000040 l       *ABS*	00000000 GPIOA_ODR_OD6
00000080 l       *ABS*	00000000 GPIOA_ODR_OD7
00000100 l       *ABS*	00000000 GPIOA_ODR_OD8
00000200 l       *ABS*	00000000 GPIOA_ODR_OD9
00000400 l       *ABS*	00000000 GPIOA_ODR_OD10
00000800 l       *ABS*	00000000 GPIOA_ODR_OD11
00001000 l       *ABS*	00000000 GPIOA_ODR_OD12
00002000 l       *ABS*	00000000 GPIOA_ODR_OD13
00004000 l       *ABS*	00000000 GPIOA_ODR_OD14
00008000 l       *ABS*	00000000 GPIOA_ODR_OD15
58020018 l       *ABS*	00000000 GPIOA_BSRR
00000001 l       *ABS*	00000000 GPIOA_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOA_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOA_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOA_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOA_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOA_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOA_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOA_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOA_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOA_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOA_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOA_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOA_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOA_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOA_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOA_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOA_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOA_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOA_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOA_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOA_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOA_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOA_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOA_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOA_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOA_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOA_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOA_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOA_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOA_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOA_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOA_BSRR_BR15
5802001c l       *ABS*	00000000 GPIOA_LCKR
00000001 l       *ABS*	00000000 GPIOA_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOA_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOA_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOA_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOA_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOA_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOA_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOA_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOA_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOA_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOA_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOA_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOA_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOA_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOA_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOA_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOA_LCKR_LCKK
58020020 l       *ABS*	00000000 GPIOA_AFRL
00000000 l       *ABS*	00000000 GPIOA_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOA_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOA_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOA_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOA_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOA_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOA_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOA_AFRL_AFSEL7_Shift
58020024 l       *ABS*	00000000 GPIOA_AFRH
00000000 l       *ABS*	00000000 GPIOA_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOA_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOA_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOA_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOA_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOA_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOA_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOA_AFRH_AFSEL15_Shift
58020400 l       *ABS*	00000000 GPIOB_BASE
58020400 l       *ABS*	00000000 GPIOB_MODER
00000000 l       *ABS*	00000000 GPIOB_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOB_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOB_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOB_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOB_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOB_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOB_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOB_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOB_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOB_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOB_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOB_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOB_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOB_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOB_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOB_MODER_MODE15_Shift
58020404 l       *ABS*	00000000 GPIOB_OTYPER
00000001 l       *ABS*	00000000 GPIOB_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOB_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOB_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOB_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOB_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOB_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOB_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOB_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOB_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOB_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOB_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOB_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOB_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOB_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOB_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOB_OTYPER_OT15
58020408 l       *ABS*	00000000 GPIOB_OSPEEDR
00000000 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOB_OSPEEDR_OSPEED15_Shift
5802040c l       *ABS*	00000000 GPIOB_PUPDR
00000000 l       *ABS*	00000000 GPIOB_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOB_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOB_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOB_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOB_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOB_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOB_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOB_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOB_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOB_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOB_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOB_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOB_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOB_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOB_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOB_PUPDR_PUPD15_Shift
58020410 l       *ABS*	00000000 GPIOB_IDR
00000001 l       *ABS*	00000000 GPIOB_IDR_ID0
00000002 l       *ABS*	00000000 GPIOB_IDR_ID1
00000004 l       *ABS*	00000000 GPIOB_IDR_ID2
00000008 l       *ABS*	00000000 GPIOB_IDR_ID3
00000010 l       *ABS*	00000000 GPIOB_IDR_ID4
00000020 l       *ABS*	00000000 GPIOB_IDR_ID5
00000040 l       *ABS*	00000000 GPIOB_IDR_ID6
00000080 l       *ABS*	00000000 GPIOB_IDR_ID7
00000100 l       *ABS*	00000000 GPIOB_IDR_ID8
00000200 l       *ABS*	00000000 GPIOB_IDR_ID9
00000400 l       *ABS*	00000000 GPIOB_IDR_ID10
00000800 l       *ABS*	00000000 GPIOB_IDR_ID11
00001000 l       *ABS*	00000000 GPIOB_IDR_ID12
00002000 l       *ABS*	00000000 GPIOB_IDR_ID13
00004000 l       *ABS*	00000000 GPIOB_IDR_ID14
00008000 l       *ABS*	00000000 GPIOB_IDR_ID15
58020414 l       *ABS*	00000000 GPIOB_ODR
00000001 l       *ABS*	00000000 GPIOB_ODR_OD0
00000002 l       *ABS*	00000000 GPIOB_ODR_OD1
00000004 l       *ABS*	00000000 GPIOB_ODR_OD2
00000008 l       *ABS*	00000000 GPIOB_ODR_OD3
00000010 l       *ABS*	00000000 GPIOB_ODR_OD4
00000020 l       *ABS*	00000000 GPIOB_ODR_OD5
00000040 l       *ABS*	00000000 GPIOB_ODR_OD6
00000080 l       *ABS*	00000000 GPIOB_ODR_OD7
00000100 l       *ABS*	00000000 GPIOB_ODR_OD8
00000200 l       *ABS*	00000000 GPIOB_ODR_OD9
00000400 l       *ABS*	00000000 GPIOB_ODR_OD10
00000800 l       *ABS*	00000000 GPIOB_ODR_OD11
00001000 l       *ABS*	00000000 GPIOB_ODR_OD12
00002000 l       *ABS*	00000000 GPIOB_ODR_OD13
00004000 l       *ABS*	00000000 GPIOB_ODR_OD14
00008000 l       *ABS*	00000000 GPIOB_ODR_OD15
58020418 l       *ABS*	00000000 GPIOB_BSRR
00000001 l       *ABS*	00000000 GPIOB_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOB_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOB_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOB_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOB_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOB_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOB_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOB_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOB_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOB_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOB_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOB_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOB_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOB_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOB_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOB_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOB_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOB_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOB_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOB_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOB_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOB_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOB_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOB_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOB_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOB_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOB_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOB_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOB_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOB_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOB_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOB_BSRR_BR15
5802041c l       *ABS*	00000000 GPIOB_LCKR
00000001 l       *ABS*	00000000 GPIOB_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOB_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOB_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOB_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOB_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOB_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOB_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOB_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOB_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOB_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOB_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOB_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOB_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOB_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOB_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOB_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOB_LCKR_LCKK
58020420 l       *ABS*	00000000 GPIOB_AFRL
00000000 l       *ABS*	00000000 GPIOB_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOB_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOB_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOB_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOB_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOB_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOB_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOB_AFRL_AFSEL7_Shift
58020424 l       *ABS*	00000000 GPIOB_AFRH
00000000 l       *ABS*	00000000 GPIOB_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOB_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOB_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOB_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOB_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOB_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOB_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOB_AFRH_AFSEL15_Shift
58020800 l       *ABS*	00000000 GPIOC_BASE
58020800 l       *ABS*	00000000 GPIOC_MODER
00000000 l       *ABS*	00000000 GPIOC_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOC_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOC_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOC_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOC_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOC_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOC_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOC_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOC_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOC_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOC_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOC_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOC_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOC_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOC_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOC_MODER_MODE15_Shift
58020804 l       *ABS*	00000000 GPIOC_OTYPER
00000001 l       *ABS*	00000000 GPIOC_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOC_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOC_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOC_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOC_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOC_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOC_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOC_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOC_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOC_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOC_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOC_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOC_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOC_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOC_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOC_OTYPER_OT15
58020808 l       *ABS*	00000000 GPIOC_OSPEEDR
00000000 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOC_OSPEEDR_OSPEED15_Shift
5802080c l       *ABS*	00000000 GPIOC_PUPDR
00000000 l       *ABS*	00000000 GPIOC_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOC_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOC_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOC_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOC_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOC_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOC_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOC_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOC_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOC_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOC_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOC_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOC_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOC_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOC_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOC_PUPDR_PUPD15_Shift
58020810 l       *ABS*	00000000 GPIOC_IDR
00000001 l       *ABS*	00000000 GPIOC_IDR_ID0
00000002 l       *ABS*	00000000 GPIOC_IDR_ID1
00000004 l       *ABS*	00000000 GPIOC_IDR_ID2
00000008 l       *ABS*	00000000 GPIOC_IDR_ID3
00000010 l       *ABS*	00000000 GPIOC_IDR_ID4
00000020 l       *ABS*	00000000 GPIOC_IDR_ID5
00000040 l       *ABS*	00000000 GPIOC_IDR_ID6
00000080 l       *ABS*	00000000 GPIOC_IDR_ID7
00000100 l       *ABS*	00000000 GPIOC_IDR_ID8
00000200 l       *ABS*	00000000 GPIOC_IDR_ID9
00000400 l       *ABS*	00000000 GPIOC_IDR_ID10
00000800 l       *ABS*	00000000 GPIOC_IDR_ID11
00001000 l       *ABS*	00000000 GPIOC_IDR_ID12
00002000 l       *ABS*	00000000 GPIOC_IDR_ID13
00004000 l       *ABS*	00000000 GPIOC_IDR_ID14
00008000 l       *ABS*	00000000 GPIOC_IDR_ID15
58020814 l       *ABS*	00000000 GPIOC_ODR
00000001 l       *ABS*	00000000 GPIOC_ODR_OD0
00000002 l       *ABS*	00000000 GPIOC_ODR_OD1
00000004 l       *ABS*	00000000 GPIOC_ODR_OD2
00000008 l       *ABS*	00000000 GPIOC_ODR_OD3
00000010 l       *ABS*	00000000 GPIOC_ODR_OD4
00000020 l       *ABS*	00000000 GPIOC_ODR_OD5
00000040 l       *ABS*	00000000 GPIOC_ODR_OD6
00000080 l       *ABS*	00000000 GPIOC_ODR_OD7
00000100 l       *ABS*	00000000 GPIOC_ODR_OD8
00000200 l       *ABS*	00000000 GPIOC_ODR_OD9
00000400 l       *ABS*	00000000 GPIOC_ODR_OD10
00000800 l       *ABS*	00000000 GPIOC_ODR_OD11
00001000 l       *ABS*	00000000 GPIOC_ODR_OD12
00002000 l       *ABS*	00000000 GPIOC_ODR_OD13
00004000 l       *ABS*	00000000 GPIOC_ODR_OD14
00008000 l       *ABS*	00000000 GPIOC_ODR_OD15
58020818 l       *ABS*	00000000 GPIOC_BSRR
00000001 l       *ABS*	00000000 GPIOC_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOC_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOC_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOC_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOC_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOC_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOC_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOC_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOC_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOC_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOC_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOC_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOC_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOC_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOC_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOC_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOC_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOC_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOC_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOC_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOC_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOC_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOC_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOC_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOC_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOC_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOC_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOC_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOC_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOC_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOC_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOC_BSRR_BR15
5802081c l       *ABS*	00000000 GPIOC_LCKR
00000001 l       *ABS*	00000000 GPIOC_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOC_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOC_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOC_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOC_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOC_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOC_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOC_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOC_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOC_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOC_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOC_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOC_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOC_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOC_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOC_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOC_LCKR_LCKK
58020820 l       *ABS*	00000000 GPIOC_AFRL
00000000 l       *ABS*	00000000 GPIOC_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOC_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOC_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOC_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOC_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOC_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOC_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOC_AFRL_AFSEL7_Shift
58020824 l       *ABS*	00000000 GPIOC_AFRH
00000000 l       *ABS*	00000000 GPIOC_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOC_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOC_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOC_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOC_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOC_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOC_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOC_AFRH_AFSEL15_Shift
58020c00 l       *ABS*	00000000 GPIOD_BASE
58020c00 l       *ABS*	00000000 GPIOD_MODER
00000000 l       *ABS*	00000000 GPIOD_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOD_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOD_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOD_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOD_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOD_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOD_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOD_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOD_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOD_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOD_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOD_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOD_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOD_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOD_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOD_MODER_MODE15_Shift
58020c04 l       *ABS*	00000000 GPIOD_OTYPER
00000001 l       *ABS*	00000000 GPIOD_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOD_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOD_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOD_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOD_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOD_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOD_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOD_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOD_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOD_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOD_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOD_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOD_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOD_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOD_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOD_OTYPER_OT15
58020c08 l       *ABS*	00000000 GPIOD_OSPEEDR
00000000 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOD_OSPEEDR_OSPEED15_Shift
58020c0c l       *ABS*	00000000 GPIOD_PUPDR
00000000 l       *ABS*	00000000 GPIOD_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOD_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOD_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOD_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOD_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOD_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOD_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOD_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOD_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOD_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOD_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOD_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOD_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOD_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOD_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOD_PUPDR_PUPD15_Shift
58020c10 l       *ABS*	00000000 GPIOD_IDR
00000001 l       *ABS*	00000000 GPIOD_IDR_ID0
00000002 l       *ABS*	00000000 GPIOD_IDR_ID1
00000004 l       *ABS*	00000000 GPIOD_IDR_ID2
00000008 l       *ABS*	00000000 GPIOD_IDR_ID3
00000010 l       *ABS*	00000000 GPIOD_IDR_ID4
00000020 l       *ABS*	00000000 GPIOD_IDR_ID5
00000040 l       *ABS*	00000000 GPIOD_IDR_ID6
00000080 l       *ABS*	00000000 GPIOD_IDR_ID7
00000100 l       *ABS*	00000000 GPIOD_IDR_ID8
00000200 l       *ABS*	00000000 GPIOD_IDR_ID9
00000400 l       *ABS*	00000000 GPIOD_IDR_ID10
00000800 l       *ABS*	00000000 GPIOD_IDR_ID11
00001000 l       *ABS*	00000000 GPIOD_IDR_ID12
00002000 l       *ABS*	00000000 GPIOD_IDR_ID13
00004000 l       *ABS*	00000000 GPIOD_IDR_ID14
00008000 l       *ABS*	00000000 GPIOD_IDR_ID15
58020c14 l       *ABS*	00000000 GPIOD_ODR
00000001 l       *ABS*	00000000 GPIOD_ODR_OD0
00000002 l       *ABS*	00000000 GPIOD_ODR_OD1
00000004 l       *ABS*	00000000 GPIOD_ODR_OD2
00000008 l       *ABS*	00000000 GPIOD_ODR_OD3
00000010 l       *ABS*	00000000 GPIOD_ODR_OD4
00000020 l       *ABS*	00000000 GPIOD_ODR_OD5
00000040 l       *ABS*	00000000 GPIOD_ODR_OD6
00000080 l       *ABS*	00000000 GPIOD_ODR_OD7
00000100 l       *ABS*	00000000 GPIOD_ODR_OD8
00000200 l       *ABS*	00000000 GPIOD_ODR_OD9
00000400 l       *ABS*	00000000 GPIOD_ODR_OD10
00000800 l       *ABS*	00000000 GPIOD_ODR_OD11
00001000 l       *ABS*	00000000 GPIOD_ODR_OD12
00002000 l       *ABS*	00000000 GPIOD_ODR_OD13
00004000 l       *ABS*	00000000 GPIOD_ODR_OD14
00008000 l       *ABS*	00000000 GPIOD_ODR_OD15
58020c18 l       *ABS*	00000000 GPIOD_BSRR
00000001 l       *ABS*	00000000 GPIOD_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOD_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOD_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOD_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOD_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOD_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOD_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOD_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOD_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOD_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOD_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOD_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOD_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOD_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOD_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOD_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOD_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOD_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOD_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOD_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOD_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOD_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOD_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOD_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOD_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOD_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOD_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOD_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOD_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOD_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOD_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOD_BSRR_BR15
58020c1c l       *ABS*	00000000 GPIOD_LCKR
00000001 l       *ABS*	00000000 GPIOD_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOD_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOD_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOD_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOD_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOD_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOD_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOD_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOD_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOD_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOD_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOD_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOD_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOD_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOD_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOD_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOD_LCKR_LCKK
58020c20 l       *ABS*	00000000 GPIOD_AFRL
00000000 l       *ABS*	00000000 GPIOD_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOD_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOD_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOD_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOD_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOD_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOD_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOD_AFRL_AFSEL7_Shift
58020c24 l       *ABS*	00000000 GPIOD_AFRH
00000000 l       *ABS*	00000000 GPIOD_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOD_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOD_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOD_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOD_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOD_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOD_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOD_AFRH_AFSEL15_Shift
58021000 l       *ABS*	00000000 GPIOE_BASE
58021000 l       *ABS*	00000000 GPIOE_MODER
00000000 l       *ABS*	00000000 GPIOE_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOE_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOE_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOE_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOE_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOE_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOE_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOE_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOE_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOE_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOE_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOE_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOE_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOE_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOE_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOE_MODER_MODE15_Shift
58021004 l       *ABS*	00000000 GPIOE_OTYPER
00000001 l       *ABS*	00000000 GPIOE_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOE_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOE_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOE_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOE_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOE_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOE_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOE_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOE_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOE_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOE_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOE_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOE_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOE_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOE_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOE_OTYPER_OT15
58021008 l       *ABS*	00000000 GPIOE_OSPEEDR
00000000 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOE_OSPEEDR_OSPEED15_Shift
5802100c l       *ABS*	00000000 GPIOE_PUPDR
00000000 l       *ABS*	00000000 GPIOE_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOE_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOE_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOE_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOE_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOE_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOE_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOE_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOE_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOE_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOE_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOE_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOE_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOE_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOE_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOE_PUPDR_PUPD15_Shift
58021010 l       *ABS*	00000000 GPIOE_IDR
00000001 l       *ABS*	00000000 GPIOE_IDR_ID0
00000002 l       *ABS*	00000000 GPIOE_IDR_ID1
00000004 l       *ABS*	00000000 GPIOE_IDR_ID2
00000008 l       *ABS*	00000000 GPIOE_IDR_ID3
00000010 l       *ABS*	00000000 GPIOE_IDR_ID4
00000020 l       *ABS*	00000000 GPIOE_IDR_ID5
00000040 l       *ABS*	00000000 GPIOE_IDR_ID6
00000080 l       *ABS*	00000000 GPIOE_IDR_ID7
00000100 l       *ABS*	00000000 GPIOE_IDR_ID8
00000200 l       *ABS*	00000000 GPIOE_IDR_ID9
00000400 l       *ABS*	00000000 GPIOE_IDR_ID10
00000800 l       *ABS*	00000000 GPIOE_IDR_ID11
00001000 l       *ABS*	00000000 GPIOE_IDR_ID12
00002000 l       *ABS*	00000000 GPIOE_IDR_ID13
00004000 l       *ABS*	00000000 GPIOE_IDR_ID14
00008000 l       *ABS*	00000000 GPIOE_IDR_ID15
58021014 l       *ABS*	00000000 GPIOE_ODR
00000001 l       *ABS*	00000000 GPIOE_ODR_OD0
00000002 l       *ABS*	00000000 GPIOE_ODR_OD1
00000004 l       *ABS*	00000000 GPIOE_ODR_OD2
00000008 l       *ABS*	00000000 GPIOE_ODR_OD3
00000010 l       *ABS*	00000000 GPIOE_ODR_OD4
00000020 l       *ABS*	00000000 GPIOE_ODR_OD5
00000040 l       *ABS*	00000000 GPIOE_ODR_OD6
00000080 l       *ABS*	00000000 GPIOE_ODR_OD7
00000100 l       *ABS*	00000000 GPIOE_ODR_OD8
00000200 l       *ABS*	00000000 GPIOE_ODR_OD9
00000400 l       *ABS*	00000000 GPIOE_ODR_OD10
00000800 l       *ABS*	00000000 GPIOE_ODR_OD11
00001000 l       *ABS*	00000000 GPIOE_ODR_OD12
00002000 l       *ABS*	00000000 GPIOE_ODR_OD13
00004000 l       *ABS*	00000000 GPIOE_ODR_OD14
00008000 l       *ABS*	00000000 GPIOE_ODR_OD15
58021018 l       *ABS*	00000000 GPIOE_BSRR
00000001 l       *ABS*	00000000 GPIOE_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOE_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOE_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOE_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOE_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOE_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOE_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOE_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOE_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOE_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOE_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOE_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOE_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOE_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOE_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOE_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOE_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOE_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOE_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOE_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOE_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOE_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOE_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOE_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOE_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOE_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOE_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOE_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOE_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOE_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOE_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOE_BSRR_BR15
5802101c l       *ABS*	00000000 GPIOE_LCKR
00000001 l       *ABS*	00000000 GPIOE_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOE_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOE_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOE_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOE_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOE_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOE_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOE_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOE_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOE_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOE_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOE_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOE_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOE_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOE_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOE_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOE_LCKR_LCKK
58021020 l       *ABS*	00000000 GPIOE_AFRL
00000000 l       *ABS*	00000000 GPIOE_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOE_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOE_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOE_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOE_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOE_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOE_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOE_AFRL_AFSEL7_Shift
58021024 l       *ABS*	00000000 GPIOE_AFRH
00000000 l       *ABS*	00000000 GPIOE_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOE_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOE_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOE_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOE_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOE_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOE_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOE_AFRH_AFSEL15_Shift
58021400 l       *ABS*	00000000 GPIOF_BASE
58021400 l       *ABS*	00000000 GPIOF_MODER
00000000 l       *ABS*	00000000 GPIOF_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOF_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOF_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOF_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOF_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOF_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOF_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOF_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOF_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOF_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOF_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOF_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOF_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOF_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOF_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOF_MODER_MODE15_Shift
58021404 l       *ABS*	00000000 GPIOF_OTYPER
00000001 l       *ABS*	00000000 GPIOF_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOF_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOF_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOF_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOF_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOF_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOF_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOF_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOF_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOF_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOF_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOF_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOF_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOF_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOF_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOF_OTYPER_OT15
58021408 l       *ABS*	00000000 GPIOF_OSPEEDR
00000000 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOF_OSPEEDR_OSPEED15_Shift
5802140c l       *ABS*	00000000 GPIOF_PUPDR
00000000 l       *ABS*	00000000 GPIOF_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOF_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOF_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOF_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOF_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOF_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOF_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOF_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOF_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOF_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOF_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOF_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOF_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOF_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOF_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOF_PUPDR_PUPD15_Shift
58021410 l       *ABS*	00000000 GPIOF_IDR
00000001 l       *ABS*	00000000 GPIOF_IDR_ID0
00000002 l       *ABS*	00000000 GPIOF_IDR_ID1
00000004 l       *ABS*	00000000 GPIOF_IDR_ID2
00000008 l       *ABS*	00000000 GPIOF_IDR_ID3
00000010 l       *ABS*	00000000 GPIOF_IDR_ID4
00000020 l       *ABS*	00000000 GPIOF_IDR_ID5
00000040 l       *ABS*	00000000 GPIOF_IDR_ID6
00000080 l       *ABS*	00000000 GPIOF_IDR_ID7
00000100 l       *ABS*	00000000 GPIOF_IDR_ID8
00000200 l       *ABS*	00000000 GPIOF_IDR_ID9
00000400 l       *ABS*	00000000 GPIOF_IDR_ID10
00000800 l       *ABS*	00000000 GPIOF_IDR_ID11
00001000 l       *ABS*	00000000 GPIOF_IDR_ID12
00002000 l       *ABS*	00000000 GPIOF_IDR_ID13
00004000 l       *ABS*	00000000 GPIOF_IDR_ID14
00008000 l       *ABS*	00000000 GPIOF_IDR_ID15
58021414 l       *ABS*	00000000 GPIOF_ODR
00000001 l       *ABS*	00000000 GPIOF_ODR_OD0
00000002 l       *ABS*	00000000 GPIOF_ODR_OD1
00000004 l       *ABS*	00000000 GPIOF_ODR_OD2
00000008 l       *ABS*	00000000 GPIOF_ODR_OD3
00000010 l       *ABS*	00000000 GPIOF_ODR_OD4
00000020 l       *ABS*	00000000 GPIOF_ODR_OD5
00000040 l       *ABS*	00000000 GPIOF_ODR_OD6
00000080 l       *ABS*	00000000 GPIOF_ODR_OD7
00000100 l       *ABS*	00000000 GPIOF_ODR_OD8
00000200 l       *ABS*	00000000 GPIOF_ODR_OD9
00000400 l       *ABS*	00000000 GPIOF_ODR_OD10
00000800 l       *ABS*	00000000 GPIOF_ODR_OD11
00001000 l       *ABS*	00000000 GPIOF_ODR_OD12
00002000 l       *ABS*	00000000 GPIOF_ODR_OD13
00004000 l       *ABS*	00000000 GPIOF_ODR_OD14
00008000 l       *ABS*	00000000 GPIOF_ODR_OD15
58021418 l       *ABS*	00000000 GPIOF_BSRR
00000001 l       *ABS*	00000000 GPIOF_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOF_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOF_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOF_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOF_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOF_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOF_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOF_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOF_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOF_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOF_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOF_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOF_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOF_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOF_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOF_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOF_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOF_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOF_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOF_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOF_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOF_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOF_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOF_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOF_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOF_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOF_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOF_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOF_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOF_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOF_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOF_BSRR_BR15
5802141c l       *ABS*	00000000 GPIOF_LCKR
00000001 l       *ABS*	00000000 GPIOF_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOF_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOF_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOF_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOF_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOF_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOF_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOF_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOF_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOF_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOF_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOF_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOF_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOF_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOF_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOF_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOF_LCKR_LCKK
58021420 l       *ABS*	00000000 GPIOF_AFRL
00000000 l       *ABS*	00000000 GPIOF_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOF_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOF_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOF_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOF_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOF_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOF_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOF_AFRL_AFSEL7_Shift
58021424 l       *ABS*	00000000 GPIOF_AFRH
00000000 l       *ABS*	00000000 GPIOF_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOF_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOF_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOF_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOF_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOF_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOF_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOF_AFRH_AFSEL15_Shift
58021800 l       *ABS*	00000000 GPIOG_BASE
58021800 l       *ABS*	00000000 GPIOG_MODER
00000000 l       *ABS*	00000000 GPIOG_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOG_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOG_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOG_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOG_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOG_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOG_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOG_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOG_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOG_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOG_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOG_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOG_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOG_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOG_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOG_MODER_MODE15_Shift
58021804 l       *ABS*	00000000 GPIOG_OTYPER
00000001 l       *ABS*	00000000 GPIOG_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOG_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOG_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOG_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOG_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOG_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOG_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOG_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOG_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOG_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOG_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOG_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOG_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOG_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOG_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOG_OTYPER_OT15
58021808 l       *ABS*	00000000 GPIOG_OSPEEDR
00000000 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOG_OSPEEDR_OSPEED15_Shift
5802180c l       *ABS*	00000000 GPIOG_PUPDR
00000000 l       *ABS*	00000000 GPIOG_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOG_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOG_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOG_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOG_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOG_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOG_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOG_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOG_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOG_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOG_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOG_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOG_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOG_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOG_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOG_PUPDR_PUPD15_Shift
58021810 l       *ABS*	00000000 GPIOG_IDR
00000001 l       *ABS*	00000000 GPIOG_IDR_ID0
00000002 l       *ABS*	00000000 GPIOG_IDR_ID1
00000004 l       *ABS*	00000000 GPIOG_IDR_ID2
00000008 l       *ABS*	00000000 GPIOG_IDR_ID3
00000010 l       *ABS*	00000000 GPIOG_IDR_ID4
00000020 l       *ABS*	00000000 GPIOG_IDR_ID5
00000040 l       *ABS*	00000000 GPIOG_IDR_ID6
00000080 l       *ABS*	00000000 GPIOG_IDR_ID7
00000100 l       *ABS*	00000000 GPIOG_IDR_ID8
00000200 l       *ABS*	00000000 GPIOG_IDR_ID9
00000400 l       *ABS*	00000000 GPIOG_IDR_ID10
00000800 l       *ABS*	00000000 GPIOG_IDR_ID11
00001000 l       *ABS*	00000000 GPIOG_IDR_ID12
00002000 l       *ABS*	00000000 GPIOG_IDR_ID13
00004000 l       *ABS*	00000000 GPIOG_IDR_ID14
00008000 l       *ABS*	00000000 GPIOG_IDR_ID15
58021814 l       *ABS*	00000000 GPIOG_ODR
00000001 l       *ABS*	00000000 GPIOG_ODR_OD0
00000002 l       *ABS*	00000000 GPIOG_ODR_OD1
00000004 l       *ABS*	00000000 GPIOG_ODR_OD2
00000008 l       *ABS*	00000000 GPIOG_ODR_OD3
00000010 l       *ABS*	00000000 GPIOG_ODR_OD4
00000020 l       *ABS*	00000000 GPIOG_ODR_OD5
00000040 l       *ABS*	00000000 GPIOG_ODR_OD6
00000080 l       *ABS*	00000000 GPIOG_ODR_OD7
00000100 l       *ABS*	00000000 GPIOG_ODR_OD8
00000200 l       *ABS*	00000000 GPIOG_ODR_OD9
00000400 l       *ABS*	00000000 GPIOG_ODR_OD10
00000800 l       *ABS*	00000000 GPIOG_ODR_OD11
00001000 l       *ABS*	00000000 GPIOG_ODR_OD12
00002000 l       *ABS*	00000000 GPIOG_ODR_OD13
00004000 l       *ABS*	00000000 GPIOG_ODR_OD14
00008000 l       *ABS*	00000000 GPIOG_ODR_OD15
58021818 l       *ABS*	00000000 GPIOG_BSRR
00000001 l       *ABS*	00000000 GPIOG_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOG_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOG_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOG_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOG_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOG_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOG_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOG_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOG_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOG_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOG_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOG_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOG_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOG_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOG_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOG_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOG_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOG_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOG_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOG_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOG_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOG_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOG_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOG_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOG_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOG_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOG_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOG_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOG_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOG_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOG_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOG_BSRR_BR15
5802181c l       *ABS*	00000000 GPIOG_LCKR
00000001 l       *ABS*	00000000 GPIOG_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOG_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOG_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOG_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOG_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOG_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOG_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOG_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOG_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOG_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOG_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOG_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOG_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOG_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOG_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOG_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOG_LCKR_LCKK
58021820 l       *ABS*	00000000 GPIOG_AFRL
00000000 l       *ABS*	00000000 GPIOG_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOG_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOG_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOG_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOG_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOG_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOG_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOG_AFRL_AFSEL7_Shift
58021824 l       *ABS*	00000000 GPIOG_AFRH
00000000 l       *ABS*	00000000 GPIOG_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOG_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOG_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOG_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOG_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOG_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOG_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOG_AFRH_AFSEL15_Shift
58021c00 l       *ABS*	00000000 GPIOH_BASE
58021c00 l       *ABS*	00000000 GPIOH_MODER
00000000 l       *ABS*	00000000 GPIOH_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOH_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOH_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOH_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOH_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOH_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOH_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOH_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOH_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOH_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOH_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOH_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOH_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOH_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOH_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOH_MODER_MODE15_Shift
58021c04 l       *ABS*	00000000 GPIOH_OTYPER
00000001 l       *ABS*	00000000 GPIOH_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOH_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOH_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOH_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOH_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOH_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOH_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOH_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOH_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOH_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOH_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOH_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOH_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOH_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOH_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOH_OTYPER_OT15
58021c08 l       *ABS*	00000000 GPIOH_OSPEEDR
00000000 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOH_OSPEEDR_OSPEED15_Shift
58021c0c l       *ABS*	00000000 GPIOH_PUPDR
00000000 l       *ABS*	00000000 GPIOH_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOH_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOH_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOH_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOH_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOH_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOH_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOH_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOH_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOH_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOH_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOH_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOH_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOH_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOH_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOH_PUPDR_PUPD15_Shift
58021c10 l       *ABS*	00000000 GPIOH_IDR
00000001 l       *ABS*	00000000 GPIOH_IDR_ID0
00000002 l       *ABS*	00000000 GPIOH_IDR_ID1
00000004 l       *ABS*	00000000 GPIOH_IDR_ID2
00000008 l       *ABS*	00000000 GPIOH_IDR_ID3
00000010 l       *ABS*	00000000 GPIOH_IDR_ID4
00000020 l       *ABS*	00000000 GPIOH_IDR_ID5
00000040 l       *ABS*	00000000 GPIOH_IDR_ID6
00000080 l       *ABS*	00000000 GPIOH_IDR_ID7
00000100 l       *ABS*	00000000 GPIOH_IDR_ID8
00000200 l       *ABS*	00000000 GPIOH_IDR_ID9
00000400 l       *ABS*	00000000 GPIOH_IDR_ID10
00000800 l       *ABS*	00000000 GPIOH_IDR_ID11
00001000 l       *ABS*	00000000 GPIOH_IDR_ID12
00002000 l       *ABS*	00000000 GPIOH_IDR_ID13
00004000 l       *ABS*	00000000 GPIOH_IDR_ID14
00008000 l       *ABS*	00000000 GPIOH_IDR_ID15
58021c14 l       *ABS*	00000000 GPIOH_ODR
00000001 l       *ABS*	00000000 GPIOH_ODR_OD0
00000002 l       *ABS*	00000000 GPIOH_ODR_OD1
00000004 l       *ABS*	00000000 GPIOH_ODR_OD2
00000008 l       *ABS*	00000000 GPIOH_ODR_OD3
00000010 l       *ABS*	00000000 GPIOH_ODR_OD4
00000020 l       *ABS*	00000000 GPIOH_ODR_OD5
00000040 l       *ABS*	00000000 GPIOH_ODR_OD6
00000080 l       *ABS*	00000000 GPIOH_ODR_OD7
00000100 l       *ABS*	00000000 GPIOH_ODR_OD8
00000200 l       *ABS*	00000000 GPIOH_ODR_OD9
00000400 l       *ABS*	00000000 GPIOH_ODR_OD10
00000800 l       *ABS*	00000000 GPIOH_ODR_OD11
00001000 l       *ABS*	00000000 GPIOH_ODR_OD12
00002000 l       *ABS*	00000000 GPIOH_ODR_OD13
00004000 l       *ABS*	00000000 GPIOH_ODR_OD14
00008000 l       *ABS*	00000000 GPIOH_ODR_OD15
58021c18 l       *ABS*	00000000 GPIOH_BSRR
00000001 l       *ABS*	00000000 GPIOH_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOH_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOH_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOH_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOH_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOH_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOH_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOH_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOH_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOH_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOH_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOH_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOH_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOH_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOH_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOH_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOH_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOH_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOH_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOH_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOH_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOH_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOH_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOH_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOH_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOH_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOH_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOH_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOH_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOH_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOH_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOH_BSRR_BR15
58021c1c l       *ABS*	00000000 GPIOH_LCKR
00000001 l       *ABS*	00000000 GPIOH_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOH_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOH_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOH_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOH_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOH_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOH_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOH_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOH_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOH_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOH_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOH_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOH_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOH_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOH_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOH_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOH_LCKR_LCKK
58021c20 l       *ABS*	00000000 GPIOH_AFRL
00000000 l       *ABS*	00000000 GPIOH_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOH_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOH_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOH_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOH_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOH_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOH_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOH_AFRL_AFSEL7_Shift
58021c24 l       *ABS*	00000000 GPIOH_AFRH
00000000 l       *ABS*	00000000 GPIOH_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOH_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOH_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOH_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOH_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOH_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOH_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOH_AFRH_AFSEL15_Shift
58022000 l       *ABS*	00000000 GPIOI_BASE
58022000 l       *ABS*	00000000 GPIOI_MODER
00000000 l       *ABS*	00000000 GPIOI_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOI_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOI_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOI_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOI_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOI_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOI_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOI_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOI_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOI_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOI_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOI_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOI_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOI_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOI_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOI_MODER_MODE15_Shift
58022004 l       *ABS*	00000000 GPIOI_OTYPER
00000001 l       *ABS*	00000000 GPIOI_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOI_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOI_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOI_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOI_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOI_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOI_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOI_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOI_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOI_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOI_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOI_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOI_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOI_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOI_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOI_OTYPER_OT15
58022008 l       *ABS*	00000000 GPIOI_OSPEEDR
00000000 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOI_OSPEEDR_OSPEED15_Shift
5802200c l       *ABS*	00000000 GPIOI_PUPDR
00000000 l       *ABS*	00000000 GPIOI_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOI_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOI_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOI_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOI_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOI_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOI_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOI_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOI_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOI_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOI_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOI_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOI_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOI_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOI_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOI_PUPDR_PUPD15_Shift
58022010 l       *ABS*	00000000 GPIOI_IDR
00000001 l       *ABS*	00000000 GPIOI_IDR_ID0
00000002 l       *ABS*	00000000 GPIOI_IDR_ID1
00000004 l       *ABS*	00000000 GPIOI_IDR_ID2
00000008 l       *ABS*	00000000 GPIOI_IDR_ID3
00000010 l       *ABS*	00000000 GPIOI_IDR_ID4
00000020 l       *ABS*	00000000 GPIOI_IDR_ID5
00000040 l       *ABS*	00000000 GPIOI_IDR_ID6
00000080 l       *ABS*	00000000 GPIOI_IDR_ID7
00000100 l       *ABS*	00000000 GPIOI_IDR_ID8
00000200 l       *ABS*	00000000 GPIOI_IDR_ID9
00000400 l       *ABS*	00000000 GPIOI_IDR_ID10
00000800 l       *ABS*	00000000 GPIOI_IDR_ID11
00001000 l       *ABS*	00000000 GPIOI_IDR_ID12
00002000 l       *ABS*	00000000 GPIOI_IDR_ID13
00004000 l       *ABS*	00000000 GPIOI_IDR_ID14
00008000 l       *ABS*	00000000 GPIOI_IDR_ID15
58022014 l       *ABS*	00000000 GPIOI_ODR
00000001 l       *ABS*	00000000 GPIOI_ODR_OD0
00000002 l       *ABS*	00000000 GPIOI_ODR_OD1
00000004 l       *ABS*	00000000 GPIOI_ODR_OD2
00000008 l       *ABS*	00000000 GPIOI_ODR_OD3
00000010 l       *ABS*	00000000 GPIOI_ODR_OD4
00000020 l       *ABS*	00000000 GPIOI_ODR_OD5
00000040 l       *ABS*	00000000 GPIOI_ODR_OD6
00000080 l       *ABS*	00000000 GPIOI_ODR_OD7
00000100 l       *ABS*	00000000 GPIOI_ODR_OD8
00000200 l       *ABS*	00000000 GPIOI_ODR_OD9
00000400 l       *ABS*	00000000 GPIOI_ODR_OD10
00000800 l       *ABS*	00000000 GPIOI_ODR_OD11
00001000 l       *ABS*	00000000 GPIOI_ODR_OD12
00002000 l       *ABS*	00000000 GPIOI_ODR_OD13
00004000 l       *ABS*	00000000 GPIOI_ODR_OD14
00008000 l       *ABS*	00000000 GPIOI_ODR_OD15
58022018 l       *ABS*	00000000 GPIOI_BSRR
00000001 l       *ABS*	00000000 GPIOI_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOI_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOI_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOI_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOI_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOI_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOI_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOI_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOI_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOI_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOI_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOI_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOI_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOI_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOI_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOI_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOI_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOI_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOI_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOI_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOI_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOI_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOI_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOI_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOI_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOI_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOI_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOI_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOI_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOI_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOI_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOI_BSRR_BR15
5802201c l       *ABS*	00000000 GPIOI_LCKR
00000001 l       *ABS*	00000000 GPIOI_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOI_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOI_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOI_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOI_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOI_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOI_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOI_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOI_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOI_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOI_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOI_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOI_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOI_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOI_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOI_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOI_LCKR_LCKK
58022020 l       *ABS*	00000000 GPIOI_AFRL
00000000 l       *ABS*	00000000 GPIOI_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOI_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOI_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOI_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOI_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOI_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOI_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOI_AFRL_AFSEL7_Shift
58022024 l       *ABS*	00000000 GPIOI_AFRH
00000000 l       *ABS*	00000000 GPIOI_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOI_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOI_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOI_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOI_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOI_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOI_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOI_AFRH_AFSEL15_Shift
58022400 l       *ABS*	00000000 GPIOJ_BASE
58022400 l       *ABS*	00000000 GPIOJ_MODER
00000000 l       *ABS*	00000000 GPIOJ_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOJ_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOJ_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOJ_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOJ_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOJ_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOJ_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOJ_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOJ_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOJ_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOJ_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOJ_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOJ_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOJ_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOJ_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOJ_MODER_MODE15_Shift
58022404 l       *ABS*	00000000 GPIOJ_OTYPER
00000001 l       *ABS*	00000000 GPIOJ_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOJ_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOJ_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOJ_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOJ_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOJ_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOJ_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOJ_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOJ_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOJ_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOJ_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOJ_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOJ_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOJ_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOJ_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOJ_OTYPER_OT15
58022408 l       *ABS*	00000000 GPIOJ_OSPEEDR
00000000 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOJ_OSPEEDR_OSPEED15_Shift
5802240c l       *ABS*	00000000 GPIOJ_PUPDR
00000000 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOJ_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOJ_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOJ_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOJ_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOJ_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOJ_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOJ_PUPDR_PUPD15_Shift
58022410 l       *ABS*	00000000 GPIOJ_IDR
00000001 l       *ABS*	00000000 GPIOJ_IDR_ID0
00000002 l       *ABS*	00000000 GPIOJ_IDR_ID1
00000004 l       *ABS*	00000000 GPIOJ_IDR_ID2
00000008 l       *ABS*	00000000 GPIOJ_IDR_ID3
00000010 l       *ABS*	00000000 GPIOJ_IDR_ID4
00000020 l       *ABS*	00000000 GPIOJ_IDR_ID5
00000040 l       *ABS*	00000000 GPIOJ_IDR_ID6
00000080 l       *ABS*	00000000 GPIOJ_IDR_ID7
00000100 l       *ABS*	00000000 GPIOJ_IDR_ID8
00000200 l       *ABS*	00000000 GPIOJ_IDR_ID9
00000400 l       *ABS*	00000000 GPIOJ_IDR_ID10
00000800 l       *ABS*	00000000 GPIOJ_IDR_ID11
00001000 l       *ABS*	00000000 GPIOJ_IDR_ID12
00002000 l       *ABS*	00000000 GPIOJ_IDR_ID13
00004000 l       *ABS*	00000000 GPIOJ_IDR_ID14
00008000 l       *ABS*	00000000 GPIOJ_IDR_ID15
58022414 l       *ABS*	00000000 GPIOJ_ODR
00000001 l       *ABS*	00000000 GPIOJ_ODR_OD0
00000002 l       *ABS*	00000000 GPIOJ_ODR_OD1
00000004 l       *ABS*	00000000 GPIOJ_ODR_OD2
00000008 l       *ABS*	00000000 GPIOJ_ODR_OD3
00000010 l       *ABS*	00000000 GPIOJ_ODR_OD4
00000020 l       *ABS*	00000000 GPIOJ_ODR_OD5
00000040 l       *ABS*	00000000 GPIOJ_ODR_OD6
00000080 l       *ABS*	00000000 GPIOJ_ODR_OD7
00000100 l       *ABS*	00000000 GPIOJ_ODR_OD8
00000200 l       *ABS*	00000000 GPIOJ_ODR_OD9
00000400 l       *ABS*	00000000 GPIOJ_ODR_OD10
00000800 l       *ABS*	00000000 GPIOJ_ODR_OD11
00001000 l       *ABS*	00000000 GPIOJ_ODR_OD12
00002000 l       *ABS*	00000000 GPIOJ_ODR_OD13
00004000 l       *ABS*	00000000 GPIOJ_ODR_OD14
00008000 l       *ABS*	00000000 GPIOJ_ODR_OD15
58022418 l       *ABS*	00000000 GPIOJ_BSRR
00000001 l       *ABS*	00000000 GPIOJ_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOJ_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOJ_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOJ_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOJ_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOJ_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOJ_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOJ_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOJ_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOJ_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOJ_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOJ_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOJ_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOJ_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOJ_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOJ_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOJ_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOJ_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOJ_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOJ_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOJ_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOJ_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOJ_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOJ_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOJ_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOJ_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOJ_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOJ_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOJ_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOJ_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOJ_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOJ_BSRR_BR15
5802241c l       *ABS*	00000000 GPIOJ_LCKR
00000001 l       *ABS*	00000000 GPIOJ_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOJ_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOJ_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOJ_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOJ_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOJ_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOJ_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOJ_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOJ_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOJ_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOJ_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOJ_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOJ_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOJ_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOJ_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOJ_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOJ_LCKR_LCKK
58022420 l       *ABS*	00000000 GPIOJ_AFRL
00000000 l       *ABS*	00000000 GPIOJ_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOJ_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOJ_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOJ_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOJ_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOJ_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOJ_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOJ_AFRL_AFSEL7_Shift
58022424 l       *ABS*	00000000 GPIOJ_AFRH
00000000 l       *ABS*	00000000 GPIOJ_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOJ_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOJ_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOJ_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOJ_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOJ_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOJ_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOJ_AFRH_AFSEL15_Shift
58022800 l       *ABS*	00000000 GPIOK_BASE
58022800 l       *ABS*	00000000 GPIOK_MODER
00000000 l       *ABS*	00000000 GPIOK_MODER_MODE0_Shift
00000002 l       *ABS*	00000000 GPIOK_MODER_MODE1_Shift
00000004 l       *ABS*	00000000 GPIOK_MODER_MODE2_Shift
00000006 l       *ABS*	00000000 GPIOK_MODER_MODE3_Shift
00000008 l       *ABS*	00000000 GPIOK_MODER_MODE4_Shift
0000000a l       *ABS*	00000000 GPIOK_MODER_MODE5_Shift
0000000c l       *ABS*	00000000 GPIOK_MODER_MODE6_Shift
0000000e l       *ABS*	00000000 GPIOK_MODER_MODE7_Shift
00000010 l       *ABS*	00000000 GPIOK_MODER_MODE8_Shift
00000012 l       *ABS*	00000000 GPIOK_MODER_MODE9_Shift
00000014 l       *ABS*	00000000 GPIOK_MODER_MODE10_Shift
00000016 l       *ABS*	00000000 GPIOK_MODER_MODE11_Shift
00000018 l       *ABS*	00000000 GPIOK_MODER_MODE12_Shift
0000001a l       *ABS*	00000000 GPIOK_MODER_MODE13_Shift
0000001c l       *ABS*	00000000 GPIOK_MODER_MODE14_Shift
0000001e l       *ABS*	00000000 GPIOK_MODER_MODE15_Shift
58022804 l       *ABS*	00000000 GPIOK_OTYPER
00000001 l       *ABS*	00000000 GPIOK_OTYPER_OT0
00000002 l       *ABS*	00000000 GPIOK_OTYPER_OT1
00000004 l       *ABS*	00000000 GPIOK_OTYPER_OT2
00000008 l       *ABS*	00000000 GPIOK_OTYPER_OT3
00000010 l       *ABS*	00000000 GPIOK_OTYPER_OT4
00000020 l       *ABS*	00000000 GPIOK_OTYPER_OT5
00000040 l       *ABS*	00000000 GPIOK_OTYPER_OT6
00000080 l       *ABS*	00000000 GPIOK_OTYPER_OT7
00000100 l       *ABS*	00000000 GPIOK_OTYPER_OT8
00000200 l       *ABS*	00000000 GPIOK_OTYPER_OT9
00000400 l       *ABS*	00000000 GPIOK_OTYPER_OT10
00000800 l       *ABS*	00000000 GPIOK_OTYPER_OT11
00001000 l       *ABS*	00000000 GPIOK_OTYPER_OT12
00002000 l       *ABS*	00000000 GPIOK_OTYPER_OT13
00004000 l       *ABS*	00000000 GPIOK_OTYPER_OT14
00008000 l       *ABS*	00000000 GPIOK_OTYPER_OT15
58022808 l       *ABS*	00000000 GPIOK_OSPEEDR
00000000 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED0_Shift
00000002 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED1_Shift
00000004 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED2_Shift
00000006 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED3_Shift
00000008 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED4_Shift
0000000a l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED5_Shift
0000000c l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED6_Shift
0000000e l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED7_Shift
00000010 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED8_Shift
00000012 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED9_Shift
00000014 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED10_Shift
00000016 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED11_Shift
00000018 l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED12_Shift
0000001a l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED13_Shift
0000001c l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED14_Shift
0000001e l       *ABS*	00000000 GPIOK_OSPEEDR_OSPEED15_Shift
5802280c l       *ABS*	00000000 GPIOK_PUPDR
00000000 l       *ABS*	00000000 GPIOK_PUPDR_PUPD0_Shift
00000002 l       *ABS*	00000000 GPIOK_PUPDR_PUPD1_Shift
00000004 l       *ABS*	00000000 GPIOK_PUPDR_PUPD2_Shift
00000006 l       *ABS*	00000000 GPIOK_PUPDR_PUPD3_Shift
00000008 l       *ABS*	00000000 GPIOK_PUPDR_PUPD4_Shift
0000000a l       *ABS*	00000000 GPIOK_PUPDR_PUPD5_Shift
0000000c l       *ABS*	00000000 GPIOK_PUPDR_PUPD6_Shift
0000000e l       *ABS*	00000000 GPIOK_PUPDR_PUPD7_Shift
00000010 l       *ABS*	00000000 GPIOK_PUPDR_PUPD8_Shift
00000012 l       *ABS*	00000000 GPIOK_PUPDR_PUPD9_Shift
00000014 l       *ABS*	00000000 GPIOK_PUPDR_PUPD10_Shift
00000016 l       *ABS*	00000000 GPIOK_PUPDR_PUPD11_Shift
00000018 l       *ABS*	00000000 GPIOK_PUPDR_PUPD12_Shift
0000001a l       *ABS*	00000000 GPIOK_PUPDR_PUPD13_Shift
0000001c l       *ABS*	00000000 GPIOK_PUPDR_PUPD14_Shift
0000001e l       *ABS*	00000000 GPIOK_PUPDR_PUPD15_Shift
58022810 l       *ABS*	00000000 GPIOK_IDR
00000001 l       *ABS*	00000000 GPIOK_IDR_ID0
00000002 l       *ABS*	00000000 GPIOK_IDR_ID1
00000004 l       *ABS*	00000000 GPIOK_IDR_ID2
00000008 l       *ABS*	00000000 GPIOK_IDR_ID3
00000010 l       *ABS*	00000000 GPIOK_IDR_ID4
00000020 l       *ABS*	00000000 GPIOK_IDR_ID5
00000040 l       *ABS*	00000000 GPIOK_IDR_ID6
00000080 l       *ABS*	00000000 GPIOK_IDR_ID7
00000100 l       *ABS*	00000000 GPIOK_IDR_ID8
00000200 l       *ABS*	00000000 GPIOK_IDR_ID9
00000400 l       *ABS*	00000000 GPIOK_IDR_ID10
00000800 l       *ABS*	00000000 GPIOK_IDR_ID11
00001000 l       *ABS*	00000000 GPIOK_IDR_ID12
00002000 l       *ABS*	00000000 GPIOK_IDR_ID13
00004000 l       *ABS*	00000000 GPIOK_IDR_ID14
00008000 l       *ABS*	00000000 GPIOK_IDR_ID15
58022814 l       *ABS*	00000000 GPIOK_ODR
00000001 l       *ABS*	00000000 GPIOK_ODR_OD0
00000002 l       *ABS*	00000000 GPIOK_ODR_OD1
00000004 l       *ABS*	00000000 GPIOK_ODR_OD2
00000008 l       *ABS*	00000000 GPIOK_ODR_OD3
00000010 l       *ABS*	00000000 GPIOK_ODR_OD4
00000020 l       *ABS*	00000000 GPIOK_ODR_OD5
00000040 l       *ABS*	00000000 GPIOK_ODR_OD6
00000080 l       *ABS*	00000000 GPIOK_ODR_OD7
00000100 l       *ABS*	00000000 GPIOK_ODR_OD8
00000200 l       *ABS*	00000000 GPIOK_ODR_OD9
00000400 l       *ABS*	00000000 GPIOK_ODR_OD10
00000800 l       *ABS*	00000000 GPIOK_ODR_OD11
00001000 l       *ABS*	00000000 GPIOK_ODR_OD12
00002000 l       *ABS*	00000000 GPIOK_ODR_OD13
00004000 l       *ABS*	00000000 GPIOK_ODR_OD14
00008000 l       *ABS*	00000000 GPIOK_ODR_OD15
58022818 l       *ABS*	00000000 GPIOK_BSRR
00000001 l       *ABS*	00000000 GPIOK_BSRR_BS0
00000002 l       *ABS*	00000000 GPIOK_BSRR_BS1
00000004 l       *ABS*	00000000 GPIOK_BSRR_BS2
00000008 l       *ABS*	00000000 GPIOK_BSRR_BS3
00000010 l       *ABS*	00000000 GPIOK_BSRR_BS4
00000020 l       *ABS*	00000000 GPIOK_BSRR_BS5
00000040 l       *ABS*	00000000 GPIOK_BSRR_BS6
00000080 l       *ABS*	00000000 GPIOK_BSRR_BS7
00000100 l       *ABS*	00000000 GPIOK_BSRR_BS8
00000200 l       *ABS*	00000000 GPIOK_BSRR_BS9
00000400 l       *ABS*	00000000 GPIOK_BSRR_BS10
00000800 l       *ABS*	00000000 GPIOK_BSRR_BS11
00001000 l       *ABS*	00000000 GPIOK_BSRR_BS12
00002000 l       *ABS*	00000000 GPIOK_BSRR_BS13
00004000 l       *ABS*	00000000 GPIOK_BSRR_BS14
00008000 l       *ABS*	00000000 GPIOK_BSRR_BS15
00010000 l       *ABS*	00000000 GPIOK_BSRR_BR0
00020000 l       *ABS*	00000000 GPIOK_BSRR_BR1
00040000 l       *ABS*	00000000 GPIOK_BSRR_BR2
00080000 l       *ABS*	00000000 GPIOK_BSRR_BR3
00100000 l       *ABS*	00000000 GPIOK_BSRR_BR4
00200000 l       *ABS*	00000000 GPIOK_BSRR_BR5
00400000 l       *ABS*	00000000 GPIOK_BSRR_BR6
00800000 l       *ABS*	00000000 GPIOK_BSRR_BR7
01000000 l       *ABS*	00000000 GPIOK_BSRR_BR8
02000000 l       *ABS*	00000000 GPIOK_BSRR_BR9
04000000 l       *ABS*	00000000 GPIOK_BSRR_BR10
08000000 l       *ABS*	00000000 GPIOK_BSRR_BR11
10000000 l       *ABS*	00000000 GPIOK_BSRR_BR12
20000000 l       *ABS*	00000000 GPIOK_BSRR_BR13
40000000 l       *ABS*	00000000 GPIOK_BSRR_BR14
80000000 l       *ABS*	00000000 GPIOK_BSRR_BR15
5802281c l       *ABS*	00000000 GPIOK_LCKR
00000001 l       *ABS*	00000000 GPIOK_LCKR_LCK0
00000002 l       *ABS*	00000000 GPIOK_LCKR_LCK1
00000004 l       *ABS*	00000000 GPIOK_LCKR_LCK2
00000008 l       *ABS*	00000000 GPIOK_LCKR_LCK3
00000010 l       *ABS*	00000000 GPIOK_LCKR_LCK4
00000020 l       *ABS*	00000000 GPIOK_LCKR_LCK5
00000040 l       *ABS*	00000000 GPIOK_LCKR_LCK6
00000080 l       *ABS*	00000000 GPIOK_LCKR_LCK7
00000100 l       *ABS*	00000000 GPIOK_LCKR_LCK8
00000200 l       *ABS*	00000000 GPIOK_LCKR_LCK9
00000400 l       *ABS*	00000000 GPIOK_LCKR_LCK10
00000800 l       *ABS*	00000000 GPIOK_LCKR_LCK11
00001000 l       *ABS*	00000000 GPIOK_LCKR_LCK12
00002000 l       *ABS*	00000000 GPIOK_LCKR_LCK13
00004000 l       *ABS*	00000000 GPIOK_LCKR_LCK14
00008000 l       *ABS*	00000000 GPIOK_LCKR_LCK15
00010000 l       *ABS*	00000000 GPIOK_LCKR_LCKK
58022820 l       *ABS*	00000000 GPIOK_AFRL
00000000 l       *ABS*	00000000 GPIOK_AFRL_AFSEL0_Shift
00000004 l       *ABS*	00000000 GPIOK_AFRL_AFSEL1_Shift
00000008 l       *ABS*	00000000 GPIOK_AFRL_AFSEL2_Shift
0000000c l       *ABS*	00000000 GPIOK_AFRL_AFSEL3_Shift
00000010 l       *ABS*	00000000 GPIOK_AFRL_AFSEL4_Shift
00000014 l       *ABS*	00000000 GPIOK_AFRL_AFSEL5_Shift
00000018 l       *ABS*	00000000 GPIOK_AFRL_AFSEL6_Shift
0000001c l       *ABS*	00000000 GPIOK_AFRL_AFSEL7_Shift
58022824 l       *ABS*	00000000 GPIOK_AFRH
00000000 l       *ABS*	00000000 GPIOK_AFRH_AFSEL8_Shift
00000004 l       *ABS*	00000000 GPIOK_AFRH_AFSEL9_Shift
00000008 l       *ABS*	00000000 GPIOK_AFRH_AFSEL10_Shift
0000000c l       *ABS*	00000000 GPIOK_AFRH_AFSEL11_Shift
00000010 l       *ABS*	00000000 GPIOK_AFRH_AFSEL12_Shift
00000014 l       *ABS*	00000000 GPIOK_AFRH_AFSEL13_Shift
00000018 l       *ABS*	00000000 GPIOK_AFRH_AFSEL14_Shift
0000001c l       *ABS*	00000000 GPIOK_AFRH_AFSEL15_Shift
52003000 l       *ABS*	00000000 JPEG_BASE
52003000 l       *ABS*	00000000 JPEG_CONFR0
00000001 l       *ABS*	00000000 JPEG_CONFR0_START
52003004 l       *ABS*	00000000 JPEG_CONFR1
00000000 l       *ABS*	00000000 JPEG_CONFR1_NF_Shift
00000008 l       *ABS*	00000000 JPEG_CONFR1_DE
00000004 l       *ABS*	00000000 JPEG_CONFR1_COLORSPACE_Shift
00000006 l       *ABS*	00000000 JPEG_CONFR1_NS_Shift
00000100 l       *ABS*	00000000 JPEG_CONFR1_HDR
00000010 l       *ABS*	00000000 JPEG_CONFR1_YSIZE_Shift
52003008 l       *ABS*	00000000 JPEG_CONFR2
00000000 l       *ABS*	00000000 JPEG_CONFR2_NMCU_Shift
5200300c l       *ABS*	00000000 JPEG_CONFR3
00000010 l       *ABS*	00000000 JPEG_CONFR3_XSIZE_Shift
52003010 l       *ABS*	00000000 JPEG_CONFRN1
00000001 l       *ABS*	00000000 JPEG_CONFRN1_HD
00000002 l       *ABS*	00000000 JPEG_CONFRN1_HA
00000002 l       *ABS*	00000000 JPEG_CONFRN1_QT_Shift
00000004 l       *ABS*	00000000 JPEG_CONFRN1_NB_Shift
00000008 l       *ABS*	00000000 JPEG_CONFRN1_VSF_Shift
0000000c l       *ABS*	00000000 JPEG_CONFRN1_HSF_Shift
52003014 l       *ABS*	00000000 JPEG_CONFRN2
00000001 l       *ABS*	00000000 JPEG_CONFRN2_HD
00000002 l       *ABS*	00000000 JPEG_CONFRN2_HA
00000002 l       *ABS*	00000000 JPEG_CONFRN2_QT_Shift
00000004 l       *ABS*	00000000 JPEG_CONFRN2_NB_Shift
00000008 l       *ABS*	00000000 JPEG_CONFRN2_VSF_Shift
0000000c l       *ABS*	00000000 JPEG_CONFRN2_HSF_Shift
52003018 l       *ABS*	00000000 JPEG_CONFRN3
00000001 l       *ABS*	00000000 JPEG_CONFRN3_HD
00000002 l       *ABS*	00000000 JPEG_CONFRN3_HA
00000002 l       *ABS*	00000000 JPEG_CONFRN3_QT_Shift
00000004 l       *ABS*	00000000 JPEG_CONFRN3_NB_Shift
00000008 l       *ABS*	00000000 JPEG_CONFRN3_VSF_Shift
0000000c l       *ABS*	00000000 JPEG_CONFRN3_HSF_Shift
5200301c l       *ABS*	00000000 JPEG_CONFRN4
00000001 l       *ABS*	00000000 JPEG_CONFRN4_HD
00000002 l       *ABS*	00000000 JPEG_CONFRN4_HA
00000002 l       *ABS*	00000000 JPEG_CONFRN4_QT_Shift
00000004 l       *ABS*	00000000 JPEG_CONFRN4_NB_Shift
00000008 l       *ABS*	00000000 JPEG_CONFRN4_VSF_Shift
0000000c l       *ABS*	00000000 JPEG_CONFRN4_HSF_Shift
52003030 l       *ABS*	00000000 JPEG_CR
00000001 l       *ABS*	00000000 JPEG_CR_JCEN
00000002 l       *ABS*	00000000 JPEG_CR_IFTIE
00000004 l       *ABS*	00000000 JPEG_CR_IFNFIE
00000008 l       *ABS*	00000000 JPEG_CR_OFTIE
00000010 l       *ABS*	00000000 JPEG_CR_OFNEIE
00000020 l       *ABS*	00000000 JPEG_CR_EOCIE
00000040 l       *ABS*	00000000 JPEG_CR_HPDIE
00000800 l       *ABS*	00000000 JPEG_CR_IDMAEN
00001000 l       *ABS*	00000000 JPEG_CR_ODMAEN
00002000 l       *ABS*	00000000 JPEG_CR_IFF
00004000 l       *ABS*	00000000 JPEG_CR_OFF
52003034 l       *ABS*	00000000 JPEG_SR
00000002 l       *ABS*	00000000 JPEG_SR_IFTF
00000004 l       *ABS*	00000000 JPEG_SR_IFNFF
00000008 l       *ABS*	00000000 JPEG_SR_OFTF
00000010 l       *ABS*	00000000 JPEG_SR_OFNEF
00000020 l       *ABS*	00000000 JPEG_SR_EOCF
00000040 l       *ABS*	00000000 JPEG_SR_HPDF
00000080 l       *ABS*	00000000 JPEG_SR_COF
52003038 l       *ABS*	00000000 JPEG_CFR
00000020 l       *ABS*	00000000 JPEG_CFR_CEOCF
00000040 l       *ABS*	00000000 JPEG_CFR_CHPDF
52003040 l       *ABS*	00000000 JPEG_DIR
00000000 l       *ABS*	00000000 JPEG_DIR_DATAIN_Shift
52003044 l       *ABS*	00000000 JPEG_DOR
00000000 l       *ABS*	00000000 JPEG_DOR_DATAOUT_Shift
52000000 l       *ABS*	00000000 MDMA_BASE
52000000 l       *ABS*	00000000 MDMA_MDMA_GISR0
00000001 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF0
00000002 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF1
00000004 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF2
00000008 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF3
00000010 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF4
00000020 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF5
00000040 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF6
00000080 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF7
00000100 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF8
00000200 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF9
00000400 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF10
00000800 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF11
00001000 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF12
00002000 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF13
00004000 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF14
00008000 l       *ABS*	00000000 MDMA_MDMA_GISR0_GIF15
52000040 l       *ABS*	00000000 MDMA_MDMA_C0ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C0ISR_TEIF0
00000002 l       *ABS*	00000000 MDMA_MDMA_C0ISR_CTCIF0
00000004 l       *ABS*	00000000 MDMA_MDMA_C0ISR_BRTIF0
00000008 l       *ABS*	00000000 MDMA_MDMA_C0ISR_BTIF0
00000010 l       *ABS*	00000000 MDMA_MDMA_C0ISR_TCIF0
00010000 l       *ABS*	00000000 MDMA_MDMA_C0ISR_CRQA0
52000044 l       *ABS*	00000000 MDMA_MDMA_C0IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C0IFCR_CTEIF0
00000002 l       *ABS*	00000000 MDMA_MDMA_C0IFCR_CCTCIF0
00000004 l       *ABS*	00000000 MDMA_MDMA_C0IFCR_CBRTIF0
00000008 l       *ABS*	00000000 MDMA_MDMA_C0IFCR_CBTIF0
00000010 l       *ABS*	00000000 MDMA_MDMA_C0IFCR_CLTCIF0
52000048 l       *ABS*	00000000 MDMA_MDMA_C0ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C0ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C0ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C0ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C0ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C0ESR_BSE
5200004c l       *ABS*	00000000 MDMA_MDMA_C0CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C0CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C0CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C0CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C0CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C0CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C0CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C0CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C0CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C0CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C0CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C0CR_SWRQ
52000050 l       *ABS*	00000000 MDMA_MDMA_C0TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C0TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C0TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C0TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C0TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C0TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C0TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C0TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C0TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C0TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C0TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C0TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C0TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C0TCR_BWM
52000054 l       *ABS*	00000000 MDMA_MDMA_C0BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C0BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C0BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C0BNDTR_BRC_Shift
52000058 l       *ABS*	00000000 MDMA_MDMA_C0SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0SAR_SAR_Shift
5200005c l       *ABS*	00000000 MDMA_MDMA_C0DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0DAR_DAR_Shift
52000060 l       *ABS*	00000000 MDMA_MDMA_C0BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C0BRUR_DUV_Shift
52000064 l       *ABS*	00000000 MDMA_MDMA_C0LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0LAR_LAR_Shift
52000068 l       *ABS*	00000000 MDMA_MDMA_C0TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C0TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C0TBR_DBUS
52000070 l       *ABS*	00000000 MDMA_MDMA_C0MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0MAR_MAR_Shift
52000074 l       *ABS*	00000000 MDMA_MDMA_C0MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C0MDR_MDR_Shift
52000080 l       *ABS*	00000000 MDMA_MDMA_C1ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C1ISR_TEIF1
00000002 l       *ABS*	00000000 MDMA_MDMA_C1ISR_CTCIF1
00000004 l       *ABS*	00000000 MDMA_MDMA_C1ISR_BRTIF1
00000008 l       *ABS*	00000000 MDMA_MDMA_C1ISR_BTIF1
00000010 l       *ABS*	00000000 MDMA_MDMA_C1ISR_TCIF1
00010000 l       *ABS*	00000000 MDMA_MDMA_C1ISR_CRQA1
52000084 l       *ABS*	00000000 MDMA_MDMA_C1IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C1IFCR_CTEIF1
00000002 l       *ABS*	00000000 MDMA_MDMA_C1IFCR_CCTCIF1
00000004 l       *ABS*	00000000 MDMA_MDMA_C1IFCR_CBRTIF1
00000008 l       *ABS*	00000000 MDMA_MDMA_C1IFCR_CBTIF1
00000010 l       *ABS*	00000000 MDMA_MDMA_C1IFCR_CLTCIF1
52000088 l       *ABS*	00000000 MDMA_MDMA_C1ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C1ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C1ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C1ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C1ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C1ESR_BSE
5200008c l       *ABS*	00000000 MDMA_MDMA_C1CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C1CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C1CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C1CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C1CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C1CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C1CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C1CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C1CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C1CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C1CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C1CR_SWRQ
52000090 l       *ABS*	00000000 MDMA_MDMA_C1TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C1TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C1TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C1TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C1TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C1TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C1TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C1TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C1TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C1TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C1TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C1TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C1TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C1TCR_BWM
52000094 l       *ABS*	00000000 MDMA_MDMA_C1BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C1BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C1BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C1BNDTR_BRC_Shift
52000098 l       *ABS*	00000000 MDMA_MDMA_C1SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1SAR_SAR_Shift
5200009c l       *ABS*	00000000 MDMA_MDMA_C1DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1DAR_DAR_Shift
520000a0 l       *ABS*	00000000 MDMA_MDMA_C1BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C1BRUR_DUV_Shift
520000a4 l       *ABS*	00000000 MDMA_MDMA_C1LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1LAR_LAR_Shift
520000a8 l       *ABS*	00000000 MDMA_MDMA_C1TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C1TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C1TBR_DBUS
520000b0 l       *ABS*	00000000 MDMA_MDMA_C1MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1MAR_MAR_Shift
520000b4 l       *ABS*	00000000 MDMA_MDMA_C1MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C1MDR_MDR_Shift
520000c0 l       *ABS*	00000000 MDMA_MDMA_C2ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C2ISR_TEIF2
00000002 l       *ABS*	00000000 MDMA_MDMA_C2ISR_CTCIF2
00000004 l       *ABS*	00000000 MDMA_MDMA_C2ISR_BRTIF2
00000008 l       *ABS*	00000000 MDMA_MDMA_C2ISR_BTIF2
00000010 l       *ABS*	00000000 MDMA_MDMA_C2ISR_TCIF2
00010000 l       *ABS*	00000000 MDMA_MDMA_C2ISR_CRQA2
520000c4 l       *ABS*	00000000 MDMA_MDMA_C2IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C2IFCR_CTEIF2
00000002 l       *ABS*	00000000 MDMA_MDMA_C2IFCR_CCTCIF2
00000004 l       *ABS*	00000000 MDMA_MDMA_C2IFCR_CBRTIF2
00000008 l       *ABS*	00000000 MDMA_MDMA_C2IFCR_CBTIF2
00000010 l       *ABS*	00000000 MDMA_MDMA_C2IFCR_CLTCIF2
520000c8 l       *ABS*	00000000 MDMA_MDMA_C2ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C2ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C2ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C2ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C2ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C2ESR_BSE
520000cc l       *ABS*	00000000 MDMA_MDMA_C2CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C2CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C2CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C2CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C2CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C2CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C2CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C2CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C2CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C2CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C2CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C2CR_SWRQ
520000d0 l       *ABS*	00000000 MDMA_MDMA_C2TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C2TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C2TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C2TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C2TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C2TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C2TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C2TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C2TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C2TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C2TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C2TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C2TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C2TCR_BWM
520000d4 l       *ABS*	00000000 MDMA_MDMA_C2BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C2BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C2BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C2BNDTR_BRC_Shift
520000d8 l       *ABS*	00000000 MDMA_MDMA_C2SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2SAR_SAR_Shift
520000dc l       *ABS*	00000000 MDMA_MDMA_C2DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2DAR_DAR_Shift
520000e0 l       *ABS*	00000000 MDMA_MDMA_C2BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C2BRUR_DUV_Shift
520000e4 l       *ABS*	00000000 MDMA_MDMA_C2LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2LAR_LAR_Shift
520000e8 l       *ABS*	00000000 MDMA_MDMA_C2TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C2TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C2TBR_DBUS
520000f0 l       *ABS*	00000000 MDMA_MDMA_C2MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2MAR_MAR_Shift
520000f4 l       *ABS*	00000000 MDMA_MDMA_C2MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C2MDR_MDR_Shift
52000100 l       *ABS*	00000000 MDMA_MDMA_C3ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C3ISR_TEIF3
00000002 l       *ABS*	00000000 MDMA_MDMA_C3ISR_CTCIF3
00000004 l       *ABS*	00000000 MDMA_MDMA_C3ISR_BRTIF3
00000008 l       *ABS*	00000000 MDMA_MDMA_C3ISR_BTIF3
00000010 l       *ABS*	00000000 MDMA_MDMA_C3ISR_TCIF3
00010000 l       *ABS*	00000000 MDMA_MDMA_C3ISR_CRQA3
52000104 l       *ABS*	00000000 MDMA_MDMA_C3IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C3IFCR_CTEIF3
00000002 l       *ABS*	00000000 MDMA_MDMA_C3IFCR_CCTCIF3
00000004 l       *ABS*	00000000 MDMA_MDMA_C3IFCR_CBRTIF3
00000008 l       *ABS*	00000000 MDMA_MDMA_C3IFCR_CBTIF3
00000010 l       *ABS*	00000000 MDMA_MDMA_C3IFCR_CLTCIF3
52000108 l       *ABS*	00000000 MDMA_MDMA_C3ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C3ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C3ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C3ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C3ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C3ESR_BSE
5200010c l       *ABS*	00000000 MDMA_MDMA_C3CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C3CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C3CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C3CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C3CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C3CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C3CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C3CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C3CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C3CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C3CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C3CR_SWRQ
52000110 l       *ABS*	00000000 MDMA_MDMA_C3TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C3TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C3TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C3TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C3TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C3TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C3TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C3TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C3TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C3TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C3TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C3TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C3TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C3TCR_BWM
52000114 l       *ABS*	00000000 MDMA_MDMA_C3BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C3BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C3BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C3BNDTR_BRC_Shift
52000118 l       *ABS*	00000000 MDMA_MDMA_C3SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3SAR_SAR_Shift
5200011c l       *ABS*	00000000 MDMA_MDMA_C3DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3DAR_DAR_Shift
52000120 l       *ABS*	00000000 MDMA_MDMA_C3BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C3BRUR_DUV_Shift
52000124 l       *ABS*	00000000 MDMA_MDMA_C3LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3LAR_LAR_Shift
52000128 l       *ABS*	00000000 MDMA_MDMA_C3TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C3TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C3TBR_DBUS
52000130 l       *ABS*	00000000 MDMA_MDMA_C3MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3MAR_MAR_Shift
52000134 l       *ABS*	00000000 MDMA_MDMA_C3MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C3MDR_MDR_Shift
52000140 l       *ABS*	00000000 MDMA_MDMA_C4ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C4ISR_TEIF4
00000002 l       *ABS*	00000000 MDMA_MDMA_C4ISR_CTCIF4
00000004 l       *ABS*	00000000 MDMA_MDMA_C4ISR_BRTIF4
00000008 l       *ABS*	00000000 MDMA_MDMA_C4ISR_BTIF4
00000010 l       *ABS*	00000000 MDMA_MDMA_C4ISR_TCIF4
00010000 l       *ABS*	00000000 MDMA_MDMA_C4ISR_CRQA4
52000144 l       *ABS*	00000000 MDMA_MDMA_C4IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C4IFCR_CTEIF4
00000002 l       *ABS*	00000000 MDMA_MDMA_C4IFCR_CCTCIF4
00000004 l       *ABS*	00000000 MDMA_MDMA_C4IFCR_CBRTIF4
00000008 l       *ABS*	00000000 MDMA_MDMA_C4IFCR_CBTIF4
00000010 l       *ABS*	00000000 MDMA_MDMA_C4IFCR_CLTCIF4
52000148 l       *ABS*	00000000 MDMA_MDMA_C4ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C4ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C4ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C4ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C4ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C4ESR_BSE
5200014c l       *ABS*	00000000 MDMA_MDMA_C4CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C4CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C4CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C4CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C4CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C4CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C4CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C4CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C4CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C4CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C4CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C4CR_SWRQ
52000150 l       *ABS*	00000000 MDMA_MDMA_C4TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C4TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C4TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C4TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C4TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C4TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C4TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C4TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C4TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C4TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C4TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C4TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C4TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C4TCR_BWM
52000154 l       *ABS*	00000000 MDMA_MDMA_C4BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C4BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C4BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C4BNDTR_BRC_Shift
52000158 l       *ABS*	00000000 MDMA_MDMA_C4SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4SAR_SAR_Shift
5200015c l       *ABS*	00000000 MDMA_MDMA_C4DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4DAR_DAR_Shift
52000160 l       *ABS*	00000000 MDMA_MDMA_C4BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C4BRUR_DUV_Shift
52000164 l       *ABS*	00000000 MDMA_MDMA_C4LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4LAR_LAR_Shift
52000168 l       *ABS*	00000000 MDMA_MDMA_C4TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C4TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C4TBR_DBUS
52000170 l       *ABS*	00000000 MDMA_MDMA_C4MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4MAR_MAR_Shift
52000174 l       *ABS*	00000000 MDMA_MDMA_C4MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C4MDR_MDR_Shift
52000180 l       *ABS*	00000000 MDMA_MDMA_C5ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C5ISR_TEIF5
00000002 l       *ABS*	00000000 MDMA_MDMA_C5ISR_CTCIF5
00000004 l       *ABS*	00000000 MDMA_MDMA_C5ISR_BRTIF5
00000008 l       *ABS*	00000000 MDMA_MDMA_C5ISR_BTIF5
00000010 l       *ABS*	00000000 MDMA_MDMA_C5ISR_TCIF5
00010000 l       *ABS*	00000000 MDMA_MDMA_C5ISR_CRQA5
52000184 l       *ABS*	00000000 MDMA_MDMA_C5IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C5IFCR_CTEIF5
00000002 l       *ABS*	00000000 MDMA_MDMA_C5IFCR_CCTCIF5
00000004 l       *ABS*	00000000 MDMA_MDMA_C5IFCR_CBRTIF5
00000008 l       *ABS*	00000000 MDMA_MDMA_C5IFCR_CBTIF5
00000010 l       *ABS*	00000000 MDMA_MDMA_C5IFCR_CLTCIF5
52000188 l       *ABS*	00000000 MDMA_MDMA_C5ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C5ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C5ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C5ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C5ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C5ESR_BSE
5200018c l       *ABS*	00000000 MDMA_MDMA_C5CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C5CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C5CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C5CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C5CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C5CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C5CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C5CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C5CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C5CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C5CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C5CR_SWRQ
52000190 l       *ABS*	00000000 MDMA_MDMA_C5TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C5TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C5TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C5TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C5TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C5TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C5TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C5TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C5TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C5TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C5TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C5TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C5TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C5TCR_BWM
52000194 l       *ABS*	00000000 MDMA_MDMA_C5BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C5BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C5BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C5BNDTR_BRC_Shift
52000198 l       *ABS*	00000000 MDMA_MDMA_C5SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5SAR_SAR_Shift
5200019c l       *ABS*	00000000 MDMA_MDMA_C5DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5DAR_DAR_Shift
520001a0 l       *ABS*	00000000 MDMA_MDMA_C5BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C5BRUR_DUV_Shift
520001a4 l       *ABS*	00000000 MDMA_MDMA_C5LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5LAR_LAR_Shift
520001a8 l       *ABS*	00000000 MDMA_MDMA_C5TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C5TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C5TBR_DBUS
520001b0 l       *ABS*	00000000 MDMA_MDMA_C5MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5MAR_MAR_Shift
520001b4 l       *ABS*	00000000 MDMA_MDMA_C5MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C5MDR_MDR_Shift
520001c0 l       *ABS*	00000000 MDMA_MDMA_C6ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C6ISR_TEIF6
00000002 l       *ABS*	00000000 MDMA_MDMA_C6ISR_CTCIF6
00000004 l       *ABS*	00000000 MDMA_MDMA_C6ISR_BRTIF6
00000008 l       *ABS*	00000000 MDMA_MDMA_C6ISR_BTIF6
00000010 l       *ABS*	00000000 MDMA_MDMA_C6ISR_TCIF6
00010000 l       *ABS*	00000000 MDMA_MDMA_C6ISR_CRQA6
520001c4 l       *ABS*	00000000 MDMA_MDMA_C6IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C6IFCR_CTEIF6
00000002 l       *ABS*	00000000 MDMA_MDMA_C6IFCR_CCTCIF6
00000004 l       *ABS*	00000000 MDMA_MDMA_C6IFCR_CBRTIF6
00000008 l       *ABS*	00000000 MDMA_MDMA_C6IFCR_CBTIF6
00000010 l       *ABS*	00000000 MDMA_MDMA_C6IFCR_CLTCIF6
520001c8 l       *ABS*	00000000 MDMA_MDMA_C6ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C6ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C6ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C6ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C6ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C6ESR_BSE
520001cc l       *ABS*	00000000 MDMA_MDMA_C6CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C6CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C6CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C6CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C6CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C6CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C6CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C6CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C6CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C6CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C6CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C6CR_SWRQ
520001d0 l       *ABS*	00000000 MDMA_MDMA_C6TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C6TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C6TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C6TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C6TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C6TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C6TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C6TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C6TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C6TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C6TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C6TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C6TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C6TCR_BWM
520001d4 l       *ABS*	00000000 MDMA_MDMA_C6BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C6BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C6BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C6BNDTR_BRC_Shift
520001d8 l       *ABS*	00000000 MDMA_MDMA_C6SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6SAR_SAR_Shift
520001dc l       *ABS*	00000000 MDMA_MDMA_C6DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6DAR_DAR_Shift
520001e0 l       *ABS*	00000000 MDMA_MDMA_C6BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C6BRUR_DUV_Shift
520001e4 l       *ABS*	00000000 MDMA_MDMA_C6LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6LAR_LAR_Shift
520001e8 l       *ABS*	00000000 MDMA_MDMA_C6TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C6TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C6TBR_DBUS
520001f0 l       *ABS*	00000000 MDMA_MDMA_C6MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6MAR_MAR_Shift
520001f4 l       *ABS*	00000000 MDMA_MDMA_C6MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C6MDR_MDR_Shift
52000200 l       *ABS*	00000000 MDMA_MDMA_C7ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C7ISR_TEIF7
00000002 l       *ABS*	00000000 MDMA_MDMA_C7ISR_CTCIF7
00000004 l       *ABS*	00000000 MDMA_MDMA_C7ISR_BRTIF7
00000008 l       *ABS*	00000000 MDMA_MDMA_C7ISR_BTIF7
00000010 l       *ABS*	00000000 MDMA_MDMA_C7ISR_TCIF7
00010000 l       *ABS*	00000000 MDMA_MDMA_C7ISR_CRQA7
52000204 l       *ABS*	00000000 MDMA_MDMA_C7IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C7IFCR_CTEIF7
00000002 l       *ABS*	00000000 MDMA_MDMA_C7IFCR_CCTCIF7
00000004 l       *ABS*	00000000 MDMA_MDMA_C7IFCR_CBRTIF7
00000008 l       *ABS*	00000000 MDMA_MDMA_C7IFCR_CBTIF7
00000010 l       *ABS*	00000000 MDMA_MDMA_C7IFCR_CLTCIF7
52000208 l       *ABS*	00000000 MDMA_MDMA_C7ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C7ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C7ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C7ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C7ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C7ESR_BSE
5200020c l       *ABS*	00000000 MDMA_MDMA_C7CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C7CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C7CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C7CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C7CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C7CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C7CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C7CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C7CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C7CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C7CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C7CR_SWRQ
52000210 l       *ABS*	00000000 MDMA_MDMA_C7TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C7TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C7TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C7TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C7TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C7TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C7TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C7TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C7TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C7TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C7TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C7TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C7TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C7TCR_BWM
52000214 l       *ABS*	00000000 MDMA_MDMA_C7BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C7BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C7BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C7BNDTR_BRC_Shift
52000218 l       *ABS*	00000000 MDMA_MDMA_C7SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7SAR_SAR_Shift
5200021c l       *ABS*	00000000 MDMA_MDMA_C7DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7DAR_DAR_Shift
52000220 l       *ABS*	00000000 MDMA_MDMA_C7BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C7BRUR_DUV_Shift
52000224 l       *ABS*	00000000 MDMA_MDMA_C7LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7LAR_LAR_Shift
52000228 l       *ABS*	00000000 MDMA_MDMA_C7TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C7TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C7TBR_DBUS
52000230 l       *ABS*	00000000 MDMA_MDMA_C7MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7MAR_MAR_Shift
52000234 l       *ABS*	00000000 MDMA_MDMA_C7MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C7MDR_MDR_Shift
52000240 l       *ABS*	00000000 MDMA_MDMA_C8ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C8ISR_TEIF8
00000002 l       *ABS*	00000000 MDMA_MDMA_C8ISR_CTCIF8
00000004 l       *ABS*	00000000 MDMA_MDMA_C8ISR_BRTIF8
00000008 l       *ABS*	00000000 MDMA_MDMA_C8ISR_BTIF8
00000010 l       *ABS*	00000000 MDMA_MDMA_C8ISR_TCIF8
00010000 l       *ABS*	00000000 MDMA_MDMA_C8ISR_CRQA8
52000244 l       *ABS*	00000000 MDMA_MDMA_C8IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C8IFCR_CTEIF8
00000002 l       *ABS*	00000000 MDMA_MDMA_C8IFCR_CCTCIF8
00000004 l       *ABS*	00000000 MDMA_MDMA_C8IFCR_CBRTIF8
00000008 l       *ABS*	00000000 MDMA_MDMA_C8IFCR_CBTIF8
00000010 l       *ABS*	00000000 MDMA_MDMA_C8IFCR_CLTCIF8
52000248 l       *ABS*	00000000 MDMA_MDMA_C8ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C8ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C8ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C8ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C8ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C8ESR_BSE
5200024c l       *ABS*	00000000 MDMA_MDMA_C8CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C8CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C8CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C8CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C8CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C8CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C8CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C8CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C8CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C8CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C8CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C8CR_SWRQ
52000250 l       *ABS*	00000000 MDMA_MDMA_C8TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C8TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C8TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C8TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C8TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C8TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C8TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C8TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C8TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C8TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C8TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C8TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C8TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C8TCR_BWM
52000254 l       *ABS*	00000000 MDMA_MDMA_C8BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C8BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C8BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C8BNDTR_BRC_Shift
52000258 l       *ABS*	00000000 MDMA_MDMA_C8SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8SAR_SAR_Shift
5200025c l       *ABS*	00000000 MDMA_MDMA_C8DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8DAR_DAR_Shift
52000260 l       *ABS*	00000000 MDMA_MDMA_C8BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C8BRUR_DUV_Shift
52000264 l       *ABS*	00000000 MDMA_MDMA_C8LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8LAR_LAR_Shift
52000268 l       *ABS*	00000000 MDMA_MDMA_C8TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C8TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C8TBR_DBUS
52000270 l       *ABS*	00000000 MDMA_MDMA_C8MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8MAR_MAR_Shift
52000274 l       *ABS*	00000000 MDMA_MDMA_C8MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C8MDR_MDR_Shift
52000280 l       *ABS*	00000000 MDMA_MDMA_C9ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C9ISR_TEIF9
00000002 l       *ABS*	00000000 MDMA_MDMA_C9ISR_CTCIF9
00000004 l       *ABS*	00000000 MDMA_MDMA_C9ISR_BRTIF9
00000008 l       *ABS*	00000000 MDMA_MDMA_C9ISR_BTIF9
00000010 l       *ABS*	00000000 MDMA_MDMA_C9ISR_TCIF9
00010000 l       *ABS*	00000000 MDMA_MDMA_C9ISR_CRQA9
52000284 l       *ABS*	00000000 MDMA_MDMA_C9IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C9IFCR_CTEIF9
00000002 l       *ABS*	00000000 MDMA_MDMA_C9IFCR_CCTCIF9
00000004 l       *ABS*	00000000 MDMA_MDMA_C9IFCR_CBRTIF9
00000008 l       *ABS*	00000000 MDMA_MDMA_C9IFCR_CBTIF9
00000010 l       *ABS*	00000000 MDMA_MDMA_C9IFCR_CLTCIF9
52000288 l       *ABS*	00000000 MDMA_MDMA_C9ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C9ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C9ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C9ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C9ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C9ESR_BSE
5200028c l       *ABS*	00000000 MDMA_MDMA_C9CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C9CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C9CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C9CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C9CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C9CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C9CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C9CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C9CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C9CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C9CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C9CR_SWRQ
52000290 l       *ABS*	00000000 MDMA_MDMA_C9TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C9TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C9TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C9TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C9TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C9TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C9TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C9TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C9TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C9TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C9TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C9TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C9TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C9TCR_BWM
52000294 l       *ABS*	00000000 MDMA_MDMA_C9BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C9BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C9BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C9BNDTR_BRC_Shift
52000298 l       *ABS*	00000000 MDMA_MDMA_C9SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9SAR_SAR_Shift
5200029c l       *ABS*	00000000 MDMA_MDMA_C9DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9DAR_DAR_Shift
520002a0 l       *ABS*	00000000 MDMA_MDMA_C9BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C9BRUR_DUV_Shift
520002a4 l       *ABS*	00000000 MDMA_MDMA_C9LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9LAR_LAR_Shift
520002a8 l       *ABS*	00000000 MDMA_MDMA_C9TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C9TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C9TBR_DBUS
520002b0 l       *ABS*	00000000 MDMA_MDMA_C9MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9MAR_MAR_Shift
520002b4 l       *ABS*	00000000 MDMA_MDMA_C9MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C9MDR_MDR_Shift
520002c0 l       *ABS*	00000000 MDMA_MDMA_C10ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C10ISR_TEIF10
00000002 l       *ABS*	00000000 MDMA_MDMA_C10ISR_CTCIF10
00000004 l       *ABS*	00000000 MDMA_MDMA_C10ISR_BRTIF10
00000008 l       *ABS*	00000000 MDMA_MDMA_C10ISR_BTIF10
00000010 l       *ABS*	00000000 MDMA_MDMA_C10ISR_TCIF10
00010000 l       *ABS*	00000000 MDMA_MDMA_C10ISR_CRQA10
520002c4 l       *ABS*	00000000 MDMA_MDMA_C10IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C10IFCR_CTEIF10
00000002 l       *ABS*	00000000 MDMA_MDMA_C10IFCR_CCTCIF10
00000004 l       *ABS*	00000000 MDMA_MDMA_C10IFCR_CBRTIF10
00000008 l       *ABS*	00000000 MDMA_MDMA_C10IFCR_CBTIF10
00000010 l       *ABS*	00000000 MDMA_MDMA_C10IFCR_CLTCIF10
520002c8 l       *ABS*	00000000 MDMA_MDMA_C10ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C10ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C10ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C10ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C10ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C10ESR_BSE
520002cc l       *ABS*	00000000 MDMA_MDMA_C10CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C10CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C10CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C10CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C10CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C10CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C10CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C10CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C10CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C10CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C10CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C10CR_SWRQ
520002d0 l       *ABS*	00000000 MDMA_MDMA_C10TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C10TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C10TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C10TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C10TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C10TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C10TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C10TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C10TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C10TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C10TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C10TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C10TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C10TCR_BWM
520002d4 l       *ABS*	00000000 MDMA_MDMA_C10BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C10BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C10BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C10BNDTR_BRC_Shift
520002d8 l       *ABS*	00000000 MDMA_MDMA_C10SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10SAR_SAR_Shift
520002dc l       *ABS*	00000000 MDMA_MDMA_C10DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10DAR_DAR_Shift
520002e0 l       *ABS*	00000000 MDMA_MDMA_C10BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C10BRUR_DUV_Shift
520002e4 l       *ABS*	00000000 MDMA_MDMA_C10LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10LAR_LAR_Shift
520002e8 l       *ABS*	00000000 MDMA_MDMA_C10TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C10TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C10TBR_DBUS
520002f0 l       *ABS*	00000000 MDMA_MDMA_C10MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10MAR_MAR_Shift
520002f4 l       *ABS*	00000000 MDMA_MDMA_C10MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C10MDR_MDR_Shift
52000300 l       *ABS*	00000000 MDMA_MDMA_C11ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C11ISR_TEIF11
00000002 l       *ABS*	00000000 MDMA_MDMA_C11ISR_CTCIF11
00000004 l       *ABS*	00000000 MDMA_MDMA_C11ISR_BRTIF11
00000008 l       *ABS*	00000000 MDMA_MDMA_C11ISR_BTIF11
00000010 l       *ABS*	00000000 MDMA_MDMA_C11ISR_TCIF11
00010000 l       *ABS*	00000000 MDMA_MDMA_C11ISR_CRQA11
52000304 l       *ABS*	00000000 MDMA_MDMA_C11IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C11IFCR_CTEIF11
00000002 l       *ABS*	00000000 MDMA_MDMA_C11IFCR_CCTCIF11
00000004 l       *ABS*	00000000 MDMA_MDMA_C11IFCR_CBRTIF11
00000008 l       *ABS*	00000000 MDMA_MDMA_C11IFCR_CBTIF11
00000010 l       *ABS*	00000000 MDMA_MDMA_C11IFCR_CLTCIF11
52000308 l       *ABS*	00000000 MDMA_MDMA_C11ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C11ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C11ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C11ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C11ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C11ESR_BSE
5200030c l       *ABS*	00000000 MDMA_MDMA_C11CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C11CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C11CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C11CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C11CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C11CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C11CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C11CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C11CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C11CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C11CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C11CR_SWRQ
52000310 l       *ABS*	00000000 MDMA_MDMA_C11TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C11TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C11TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C11TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C11TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C11TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C11TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C11TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C11TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C11TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C11TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C11TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C11TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C11TCR_BWM
52000314 l       *ABS*	00000000 MDMA_MDMA_C11BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C11BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C11BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C11BNDTR_BRC_Shift
52000318 l       *ABS*	00000000 MDMA_MDMA_C11SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11SAR_SAR_Shift
5200031c l       *ABS*	00000000 MDMA_MDMA_C11DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11DAR_DAR_Shift
52000320 l       *ABS*	00000000 MDMA_MDMA_C11BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C11BRUR_DUV_Shift
52000324 l       *ABS*	00000000 MDMA_MDMA_C11LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11LAR_LAR_Shift
52000328 l       *ABS*	00000000 MDMA_MDMA_C11TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C11TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C11TBR_DBUS
52000330 l       *ABS*	00000000 MDMA_MDMA_C11MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11MAR_MAR_Shift
52000334 l       *ABS*	00000000 MDMA_MDMA_C11MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C11MDR_MDR_Shift
52000340 l       *ABS*	00000000 MDMA_MDMA_C12ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C12ISR_TEIF12
00000002 l       *ABS*	00000000 MDMA_MDMA_C12ISR_CTCIF12
00000004 l       *ABS*	00000000 MDMA_MDMA_C12ISR_BRTIF12
00000008 l       *ABS*	00000000 MDMA_MDMA_C12ISR_BTIF12
00000010 l       *ABS*	00000000 MDMA_MDMA_C12ISR_TCIF12
00010000 l       *ABS*	00000000 MDMA_MDMA_C12ISR_CRQA12
52000344 l       *ABS*	00000000 MDMA_MDMA_C12IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C12IFCR_CTEIF12
00000002 l       *ABS*	00000000 MDMA_MDMA_C12IFCR_CCTCIF12
00000004 l       *ABS*	00000000 MDMA_MDMA_C12IFCR_CBRTIF12
00000008 l       *ABS*	00000000 MDMA_MDMA_C12IFCR_CBTIF12
00000010 l       *ABS*	00000000 MDMA_MDMA_C12IFCR_CLTCIF12
52000348 l       *ABS*	00000000 MDMA_MDMA_C12ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C12ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C12ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C12ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C12ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C12ESR_BSE
5200034c l       *ABS*	00000000 MDMA_MDMA_C12CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C12CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C12CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C12CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C12CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C12CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C12CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C12CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C12CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C12CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C12CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C12CR_SWRQ
52000350 l       *ABS*	00000000 MDMA_MDMA_C12TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C12TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C12TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C12TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C12TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C12TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C12TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C12TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C12TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C12TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C12TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C12TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C12TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C12TCR_BWM
52000354 l       *ABS*	00000000 MDMA_MDMA_C12BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C12BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C12BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C12BNDTR_BRC_Shift
52000358 l       *ABS*	00000000 MDMA_MDMA_C12SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12SAR_SAR_Shift
5200035c l       *ABS*	00000000 MDMA_MDMA_C12DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12DAR_DAR_Shift
52000360 l       *ABS*	00000000 MDMA_MDMA_C12BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C12BRUR_DUV_Shift
52000364 l       *ABS*	00000000 MDMA_MDMA_C12LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12LAR_LAR_Shift
52000368 l       *ABS*	00000000 MDMA_MDMA_C12TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C12TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C12TBR_DBUS
52000370 l       *ABS*	00000000 MDMA_MDMA_C12MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12MAR_MAR_Shift
52000374 l       *ABS*	00000000 MDMA_MDMA_C12MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C12MDR_MDR_Shift
52000380 l       *ABS*	00000000 MDMA_MDMA_C13ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C13ISR_TEIF13
00000002 l       *ABS*	00000000 MDMA_MDMA_C13ISR_CTCIF13
00000004 l       *ABS*	00000000 MDMA_MDMA_C13ISR_BRTIF13
00000008 l       *ABS*	00000000 MDMA_MDMA_C13ISR_BTIF13
00000010 l       *ABS*	00000000 MDMA_MDMA_C13ISR_TCIF13
00010000 l       *ABS*	00000000 MDMA_MDMA_C13ISR_CRQA13
52000384 l       *ABS*	00000000 MDMA_MDMA_C13IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C13IFCR_CTEIF13
00000002 l       *ABS*	00000000 MDMA_MDMA_C13IFCR_CCTCIF13
00000004 l       *ABS*	00000000 MDMA_MDMA_C13IFCR_CBRTIF13
00000008 l       *ABS*	00000000 MDMA_MDMA_C13IFCR_CBTIF13
00000010 l       *ABS*	00000000 MDMA_MDMA_C13IFCR_CLTCIF13
52000388 l       *ABS*	00000000 MDMA_MDMA_C13ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C13ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C13ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C13ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C13ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C13ESR_BSE
5200038c l       *ABS*	00000000 MDMA_MDMA_C13CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C13CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C13CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C13CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C13CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C13CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C13CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C13CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C13CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C13CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C13CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C13CR_SWRQ
52000390 l       *ABS*	00000000 MDMA_MDMA_C13TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C13TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C13TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C13TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C13TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C13TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C13TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C13TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C13TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C13TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C13TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C13TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C13TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C13TCR_BWM
52000394 l       *ABS*	00000000 MDMA_MDMA_C13BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C13BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C13BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C13BNDTR_BRC_Shift
52000398 l       *ABS*	00000000 MDMA_MDMA_C13SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13SAR_SAR_Shift
5200039c l       *ABS*	00000000 MDMA_MDMA_C13DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13DAR_DAR_Shift
520003a0 l       *ABS*	00000000 MDMA_MDMA_C13BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C13BRUR_DUV_Shift
520003a4 l       *ABS*	00000000 MDMA_MDMA_C13LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13LAR_LAR_Shift
520003a8 l       *ABS*	00000000 MDMA_MDMA_C13TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C13TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C13TBR_DBUS
520003b0 l       *ABS*	00000000 MDMA_MDMA_C13MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13MAR_MAR_Shift
520003b4 l       *ABS*	00000000 MDMA_MDMA_C13MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C13MDR_MDR_Shift
520003c0 l       *ABS*	00000000 MDMA_MDMA_C14ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C14ISR_TEIF14
00000002 l       *ABS*	00000000 MDMA_MDMA_C14ISR_CTCIF14
00000004 l       *ABS*	00000000 MDMA_MDMA_C14ISR_BRTIF14
00000008 l       *ABS*	00000000 MDMA_MDMA_C14ISR_BTIF14
00000010 l       *ABS*	00000000 MDMA_MDMA_C14ISR_TCIF14
00010000 l       *ABS*	00000000 MDMA_MDMA_C14ISR_CRQA14
520003c4 l       *ABS*	00000000 MDMA_MDMA_C14IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C14IFCR_CTEIF14
00000002 l       *ABS*	00000000 MDMA_MDMA_C14IFCR_CCTCIF14
00000004 l       *ABS*	00000000 MDMA_MDMA_C14IFCR_CBRTIF14
00000008 l       *ABS*	00000000 MDMA_MDMA_C14IFCR_CBTIF14
00000010 l       *ABS*	00000000 MDMA_MDMA_C14IFCR_CLTCIF14
520003c8 l       *ABS*	00000000 MDMA_MDMA_C14ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C14ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C14ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C14ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C14ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C14ESR_BSE
520003cc l       *ABS*	00000000 MDMA_MDMA_C14CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C14CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C14CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C14CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C14CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C14CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C14CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C14CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C14CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C14CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C14CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C14CR_SWRQ
520003d0 l       *ABS*	00000000 MDMA_MDMA_C14TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C14TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C14TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C14TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C14TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C14TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C14TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C14TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C14TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C14TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C14TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C14TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C14TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C14TCR_BWM
520003d4 l       *ABS*	00000000 MDMA_MDMA_C14BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C14BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C14BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C14BNDTR_BRC_Shift
520003d8 l       *ABS*	00000000 MDMA_MDMA_C14SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14SAR_SAR_Shift
520003dc l       *ABS*	00000000 MDMA_MDMA_C14DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14DAR_DAR_Shift
520003e0 l       *ABS*	00000000 MDMA_MDMA_C14BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C14BRUR_DUV_Shift
520003e4 l       *ABS*	00000000 MDMA_MDMA_C14LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14LAR_LAR_Shift
520003e8 l       *ABS*	00000000 MDMA_MDMA_C14TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C14TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C14TBR_DBUS
520003f0 l       *ABS*	00000000 MDMA_MDMA_C14MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14MAR_MAR_Shift
520003f4 l       *ABS*	00000000 MDMA_MDMA_C14MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C14MDR_MDR_Shift
52000400 l       *ABS*	00000000 MDMA_MDMA_C15ISR
00000001 l       *ABS*	00000000 MDMA_MDMA_C15ISR_TEIF15
00000002 l       *ABS*	00000000 MDMA_MDMA_C15ISR_CTCIF15
00000004 l       *ABS*	00000000 MDMA_MDMA_C15ISR_BRTIF15
00000008 l       *ABS*	00000000 MDMA_MDMA_C15ISR_BTIF15
00000010 l       *ABS*	00000000 MDMA_MDMA_C15ISR_TCIF15
00010000 l       *ABS*	00000000 MDMA_MDMA_C15ISR_CRQA15
52000404 l       *ABS*	00000000 MDMA_MDMA_C15IFCR
00000001 l       *ABS*	00000000 MDMA_MDMA_C15IFCR_CTEIF15
00000002 l       *ABS*	00000000 MDMA_MDMA_C15IFCR_CCTCIF15
00000004 l       *ABS*	00000000 MDMA_MDMA_C15IFCR_CBRTIF15
00000008 l       *ABS*	00000000 MDMA_MDMA_C15IFCR_CBTIF15
00000010 l       *ABS*	00000000 MDMA_MDMA_C15IFCR_CLTCIF15
52000408 l       *ABS*	00000000 MDMA_MDMA_C15ESR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15ESR_TEA_Shift
00000080 l       *ABS*	00000000 MDMA_MDMA_C15ESR_TED
00000100 l       *ABS*	00000000 MDMA_MDMA_C15ESR_TELD
00000200 l       *ABS*	00000000 MDMA_MDMA_C15ESR_TEMD
00000400 l       *ABS*	00000000 MDMA_MDMA_C15ESR_ASE
00000800 l       *ABS*	00000000 MDMA_MDMA_C15ESR_BSE
5200040c l       *ABS*	00000000 MDMA_MDMA_C15CR
00000001 l       *ABS*	00000000 MDMA_MDMA_C15CR_EN
00000002 l       *ABS*	00000000 MDMA_MDMA_C15CR_TEIE
00000004 l       *ABS*	00000000 MDMA_MDMA_C15CR_CTCIE
00000008 l       *ABS*	00000000 MDMA_MDMA_C15CR_BRTIE
00000010 l       *ABS*	00000000 MDMA_MDMA_C15CR_BTIE
00000020 l       *ABS*	00000000 MDMA_MDMA_C15CR_TCIE
00000006 l       *ABS*	00000000 MDMA_MDMA_C15CR_PL_Shift
00001000 l       *ABS*	00000000 MDMA_MDMA_C15CR_BEX
00002000 l       *ABS*	00000000 MDMA_MDMA_C15CR_HEX
00004000 l       *ABS*	00000000 MDMA_MDMA_C15CR_WEX
00010000 l       *ABS*	00000000 MDMA_MDMA_C15CR_SWRQ
52000410 l       *ABS*	00000000 MDMA_MDMA_C15TCR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15TCR_SINC_Shift
00000002 l       *ABS*	00000000 MDMA_MDMA_C15TCR_DINC_Shift
00000004 l       *ABS*	00000000 MDMA_MDMA_C15TCR_SSIZE_Shift
00000006 l       *ABS*	00000000 MDMA_MDMA_C15TCR_DSIZE_Shift
00000008 l       *ABS*	00000000 MDMA_MDMA_C15TCR_SINCOS_Shift
0000000a l       *ABS*	00000000 MDMA_MDMA_C15TCR_DINCOS_Shift
0000000c l       *ABS*	00000000 MDMA_MDMA_C15TCR_SBURST_Shift
0000000f l       *ABS*	00000000 MDMA_MDMA_C15TCR_DBURST_Shift
00000012 l       *ABS*	00000000 MDMA_MDMA_C15TCR_TLEN_Shift
02000000 l       *ABS*	00000000 MDMA_MDMA_C15TCR_PKE
0000001a l       *ABS*	00000000 MDMA_MDMA_C15TCR_PAM_Shift
0000001c l       *ABS*	00000000 MDMA_MDMA_C15TCR_TRGM_Shift
40000000 l       *ABS*	00000000 MDMA_MDMA_C15TCR_SWRM
80000000 l       *ABS*	00000000 MDMA_MDMA_C15TCR_BWM
52000414 l       *ABS*	00000000 MDMA_MDMA_C15BNDTR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15BNDTR_BNDT_Shift
00040000 l       *ABS*	00000000 MDMA_MDMA_C15BNDTR_BRSUM
00080000 l       *ABS*	00000000 MDMA_MDMA_C15BNDTR_BRDUM
00000014 l       *ABS*	00000000 MDMA_MDMA_C15BNDTR_BRC_Shift
52000418 l       *ABS*	00000000 MDMA_MDMA_C15SAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15SAR_SAR_Shift
5200041c l       *ABS*	00000000 MDMA_MDMA_C15DAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15DAR_DAR_Shift
52000420 l       *ABS*	00000000 MDMA_MDMA_C15BRUR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15BRUR_SUV_Shift
00000010 l       *ABS*	00000000 MDMA_MDMA_C15BRUR_DUV_Shift
52000424 l       *ABS*	00000000 MDMA_MDMA_C15LAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15LAR_LAR_Shift
52000428 l       *ABS*	00000000 MDMA_MDMA_C15TBR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15TBR_TSEL_Shift
00010000 l       *ABS*	00000000 MDMA_MDMA_C15TBR_SBUS
00020000 l       *ABS*	00000000 MDMA_MDMA_C15TBR_DBUS
52000430 l       *ABS*	00000000 MDMA_MDMA_C15MAR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15MAR_MAR_Shift
52000434 l       *ABS*	00000000 MDMA_MDMA_C15MDR
00000000 l       *ABS*	00000000 MDMA_MDMA_C15MDR_MDR_Shift
52005000 l       *ABS*	00000000 QUADSPI_BASE
52005000 l       *ABS*	00000000 QUADSPI_CR
00000001 l       *ABS*	00000000 QUADSPI_CR_EN
00000002 l       *ABS*	00000000 QUADSPI_CR_ABORT
00000004 l       *ABS*	00000000 QUADSPI_CR_DMAEN
00000008 l       *ABS*	00000000 QUADSPI_CR_TCEN
00000010 l       *ABS*	00000000 QUADSPI_CR_SSHIFT
00000040 l       *ABS*	00000000 QUADSPI_CR_DFM
00000080 l       *ABS*	00000000 QUADSPI_CR_FSEL
00000008 l       *ABS*	00000000 QUADSPI_CR_FTHRES_Shift
00010000 l       *ABS*	00000000 QUADSPI_CR_TEIE
00020000 l       *ABS*	00000000 QUADSPI_CR_TCIE
00040000 l       *ABS*	00000000 QUADSPI_CR_FTIE
00080000 l       *ABS*	00000000 QUADSPI_CR_SMIE
00100000 l       *ABS*	00000000 QUADSPI_CR_TOIE
00400000 l       *ABS*	00000000 QUADSPI_CR_APMS
00800000 l       *ABS*	00000000 QUADSPI_CR_PMM
00000018 l       *ABS*	00000000 QUADSPI_CR_PRESCALER_Shift
52005004 l       *ABS*	00000000 QUADSPI_DCR
00000001 l       *ABS*	00000000 QUADSPI_DCR_CKMODE
00000008 l       *ABS*	00000000 QUADSPI_DCR_CSHT_Shift
00000010 l       *ABS*	00000000 QUADSPI_DCR_FSIZE_Shift
52005008 l       *ABS*	00000000 QUADSPI_SR
00000001 l       *ABS*	00000000 QUADSPI_SR_TEF
00000002 l       *ABS*	00000000 QUADSPI_SR_TCF
00000004 l       *ABS*	00000000 QUADSPI_SR_FTF
00000008 l       *ABS*	00000000 QUADSPI_SR_SMF
00000010 l       *ABS*	00000000 QUADSPI_SR_TOF
00000020 l       *ABS*	00000000 QUADSPI_SR_BUSY
00000008 l       *ABS*	00000000 QUADSPI_SR_FLEVEL_Shift
5200500c l       *ABS*	00000000 QUADSPI_FCR
00000001 l       *ABS*	00000000 QUADSPI_FCR_CTEF
00000002 l       *ABS*	00000000 QUADSPI_FCR_CTCF
00000008 l       *ABS*	00000000 QUADSPI_FCR_CSMF
00000010 l       *ABS*	00000000 QUADSPI_FCR_CTOF
52005010 l       *ABS*	00000000 QUADSPI_DLR
00000000 l       *ABS*	00000000 QUADSPI_DLR_DL_Shift
52005014 l       *ABS*	00000000 QUADSPI_CCR
00000000 l       *ABS*	00000000 QUADSPI_CCR_INSTRUCTION_Shift
00000008 l       *ABS*	00000000 QUADSPI_CCR_IMODE_Shift
0000000a l       *ABS*	00000000 QUADSPI_CCR_ADMODE_Shift
0000000c l       *ABS*	00000000 QUADSPI_CCR_ADSIZE_Shift
0000000e l       *ABS*	00000000 QUADSPI_CCR_ABMODE_Shift
00000010 l       *ABS*	00000000 QUADSPI_CCR_ABSIZE_Shift
00000012 l       *ABS*	00000000 QUADSPI_CCR_DCYC_Shift
00000018 l       *ABS*	00000000 QUADSPI_CCR_DMODE_Shift
0000001a l       *ABS*	00000000 QUADSPI_CCR_FMODE_Shift
10000000 l       *ABS*	00000000 QUADSPI_CCR_SIOO
40000000 l       *ABS*	00000000 QUADSPI_CCR_DHHC
80000000 l       *ABS*	00000000 QUADSPI_CCR_DDRM
52005018 l       *ABS*	00000000 QUADSPI_AR
00000000 l       *ABS*	00000000 QUADSPI_AR_ADDRESS_Shift
5200501c l       *ABS*	00000000 QUADSPI_ABR
00000000 l       *ABS*	00000000 QUADSPI_ABR_ALTERNATE_Shift
52005020 l       *ABS*	00000000 QUADSPI_DR
00000000 l       *ABS*	00000000 QUADSPI_DR_DATA_Shift
52005024 l       *ABS*	00000000 QUADSPI_PSMKR
00000000 l       *ABS*	00000000 QUADSPI_PSMKR_MASK_Shift
52005028 l       *ABS*	00000000 QUADSPI_PSMAR
00000000 l       *ABS*	00000000 QUADSPI_PSMAR_MATCH_Shift
5200502c l       *ABS*	00000000 QUADSPI_PIR
00000000 l       *ABS*	00000000 QUADSPI_PIR_INTERVAL_Shift
52005030 l       *ABS*	00000000 QUADSPI_LPTR
00000000 l       *ABS*	00000000 QUADSPI_LPTR_TIMEOUT_Shift
48021800 l       *ABS*	00000000 RNG_BASE
48021800 l       *ABS*	00000000 RNG_CR
00000004 l       *ABS*	00000000 RNG_CR_RNGEN
00000008 l       *ABS*	00000000 RNG_CR_IE
00000020 l       *ABS*	00000000 RNG_CR_CED
48021804 l       *ABS*	00000000 RNG_SR
00000001 l       *ABS*	00000000 RNG_SR_DRDY
00000002 l       *ABS*	00000000 RNG_SR_CECS
00000004 l       *ABS*	00000000 RNG_SR_SECS
00000020 l       *ABS*	00000000 RNG_SR_CEIS
00000040 l       *ABS*	00000000 RNG_SR_SEIS
48021808 l       *ABS*	00000000 RNG_DR
00000000 l       *ABS*	00000000 RNG_DR_RNDATA_Shift
58004000 l       *ABS*	00000000 RTC_BASE
58004000 l       *ABS*	00000000 RTC_RTC_TR
00000000 l       *ABS*	00000000 RTC_RTC_TR_SU_Shift
00000004 l       *ABS*	00000000 RTC_RTC_TR_ST_Shift
00000008 l       *ABS*	00000000 RTC_RTC_TR_MNU_Shift
0000000c l       *ABS*	00000000 RTC_RTC_TR_MNT_Shift
00000010 l       *ABS*	00000000 RTC_RTC_TR_HU_Shift
00000014 l       *ABS*	00000000 RTC_RTC_TR_HT_Shift
00400000 l       *ABS*	00000000 RTC_RTC_TR_PM
58004004 l       *ABS*	00000000 RTC_RTC_DR
00000000 l       *ABS*	00000000 RTC_RTC_DR_DU_Shift
00000004 l       *ABS*	00000000 RTC_RTC_DR_DT_Shift
00000008 l       *ABS*	00000000 RTC_RTC_DR_MU_Shift
00001000 l       *ABS*	00000000 RTC_RTC_DR_MT
0000000d l       *ABS*	00000000 RTC_RTC_DR_WDU_Shift
00000010 l       *ABS*	00000000 RTC_RTC_DR_YU_Shift
00000014 l       *ABS*	00000000 RTC_RTC_DR_YT_Shift
58004008 l       *ABS*	00000000 RTC_RTC_CR
00000000 l       *ABS*	00000000 RTC_RTC_CR_WUCKSEL_Shift
00000008 l       *ABS*	00000000 RTC_RTC_CR_TSEDGE
00000010 l       *ABS*	00000000 RTC_RTC_CR_REFCKON
00000020 l       *ABS*	00000000 RTC_RTC_CR_BYPSHAD
00000040 l       *ABS*	00000000 RTC_RTC_CR_FMT
00000100 l       *ABS*	00000000 RTC_RTC_CR_ALRAE
00000200 l       *ABS*	00000000 RTC_RTC_CR_ALRBE
00000400 l       *ABS*	00000000 RTC_RTC_CR_WUTE
00000800 l       *ABS*	00000000 RTC_RTC_CR_TSE
00001000 l       *ABS*	00000000 RTC_RTC_CR_ALRAIE
00002000 l       *ABS*	00000000 RTC_RTC_CR_ALRBIE
00004000 l       *ABS*	00000000 RTC_RTC_CR_WUTIE
00008000 l       *ABS*	00000000 RTC_RTC_CR_TSIE
00010000 l       *ABS*	00000000 RTC_RTC_CR_ADD1H
00020000 l       *ABS*	00000000 RTC_RTC_CR_SUB1H
00040000 l       *ABS*	00000000 RTC_RTC_CR_BKP
00080000 l       *ABS*	00000000 RTC_RTC_CR_COSEL
00100000 l       *ABS*	00000000 RTC_RTC_CR_POL
00000015 l       *ABS*	00000000 RTC_RTC_CR_OSEL_Shift
00800000 l       *ABS*	00000000 RTC_RTC_CR_COE
01000000 l       *ABS*	00000000 RTC_RTC_CR_ITSE
5800400c l       *ABS*	00000000 RTC_RTC_ISR
00000001 l       *ABS*	00000000 RTC_RTC_ISR_ALRAWF
00000002 l       *ABS*	00000000 RTC_RTC_ISR_ALRBWF
00000004 l       *ABS*	00000000 RTC_RTC_ISR_WUTWF
00000008 l       *ABS*	00000000 RTC_RTC_ISR_SHPF
00000010 l       *ABS*	00000000 RTC_RTC_ISR_INITS
00000020 l       *ABS*	00000000 RTC_RTC_ISR_RSF
00000040 l       *ABS*	00000000 RTC_RTC_ISR_INITF
00000080 l       *ABS*	00000000 RTC_RTC_ISR_INIT
00000100 l       *ABS*	00000000 RTC_RTC_ISR_ALRAF
00000200 l       *ABS*	00000000 RTC_RTC_ISR_ALRBF
00000400 l       *ABS*	00000000 RTC_RTC_ISR_WUTF
00000800 l       *ABS*	00000000 RTC_RTC_ISR_TSF
00001000 l       *ABS*	00000000 RTC_RTC_ISR_TSOVF
00002000 l       *ABS*	00000000 RTC_RTC_ISR_TAMP1F
00004000 l       *ABS*	00000000 RTC_RTC_ISR_TAMP2F
00008000 l       *ABS*	00000000 RTC_RTC_ISR_TAMP3F
00010000 l       *ABS*	00000000 RTC_RTC_ISR_RECALPF
00020000 l       *ABS*	00000000 RTC_RTC_ISR_ITSF
58004010 l       *ABS*	00000000 RTC_RTC_PRER
00000000 l       *ABS*	00000000 RTC_RTC_PRER_PREDIV_S_Shift
00000010 l       *ABS*	00000000 RTC_RTC_PRER_PREDIV_A_Shift
58004014 l       *ABS*	00000000 RTC_RTC_WUTR
00000000 l       *ABS*	00000000 RTC_RTC_WUTR_WUT_Shift
5800401c l       *ABS*	00000000 RTC_RTC_ALRMAR
00000000 l       *ABS*	00000000 RTC_RTC_ALRMAR_SU_Shift
00000004 l       *ABS*	00000000 RTC_RTC_ALRMAR_ST_Shift
00000080 l       *ABS*	00000000 RTC_RTC_ALRMAR_MSK1
00000008 l       *ABS*	00000000 RTC_RTC_ALRMAR_MNU_Shift
0000000c l       *ABS*	00000000 RTC_RTC_ALRMAR_MNT_Shift
00008000 l       *ABS*	00000000 RTC_RTC_ALRMAR_MSK2
00000010 l       *ABS*	00000000 RTC_RTC_ALRMAR_HU_Shift
00000014 l       *ABS*	00000000 RTC_RTC_ALRMAR_HT_Shift
00400000 l       *ABS*	00000000 RTC_RTC_ALRMAR_PM
00800000 l       *ABS*	00000000 RTC_RTC_ALRMAR_MSK3
00000018 l       *ABS*	00000000 RTC_RTC_ALRMAR_DU_Shift
0000001c l       *ABS*	00000000 RTC_RTC_ALRMAR_DT_Shift
40000000 l       *ABS*	00000000 RTC_RTC_ALRMAR_WDSEL
80000000 l       *ABS*	00000000 RTC_RTC_ALRMAR_MSK4
58004020 l       *ABS*	00000000 RTC_RTC_ALRMBR
00000000 l       *ABS*	00000000 RTC_RTC_ALRMBR_SU_Shift
00000004 l       *ABS*	00000000 RTC_RTC_ALRMBR_ST_Shift
00000080 l       *ABS*	00000000 RTC_RTC_ALRMBR_MSK1
00000008 l       *ABS*	00000000 RTC_RTC_ALRMBR_MNU_Shift
0000000c l       *ABS*	00000000 RTC_RTC_ALRMBR_MNT_Shift
00008000 l       *ABS*	00000000 RTC_RTC_ALRMBR_MSK2
00000010 l       *ABS*	00000000 RTC_RTC_ALRMBR_HU_Shift
00000014 l       *ABS*	00000000 RTC_RTC_ALRMBR_HT_Shift
00400000 l       *ABS*	00000000 RTC_RTC_ALRMBR_PM
00800000 l       *ABS*	00000000 RTC_RTC_ALRMBR_MSK3
00000018 l       *ABS*	00000000 RTC_RTC_ALRMBR_DU_Shift
0000001c l       *ABS*	00000000 RTC_RTC_ALRMBR_DT_Shift
40000000 l       *ABS*	00000000 RTC_RTC_ALRMBR_WDSEL
80000000 l       *ABS*	00000000 RTC_RTC_ALRMBR_MSK4
58004024 l       *ABS*	00000000 RTC_RTC_WPR
00000000 l       *ABS*	00000000 RTC_RTC_WPR_KEY_Shift
58004028 l       *ABS*	00000000 RTC_RTC_SSR
00000000 l       *ABS*	00000000 RTC_RTC_SSR_SS_Shift
5800402c l       *ABS*	00000000 RTC_RTC_SHIFTR
00000000 l       *ABS*	00000000 RTC_RTC_SHIFTR_SUBFS_Shift
80000000 l       *ABS*	00000000 RTC_RTC_SHIFTR_ADD1S
58004030 l       *ABS*	00000000 RTC_RTC_TSTR
00000000 l       *ABS*	00000000 RTC_RTC_TSTR_SU_Shift
00000004 l       *ABS*	00000000 RTC_RTC_TSTR_ST_Shift
00000008 l       *ABS*	00000000 RTC_RTC_TSTR_MNU_Shift
0000000c l       *ABS*	00000000 RTC_RTC_TSTR_MNT_Shift
00000010 l       *ABS*	00000000 RTC_RTC_TSTR_HU_Shift
00000014 l       *ABS*	00000000 RTC_RTC_TSTR_HT_Shift
00400000 l       *ABS*	00000000 RTC_RTC_TSTR_PM
58004034 l       *ABS*	00000000 RTC_RTC_TSDR
00000000 l       *ABS*	00000000 RTC_RTC_TSDR_DU_Shift
00000004 l       *ABS*	00000000 RTC_RTC_TSDR_DT_Shift
00000008 l       *ABS*	00000000 RTC_RTC_TSDR_MU_Shift
00001000 l       *ABS*	00000000 RTC_RTC_TSDR_MT
0000000d l       *ABS*	00000000 RTC_RTC_TSDR_WDU_Shift
58004038 l       *ABS*	00000000 RTC_RTC_TSSSR
00000000 l       *ABS*	00000000 RTC_RTC_TSSSR_SS_Shift
5800403c l       *ABS*	00000000 RTC_RTC_CALR
00000000 l       *ABS*	00000000 RTC_RTC_CALR_CALM_Shift
00002000 l       *ABS*	00000000 RTC_RTC_CALR_CALW16
00004000 l       *ABS*	00000000 RTC_RTC_CALR_CALW8
00008000 l       *ABS*	00000000 RTC_RTC_CALR_CALP
58004040 l       *ABS*	00000000 RTC_RTC_TAMPCR
00000001 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP1E
00000002 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP1TRG
00000004 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMPIE
00000008 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP2E
00000010 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP2TRG
00000020 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP3E
00000040 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP3TRG
00000080 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMPTS
00000008 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMPFREQ_Shift
0000000b l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMPFLT_Shift
0000000d l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMPPRCH_Shift
00008000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMPPUDIS
00010000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP1IE
00020000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP1NOERASE
00040000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP1MF
00080000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP2IE
00100000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP2NOERASE
00200000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP2MF
00400000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP3IE
00800000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP3NOERASE
01000000 l       *ABS*	00000000 RTC_RTC_TAMPCR_TAMP3MF
58004044 l       *ABS*	00000000 RTC_RTC_ALRMASSR
00000000 l       *ABS*	00000000 RTC_RTC_ALRMASSR_SS_Shift
00000018 l       *ABS*	00000000 RTC_RTC_ALRMASSR_MASKSS_Shift
58004048 l       *ABS*	00000000 RTC_RTC_ALRMBSSR
00000000 l       *ABS*	00000000 RTC_RTC_ALRMBSSR_SS_Shift
00000018 l       *ABS*	00000000 RTC_RTC_ALRMBSSR_MASKSS_Shift
58004050 l       *ABS*	00000000 RTC_RTC_BKP0R
00000000 l       *ABS*	00000000 RTC_RTC_BKP0R_BKP_Shift
58004054 l       *ABS*	00000000 RTC_RTC_BKP1R
00000000 l       *ABS*	00000000 RTC_RTC_BKP1R_BKP_Shift
58004058 l       *ABS*	00000000 RTC_RTC_BKP2R
00000000 l       *ABS*	00000000 RTC_RTC_BKP2R_BKP_Shift
5800405c l       *ABS*	00000000 RTC_RTC_BKP3R
00000000 l       *ABS*	00000000 RTC_RTC_BKP3R_BKP_Shift
58004060 l       *ABS*	00000000 RTC_RTC_BKP4R
00000000 l       *ABS*	00000000 RTC_RTC_BKP4R_BKP_Shift
58004064 l       *ABS*	00000000 RTC_RTC_BKP5R
00000000 l       *ABS*	00000000 RTC_RTC_BKP5R_BKP_Shift
58004068 l       *ABS*	00000000 RTC_RTC_BKP6R
00000000 l       *ABS*	00000000 RTC_RTC_BKP6R_BKP_Shift
5800406c l       *ABS*	00000000 RTC_RTC_BKP7R
00000000 l       *ABS*	00000000 RTC_RTC_BKP7R_BKP_Shift
58004070 l       *ABS*	00000000 RTC_RTC_BKP8R
00000000 l       *ABS*	00000000 RTC_RTC_BKP8R_BKP_Shift
58004074 l       *ABS*	00000000 RTC_RTC_BKP9R
00000000 l       *ABS*	00000000 RTC_RTC_BKP9R_BKP_Shift
58004078 l       *ABS*	00000000 RTC_RTC_BKP10R
00000000 l       *ABS*	00000000 RTC_RTC_BKP10R_BKP_Shift
5800407c l       *ABS*	00000000 RTC_RTC_BKP11R
00000000 l       *ABS*	00000000 RTC_RTC_BKP11R_BKP_Shift
58004080 l       *ABS*	00000000 RTC_RTC_BKP12R
00000000 l       *ABS*	00000000 RTC_RTC_BKP12R_BKP_Shift
58004084 l       *ABS*	00000000 RTC_RTC_BKP13R
00000000 l       *ABS*	00000000 RTC_RTC_BKP13R_BKP_Shift
58004088 l       *ABS*	00000000 RTC_RTC_BKP14R
00000000 l       *ABS*	00000000 RTC_RTC_BKP14R_BKP_Shift
5800408c l       *ABS*	00000000 RTC_RTC_BKP15R
00000000 l       *ABS*	00000000 RTC_RTC_BKP15R_BKP_Shift
5800404c l       *ABS*	00000000 RTC_RTC_OR
00000001 l       *ABS*	00000000 RTC_RTC_OR_RTC_ALARM_TYPE
00000002 l       *ABS*	00000000 RTC_RTC_OR_RTC_OUT_RMP
58004090 l       *ABS*	00000000 RTC_RTC_BKP16R
00000000 l       *ABS*	00000000 RTC_RTC_BKP16R_BKP_Shift
58004094 l       *ABS*	00000000 RTC_RTC_BKP17R
00000000 l       *ABS*	00000000 RTC_RTC_BKP17R_BKP_Shift
58004098 l       *ABS*	00000000 RTC_RTC_BKP18R
00000000 l       *ABS*	00000000 RTC_RTC_BKP18R_BKP_Shift
5800409c l       *ABS*	00000000 RTC_RTC_BKP19R
00000000 l       *ABS*	00000000 RTC_RTC_BKP19R_BKP_Shift
580040a0 l       *ABS*	00000000 RTC_RTC_BKP20R
00000000 l       *ABS*	00000000 RTC_RTC_BKP20R_BKP_Shift
580040a4 l       *ABS*	00000000 RTC_RTC_BKP21R
00000000 l       *ABS*	00000000 RTC_RTC_BKP21R_BKP_Shift
580040a8 l       *ABS*	00000000 RTC_RTC_BKP22R
00000000 l       *ABS*	00000000 RTC_RTC_BKP22R_BKP_Shift
580040ac l       *ABS*	00000000 RTC_RTC_BKP23R
00000000 l       *ABS*	00000000 RTC_RTC_BKP23R_BKP_Shift
580040b0 l       *ABS*	00000000 RTC_RTC_BKP24R
00000000 l       *ABS*	00000000 RTC_RTC_BKP24R_BKP_Shift
580040b4 l       *ABS*	00000000 RTC_RTC_BKP25R
00000000 l       *ABS*	00000000 RTC_RTC_BKP25R_BKP_Shift
580040b8 l       *ABS*	00000000 RTC_RTC_BKP26R
00000000 l       *ABS*	00000000 RTC_RTC_BKP26R_BKP_Shift
580040bc l       *ABS*	00000000 RTC_RTC_BKP27R
00000000 l       *ABS*	00000000 RTC_RTC_BKP27R_BKP_Shift
580040c0 l       *ABS*	00000000 RTC_RTC_BKP28R
00000000 l       *ABS*	00000000 RTC_RTC_BKP28R_BKP_Shift
580040c4 l       *ABS*	00000000 RTC_RTC_BKP29R
00000000 l       *ABS*	00000000 RTC_RTC_BKP29R_BKP_Shift
580040c8 l       *ABS*	00000000 RTC_RTC_BKP30R
00000000 l       *ABS*	00000000 RTC_RTC_BKP30R_BKP_Shift
580040cc l       *ABS*	00000000 RTC_RTC_BKP31R
00000000 l       *ABS*	00000000 RTC_RTC_BKP31R_BKP_Shift
58005400 l       *ABS*	00000000 SAI4_BASE
58005400 l       *ABS*	00000000 SAI4_SAI_GCR
00000004 l       *ABS*	00000000 SAI4_SAI_GCR_SYNCOUT_Shift
00000000 l       *ABS*	00000000 SAI4_SAI_GCR_SYNCIN_Shift
58005404 l       *ABS*	00000000 SAI4_SAI_ACR1
00000000 l       *ABS*	00000000 SAI4_SAI_ACR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI4_SAI_ACR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI4_SAI_ACR1_DS_Shift
00000100 l       *ABS*	00000000 SAI4_SAI_ACR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI4_SAI_ACR1_CKSTR
0000000a l       *ABS*	00000000 SAI4_SAI_ACR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI4_SAI_ACR1_MONO
00002000 l       *ABS*	00000000 SAI4_SAI_ACR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI4_SAI_ACR1_SAIXEN
00020000 l       *ABS*	00000000 SAI4_SAI_ACR1_DMAEN
00080000 l       *ABS*	00000000 SAI4_SAI_ACR1_NOMCK
00000014 l       *ABS*	00000000 SAI4_SAI_ACR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI4_SAI_ACR1_OSR
58005408 l       *ABS*	00000000 SAI4_SAI_ACR2
00000000 l       *ABS*	00000000 SAI4_SAI_ACR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI4_SAI_ACR2_FFLUSH
00000010 l       *ABS*	00000000 SAI4_SAI_ACR2_TRIS
00000020 l       *ABS*	00000000 SAI4_SAI_ACR2_MUTE
00000040 l       *ABS*	00000000 SAI4_SAI_ACR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI4_SAI_ACR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI4_SAI_ACR2_CPL
0000000e l       *ABS*	00000000 SAI4_SAI_ACR2_COMP_Shift
5800540c l       *ABS*	00000000 SAI4_SAI_AFRCR
00000000 l       *ABS*	00000000 SAI4_SAI_AFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI4_SAI_AFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI4_SAI_AFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI4_SAI_AFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI4_SAI_AFRCR_FSOFF
58005410 l       *ABS*	00000000 SAI4_SAI_ASLOTR
00000000 l       *ABS*	00000000 SAI4_SAI_ASLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI4_SAI_ASLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI4_SAI_ASLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI4_SAI_ASLOTR_SLOTEN_Shift
58005414 l       *ABS*	00000000 SAI4_SAI_AIM
00000001 l       *ABS*	00000000 SAI4_SAI_AIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI4_SAI_AIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI4_SAI_AIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI4_SAI_AIM_FREQIE
00000010 l       *ABS*	00000000 SAI4_SAI_AIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI4_SAI_AIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI4_SAI_AIM_LFSDETIE
58005418 l       *ABS*	00000000 SAI4_SAI_ASR
00000001 l       *ABS*	00000000 SAI4_SAI_ASR_OVRUDR
00000002 l       *ABS*	00000000 SAI4_SAI_ASR_MUTEDET
00000004 l       *ABS*	00000000 SAI4_SAI_ASR_WCKCFG
00000008 l       *ABS*	00000000 SAI4_SAI_ASR_FREQ
00000010 l       *ABS*	00000000 SAI4_SAI_ASR_CNRDY
00000020 l       *ABS*	00000000 SAI4_SAI_ASR_AFSDET
00000040 l       *ABS*	00000000 SAI4_SAI_ASR_LFSDET
00000010 l       *ABS*	00000000 SAI4_SAI_ASR_FLVL_Shift
5800541c l       *ABS*	00000000 SAI4_SAI_ACLRFR
00000001 l       *ABS*	00000000 SAI4_SAI_ACLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI4_SAI_ACLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI4_SAI_ACLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI4_SAI_ACLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI4_SAI_ACLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI4_SAI_ACLRFR_CLFSDET
58005420 l       *ABS*	00000000 SAI4_SAI_ADR
00000000 l       *ABS*	00000000 SAI4_SAI_ADR_DATA_Shift
58005424 l       *ABS*	00000000 SAI4_SAI_BCR1
00000000 l       *ABS*	00000000 SAI4_SAI_BCR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI4_SAI_BCR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI4_SAI_BCR1_DS_Shift
00000100 l       *ABS*	00000000 SAI4_SAI_BCR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI4_SAI_BCR1_CKSTR
0000000a l       *ABS*	00000000 SAI4_SAI_BCR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI4_SAI_BCR1_MONO
00002000 l       *ABS*	00000000 SAI4_SAI_BCR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI4_SAI_BCR1_SAIXEN
00020000 l       *ABS*	00000000 SAI4_SAI_BCR1_DMAEN
00080000 l       *ABS*	00000000 SAI4_SAI_BCR1_NOMCK
00000014 l       *ABS*	00000000 SAI4_SAI_BCR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI4_SAI_BCR1_OSR
58005428 l       *ABS*	00000000 SAI4_SAI_BCR2
00000000 l       *ABS*	00000000 SAI4_SAI_BCR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI4_SAI_BCR2_FFLUSH
00000010 l       *ABS*	00000000 SAI4_SAI_BCR2_TRIS
00000020 l       *ABS*	00000000 SAI4_SAI_BCR2_MUTE
00000040 l       *ABS*	00000000 SAI4_SAI_BCR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI4_SAI_BCR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI4_SAI_BCR2_CPL
0000000e l       *ABS*	00000000 SAI4_SAI_BCR2_COMP_Shift
5800542c l       *ABS*	00000000 SAI4_SAI_BFRCR
00000000 l       *ABS*	00000000 SAI4_SAI_BFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI4_SAI_BFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI4_SAI_BFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI4_SAI_BFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI4_SAI_BFRCR_FSOFF
58005430 l       *ABS*	00000000 SAI4_SAI_BSLOTR
00000000 l       *ABS*	00000000 SAI4_SAI_BSLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI4_SAI_BSLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI4_SAI_BSLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI4_SAI_BSLOTR_SLOTEN_Shift
58005434 l       *ABS*	00000000 SAI4_SAI_BIM
00000001 l       *ABS*	00000000 SAI4_SAI_BIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI4_SAI_BIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI4_SAI_BIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI4_SAI_BIM_FREQIE
00000010 l       *ABS*	00000000 SAI4_SAI_BIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI4_SAI_BIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI4_SAI_BIM_LFSDETIE
58005438 l       *ABS*	00000000 SAI4_SAI_BSR
00000001 l       *ABS*	00000000 SAI4_SAI_BSR_OVRUDR
00000002 l       *ABS*	00000000 SAI4_SAI_BSR_MUTEDET
00000004 l       *ABS*	00000000 SAI4_SAI_BSR_WCKCFG
00000008 l       *ABS*	00000000 SAI4_SAI_BSR_FREQ
00000010 l       *ABS*	00000000 SAI4_SAI_BSR_CNRDY
00000020 l       *ABS*	00000000 SAI4_SAI_BSR_AFSDET
00000040 l       *ABS*	00000000 SAI4_SAI_BSR_LFSDET
00000010 l       *ABS*	00000000 SAI4_SAI_BSR_FLVL_Shift
5800543c l       *ABS*	00000000 SAI4_SAI_BCLRFR
00000001 l       *ABS*	00000000 SAI4_SAI_BCLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI4_SAI_BCLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI4_SAI_BCLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI4_SAI_BCLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI4_SAI_BCLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI4_SAI_BCLRFR_CLFSDET
58005440 l       *ABS*	00000000 SAI4_SAI_BDR
00000000 l       *ABS*	00000000 SAI4_SAI_BDR_DATA_Shift
58005444 l       *ABS*	00000000 SAI4_SAI_PDMCR
00000001 l       *ABS*	00000000 SAI4_SAI_PDMCR_PDMEN
00000004 l       *ABS*	00000000 SAI4_SAI_PDMCR_MICNBR_Shift
00000100 l       *ABS*	00000000 SAI4_SAI_PDMCR_CKEN1
00000200 l       *ABS*	00000000 SAI4_SAI_PDMCR_CKEN2
00000400 l       *ABS*	00000000 SAI4_SAI_PDMCR_CKEN3
00000800 l       *ABS*	00000000 SAI4_SAI_PDMCR_CKEN4
58005448 l       *ABS*	00000000 SAI4_SAI_PDMDLY
00000000 l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM1L_Shift
00000004 l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM1R_Shift
00000008 l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM2L_Shift
0000000c l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM2R_Shift
00000010 l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM3L_Shift
00000014 l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM3R_Shift
00000018 l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM4L_Shift
0000001c l       *ABS*	00000000 SAI4_SAI_PDMDLY_DLYM4R_Shift
40015800 l       *ABS*	00000000 SAI1_BASE
40015800 l       *ABS*	00000000 SAI1_SAI_GCR
00000004 l       *ABS*	00000000 SAI1_SAI_GCR_SYNCOUT_Shift
00000000 l       *ABS*	00000000 SAI1_SAI_GCR_SYNCIN_Shift
40015804 l       *ABS*	00000000 SAI1_SAI_ACR1
00000000 l       *ABS*	00000000 SAI1_SAI_ACR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI1_SAI_ACR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI1_SAI_ACR1_DS_Shift
00000100 l       *ABS*	00000000 SAI1_SAI_ACR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI1_SAI_ACR1_CKSTR
0000000a l       *ABS*	00000000 SAI1_SAI_ACR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI1_SAI_ACR1_MONO
00002000 l       *ABS*	00000000 SAI1_SAI_ACR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI1_SAI_ACR1_SAIXEN
00020000 l       *ABS*	00000000 SAI1_SAI_ACR1_DMAEN
00080000 l       *ABS*	00000000 SAI1_SAI_ACR1_NOMCK
00000014 l       *ABS*	00000000 SAI1_SAI_ACR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI1_SAI_ACR1_OSR
40015808 l       *ABS*	00000000 SAI1_SAI_ACR2
00000000 l       *ABS*	00000000 SAI1_SAI_ACR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI1_SAI_ACR2_FFLUSH
00000010 l       *ABS*	00000000 SAI1_SAI_ACR2_TRIS
00000020 l       *ABS*	00000000 SAI1_SAI_ACR2_MUTE
00000040 l       *ABS*	00000000 SAI1_SAI_ACR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI1_SAI_ACR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI1_SAI_ACR2_CPL
0000000e l       *ABS*	00000000 SAI1_SAI_ACR2_COMP_Shift
4001580c l       *ABS*	00000000 SAI1_SAI_AFRCR
00000000 l       *ABS*	00000000 SAI1_SAI_AFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI1_SAI_AFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI1_SAI_AFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI1_SAI_AFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI1_SAI_AFRCR_FSOFF
40015810 l       *ABS*	00000000 SAI1_SAI_ASLOTR
00000000 l       *ABS*	00000000 SAI1_SAI_ASLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI1_SAI_ASLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI1_SAI_ASLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI1_SAI_ASLOTR_SLOTEN_Shift
40015814 l       *ABS*	00000000 SAI1_SAI_AIM
00000001 l       *ABS*	00000000 SAI1_SAI_AIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI1_SAI_AIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI1_SAI_AIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI1_SAI_AIM_FREQIE
00000010 l       *ABS*	00000000 SAI1_SAI_AIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI1_SAI_AIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI1_SAI_AIM_LFSDETIE
40015818 l       *ABS*	00000000 SAI1_SAI_ASR
00000001 l       *ABS*	00000000 SAI1_SAI_ASR_OVRUDR
00000002 l       *ABS*	00000000 SAI1_SAI_ASR_MUTEDET
00000004 l       *ABS*	00000000 SAI1_SAI_ASR_WCKCFG
00000008 l       *ABS*	00000000 SAI1_SAI_ASR_FREQ
00000010 l       *ABS*	00000000 SAI1_SAI_ASR_CNRDY
00000020 l       *ABS*	00000000 SAI1_SAI_ASR_AFSDET
00000040 l       *ABS*	00000000 SAI1_SAI_ASR_LFSDET
00000010 l       *ABS*	00000000 SAI1_SAI_ASR_FLVL_Shift
4001581c l       *ABS*	00000000 SAI1_SAI_ACLRFR
00000001 l       *ABS*	00000000 SAI1_SAI_ACLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI1_SAI_ACLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI1_SAI_ACLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI1_SAI_ACLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI1_SAI_ACLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI1_SAI_ACLRFR_CLFSDET
40015820 l       *ABS*	00000000 SAI1_SAI_ADR
00000000 l       *ABS*	00000000 SAI1_SAI_ADR_DATA_Shift
40015824 l       *ABS*	00000000 SAI1_SAI_BCR1
00000000 l       *ABS*	00000000 SAI1_SAI_BCR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI1_SAI_BCR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI1_SAI_BCR1_DS_Shift
00000100 l       *ABS*	00000000 SAI1_SAI_BCR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI1_SAI_BCR1_CKSTR
0000000a l       *ABS*	00000000 SAI1_SAI_BCR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI1_SAI_BCR1_MONO
00002000 l       *ABS*	00000000 SAI1_SAI_BCR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI1_SAI_BCR1_SAIXEN
00020000 l       *ABS*	00000000 SAI1_SAI_BCR1_DMAEN
00080000 l       *ABS*	00000000 SAI1_SAI_BCR1_NOMCK
00000014 l       *ABS*	00000000 SAI1_SAI_BCR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI1_SAI_BCR1_OSR
40015828 l       *ABS*	00000000 SAI1_SAI_BCR2
00000000 l       *ABS*	00000000 SAI1_SAI_BCR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI1_SAI_BCR2_FFLUSH
00000010 l       *ABS*	00000000 SAI1_SAI_BCR2_TRIS
00000020 l       *ABS*	00000000 SAI1_SAI_BCR2_MUTE
00000040 l       *ABS*	00000000 SAI1_SAI_BCR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI1_SAI_BCR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI1_SAI_BCR2_CPL
0000000e l       *ABS*	00000000 SAI1_SAI_BCR2_COMP_Shift
4001582c l       *ABS*	00000000 SAI1_SAI_BFRCR
00000000 l       *ABS*	00000000 SAI1_SAI_BFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI1_SAI_BFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI1_SAI_BFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI1_SAI_BFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI1_SAI_BFRCR_FSOFF
40015830 l       *ABS*	00000000 SAI1_SAI_BSLOTR
00000000 l       *ABS*	00000000 SAI1_SAI_BSLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI1_SAI_BSLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI1_SAI_BSLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI1_SAI_BSLOTR_SLOTEN_Shift
40015834 l       *ABS*	00000000 SAI1_SAI_BIM
00000001 l       *ABS*	00000000 SAI1_SAI_BIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI1_SAI_BIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI1_SAI_BIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI1_SAI_BIM_FREQIE
00000010 l       *ABS*	00000000 SAI1_SAI_BIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI1_SAI_BIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI1_SAI_BIM_LFSDETIE
40015838 l       *ABS*	00000000 SAI1_SAI_BSR
00000001 l       *ABS*	00000000 SAI1_SAI_BSR_OVRUDR
00000002 l       *ABS*	00000000 SAI1_SAI_BSR_MUTEDET
00000004 l       *ABS*	00000000 SAI1_SAI_BSR_WCKCFG
00000008 l       *ABS*	00000000 SAI1_SAI_BSR_FREQ
00000010 l       *ABS*	00000000 SAI1_SAI_BSR_CNRDY
00000020 l       *ABS*	00000000 SAI1_SAI_BSR_AFSDET
00000040 l       *ABS*	00000000 SAI1_SAI_BSR_LFSDET
00000010 l       *ABS*	00000000 SAI1_SAI_BSR_FLVL_Shift
4001583c l       *ABS*	00000000 SAI1_SAI_BCLRFR
00000001 l       *ABS*	00000000 SAI1_SAI_BCLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI1_SAI_BCLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI1_SAI_BCLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI1_SAI_BCLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI1_SAI_BCLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI1_SAI_BCLRFR_CLFSDET
40015840 l       *ABS*	00000000 SAI1_SAI_BDR
00000000 l       *ABS*	00000000 SAI1_SAI_BDR_DATA_Shift
40015844 l       *ABS*	00000000 SAI1_SAI_PDMCR
00000001 l       *ABS*	00000000 SAI1_SAI_PDMCR_PDMEN
00000004 l       *ABS*	00000000 SAI1_SAI_PDMCR_MICNBR_Shift
00000100 l       *ABS*	00000000 SAI1_SAI_PDMCR_CKEN1
00000200 l       *ABS*	00000000 SAI1_SAI_PDMCR_CKEN2
00000400 l       *ABS*	00000000 SAI1_SAI_PDMCR_CKEN3
00000800 l       *ABS*	00000000 SAI1_SAI_PDMCR_CKEN4
40015848 l       *ABS*	00000000 SAI1_SAI_PDMDLY
00000000 l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM1L_Shift
00000004 l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM1R_Shift
00000008 l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM2L_Shift
0000000c l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM2R_Shift
00000010 l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM3L_Shift
00000014 l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM3R_Shift
00000018 l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM4L_Shift
0000001c l       *ABS*	00000000 SAI1_SAI_PDMDLY_DLYM4R_Shift
40015c00 l       *ABS*	00000000 SAI2_BASE
40015c00 l       *ABS*	00000000 SAI2_SAI_GCR
00000004 l       *ABS*	00000000 SAI2_SAI_GCR_SYNCOUT_Shift
00000000 l       *ABS*	00000000 SAI2_SAI_GCR_SYNCIN_Shift
40015c04 l       *ABS*	00000000 SAI2_SAI_ACR1
00000000 l       *ABS*	00000000 SAI2_SAI_ACR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI2_SAI_ACR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI2_SAI_ACR1_DS_Shift
00000100 l       *ABS*	00000000 SAI2_SAI_ACR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI2_SAI_ACR1_CKSTR
0000000a l       *ABS*	00000000 SAI2_SAI_ACR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI2_SAI_ACR1_MONO
00002000 l       *ABS*	00000000 SAI2_SAI_ACR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI2_SAI_ACR1_SAIXEN
00020000 l       *ABS*	00000000 SAI2_SAI_ACR1_DMAEN
00080000 l       *ABS*	00000000 SAI2_SAI_ACR1_NOMCK
00000014 l       *ABS*	00000000 SAI2_SAI_ACR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI2_SAI_ACR1_OSR
40015c08 l       *ABS*	00000000 SAI2_SAI_ACR2
00000000 l       *ABS*	00000000 SAI2_SAI_ACR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI2_SAI_ACR2_FFLUSH
00000010 l       *ABS*	00000000 SAI2_SAI_ACR2_TRIS
00000020 l       *ABS*	00000000 SAI2_SAI_ACR2_MUTE
00000040 l       *ABS*	00000000 SAI2_SAI_ACR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI2_SAI_ACR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI2_SAI_ACR2_CPL
0000000e l       *ABS*	00000000 SAI2_SAI_ACR2_COMP_Shift
40015c0c l       *ABS*	00000000 SAI2_SAI_AFRCR
00000000 l       *ABS*	00000000 SAI2_SAI_AFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI2_SAI_AFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI2_SAI_AFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI2_SAI_AFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI2_SAI_AFRCR_FSOFF
40015c10 l       *ABS*	00000000 SAI2_SAI_ASLOTR
00000000 l       *ABS*	00000000 SAI2_SAI_ASLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI2_SAI_ASLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI2_SAI_ASLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI2_SAI_ASLOTR_SLOTEN_Shift
40015c14 l       *ABS*	00000000 SAI2_SAI_AIM
00000001 l       *ABS*	00000000 SAI2_SAI_AIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI2_SAI_AIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI2_SAI_AIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI2_SAI_AIM_FREQIE
00000010 l       *ABS*	00000000 SAI2_SAI_AIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI2_SAI_AIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI2_SAI_AIM_LFSDETIE
40015c18 l       *ABS*	00000000 SAI2_SAI_ASR
00000001 l       *ABS*	00000000 SAI2_SAI_ASR_OVRUDR
00000002 l       *ABS*	00000000 SAI2_SAI_ASR_MUTEDET
00000004 l       *ABS*	00000000 SAI2_SAI_ASR_WCKCFG
00000008 l       *ABS*	00000000 SAI2_SAI_ASR_FREQ
00000010 l       *ABS*	00000000 SAI2_SAI_ASR_CNRDY
00000020 l       *ABS*	00000000 SAI2_SAI_ASR_AFSDET
00000040 l       *ABS*	00000000 SAI2_SAI_ASR_LFSDET
00000010 l       *ABS*	00000000 SAI2_SAI_ASR_FLVL_Shift
40015c1c l       *ABS*	00000000 SAI2_SAI_ACLRFR
00000001 l       *ABS*	00000000 SAI2_SAI_ACLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI2_SAI_ACLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI2_SAI_ACLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI2_SAI_ACLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI2_SAI_ACLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI2_SAI_ACLRFR_CLFSDET
40015c20 l       *ABS*	00000000 SAI2_SAI_ADR
00000000 l       *ABS*	00000000 SAI2_SAI_ADR_DATA_Shift
40015c24 l       *ABS*	00000000 SAI2_SAI_BCR1
00000000 l       *ABS*	00000000 SAI2_SAI_BCR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI2_SAI_BCR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI2_SAI_BCR1_DS_Shift
00000100 l       *ABS*	00000000 SAI2_SAI_BCR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI2_SAI_BCR1_CKSTR
0000000a l       *ABS*	00000000 SAI2_SAI_BCR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI2_SAI_BCR1_MONO
00002000 l       *ABS*	00000000 SAI2_SAI_BCR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI2_SAI_BCR1_SAIXEN
00020000 l       *ABS*	00000000 SAI2_SAI_BCR1_DMAEN
00080000 l       *ABS*	00000000 SAI2_SAI_BCR1_NOMCK
00000014 l       *ABS*	00000000 SAI2_SAI_BCR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI2_SAI_BCR1_OSR
40015c28 l       *ABS*	00000000 SAI2_SAI_BCR2
00000000 l       *ABS*	00000000 SAI2_SAI_BCR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI2_SAI_BCR2_FFLUSH
00000010 l       *ABS*	00000000 SAI2_SAI_BCR2_TRIS
00000020 l       *ABS*	00000000 SAI2_SAI_BCR2_MUTE
00000040 l       *ABS*	00000000 SAI2_SAI_BCR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI2_SAI_BCR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI2_SAI_BCR2_CPL
0000000e l       *ABS*	00000000 SAI2_SAI_BCR2_COMP_Shift
40015c2c l       *ABS*	00000000 SAI2_SAI_BFRCR
00000000 l       *ABS*	00000000 SAI2_SAI_BFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI2_SAI_BFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI2_SAI_BFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI2_SAI_BFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI2_SAI_BFRCR_FSOFF
40015c30 l       *ABS*	00000000 SAI2_SAI_BSLOTR
00000000 l       *ABS*	00000000 SAI2_SAI_BSLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI2_SAI_BSLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI2_SAI_BSLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI2_SAI_BSLOTR_SLOTEN_Shift
40015c34 l       *ABS*	00000000 SAI2_SAI_BIM
00000001 l       *ABS*	00000000 SAI2_SAI_BIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI2_SAI_BIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI2_SAI_BIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI2_SAI_BIM_FREQIE
00000010 l       *ABS*	00000000 SAI2_SAI_BIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI2_SAI_BIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI2_SAI_BIM_LFSDETIE
40015c38 l       *ABS*	00000000 SAI2_SAI_BSR
00000001 l       *ABS*	00000000 SAI2_SAI_BSR_OVRUDR
00000002 l       *ABS*	00000000 SAI2_SAI_BSR_MUTEDET
00000004 l       *ABS*	00000000 SAI2_SAI_BSR_WCKCFG
00000008 l       *ABS*	00000000 SAI2_SAI_BSR_FREQ
00000010 l       *ABS*	00000000 SAI2_SAI_BSR_CNRDY
00000020 l       *ABS*	00000000 SAI2_SAI_BSR_AFSDET
00000040 l       *ABS*	00000000 SAI2_SAI_BSR_LFSDET
00000010 l       *ABS*	00000000 SAI2_SAI_BSR_FLVL_Shift
40015c3c l       *ABS*	00000000 SAI2_SAI_BCLRFR
00000001 l       *ABS*	00000000 SAI2_SAI_BCLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI2_SAI_BCLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI2_SAI_BCLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI2_SAI_BCLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI2_SAI_BCLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI2_SAI_BCLRFR_CLFSDET
40015c40 l       *ABS*	00000000 SAI2_SAI_BDR
00000000 l       *ABS*	00000000 SAI2_SAI_BDR_DATA_Shift
40015c44 l       *ABS*	00000000 SAI2_SAI_PDMCR
00000001 l       *ABS*	00000000 SAI2_SAI_PDMCR_PDMEN
00000004 l       *ABS*	00000000 SAI2_SAI_PDMCR_MICNBR_Shift
00000100 l       *ABS*	00000000 SAI2_SAI_PDMCR_CKEN1
00000200 l       *ABS*	00000000 SAI2_SAI_PDMCR_CKEN2
00000400 l       *ABS*	00000000 SAI2_SAI_PDMCR_CKEN3
00000800 l       *ABS*	00000000 SAI2_SAI_PDMCR_CKEN4
40015c48 l       *ABS*	00000000 SAI2_SAI_PDMDLY
00000000 l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM1L_Shift
00000004 l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM1R_Shift
00000008 l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM2L_Shift
0000000c l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM2R_Shift
00000010 l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM3L_Shift
00000014 l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM3R_Shift
00000018 l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM4L_Shift
0000001c l       *ABS*	00000000 SAI2_SAI_PDMDLY_DLYM4R_Shift
40016000 l       *ABS*	00000000 SAI3_BASE
40016000 l       *ABS*	00000000 SAI3_SAI_GCR
00000004 l       *ABS*	00000000 SAI3_SAI_GCR_SYNCOUT_Shift
00000000 l       *ABS*	00000000 SAI3_SAI_GCR_SYNCIN_Shift
40016004 l       *ABS*	00000000 SAI3_SAI_ACR1
00000000 l       *ABS*	00000000 SAI3_SAI_ACR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI3_SAI_ACR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI3_SAI_ACR1_DS_Shift
00000100 l       *ABS*	00000000 SAI3_SAI_ACR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI3_SAI_ACR1_CKSTR
0000000a l       *ABS*	00000000 SAI3_SAI_ACR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI3_SAI_ACR1_MONO
00002000 l       *ABS*	00000000 SAI3_SAI_ACR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI3_SAI_ACR1_SAIXEN
00020000 l       *ABS*	00000000 SAI3_SAI_ACR1_DMAEN
00080000 l       *ABS*	00000000 SAI3_SAI_ACR1_NOMCK
00000014 l       *ABS*	00000000 SAI3_SAI_ACR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI3_SAI_ACR1_OSR
40016008 l       *ABS*	00000000 SAI3_SAI_ACR2
00000000 l       *ABS*	00000000 SAI3_SAI_ACR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI3_SAI_ACR2_FFLUSH
00000010 l       *ABS*	00000000 SAI3_SAI_ACR2_TRIS
00000020 l       *ABS*	00000000 SAI3_SAI_ACR2_MUTE
00000040 l       *ABS*	00000000 SAI3_SAI_ACR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI3_SAI_ACR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI3_SAI_ACR2_CPL
0000000e l       *ABS*	00000000 SAI3_SAI_ACR2_COMP_Shift
4001600c l       *ABS*	00000000 SAI3_SAI_AFRCR
00000000 l       *ABS*	00000000 SAI3_SAI_AFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI3_SAI_AFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI3_SAI_AFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI3_SAI_AFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI3_SAI_AFRCR_FSOFF
40016010 l       *ABS*	00000000 SAI3_SAI_ASLOTR
00000000 l       *ABS*	00000000 SAI3_SAI_ASLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI3_SAI_ASLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI3_SAI_ASLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI3_SAI_ASLOTR_SLOTEN_Shift
40016014 l       *ABS*	00000000 SAI3_SAI_AIM
00000001 l       *ABS*	00000000 SAI3_SAI_AIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI3_SAI_AIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI3_SAI_AIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI3_SAI_AIM_FREQIE
00000010 l       *ABS*	00000000 SAI3_SAI_AIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI3_SAI_AIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI3_SAI_AIM_LFSDETIE
40016018 l       *ABS*	00000000 SAI3_SAI_ASR
00000001 l       *ABS*	00000000 SAI3_SAI_ASR_OVRUDR
00000002 l       *ABS*	00000000 SAI3_SAI_ASR_MUTEDET
00000004 l       *ABS*	00000000 SAI3_SAI_ASR_WCKCFG
00000008 l       *ABS*	00000000 SAI3_SAI_ASR_FREQ
00000010 l       *ABS*	00000000 SAI3_SAI_ASR_CNRDY
00000020 l       *ABS*	00000000 SAI3_SAI_ASR_AFSDET
00000040 l       *ABS*	00000000 SAI3_SAI_ASR_LFSDET
00000010 l       *ABS*	00000000 SAI3_SAI_ASR_FLVL_Shift
4001601c l       *ABS*	00000000 SAI3_SAI_ACLRFR
00000001 l       *ABS*	00000000 SAI3_SAI_ACLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI3_SAI_ACLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI3_SAI_ACLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI3_SAI_ACLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI3_SAI_ACLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI3_SAI_ACLRFR_CLFSDET
40016020 l       *ABS*	00000000 SAI3_SAI_ADR
00000000 l       *ABS*	00000000 SAI3_SAI_ADR_DATA_Shift
40016024 l       *ABS*	00000000 SAI3_SAI_BCR1
00000000 l       *ABS*	00000000 SAI3_SAI_BCR1_MODE_Shift
00000002 l       *ABS*	00000000 SAI3_SAI_BCR1_PRTCFG_Shift
00000005 l       *ABS*	00000000 SAI3_SAI_BCR1_DS_Shift
00000100 l       *ABS*	00000000 SAI3_SAI_BCR1_LSBFIRST
00000200 l       *ABS*	00000000 SAI3_SAI_BCR1_CKSTR
0000000a l       *ABS*	00000000 SAI3_SAI_BCR1_SYNCEN_Shift
00001000 l       *ABS*	00000000 SAI3_SAI_BCR1_MONO
00002000 l       *ABS*	00000000 SAI3_SAI_BCR1_OUTDRIV
00010000 l       *ABS*	00000000 SAI3_SAI_BCR1_SAIXEN
00020000 l       *ABS*	00000000 SAI3_SAI_BCR1_DMAEN
00080000 l       *ABS*	00000000 SAI3_SAI_BCR1_NOMCK
00000014 l       *ABS*	00000000 SAI3_SAI_BCR1_MCKDIV_Shift
04000000 l       *ABS*	00000000 SAI3_SAI_BCR1_OSR
40016028 l       *ABS*	00000000 SAI3_SAI_BCR2
00000000 l       *ABS*	00000000 SAI3_SAI_BCR2_FTH_Shift
00000008 l       *ABS*	00000000 SAI3_SAI_BCR2_FFLUSH
00000010 l       *ABS*	00000000 SAI3_SAI_BCR2_TRIS
00000020 l       *ABS*	00000000 SAI3_SAI_BCR2_MUTE
00000040 l       *ABS*	00000000 SAI3_SAI_BCR2_MUTEVAL
00000007 l       *ABS*	00000000 SAI3_SAI_BCR2_MUTECNT_Shift
00002000 l       *ABS*	00000000 SAI3_SAI_BCR2_CPL
0000000e l       *ABS*	00000000 SAI3_SAI_BCR2_COMP_Shift
4001602c l       *ABS*	00000000 SAI3_SAI_BFRCR
00000000 l       *ABS*	00000000 SAI3_SAI_BFRCR_FRL_Shift
00000008 l       *ABS*	00000000 SAI3_SAI_BFRCR_FSALL_Shift
00010000 l       *ABS*	00000000 SAI3_SAI_BFRCR_FSDEF
00020000 l       *ABS*	00000000 SAI3_SAI_BFRCR_FSPOL
00040000 l       *ABS*	00000000 SAI3_SAI_BFRCR_FSOFF
40016030 l       *ABS*	00000000 SAI3_SAI_BSLOTR
00000000 l       *ABS*	00000000 SAI3_SAI_BSLOTR_FBOFF_Shift
00000006 l       *ABS*	00000000 SAI3_SAI_BSLOTR_SLOTSZ_Shift
00000008 l       *ABS*	00000000 SAI3_SAI_BSLOTR_NBSLOT_Shift
00000010 l       *ABS*	00000000 SAI3_SAI_BSLOTR_SLOTEN_Shift
40016034 l       *ABS*	00000000 SAI3_SAI_BIM
00000001 l       *ABS*	00000000 SAI3_SAI_BIM_OVRUDRIE
00000002 l       *ABS*	00000000 SAI3_SAI_BIM_MUTEDETIE
00000004 l       *ABS*	00000000 SAI3_SAI_BIM_WCKCFGIE
00000008 l       *ABS*	00000000 SAI3_SAI_BIM_FREQIE
00000010 l       *ABS*	00000000 SAI3_SAI_BIM_CNRDYIE
00000020 l       *ABS*	00000000 SAI3_SAI_BIM_AFSDETIE
00000040 l       *ABS*	00000000 SAI3_SAI_BIM_LFSDETIE
40016038 l       *ABS*	00000000 SAI3_SAI_BSR
00000001 l       *ABS*	00000000 SAI3_SAI_BSR_OVRUDR
00000002 l       *ABS*	00000000 SAI3_SAI_BSR_MUTEDET
00000004 l       *ABS*	00000000 SAI3_SAI_BSR_WCKCFG
00000008 l       *ABS*	00000000 SAI3_SAI_BSR_FREQ
00000010 l       *ABS*	00000000 SAI3_SAI_BSR_CNRDY
00000020 l       *ABS*	00000000 SAI3_SAI_BSR_AFSDET
00000040 l       *ABS*	00000000 SAI3_SAI_BSR_LFSDET
00000010 l       *ABS*	00000000 SAI3_SAI_BSR_FLVL_Shift
4001603c l       *ABS*	00000000 SAI3_SAI_BCLRFR
00000001 l       *ABS*	00000000 SAI3_SAI_BCLRFR_COVRUDR
00000002 l       *ABS*	00000000 SAI3_SAI_BCLRFR_CMUTEDET
00000004 l       *ABS*	00000000 SAI3_SAI_BCLRFR_CWCKCFG
00000010 l       *ABS*	00000000 SAI3_SAI_BCLRFR_CCNRDY
00000020 l       *ABS*	00000000 SAI3_SAI_BCLRFR_CAFSDET
00000040 l       *ABS*	00000000 SAI3_SAI_BCLRFR_CLFSDET
40016040 l       *ABS*	00000000 SAI3_SAI_BDR
00000000 l       *ABS*	00000000 SAI3_SAI_BDR_DATA_Shift
40016044 l       *ABS*	00000000 SAI3_SAI_PDMCR
00000001 l       *ABS*	00000000 SAI3_SAI_PDMCR_PDMEN
00000004 l       *ABS*	00000000 SAI3_SAI_PDMCR_MICNBR_Shift
00000100 l       *ABS*	00000000 SAI3_SAI_PDMCR_CKEN1
00000200 l       *ABS*	00000000 SAI3_SAI_PDMCR_CKEN2
00000400 l       *ABS*	00000000 SAI3_SAI_PDMCR_CKEN3
00000800 l       *ABS*	00000000 SAI3_SAI_PDMCR_CKEN4
40016048 l       *ABS*	00000000 SAI3_SAI_PDMDLY
00000000 l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM1L_Shift
00000004 l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM1R_Shift
00000008 l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM2L_Shift
0000000c l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM2R_Shift
00000010 l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM3L_Shift
00000014 l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM3R_Shift
00000018 l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM4L_Shift
0000001c l       *ABS*	00000000 SAI3_SAI_PDMDLY_DLYM4R_Shift
52007000 l       *ABS*	00000000 SDMMC1_BASE
52007000 l       *ABS*	00000000 SDMMC1_POWER
00000000 l       *ABS*	00000000 SDMMC1_POWER_PWRCTRL_Shift
00000004 l       *ABS*	00000000 SDMMC1_POWER_VSWITCH
00000008 l       *ABS*	00000000 SDMMC1_POWER_VSWITCHEN
00000010 l       *ABS*	00000000 SDMMC1_POWER_DIRPOL
52007004 l       *ABS*	00000000 SDMMC1_CLKCR
00000000 l       *ABS*	00000000 SDMMC1_CLKCR_CLKDIV_Shift
00001000 l       *ABS*	00000000 SDMMC1_CLKCR_PWRSAV
0000000e l       *ABS*	00000000 SDMMC1_CLKCR_WIDBUS_Shift
00010000 l       *ABS*	00000000 SDMMC1_CLKCR_NEGEDGE
00020000 l       *ABS*	00000000 SDMMC1_CLKCR_HWFC_EN
00040000 l       *ABS*	00000000 SDMMC1_CLKCR_DDR
00080000 l       *ABS*	00000000 SDMMC1_CLKCR_BUSSPEED
00000014 l       *ABS*	00000000 SDMMC1_CLKCR_SELCLKRX_Shift
52007008 l       *ABS*	00000000 SDMMC1_ARGR
00000000 l       *ABS*	00000000 SDMMC1_ARGR_CMDARG_Shift
5200700c l       *ABS*	00000000 SDMMC1_CMDR
00000000 l       *ABS*	00000000 SDMMC1_CMDR_CMDINDEX_Shift
00000040 l       *ABS*	00000000 SDMMC1_CMDR_CMDTRANS
00000080 l       *ABS*	00000000 SDMMC1_CMDR_CMDSTOP
00000008 l       *ABS*	00000000 SDMMC1_CMDR_WAITRESP_Shift
00000400 l       *ABS*	00000000 SDMMC1_CMDR_WAITINT
00000800 l       *ABS*	00000000 SDMMC1_CMDR_WAITPEND
00001000 l       *ABS*	00000000 SDMMC1_CMDR_CPSMEN
00002000 l       *ABS*	00000000 SDMMC1_CMDR_DTHOLD
00004000 l       *ABS*	00000000 SDMMC1_CMDR_BOOTMODE
00008000 l       *ABS*	00000000 SDMMC1_CMDR_BOOTEN
00010000 l       *ABS*	00000000 SDMMC1_CMDR_CMDSUSPEND
52007014 l       *ABS*	00000000 SDMMC1_RESP1R
00000000 l       *ABS*	00000000 SDMMC1_RESP1R_CARDSTATUS1_Shift
52007018 l       *ABS*	00000000 SDMMC1_RESP2R
00000000 l       *ABS*	00000000 SDMMC1_RESP2R_CARDSTATUS2_Shift
5200701c l       *ABS*	00000000 SDMMC1_RESP3R
00000000 l       *ABS*	00000000 SDMMC1_RESP3R_CARDSTATUS3_Shift
52007020 l       *ABS*	00000000 SDMMC1_RESP4R
00000000 l       *ABS*	00000000 SDMMC1_RESP4R_CARDSTATUS4_Shift
52007024 l       *ABS*	00000000 SDMMC1_DTIMER
00000000 l       *ABS*	00000000 SDMMC1_DTIMER_DATATIME_Shift
52007028 l       *ABS*	00000000 SDMMC1_DLENR
00000000 l       *ABS*	00000000 SDMMC1_DLENR_DATALENGTH_Shift
5200702c l       *ABS*	00000000 SDMMC1_DCTRL
00000001 l       *ABS*	00000000 SDMMC1_DCTRL_DTEN
00000002 l       *ABS*	00000000 SDMMC1_DCTRL_DTDIR
00000002 l       *ABS*	00000000 SDMMC1_DCTRL_DTMODE_Shift
00000004 l       *ABS*	00000000 SDMMC1_DCTRL_DBLOCKSIZE_Shift
00000100 l       *ABS*	00000000 SDMMC1_DCTRL_RWSTART
00000200 l       *ABS*	00000000 SDMMC1_DCTRL_RWSTOP
00000400 l       *ABS*	00000000 SDMMC1_DCTRL_RWMOD
00000800 l       *ABS*	00000000 SDMMC1_DCTRL_SDIOEN
00001000 l       *ABS*	00000000 SDMMC1_DCTRL_BOOTACKEN
00002000 l       *ABS*	00000000 SDMMC1_DCTRL_FIFORST
52007030 l       *ABS*	00000000 SDMMC1_DCNTR
00000000 l       *ABS*	00000000 SDMMC1_DCNTR_DATACOUNT_Shift
52007034 l       *ABS*	00000000 SDMMC1_STAR
00000001 l       *ABS*	00000000 SDMMC1_STAR_CCRCFAIL
00000002 l       *ABS*	00000000 SDMMC1_STAR_DCRCFAIL
00000004 l       *ABS*	00000000 SDMMC1_STAR_CTIMEOUT
00000008 l       *ABS*	00000000 SDMMC1_STAR_DTIMEOUT
00000010 l       *ABS*	00000000 SDMMC1_STAR_TXUNDERR
00000020 l       *ABS*	00000000 SDMMC1_STAR_RXOVERR
00000040 l       *ABS*	00000000 SDMMC1_STAR_CMDREND
00000080 l       *ABS*	00000000 SDMMC1_STAR_CMDSENT
00000100 l       *ABS*	00000000 SDMMC1_STAR_DATAEND
00000200 l       *ABS*	00000000 SDMMC1_STAR_DHOLD
00000400 l       *ABS*	00000000 SDMMC1_STAR_DBCKEND
00000800 l       *ABS*	00000000 SDMMC1_STAR_DABORT
00001000 l       *ABS*	00000000 SDMMC1_STAR_DPSMACT
00002000 l       *ABS*	00000000 SDMMC1_STAR_CPSMACT
00004000 l       *ABS*	00000000 SDMMC1_STAR_TXFIFOHE
00008000 l       *ABS*	00000000 SDMMC1_STAR_RXFIFOHF
00010000 l       *ABS*	00000000 SDMMC1_STAR_TXFIFOF
00020000 l       *ABS*	00000000 SDMMC1_STAR_RXFIFOF
00040000 l       *ABS*	00000000 SDMMC1_STAR_TXFIFOE
00080000 l       *ABS*	00000000 SDMMC1_STAR_RXFIFOE
00100000 l       *ABS*	00000000 SDMMC1_STAR_BUSYD0
00200000 l       *ABS*	00000000 SDMMC1_STAR_BUSYD0END
00400000 l       *ABS*	00000000 SDMMC1_STAR_SDIOIT
00800000 l       *ABS*	00000000 SDMMC1_STAR_ACKFAIL
01000000 l       *ABS*	00000000 SDMMC1_STAR_ACKTIMEOUT
02000000 l       *ABS*	00000000 SDMMC1_STAR_VSWEND
04000000 l       *ABS*	00000000 SDMMC1_STAR_CKSTOP
08000000 l       *ABS*	00000000 SDMMC1_STAR_IDMATE
10000000 l       *ABS*	00000000 SDMMC1_STAR_IDMABTC
52007038 l       *ABS*	00000000 SDMMC1_ICR
00000001 l       *ABS*	00000000 SDMMC1_ICR_CCRCFAILC
00000002 l       *ABS*	00000000 SDMMC1_ICR_DCRCFAILC
00000004 l       *ABS*	00000000 SDMMC1_ICR_CTIMEOUTC
00000008 l       *ABS*	00000000 SDMMC1_ICR_DTIMEOUTC
00000010 l       *ABS*	00000000 SDMMC1_ICR_TXUNDERRC
00000020 l       *ABS*	00000000 SDMMC1_ICR_RXOVERRC
00000040 l       *ABS*	00000000 SDMMC1_ICR_CMDRENDC
00000080 l       *ABS*	00000000 SDMMC1_ICR_CMDSENTC
00000100 l       *ABS*	00000000 SDMMC1_ICR_DATAENDC
00000200 l       *ABS*	00000000 SDMMC1_ICR_DHOLDC
00000400 l       *ABS*	00000000 SDMMC1_ICR_DBCKENDC
00000800 l       *ABS*	00000000 SDMMC1_ICR_DABORTC
00200000 l       *ABS*	00000000 SDMMC1_ICR_BUSYD0ENDC
00400000 l       *ABS*	00000000 SDMMC1_ICR_SDIOITC
00800000 l       *ABS*	00000000 SDMMC1_ICR_ACKFAILC
01000000 l       *ABS*	00000000 SDMMC1_ICR_ACKTIMEOUTC
02000000 l       *ABS*	00000000 SDMMC1_ICR_VSWENDC
04000000 l       *ABS*	00000000 SDMMC1_ICR_CKSTOPC
08000000 l       *ABS*	00000000 SDMMC1_ICR_IDMATEC
10000000 l       *ABS*	00000000 SDMMC1_ICR_IDMABTCC
5200703c l       *ABS*	00000000 SDMMC1_MASKR
00000001 l       *ABS*	00000000 SDMMC1_MASKR_CCRCFAILIE
00000002 l       *ABS*	00000000 SDMMC1_MASKR_DCRCFAILIE
00000004 l       *ABS*	00000000 SDMMC1_MASKR_CTIMEOUTIE
00000008 l       *ABS*	00000000 SDMMC1_MASKR_DTIMEOUTIE
00000010 l       *ABS*	00000000 SDMMC1_MASKR_TXUNDERRIE
00000020 l       *ABS*	00000000 SDMMC1_MASKR_RXOVERRIE
00000040 l       *ABS*	00000000 SDMMC1_MASKR_CMDRENDIE
00000080 l       *ABS*	00000000 SDMMC1_MASKR_CMDSENTIE
00000100 l       *ABS*	00000000 SDMMC1_MASKR_DATAENDIE
00000200 l       *ABS*	00000000 SDMMC1_MASKR_DHOLDIE
00000400 l       *ABS*	00000000 SDMMC1_MASKR_DBCKENDIE
00000800 l       *ABS*	00000000 SDMMC1_MASKR_DABORTIE
00004000 l       *ABS*	00000000 SDMMC1_MASKR_TXFIFOHEIE
00008000 l       *ABS*	00000000 SDMMC1_MASKR_RXFIFOHFIE
00020000 l       *ABS*	00000000 SDMMC1_MASKR_RXFIFOFIE
00040000 l       *ABS*	00000000 SDMMC1_MASKR_TXFIFOEIE
00200000 l       *ABS*	00000000 SDMMC1_MASKR_BUSYD0ENDIE
00400000 l       *ABS*	00000000 SDMMC1_MASKR_SDIOITIE
00800000 l       *ABS*	00000000 SDMMC1_MASKR_ACKFAILIE
01000000 l       *ABS*	00000000 SDMMC1_MASKR_ACKTIMEOUTIE
02000000 l       *ABS*	00000000 SDMMC1_MASKR_VSWENDIE
04000000 l       *ABS*	00000000 SDMMC1_MASKR_CKSTOPIE
10000000 l       *ABS*	00000000 SDMMC1_MASKR_IDMABTCIE
52007040 l       *ABS*	00000000 SDMMC1_ACKTIMER
00000000 l       *ABS*	00000000 SDMMC1_ACKTIMER_ACKTIME_Shift
52007050 l       *ABS*	00000000 SDMMC1_IDMACTRLR
00000001 l       *ABS*	00000000 SDMMC1_IDMACTRLR_IDMAEN
00000002 l       *ABS*	00000000 SDMMC1_IDMACTRLR_IDMABMODE
00000004 l       *ABS*	00000000 SDMMC1_IDMACTRLR_IDMABACT
52007054 l       *ABS*	00000000 SDMMC1_IDMABSIZER
00000005 l       *ABS*	00000000 SDMMC1_IDMABSIZER_IDMABNDT_Shift
52007058 l       *ABS*	00000000 SDMMC1_IDMABASE0R
00000000 l       *ABS*	00000000 SDMMC1_IDMABASE0R_IDMABASE0_Shift
5200705c l       *ABS*	00000000 SDMMC1_IDMABASE1R
00000000 l       *ABS*	00000000 SDMMC1_IDMABASE1R_IDMABASE1_Shift
52007080 l       *ABS*	00000000 SDMMC1_FIFOR
00000000 l       *ABS*	00000000 SDMMC1_FIFOR_FIFODATA_Shift
520073f4 l       *ABS*	00000000 SDMMC1_VER
00000000 l       *ABS*	00000000 SDMMC1_VER_MINREV_Shift
00000004 l       *ABS*	00000000 SDMMC1_VER_MAJREV_Shift
520073f8 l       *ABS*	00000000 SDMMC1_ID
00000000 l       *ABS*	00000000 SDMMC1_ID_IP_ID_Shift
52007010 l       *ABS*	00000000 SDMMC1_RESPCMDR
00000000 l       *ABS*	00000000 SDMMC1_RESPCMDR_RESPCMD_Shift
48022400 l       *ABS*	00000000 SDMMC2_BASE
48022400 l       *ABS*	00000000 SDMMC2_POWER
00000000 l       *ABS*	00000000 SDMMC2_POWER_PWRCTRL_Shift
00000004 l       *ABS*	00000000 SDMMC2_POWER_VSWITCH
00000008 l       *ABS*	00000000 SDMMC2_POWER_VSWITCHEN
00000010 l       *ABS*	00000000 SDMMC2_POWER_DIRPOL
48022404 l       *ABS*	00000000 SDMMC2_CLKCR
00000000 l       *ABS*	00000000 SDMMC2_CLKCR_CLKDIV_Shift
00001000 l       *ABS*	00000000 SDMMC2_CLKCR_PWRSAV
0000000e l       *ABS*	00000000 SDMMC2_CLKCR_WIDBUS_Shift
00010000 l       *ABS*	00000000 SDMMC2_CLKCR_NEGEDGE
00020000 l       *ABS*	00000000 SDMMC2_CLKCR_HWFC_EN
00040000 l       *ABS*	00000000 SDMMC2_CLKCR_DDR
00080000 l       *ABS*	00000000 SDMMC2_CLKCR_BUSSPEED
00000014 l       *ABS*	00000000 SDMMC2_CLKCR_SELCLKRX_Shift
48022408 l       *ABS*	00000000 SDMMC2_ARGR
00000000 l       *ABS*	00000000 SDMMC2_ARGR_CMDARG_Shift
4802240c l       *ABS*	00000000 SDMMC2_CMDR
00000000 l       *ABS*	00000000 SDMMC2_CMDR_CMDINDEX_Shift
00000040 l       *ABS*	00000000 SDMMC2_CMDR_CMDTRANS
00000080 l       *ABS*	00000000 SDMMC2_CMDR_CMDSTOP
00000008 l       *ABS*	00000000 SDMMC2_CMDR_WAITRESP_Shift
00000400 l       *ABS*	00000000 SDMMC2_CMDR_WAITINT
00000800 l       *ABS*	00000000 SDMMC2_CMDR_WAITPEND
00001000 l       *ABS*	00000000 SDMMC2_CMDR_CPSMEN
00002000 l       *ABS*	00000000 SDMMC2_CMDR_DTHOLD
00004000 l       *ABS*	00000000 SDMMC2_CMDR_BOOTMODE
00008000 l       *ABS*	00000000 SDMMC2_CMDR_BOOTEN
00010000 l       *ABS*	00000000 SDMMC2_CMDR_CMDSUSPEND
48022414 l       *ABS*	00000000 SDMMC2_RESP1R
00000000 l       *ABS*	00000000 SDMMC2_RESP1R_CARDSTATUS1_Shift
48022418 l       *ABS*	00000000 SDMMC2_RESP2R
00000000 l       *ABS*	00000000 SDMMC2_RESP2R_CARDSTATUS2_Shift
4802241c l       *ABS*	00000000 SDMMC2_RESP3R
00000000 l       *ABS*	00000000 SDMMC2_RESP3R_CARDSTATUS3_Shift
48022420 l       *ABS*	00000000 SDMMC2_RESP4R
00000000 l       *ABS*	00000000 SDMMC2_RESP4R_CARDSTATUS4_Shift
48022424 l       *ABS*	00000000 SDMMC2_DTIMER
00000000 l       *ABS*	00000000 SDMMC2_DTIMER_DATATIME_Shift
48022428 l       *ABS*	00000000 SDMMC2_DLENR
00000000 l       *ABS*	00000000 SDMMC2_DLENR_DATALENGTH_Shift
4802242c l       *ABS*	00000000 SDMMC2_DCTRL
00000001 l       *ABS*	00000000 SDMMC2_DCTRL_DTEN
00000002 l       *ABS*	00000000 SDMMC2_DCTRL_DTDIR
00000002 l       *ABS*	00000000 SDMMC2_DCTRL_DTMODE_Shift
00000004 l       *ABS*	00000000 SDMMC2_DCTRL_DBLOCKSIZE_Shift
00000100 l       *ABS*	00000000 SDMMC2_DCTRL_RWSTART
00000200 l       *ABS*	00000000 SDMMC2_DCTRL_RWSTOP
00000400 l       *ABS*	00000000 SDMMC2_DCTRL_RWMOD
00000800 l       *ABS*	00000000 SDMMC2_DCTRL_SDIOEN
00001000 l       *ABS*	00000000 SDMMC2_DCTRL_BOOTACKEN
00002000 l       *ABS*	00000000 SDMMC2_DCTRL_FIFORST
48022430 l       *ABS*	00000000 SDMMC2_DCNTR
00000000 l       *ABS*	00000000 SDMMC2_DCNTR_DATACOUNT_Shift
48022434 l       *ABS*	00000000 SDMMC2_STAR
00000001 l       *ABS*	00000000 SDMMC2_STAR_CCRCFAIL
00000002 l       *ABS*	00000000 SDMMC2_STAR_DCRCFAIL
00000004 l       *ABS*	00000000 SDMMC2_STAR_CTIMEOUT
00000008 l       *ABS*	00000000 SDMMC2_STAR_DTIMEOUT
00000010 l       *ABS*	00000000 SDMMC2_STAR_TXUNDERR
00000020 l       *ABS*	00000000 SDMMC2_STAR_RXOVERR
00000040 l       *ABS*	00000000 SDMMC2_STAR_CMDREND
00000080 l       *ABS*	00000000 SDMMC2_STAR_CMDSENT
00000100 l       *ABS*	00000000 SDMMC2_STAR_DATAEND
00000200 l       *ABS*	00000000 SDMMC2_STAR_DHOLD
00000400 l       *ABS*	00000000 SDMMC2_STAR_DBCKEND
00000800 l       *ABS*	00000000 SDMMC2_STAR_DABORT
00001000 l       *ABS*	00000000 SDMMC2_STAR_DPSMACT
00002000 l       *ABS*	00000000 SDMMC2_STAR_CPSMACT
00004000 l       *ABS*	00000000 SDMMC2_STAR_TXFIFOHE
00008000 l       *ABS*	00000000 SDMMC2_STAR_RXFIFOHF
00010000 l       *ABS*	00000000 SDMMC2_STAR_TXFIFOF
00020000 l       *ABS*	00000000 SDMMC2_STAR_RXFIFOF
00040000 l       *ABS*	00000000 SDMMC2_STAR_TXFIFOE
00080000 l       *ABS*	00000000 SDMMC2_STAR_RXFIFOE
00100000 l       *ABS*	00000000 SDMMC2_STAR_BUSYD0
00200000 l       *ABS*	00000000 SDMMC2_STAR_BUSYD0END
00400000 l       *ABS*	00000000 SDMMC2_STAR_SDIOIT
00800000 l       *ABS*	00000000 SDMMC2_STAR_ACKFAIL
01000000 l       *ABS*	00000000 SDMMC2_STAR_ACKTIMEOUT
02000000 l       *ABS*	00000000 SDMMC2_STAR_VSWEND
04000000 l       *ABS*	00000000 SDMMC2_STAR_CKSTOP
08000000 l       *ABS*	00000000 SDMMC2_STAR_IDMATE
10000000 l       *ABS*	00000000 SDMMC2_STAR_IDMABTC
48022438 l       *ABS*	00000000 SDMMC2_ICR
00000001 l       *ABS*	00000000 SDMMC2_ICR_CCRCFAILC
00000002 l       *ABS*	00000000 SDMMC2_ICR_DCRCFAILC
00000004 l       *ABS*	00000000 SDMMC2_ICR_CTIMEOUTC
00000008 l       *ABS*	00000000 SDMMC2_ICR_DTIMEOUTC
00000010 l       *ABS*	00000000 SDMMC2_ICR_TXUNDERRC
00000020 l       *ABS*	00000000 SDMMC2_ICR_RXOVERRC
00000040 l       *ABS*	00000000 SDMMC2_ICR_CMDRENDC
00000080 l       *ABS*	00000000 SDMMC2_ICR_CMDSENTC
00000100 l       *ABS*	00000000 SDMMC2_ICR_DATAENDC
00000200 l       *ABS*	00000000 SDMMC2_ICR_DHOLDC
00000400 l       *ABS*	00000000 SDMMC2_ICR_DBCKENDC
00000800 l       *ABS*	00000000 SDMMC2_ICR_DABORTC
00200000 l       *ABS*	00000000 SDMMC2_ICR_BUSYD0ENDC
00400000 l       *ABS*	00000000 SDMMC2_ICR_SDIOITC
00800000 l       *ABS*	00000000 SDMMC2_ICR_ACKFAILC
01000000 l       *ABS*	00000000 SDMMC2_ICR_ACKTIMEOUTC
02000000 l       *ABS*	00000000 SDMMC2_ICR_VSWENDC
04000000 l       *ABS*	00000000 SDMMC2_ICR_CKSTOPC
08000000 l       *ABS*	00000000 SDMMC2_ICR_IDMATEC
10000000 l       *ABS*	00000000 SDMMC2_ICR_IDMABTCC
4802243c l       *ABS*	00000000 SDMMC2_MASKR
00000001 l       *ABS*	00000000 SDMMC2_MASKR_CCRCFAILIE
00000002 l       *ABS*	00000000 SDMMC2_MASKR_DCRCFAILIE
00000004 l       *ABS*	00000000 SDMMC2_MASKR_CTIMEOUTIE
00000008 l       *ABS*	00000000 SDMMC2_MASKR_DTIMEOUTIE
00000010 l       *ABS*	00000000 SDMMC2_MASKR_TXUNDERRIE
00000020 l       *ABS*	00000000 SDMMC2_MASKR_RXOVERRIE
00000040 l       *ABS*	00000000 SDMMC2_MASKR_CMDRENDIE
00000080 l       *ABS*	00000000 SDMMC2_MASKR_CMDSENTIE
00000100 l       *ABS*	00000000 SDMMC2_MASKR_DATAENDIE
00000200 l       *ABS*	00000000 SDMMC2_MASKR_DHOLDIE
00000400 l       *ABS*	00000000 SDMMC2_MASKR_DBCKENDIE
00000800 l       *ABS*	00000000 SDMMC2_MASKR_DABORTIE
00004000 l       *ABS*	00000000 SDMMC2_MASKR_TXFIFOHEIE
00008000 l       *ABS*	00000000 SDMMC2_MASKR_RXFIFOHFIE
00020000 l       *ABS*	00000000 SDMMC2_MASKR_RXFIFOFIE
00040000 l       *ABS*	00000000 SDMMC2_MASKR_TXFIFOEIE
00200000 l       *ABS*	00000000 SDMMC2_MASKR_BUSYD0ENDIE
00400000 l       *ABS*	00000000 SDMMC2_MASKR_SDIOITIE
00800000 l       *ABS*	00000000 SDMMC2_MASKR_ACKFAILIE
01000000 l       *ABS*	00000000 SDMMC2_MASKR_ACKTIMEOUTIE
02000000 l       *ABS*	00000000 SDMMC2_MASKR_VSWENDIE
04000000 l       *ABS*	00000000 SDMMC2_MASKR_CKSTOPIE
10000000 l       *ABS*	00000000 SDMMC2_MASKR_IDMABTCIE
48022440 l       *ABS*	00000000 SDMMC2_ACKTIMER
00000000 l       *ABS*	00000000 SDMMC2_ACKTIMER_ACKTIME_Shift
48022450 l       *ABS*	00000000 SDMMC2_IDMACTRLR
00000001 l       *ABS*	00000000 SDMMC2_IDMACTRLR_IDMAEN
00000002 l       *ABS*	00000000 SDMMC2_IDMACTRLR_IDMABMODE
00000004 l       *ABS*	00000000 SDMMC2_IDMACTRLR_IDMABACT
48022454 l       *ABS*	00000000 SDMMC2_IDMABSIZER
00000005 l       *ABS*	00000000 SDMMC2_IDMABSIZER_IDMABNDT_Shift
48022458 l       *ABS*	00000000 SDMMC2_IDMABASE0R
00000000 l       *ABS*	00000000 SDMMC2_IDMABASE0R_IDMABASE0_Shift
4802245c l       *ABS*	00000000 SDMMC2_IDMABASE1R
00000000 l       *ABS*	00000000 SDMMC2_IDMABASE1R_IDMABASE1_Shift
48022480 l       *ABS*	00000000 SDMMC2_FIFOR
00000000 l       *ABS*	00000000 SDMMC2_FIFOR_FIFODATA_Shift
480227f4 l       *ABS*	00000000 SDMMC2_VER
00000000 l       *ABS*	00000000 SDMMC2_VER_MINREV_Shift
00000004 l       *ABS*	00000000 SDMMC2_VER_MAJREV_Shift
480227f8 l       *ABS*	00000000 SDMMC2_ID
00000000 l       *ABS*	00000000 SDMMC2_ID_IP_ID_Shift
48022410 l       *ABS*	00000000 SDMMC2_RESPCMDR
00000000 l       *ABS*	00000000 SDMMC2_RESPCMDR_RESPCMD_Shift
58003c00 l       *ABS*	00000000 VREFBUF_BASE
58003c00 l       *ABS*	00000000 VREFBUF_CSR
00000001 l       *ABS*	00000000 VREFBUF_CSR_ENVR
00000002 l       *ABS*	00000000 VREFBUF_CSR_HIZ
00000008 l       *ABS*	00000000 VREFBUF_CSR_VRR
00000004 l       *ABS*	00000000 VREFBUF_CSR_VRS_Shift
58003c04 l       *ABS*	00000000 VREFBUF_CCR
00000000 l       *ABS*	00000000 VREFBUF_CCR_TRIM_Shift
58004800 l       *ABS*	00000000 IWDG_BASE
58004800 l       *ABS*	00000000 IWDG_KR
00000000 l       *ABS*	00000000 IWDG_KR_KEY_Shift
58004804 l       *ABS*	00000000 IWDG_PR
00000000 l       *ABS*	00000000 IWDG_PR_PR_Shift
58004808 l       *ABS*	00000000 IWDG_RLR
00000000 l       *ABS*	00000000 IWDG_RLR_RL_Shift
5800480c l       *ABS*	00000000 IWDG_SR
00000001 l       *ABS*	00000000 IWDG_SR_PVU
00000002 l       *ABS*	00000000 IWDG_SR_RVU
00000004 l       *ABS*	00000000 IWDG_SR_WVU
58004810 l       *ABS*	00000000 IWDG_WINR
00000000 l       *ABS*	00000000 IWDG_WINR_WIN_Shift
50003000 l       *ABS*	00000000 WWDG_BASE
50003000 l       *ABS*	00000000 WWDG_CR
00000000 l       *ABS*	00000000 WWDG_CR_T_Shift
00000080 l       *ABS*	00000000 WWDG_CR_WDGA
50003004 l       *ABS*	00000000 WWDG_CFR
00000000 l       *ABS*	00000000 WWDG_CFR_W_Shift
0000000b l       *ABS*	00000000 WWDG_CFR_WDGTB_Shift
00000200 l       *ABS*	00000000 WWDG_CFR_EWI
50003008 l       *ABS*	00000000 WWDG_SR
00000001 l       *ABS*	00000000 WWDG_SR_EWIF
58024800 l       *ABS*	00000000 PWR_BASE
58024800 l       *ABS*	00000000 PWR_CR1
00000001 l       *ABS*	00000000 PWR_CR1_LPDS
00000010 l       *ABS*	00000000 PWR_CR1_PVDE
00000005 l       *ABS*	00000000 PWR_CR1_PLS_Shift
00000100 l       *ABS*	00000000 PWR_CR1_DBP
00000200 l       *ABS*	00000000 PWR_CR1_FLPS
0000000e l       *ABS*	00000000 PWR_CR1_SVOS_Shift
00010000 l       *ABS*	00000000 PWR_CR1_AVDEN
00000011 l       *ABS*	00000000 PWR_CR1_ALS_Shift
58024804 l       *ABS*	00000000 PWR_CSR1
00000010 l       *ABS*	00000000 PWR_CSR1_PVDO
00002000 l       *ABS*	00000000 PWR_CSR1_ACTVOSRDY
0000000e l       *ABS*	00000000 PWR_CSR1_ACTVOS_Shift
00010000 l       *ABS*	00000000 PWR_CSR1_AVDO
58024808 l       *ABS*	00000000 PWR_CR2
00000001 l       *ABS*	00000000 PWR_CR2_BREN
00000010 l       *ABS*	00000000 PWR_CR2_MONEN
00010000 l       *ABS*	00000000 PWR_CR2_BRRDY
00100000 l       *ABS*	00000000 PWR_CR2_VBATL
00200000 l       *ABS*	00000000 PWR_CR2_VBATH
00400000 l       *ABS*	00000000 PWR_CR2_TEMPL
00800000 l       *ABS*	00000000 PWR_CR2_TEMPH
5802480c l       *ABS*	00000000 PWR_CR3
00000001 l       *ABS*	00000000 PWR_CR3_BYPASS
00000002 l       *ABS*	00000000 PWR_CR3_LDOEN
00000004 l       *ABS*	00000000 PWR_CR3_SCUEN
00000100 l       *ABS*	00000000 PWR_CR3_VBE
00000200 l       *ABS*	00000000 PWR_CR3_VBRS
01000000 l       *ABS*	00000000 PWR_CR3_USB33DEN
02000000 l       *ABS*	00000000 PWR_CR3_USBREGEN
04000000 l       *ABS*	00000000 PWR_CR3_USB33RDY
58024810 l       *ABS*	00000000 PWR_CPUCR
00000001 l       *ABS*	00000000 PWR_CPUCR_PDDS_D1
00000002 l       *ABS*	00000000 PWR_CPUCR_PDDS_D2
00000004 l       *ABS*	00000000 PWR_CPUCR_PDDS_D3
00000020 l       *ABS*	00000000 PWR_CPUCR_STOPF
00000040 l       *ABS*	00000000 PWR_CPUCR_SBF
00000080 l       *ABS*	00000000 PWR_CPUCR_SBF_D1
00000100 l       *ABS*	00000000 PWR_CPUCR_SBF_D2
00000200 l       *ABS*	00000000 PWR_CPUCR_CSSF
00000800 l       *ABS*	00000000 PWR_CPUCR_RUN_D3
58024818 l       *ABS*	00000000 PWR_D3CR
00002000 l       *ABS*	00000000 PWR_D3CR_VOSRDY
0000000e l       *ABS*	00000000 PWR_D3CR_VOS_Shift
58024820 l       *ABS*	00000000 PWR_WKUPCR
00000000 l       *ABS*	00000000 PWR_WKUPCR_WKUPC_Shift
58024824 l       *ABS*	00000000 PWR_WKUPFR
00000001 l       *ABS*	00000000 PWR_WKUPFR_WKUPF1
00000002 l       *ABS*	00000000 PWR_WKUPFR_WKUPF2
00000004 l       *ABS*	00000000 PWR_WKUPFR_WKUPF3
00000008 l       *ABS*	00000000 PWR_WKUPFR_WKUPF4
00000010 l       *ABS*	00000000 PWR_WKUPFR_WKUPF5
00000020 l       *ABS*	00000000 PWR_WKUPFR_WKUPF6
58024828 l       *ABS*	00000000 PWR_WKUPEPR
00000001 l       *ABS*	00000000 PWR_WKUPEPR_WKUPEN1
00000002 l       *ABS*	00000000 PWR_WKUPEPR_WKUPEN2
00000004 l       *ABS*	00000000 PWR_WKUPEPR_WKUPEN3
00000008 l       *ABS*	00000000 PWR_WKUPEPR_WKUPEN4
00000010 l       *ABS*	00000000 PWR_WKUPEPR_WKUPEN5
00000020 l       *ABS*	00000000 PWR_WKUPEPR_WKUPEN6
00000100 l       *ABS*	00000000 PWR_WKUPEPR_WKUPP1
00000200 l       *ABS*	00000000 PWR_WKUPEPR_WKUPP2
00000400 l       *ABS*	00000000 PWR_WKUPEPR_WKUPP3
00000800 l       *ABS*	00000000 PWR_WKUPEPR_WKUPP4
00001000 l       *ABS*	00000000 PWR_WKUPEPR_WKUPP5
00002000 l       *ABS*	00000000 PWR_WKUPEPR_WKUPP6
00000010 l       *ABS*	00000000 PWR_WKUPEPR_WKUPPUPD1_Shift
00000012 l       *ABS*	00000000 PWR_WKUPEPR_WKUPPUPD2_Shift
00000014 l       *ABS*	00000000 PWR_WKUPEPR_WKUPPUPD3_Shift
00000016 l       *ABS*	00000000 PWR_WKUPEPR_WKUPPUPD4_Shift
00000018 l       *ABS*	00000000 PWR_WKUPEPR_WKUPPUPD5_Shift
0000001a l       *ABS*	00000000 PWR_WKUPEPR_WKUPPUPD6_Shift
40013000 l       *ABS*	00000000 SPI1_BASE
40013000 l       *ABS*	00000000 SPI1_CR1
00010000 l       *ABS*	00000000 SPI1_CR1_IOLOCK
00008000 l       *ABS*	00000000 SPI1_CR1_TCRCI
00004000 l       *ABS*	00000000 SPI1_CR1_RCRCI
00002000 l       *ABS*	00000000 SPI1_CR1_CRC33_17
00001000 l       *ABS*	00000000 SPI1_CR1_SSI
00000800 l       *ABS*	00000000 SPI1_CR1_HDDIR
00000400 l       *ABS*	00000000 SPI1_CR1_CSUSP
00000200 l       *ABS*	00000000 SPI1_CR1_CSTART
00000100 l       *ABS*	00000000 SPI1_CR1_MASRX
00000001 l       *ABS*	00000000 SPI1_CR1_SPE
40013004 l       *ABS*	00000000 SPI1_CR2
00000010 l       *ABS*	00000000 SPI1_CR2_TSER_Shift
00000000 l       *ABS*	00000000 SPI1_CR2_TSIZE_Shift
40013008 l       *ABS*	00000000 SPI1_CFG1
0000001c l       *ABS*	00000000 SPI1_CFG1_MBR_Shift
00400000 l       *ABS*	00000000 SPI1_CFG1_CRCEN
00000010 l       *ABS*	00000000 SPI1_CFG1_CRCSIZE_Shift
00008000 l       *ABS*	00000000 SPI1_CFG1_TXDMAEN
00004000 l       *ABS*	00000000 SPI1_CFG1_RXDMAEN
0000000b l       *ABS*	00000000 SPI1_CFG1_UDRDET_Shift
00000009 l       *ABS*	00000000 SPI1_CFG1_UDRCFG_Shift
00000005 l       *ABS*	00000000 SPI1_CFG1_FTHVL_Shift
00000000 l       *ABS*	00000000 SPI1_CFG1_DSIZE_Shift
4001300c l       *ABS*	00000000 SPI1_CFG2
80000000 l       *ABS*	00000000 SPI1_CFG2_AFCNTR
40000000 l       *ABS*	00000000 SPI1_CFG2_SSOM
20000000 l       *ABS*	00000000 SPI1_CFG2_SSOE
10000000 l       *ABS*	00000000 SPI1_CFG2_SSIOP
04000000 l       *ABS*	00000000 SPI1_CFG2_SSM
02000000 l       *ABS*	00000000 SPI1_CFG2_CPOL
01000000 l       *ABS*	00000000 SPI1_CFG2_CPHA
00800000 l       *ABS*	00000000 SPI1_CFG2_LSBFRST
00400000 l       *ABS*	00000000 SPI1_CFG2_MASTER
00000013 l       *ABS*	00000000 SPI1_CFG2_SP_Shift
00000011 l       *ABS*	00000000 SPI1_CFG2_COMM_Shift
00008000 l       *ABS*	00000000 SPI1_CFG2_IOSWP
00000004 l       *ABS*	00000000 SPI1_CFG2_MIDI_Shift
00000000 l       *ABS*	00000000 SPI1_CFG2_MSSI_Shift
40013010 l       *ABS*	00000000 SPI1_IER
00000400 l       *ABS*	00000000 SPI1_IER_TSERFIE
00000200 l       *ABS*	00000000 SPI1_IER_MODFIE
00000100 l       *ABS*	00000000 SPI1_IER_TIFREIE
00000080 l       *ABS*	00000000 SPI1_IER_CRCEIE
00000040 l       *ABS*	00000000 SPI1_IER_OVRIE
00000020 l       *ABS*	00000000 SPI1_IER_UDRIE
00000010 l       *ABS*	00000000 SPI1_IER_TXTFIE
00000008 l       *ABS*	00000000 SPI1_IER_EOTIE
00000004 l       *ABS*	00000000 SPI1_IER_DPXPIE
00000002 l       *ABS*	00000000 SPI1_IER_TXPIE
00000001 l       *ABS*	00000000 SPI1_IER_RXPIE
40013014 l       *ABS*	00000000 SPI1_SR
00000010 l       *ABS*	00000000 SPI1_SR_CTSIZE_Shift
00008000 l       *ABS*	00000000 SPI1_SR_RXWNE
0000000d l       *ABS*	00000000 SPI1_SR_RXPLVL_Shift
00001000 l       *ABS*	00000000 SPI1_SR_TXC
00000800 l       *ABS*	00000000 SPI1_SR_SUSP
00000400 l       *ABS*	00000000 SPI1_SR_TSERF
00000200 l       *ABS*	00000000 SPI1_SR_MODF
00000100 l       *ABS*	00000000 SPI1_SR_TIFRE
00000080 l       *ABS*	00000000 SPI1_SR_CRCE
00000040 l       *ABS*	00000000 SPI1_SR_OVR
00000020 l       *ABS*	00000000 SPI1_SR_UDR
00000010 l       *ABS*	00000000 SPI1_SR_TXTF
00000008 l       *ABS*	00000000 SPI1_SR_EOT
00000004 l       *ABS*	00000000 SPI1_SR_DXP
00000002 l       *ABS*	00000000 SPI1_SR_TXP
00000001 l       *ABS*	00000000 SPI1_SR_RXP
40013018 l       *ABS*	00000000 SPI1_IFCR
00000800 l       *ABS*	00000000 SPI1_IFCR_SUSPC
00000400 l       *ABS*	00000000 SPI1_IFCR_TSERFC
00000200 l       *ABS*	00000000 SPI1_IFCR_MODFC
00000100 l       *ABS*	00000000 SPI1_IFCR_TIFREC
00000080 l       *ABS*	00000000 SPI1_IFCR_CRCEC
00000040 l       *ABS*	00000000 SPI1_IFCR_OVRC
00000020 l       *ABS*	00000000 SPI1_IFCR_UDRC
00000010 l       *ABS*	00000000 SPI1_IFCR_TXTFC
00000008 l       *ABS*	00000000 SPI1_IFCR_EOTC
40013020 l       *ABS*	00000000 SPI1_TXDR
00000000 l       *ABS*	00000000 SPI1_TXDR_TXDR_Shift
40013030 l       *ABS*	00000000 SPI1_RXDR
00000000 l       *ABS*	00000000 SPI1_RXDR_RXDR_Shift
40013040 l       *ABS*	00000000 SPI1_CRCPOLY
00000000 l       *ABS*	00000000 SPI1_CRCPOLY_CRCPOLY_Shift
40013044 l       *ABS*	00000000 SPI1_TXCRC
00000000 l       *ABS*	00000000 SPI1_TXCRC_TXCRC_Shift
40013048 l       *ABS*	00000000 SPI1_RXCRC
00000000 l       *ABS*	00000000 SPI1_RXCRC_RXCRC_Shift
4001304c l       *ABS*	00000000 SPI1_UDRDR
00000000 l       *ABS*	00000000 SPI1_UDRDR_UDRDR_Shift
40013050 l       *ABS*	00000000 SPI1_CGFR
02000000 l       *ABS*	00000000 SPI1_CGFR_MCKOE
01000000 l       *ABS*	00000000 SPI1_CGFR_ODD
00000010 l       *ABS*	00000000 SPI1_CGFR_I2SDIV_Shift
00004000 l       *ABS*	00000000 SPI1_CGFR_DATFMT
00002000 l       *ABS*	00000000 SPI1_CGFR_WSINV
00001000 l       *ABS*	00000000 SPI1_CGFR_FIXCH
00000800 l       *ABS*	00000000 SPI1_CGFR_CKPOL
00000400 l       *ABS*	00000000 SPI1_CGFR_CHLEN
00000008 l       *ABS*	00000000 SPI1_CGFR_DATLEN_Shift
00000080 l       *ABS*	00000000 SPI1_CGFR_PCMSYNC
00000004 l       *ABS*	00000000 SPI1_CGFR_I2SSTD_Shift
00000001 l       *ABS*	00000000 SPI1_CGFR_I2SCFG_Shift
00000001 l       *ABS*	00000000 SPI1_CGFR_I2SMOD
40003800 l       *ABS*	00000000 SPI2_BASE
40003800 l       *ABS*	00000000 SPI2_CR1
00010000 l       *ABS*	00000000 SPI2_CR1_IOLOCK
00008000 l       *ABS*	00000000 SPI2_CR1_TCRCI
00004000 l       *ABS*	00000000 SPI2_CR1_RCRCI
00002000 l       *ABS*	00000000 SPI2_CR1_CRC33_17
00001000 l       *ABS*	00000000 SPI2_CR1_SSI
00000800 l       *ABS*	00000000 SPI2_CR1_HDDIR
00000400 l       *ABS*	00000000 SPI2_CR1_CSUSP
00000200 l       *ABS*	00000000 SPI2_CR1_CSTART
00000100 l       *ABS*	00000000 SPI2_CR1_MASRX
00000001 l       *ABS*	00000000 SPI2_CR1_SPE
40003804 l       *ABS*	00000000 SPI2_CR2
00000010 l       *ABS*	00000000 SPI2_CR2_TSER_Shift
00000000 l       *ABS*	00000000 SPI2_CR2_TSIZE_Shift
40003808 l       *ABS*	00000000 SPI2_CFG1
0000001c l       *ABS*	00000000 SPI2_CFG1_MBR_Shift
00400000 l       *ABS*	00000000 SPI2_CFG1_CRCEN
00000010 l       *ABS*	00000000 SPI2_CFG1_CRCSIZE_Shift
00008000 l       *ABS*	00000000 SPI2_CFG1_TXDMAEN
00004000 l       *ABS*	00000000 SPI2_CFG1_RXDMAEN
0000000b l       *ABS*	00000000 SPI2_CFG1_UDRDET_Shift
00000009 l       *ABS*	00000000 SPI2_CFG1_UDRCFG_Shift
00000005 l       *ABS*	00000000 SPI2_CFG1_FTHVL_Shift
00000000 l       *ABS*	00000000 SPI2_CFG1_DSIZE_Shift
4000380c l       *ABS*	00000000 SPI2_CFG2
80000000 l       *ABS*	00000000 SPI2_CFG2_AFCNTR
40000000 l       *ABS*	00000000 SPI2_CFG2_SSOM
20000000 l       *ABS*	00000000 SPI2_CFG2_SSOE
10000000 l       *ABS*	00000000 SPI2_CFG2_SSIOP
04000000 l       *ABS*	00000000 SPI2_CFG2_SSM
02000000 l       *ABS*	00000000 SPI2_CFG2_CPOL
01000000 l       *ABS*	00000000 SPI2_CFG2_CPHA
00800000 l       *ABS*	00000000 SPI2_CFG2_LSBFRST
00400000 l       *ABS*	00000000 SPI2_CFG2_MASTER
00000013 l       *ABS*	00000000 SPI2_CFG2_SP_Shift
00000011 l       *ABS*	00000000 SPI2_CFG2_COMM_Shift
00008000 l       *ABS*	00000000 SPI2_CFG2_IOSWP
00000004 l       *ABS*	00000000 SPI2_CFG2_MIDI_Shift
00000000 l       *ABS*	00000000 SPI2_CFG2_MSSI_Shift
40003810 l       *ABS*	00000000 SPI2_IER
00000400 l       *ABS*	00000000 SPI2_IER_TSERFIE
00000200 l       *ABS*	00000000 SPI2_IER_MODFIE
00000100 l       *ABS*	00000000 SPI2_IER_TIFREIE
00000080 l       *ABS*	00000000 SPI2_IER_CRCEIE
00000040 l       *ABS*	00000000 SPI2_IER_OVRIE
00000020 l       *ABS*	00000000 SPI2_IER_UDRIE
00000010 l       *ABS*	00000000 SPI2_IER_TXTFIE
00000008 l       *ABS*	00000000 SPI2_IER_EOTIE
00000004 l       *ABS*	00000000 SPI2_IER_DPXPIE
00000002 l       *ABS*	00000000 SPI2_IER_TXPIE
00000001 l       *ABS*	00000000 SPI2_IER_RXPIE
40003814 l       *ABS*	00000000 SPI2_SR
00000010 l       *ABS*	00000000 SPI2_SR_CTSIZE_Shift
00008000 l       *ABS*	00000000 SPI2_SR_RXWNE
0000000d l       *ABS*	00000000 SPI2_SR_RXPLVL_Shift
00001000 l       *ABS*	00000000 SPI2_SR_TXC
00000800 l       *ABS*	00000000 SPI2_SR_SUSP
00000400 l       *ABS*	00000000 SPI2_SR_TSERF
00000200 l       *ABS*	00000000 SPI2_SR_MODF
00000100 l       *ABS*	00000000 SPI2_SR_TIFRE
00000080 l       *ABS*	00000000 SPI2_SR_CRCE
00000040 l       *ABS*	00000000 SPI2_SR_OVR
00000020 l       *ABS*	00000000 SPI2_SR_UDR
00000010 l       *ABS*	00000000 SPI2_SR_TXTF
00000008 l       *ABS*	00000000 SPI2_SR_EOT
00000004 l       *ABS*	00000000 SPI2_SR_DXP
00000002 l       *ABS*	00000000 SPI2_SR_TXP
00000001 l       *ABS*	00000000 SPI2_SR_RXP
40003818 l       *ABS*	00000000 SPI2_IFCR
00000800 l       *ABS*	00000000 SPI2_IFCR_SUSPC
00000400 l       *ABS*	00000000 SPI2_IFCR_TSERFC
00000200 l       *ABS*	00000000 SPI2_IFCR_MODFC
00000100 l       *ABS*	00000000 SPI2_IFCR_TIFREC
00000080 l       *ABS*	00000000 SPI2_IFCR_CRCEC
00000040 l       *ABS*	00000000 SPI2_IFCR_OVRC
00000020 l       *ABS*	00000000 SPI2_IFCR_UDRC
00000010 l       *ABS*	00000000 SPI2_IFCR_TXTFC
00000008 l       *ABS*	00000000 SPI2_IFCR_EOTC
40003820 l       *ABS*	00000000 SPI2_TXDR
00000000 l       *ABS*	00000000 SPI2_TXDR_TXDR_Shift
40003830 l       *ABS*	00000000 SPI2_RXDR
00000000 l       *ABS*	00000000 SPI2_RXDR_RXDR_Shift
40003840 l       *ABS*	00000000 SPI2_CRCPOLY
00000000 l       *ABS*	00000000 SPI2_CRCPOLY_CRCPOLY_Shift
40003844 l       *ABS*	00000000 SPI2_TXCRC
00000000 l       *ABS*	00000000 SPI2_TXCRC_TXCRC_Shift
40003848 l       *ABS*	00000000 SPI2_RXCRC
00000000 l       *ABS*	00000000 SPI2_RXCRC_RXCRC_Shift
4000384c l       *ABS*	00000000 SPI2_UDRDR
00000000 l       *ABS*	00000000 SPI2_UDRDR_UDRDR_Shift
40003850 l       *ABS*	00000000 SPI2_CGFR
02000000 l       *ABS*	00000000 SPI2_CGFR_MCKOE
01000000 l       *ABS*	00000000 SPI2_CGFR_ODD
00000010 l       *ABS*	00000000 SPI2_CGFR_I2SDIV_Shift
00004000 l       *ABS*	00000000 SPI2_CGFR_DATFMT
00002000 l       *ABS*	00000000 SPI2_CGFR_WSINV
00001000 l       *ABS*	00000000 SPI2_CGFR_FIXCH
00000800 l       *ABS*	00000000 SPI2_CGFR_CKPOL
00000400 l       *ABS*	00000000 SPI2_CGFR_CHLEN
00000008 l       *ABS*	00000000 SPI2_CGFR_DATLEN_Shift
00000080 l       *ABS*	00000000 SPI2_CGFR_PCMSYNC
00000004 l       *ABS*	00000000 SPI2_CGFR_I2SSTD_Shift
00000001 l       *ABS*	00000000 SPI2_CGFR_I2SCFG_Shift
00000001 l       *ABS*	00000000 SPI2_CGFR_I2SMOD
40003c00 l       *ABS*	00000000 SPI3_BASE
40003c00 l       *ABS*	00000000 SPI3_CR1
00010000 l       *ABS*	00000000 SPI3_CR1_IOLOCK
00008000 l       *ABS*	00000000 SPI3_CR1_TCRCI
00004000 l       *ABS*	00000000 SPI3_CR1_RCRCI
00002000 l       *ABS*	00000000 SPI3_CR1_CRC33_17
00001000 l       *ABS*	00000000 SPI3_CR1_SSI
00000800 l       *ABS*	00000000 SPI3_CR1_HDDIR
00000400 l       *ABS*	00000000 SPI3_CR1_CSUSP
00000200 l       *ABS*	00000000 SPI3_CR1_CSTART
00000100 l       *ABS*	00000000 SPI3_CR1_MASRX
00000001 l       *ABS*	00000000 SPI3_CR1_SPE
40003c04 l       *ABS*	00000000 SPI3_CR2
00000010 l       *ABS*	00000000 SPI3_CR2_TSER_Shift
00000000 l       *ABS*	00000000 SPI3_CR2_TSIZE_Shift
40003c08 l       *ABS*	00000000 SPI3_CFG1
0000001c l       *ABS*	00000000 SPI3_CFG1_MBR_Shift
00400000 l       *ABS*	00000000 SPI3_CFG1_CRCEN
00000010 l       *ABS*	00000000 SPI3_CFG1_CRCSIZE_Shift
00008000 l       *ABS*	00000000 SPI3_CFG1_TXDMAEN
00004000 l       *ABS*	00000000 SPI3_CFG1_RXDMAEN
0000000b l       *ABS*	00000000 SPI3_CFG1_UDRDET_Shift
00000009 l       *ABS*	00000000 SPI3_CFG1_UDRCFG_Shift
00000005 l       *ABS*	00000000 SPI3_CFG1_FTHVL_Shift
00000000 l       *ABS*	00000000 SPI3_CFG1_DSIZE_Shift
40003c0c l       *ABS*	00000000 SPI3_CFG2
80000000 l       *ABS*	00000000 SPI3_CFG2_AFCNTR
40000000 l       *ABS*	00000000 SPI3_CFG2_SSOM
20000000 l       *ABS*	00000000 SPI3_CFG2_SSOE
10000000 l       *ABS*	00000000 SPI3_CFG2_SSIOP
04000000 l       *ABS*	00000000 SPI3_CFG2_SSM
02000000 l       *ABS*	00000000 SPI3_CFG2_CPOL
01000000 l       *ABS*	00000000 SPI3_CFG2_CPHA
00800000 l       *ABS*	00000000 SPI3_CFG2_LSBFRST
00400000 l       *ABS*	00000000 SPI3_CFG2_MASTER
00000013 l       *ABS*	00000000 SPI3_CFG2_SP_Shift
00000011 l       *ABS*	00000000 SPI3_CFG2_COMM_Shift
00008000 l       *ABS*	00000000 SPI3_CFG2_IOSWP
00000004 l       *ABS*	00000000 SPI3_CFG2_MIDI_Shift
00000000 l       *ABS*	00000000 SPI3_CFG2_MSSI_Shift
40003c10 l       *ABS*	00000000 SPI3_IER
00000400 l       *ABS*	00000000 SPI3_IER_TSERFIE
00000200 l       *ABS*	00000000 SPI3_IER_MODFIE
00000100 l       *ABS*	00000000 SPI3_IER_TIFREIE
00000080 l       *ABS*	00000000 SPI3_IER_CRCEIE
00000040 l       *ABS*	00000000 SPI3_IER_OVRIE
00000020 l       *ABS*	00000000 SPI3_IER_UDRIE
00000010 l       *ABS*	00000000 SPI3_IER_TXTFIE
00000008 l       *ABS*	00000000 SPI3_IER_EOTIE
00000004 l       *ABS*	00000000 SPI3_IER_DPXPIE
00000002 l       *ABS*	00000000 SPI3_IER_TXPIE
00000001 l       *ABS*	00000000 SPI3_IER_RXPIE
40003c14 l       *ABS*	00000000 SPI3_SR
00000010 l       *ABS*	00000000 SPI3_SR_CTSIZE_Shift
00008000 l       *ABS*	00000000 SPI3_SR_RXWNE
0000000d l       *ABS*	00000000 SPI3_SR_RXPLVL_Shift
00001000 l       *ABS*	00000000 SPI3_SR_TXC
00000800 l       *ABS*	00000000 SPI3_SR_SUSP
00000400 l       *ABS*	00000000 SPI3_SR_TSERF
00000200 l       *ABS*	00000000 SPI3_SR_MODF
00000100 l       *ABS*	00000000 SPI3_SR_TIFRE
00000080 l       *ABS*	00000000 SPI3_SR_CRCE
00000040 l       *ABS*	00000000 SPI3_SR_OVR
00000020 l       *ABS*	00000000 SPI3_SR_UDR
00000010 l       *ABS*	00000000 SPI3_SR_TXTF
00000008 l       *ABS*	00000000 SPI3_SR_EOT
00000004 l       *ABS*	00000000 SPI3_SR_DXP
00000002 l       *ABS*	00000000 SPI3_SR_TXP
00000001 l       *ABS*	00000000 SPI3_SR_RXP
40003c18 l       *ABS*	00000000 SPI3_IFCR
00000800 l       *ABS*	00000000 SPI3_IFCR_SUSPC
00000400 l       *ABS*	00000000 SPI3_IFCR_TSERFC
00000200 l       *ABS*	00000000 SPI3_IFCR_MODFC
00000100 l       *ABS*	00000000 SPI3_IFCR_TIFREC
00000080 l       *ABS*	00000000 SPI3_IFCR_CRCEC
00000040 l       *ABS*	00000000 SPI3_IFCR_OVRC
00000020 l       *ABS*	00000000 SPI3_IFCR_UDRC
00000010 l       *ABS*	00000000 SPI3_IFCR_TXTFC
00000008 l       *ABS*	00000000 SPI3_IFCR_EOTC
40003c20 l       *ABS*	00000000 SPI3_TXDR
00000000 l       *ABS*	00000000 SPI3_TXDR_TXDR_Shift
40003c30 l       *ABS*	00000000 SPI3_RXDR
00000000 l       *ABS*	00000000 SPI3_RXDR_RXDR_Shift
40003c40 l       *ABS*	00000000 SPI3_CRCPOLY
00000000 l       *ABS*	00000000 SPI3_CRCPOLY_CRCPOLY_Shift
40003c44 l       *ABS*	00000000 SPI3_TXCRC
00000000 l       *ABS*	00000000 SPI3_TXCRC_TXCRC_Shift
40003c48 l       *ABS*	00000000 SPI3_RXCRC
00000000 l       *ABS*	00000000 SPI3_RXCRC_RXCRC_Shift
40003c4c l       *ABS*	00000000 SPI3_UDRDR
00000000 l       *ABS*	00000000 SPI3_UDRDR_UDRDR_Shift
40003c50 l       *ABS*	00000000 SPI3_CGFR
02000000 l       *ABS*	00000000 SPI3_CGFR_MCKOE
01000000 l       *ABS*	00000000 SPI3_CGFR_ODD
00000010 l       *ABS*	00000000 SPI3_CGFR_I2SDIV_Shift
00004000 l       *ABS*	00000000 SPI3_CGFR_DATFMT
00002000 l       *ABS*	00000000 SPI3_CGFR_WSINV
00001000 l       *ABS*	00000000 SPI3_CGFR_FIXCH
00000800 l       *ABS*	00000000 SPI3_CGFR_CKPOL
00000400 l       *ABS*	00000000 SPI3_CGFR_CHLEN
00000008 l       *ABS*	00000000 SPI3_CGFR_DATLEN_Shift
00000080 l       *ABS*	00000000 SPI3_CGFR_PCMSYNC
00000004 l       *ABS*	00000000 SPI3_CGFR_I2SSTD_Shift
00000001 l       *ABS*	00000000 SPI3_CGFR_I2SCFG_Shift
00000001 l       *ABS*	00000000 SPI3_CGFR_I2SMOD
40013400 l       *ABS*	00000000 SPI4_BASE
40013400 l       *ABS*	00000000 SPI4_CR1
00010000 l       *ABS*	00000000 SPI4_CR1_IOLOCK
00008000 l       *ABS*	00000000 SPI4_CR1_TCRCI
00004000 l       *ABS*	00000000 SPI4_CR1_RCRCI
00002000 l       *ABS*	00000000 SPI4_CR1_CRC33_17
00001000 l       *ABS*	00000000 SPI4_CR1_SSI
00000800 l       *ABS*	00000000 SPI4_CR1_HDDIR
00000400 l       *ABS*	00000000 SPI4_CR1_CSUSP
00000200 l       *ABS*	00000000 SPI4_CR1_CSTART
00000100 l       *ABS*	00000000 SPI4_CR1_MASRX
00000001 l       *ABS*	00000000 SPI4_CR1_SPE
40013404 l       *ABS*	00000000 SPI4_CR2
00000010 l       *ABS*	00000000 SPI4_CR2_TSER_Shift
00000000 l       *ABS*	00000000 SPI4_CR2_TSIZE_Shift
40013408 l       *ABS*	00000000 SPI4_CFG1
0000001c l       *ABS*	00000000 SPI4_CFG1_MBR_Shift
00400000 l       *ABS*	00000000 SPI4_CFG1_CRCEN
00000010 l       *ABS*	00000000 SPI4_CFG1_CRCSIZE_Shift
00008000 l       *ABS*	00000000 SPI4_CFG1_TXDMAEN
00004000 l       *ABS*	00000000 SPI4_CFG1_RXDMAEN
0000000b l       *ABS*	00000000 SPI4_CFG1_UDRDET_Shift
00000009 l       *ABS*	00000000 SPI4_CFG1_UDRCFG_Shift
00000005 l       *ABS*	00000000 SPI4_CFG1_FTHVL_Shift
00000000 l       *ABS*	00000000 SPI4_CFG1_DSIZE_Shift
4001340c l       *ABS*	00000000 SPI4_CFG2
80000000 l       *ABS*	00000000 SPI4_CFG2_AFCNTR
40000000 l       *ABS*	00000000 SPI4_CFG2_SSOM
20000000 l       *ABS*	00000000 SPI4_CFG2_SSOE
10000000 l       *ABS*	00000000 SPI4_CFG2_SSIOP
04000000 l       *ABS*	00000000 SPI4_CFG2_SSM
02000000 l       *ABS*	00000000 SPI4_CFG2_CPOL
01000000 l       *ABS*	00000000 SPI4_CFG2_CPHA
00800000 l       *ABS*	00000000 SPI4_CFG2_LSBFRST
00400000 l       *ABS*	00000000 SPI4_CFG2_MASTER
00000013 l       *ABS*	00000000 SPI4_CFG2_SP_Shift
00000011 l       *ABS*	00000000 SPI4_CFG2_COMM_Shift
00008000 l       *ABS*	00000000 SPI4_CFG2_IOSWP
00000004 l       *ABS*	00000000 SPI4_CFG2_MIDI_Shift
00000000 l       *ABS*	00000000 SPI4_CFG2_MSSI_Shift
40013410 l       *ABS*	00000000 SPI4_IER
00000400 l       *ABS*	00000000 SPI4_IER_TSERFIE
00000200 l       *ABS*	00000000 SPI4_IER_MODFIE
00000100 l       *ABS*	00000000 SPI4_IER_TIFREIE
00000080 l       *ABS*	00000000 SPI4_IER_CRCEIE
00000040 l       *ABS*	00000000 SPI4_IER_OVRIE
00000020 l       *ABS*	00000000 SPI4_IER_UDRIE
00000010 l       *ABS*	00000000 SPI4_IER_TXTFIE
00000008 l       *ABS*	00000000 SPI4_IER_EOTIE
00000004 l       *ABS*	00000000 SPI4_IER_DPXPIE
00000002 l       *ABS*	00000000 SPI4_IER_TXPIE
00000001 l       *ABS*	00000000 SPI4_IER_RXPIE
40013414 l       *ABS*	00000000 SPI4_SR
00000010 l       *ABS*	00000000 SPI4_SR_CTSIZE_Shift
00008000 l       *ABS*	00000000 SPI4_SR_RXWNE
0000000d l       *ABS*	00000000 SPI4_SR_RXPLVL_Shift
00001000 l       *ABS*	00000000 SPI4_SR_TXC
00000800 l       *ABS*	00000000 SPI4_SR_SUSP
00000400 l       *ABS*	00000000 SPI4_SR_TSERF
00000200 l       *ABS*	00000000 SPI4_SR_MODF
00000100 l       *ABS*	00000000 SPI4_SR_TIFRE
00000080 l       *ABS*	00000000 SPI4_SR_CRCE
00000040 l       *ABS*	00000000 SPI4_SR_OVR
00000020 l       *ABS*	00000000 SPI4_SR_UDR
00000010 l       *ABS*	00000000 SPI4_SR_TXTF
00000008 l       *ABS*	00000000 SPI4_SR_EOT
00000004 l       *ABS*	00000000 SPI4_SR_DXP
00000002 l       *ABS*	00000000 SPI4_SR_TXP
00000001 l       *ABS*	00000000 SPI4_SR_RXP
40013418 l       *ABS*	00000000 SPI4_IFCR
00000800 l       *ABS*	00000000 SPI4_IFCR_SUSPC
00000400 l       *ABS*	00000000 SPI4_IFCR_TSERFC
00000200 l       *ABS*	00000000 SPI4_IFCR_MODFC
00000100 l       *ABS*	00000000 SPI4_IFCR_TIFREC
00000080 l       *ABS*	00000000 SPI4_IFCR_CRCEC
00000040 l       *ABS*	00000000 SPI4_IFCR_OVRC
00000020 l       *ABS*	00000000 SPI4_IFCR_UDRC
00000010 l       *ABS*	00000000 SPI4_IFCR_TXTFC
00000008 l       *ABS*	00000000 SPI4_IFCR_EOTC
40013420 l       *ABS*	00000000 SPI4_TXDR
00000000 l       *ABS*	00000000 SPI4_TXDR_TXDR_Shift
40013430 l       *ABS*	00000000 SPI4_RXDR
00000000 l       *ABS*	00000000 SPI4_RXDR_RXDR_Shift
40013440 l       *ABS*	00000000 SPI4_CRCPOLY
00000000 l       *ABS*	00000000 SPI4_CRCPOLY_CRCPOLY_Shift
40013444 l       *ABS*	00000000 SPI4_TXCRC
00000000 l       *ABS*	00000000 SPI4_TXCRC_TXCRC_Shift
40013448 l       *ABS*	00000000 SPI4_RXCRC
00000000 l       *ABS*	00000000 SPI4_RXCRC_RXCRC_Shift
4001344c l       *ABS*	00000000 SPI4_UDRDR
00000000 l       *ABS*	00000000 SPI4_UDRDR_UDRDR_Shift
40013450 l       *ABS*	00000000 SPI4_CGFR
02000000 l       *ABS*	00000000 SPI4_CGFR_MCKOE
01000000 l       *ABS*	00000000 SPI4_CGFR_ODD
00000010 l       *ABS*	00000000 SPI4_CGFR_I2SDIV_Shift
00004000 l       *ABS*	00000000 SPI4_CGFR_DATFMT
00002000 l       *ABS*	00000000 SPI4_CGFR_WSINV
00001000 l       *ABS*	00000000 SPI4_CGFR_FIXCH
00000800 l       *ABS*	00000000 SPI4_CGFR_CKPOL
00000400 l       *ABS*	00000000 SPI4_CGFR_CHLEN
00000008 l       *ABS*	00000000 SPI4_CGFR_DATLEN_Shift
00000080 l       *ABS*	00000000 SPI4_CGFR_PCMSYNC
00000004 l       *ABS*	00000000 SPI4_CGFR_I2SSTD_Shift
00000001 l       *ABS*	00000000 SPI4_CGFR_I2SCFG_Shift
00000001 l       *ABS*	00000000 SPI4_CGFR_I2SMOD
40015000 l       *ABS*	00000000 SPI5_BASE
40015000 l       *ABS*	00000000 SPI5_CR1
00010000 l       *ABS*	00000000 SPI5_CR1_IOLOCK
00008000 l       *ABS*	00000000 SPI5_CR1_TCRCI
00004000 l       *ABS*	00000000 SPI5_CR1_RCRCI
00002000 l       *ABS*	00000000 SPI5_CR1_CRC33_17
00001000 l       *ABS*	00000000 SPI5_CR1_SSI
00000800 l       *ABS*	00000000 SPI5_CR1_HDDIR
00000400 l       *ABS*	00000000 SPI5_CR1_CSUSP
00000200 l       *ABS*	00000000 SPI5_CR1_CSTART
00000100 l       *ABS*	00000000 SPI5_CR1_MASRX
00000001 l       *ABS*	00000000 SPI5_CR1_SPE
40015004 l       *ABS*	00000000 SPI5_CR2
00000010 l       *ABS*	00000000 SPI5_CR2_TSER_Shift
00000000 l       *ABS*	00000000 SPI5_CR2_TSIZE_Shift
40015008 l       *ABS*	00000000 SPI5_CFG1
0000001c l       *ABS*	00000000 SPI5_CFG1_MBR_Shift
00400000 l       *ABS*	00000000 SPI5_CFG1_CRCEN
00000010 l       *ABS*	00000000 SPI5_CFG1_CRCSIZE_Shift
00008000 l       *ABS*	00000000 SPI5_CFG1_TXDMAEN
00004000 l       *ABS*	00000000 SPI5_CFG1_RXDMAEN
0000000b l       *ABS*	00000000 SPI5_CFG1_UDRDET_Shift
00000009 l       *ABS*	00000000 SPI5_CFG1_UDRCFG_Shift
00000005 l       *ABS*	00000000 SPI5_CFG1_FTHVL_Shift
00000000 l       *ABS*	00000000 SPI5_CFG1_DSIZE_Shift
4001500c l       *ABS*	00000000 SPI5_CFG2
80000000 l       *ABS*	00000000 SPI5_CFG2_AFCNTR
40000000 l       *ABS*	00000000 SPI5_CFG2_SSOM
20000000 l       *ABS*	00000000 SPI5_CFG2_SSOE
10000000 l       *ABS*	00000000 SPI5_CFG2_SSIOP
04000000 l       *ABS*	00000000 SPI5_CFG2_SSM
02000000 l       *ABS*	00000000 SPI5_CFG2_CPOL
01000000 l       *ABS*	00000000 SPI5_CFG2_CPHA
00800000 l       *ABS*	00000000 SPI5_CFG2_LSBFRST
00400000 l       *ABS*	00000000 SPI5_CFG2_MASTER
00000013 l       *ABS*	00000000 SPI5_CFG2_SP_Shift
00000011 l       *ABS*	00000000 SPI5_CFG2_COMM_Shift
00008000 l       *ABS*	00000000 SPI5_CFG2_IOSWP
00000004 l       *ABS*	00000000 SPI5_CFG2_MIDI_Shift
00000000 l       *ABS*	00000000 SPI5_CFG2_MSSI_Shift
40015010 l       *ABS*	00000000 SPI5_IER
00000400 l       *ABS*	00000000 SPI5_IER_TSERFIE
00000200 l       *ABS*	00000000 SPI5_IER_MODFIE
00000100 l       *ABS*	00000000 SPI5_IER_TIFREIE
00000080 l       *ABS*	00000000 SPI5_IER_CRCEIE
00000040 l       *ABS*	00000000 SPI5_IER_OVRIE
00000020 l       *ABS*	00000000 SPI5_IER_UDRIE
00000010 l       *ABS*	00000000 SPI5_IER_TXTFIE
00000008 l       *ABS*	00000000 SPI5_IER_EOTIE
00000004 l       *ABS*	00000000 SPI5_IER_DPXPIE
00000002 l       *ABS*	00000000 SPI5_IER_TXPIE
00000001 l       *ABS*	00000000 SPI5_IER_RXPIE
40015014 l       *ABS*	00000000 SPI5_SR
00000010 l       *ABS*	00000000 SPI5_SR_CTSIZE_Shift
00008000 l       *ABS*	00000000 SPI5_SR_RXWNE
0000000d l       *ABS*	00000000 SPI5_SR_RXPLVL_Shift
00001000 l       *ABS*	00000000 SPI5_SR_TXC
00000800 l       *ABS*	00000000 SPI5_SR_SUSP
00000400 l       *ABS*	00000000 SPI5_SR_TSERF
00000200 l       *ABS*	00000000 SPI5_SR_MODF
00000100 l       *ABS*	00000000 SPI5_SR_TIFRE
00000080 l       *ABS*	00000000 SPI5_SR_CRCE
00000040 l       *ABS*	00000000 SPI5_SR_OVR
00000020 l       *ABS*	00000000 SPI5_SR_UDR
00000010 l       *ABS*	00000000 SPI5_SR_TXTF
00000008 l       *ABS*	00000000 SPI5_SR_EOT
00000004 l       *ABS*	00000000 SPI5_SR_DXP
00000002 l       *ABS*	00000000 SPI5_SR_TXP
00000001 l       *ABS*	00000000 SPI5_SR_RXP
40015018 l       *ABS*	00000000 SPI5_IFCR
00000800 l       *ABS*	00000000 SPI5_IFCR_SUSPC
00000400 l       *ABS*	00000000 SPI5_IFCR_TSERFC
00000200 l       *ABS*	00000000 SPI5_IFCR_MODFC
00000100 l       *ABS*	00000000 SPI5_IFCR_TIFREC
00000080 l       *ABS*	00000000 SPI5_IFCR_CRCEC
00000040 l       *ABS*	00000000 SPI5_IFCR_OVRC
00000020 l       *ABS*	00000000 SPI5_IFCR_UDRC
00000010 l       *ABS*	00000000 SPI5_IFCR_TXTFC
00000008 l       *ABS*	00000000 SPI5_IFCR_EOTC
40015020 l       *ABS*	00000000 SPI5_TXDR
00000000 l       *ABS*	00000000 SPI5_TXDR_TXDR_Shift
40015030 l       *ABS*	00000000 SPI5_RXDR
00000000 l       *ABS*	00000000 SPI5_RXDR_RXDR_Shift
40015040 l       *ABS*	00000000 SPI5_CRCPOLY
00000000 l       *ABS*	00000000 SPI5_CRCPOLY_CRCPOLY_Shift
40015044 l       *ABS*	00000000 SPI5_TXCRC
00000000 l       *ABS*	00000000 SPI5_TXCRC_TXCRC_Shift
40015048 l       *ABS*	00000000 SPI5_RXCRC
00000000 l       *ABS*	00000000 SPI5_RXCRC_RXCRC_Shift
4001504c l       *ABS*	00000000 SPI5_UDRDR
00000000 l       *ABS*	00000000 SPI5_UDRDR_UDRDR_Shift
40015050 l       *ABS*	00000000 SPI5_CGFR
02000000 l       *ABS*	00000000 SPI5_CGFR_MCKOE
01000000 l       *ABS*	00000000 SPI5_CGFR_ODD
00000010 l       *ABS*	00000000 SPI5_CGFR_I2SDIV_Shift
00004000 l       *ABS*	00000000 SPI5_CGFR_DATFMT
00002000 l       *ABS*	00000000 SPI5_CGFR_WSINV
00001000 l       *ABS*	00000000 SPI5_CGFR_FIXCH
00000800 l       *ABS*	00000000 SPI5_CGFR_CKPOL
00000400 l       *ABS*	00000000 SPI5_CGFR_CHLEN
00000008 l       *ABS*	00000000 SPI5_CGFR_DATLEN_Shift
00000080 l       *ABS*	00000000 SPI5_CGFR_PCMSYNC
00000004 l       *ABS*	00000000 SPI5_CGFR_I2SSTD_Shift
00000001 l       *ABS*	00000000 SPI5_CGFR_I2SCFG_Shift
00000001 l       *ABS*	00000000 SPI5_CGFR_I2SMOD
58001400 l       *ABS*	00000000 SPI6_BASE
58001400 l       *ABS*	00000000 SPI6_CR1
00010000 l       *ABS*	00000000 SPI6_CR1_IOLOCK
00008000 l       *ABS*	00000000 SPI6_CR1_TCRCI
00004000 l       *ABS*	00000000 SPI6_CR1_RCRCI
00002000 l       *ABS*	00000000 SPI6_CR1_CRC33_17
00001000 l       *ABS*	00000000 SPI6_CR1_SSI
00000800 l       *ABS*	00000000 SPI6_CR1_HDDIR
00000400 l       *ABS*	00000000 SPI6_CR1_CSUSP
00000200 l       *ABS*	00000000 SPI6_CR1_CSTART
00000100 l       *ABS*	00000000 SPI6_CR1_MASRX
00000001 l       *ABS*	00000000 SPI6_CR1_SPE
58001404 l       *ABS*	00000000 SPI6_CR2
00000010 l       *ABS*	00000000 SPI6_CR2_TSER_Shift
00000000 l       *ABS*	00000000 SPI6_CR2_TSIZE_Shift
58001408 l       *ABS*	00000000 SPI6_CFG1
0000001c l       *ABS*	00000000 SPI6_CFG1_MBR_Shift
00400000 l       *ABS*	00000000 SPI6_CFG1_CRCEN
00000010 l       *ABS*	00000000 SPI6_CFG1_CRCSIZE_Shift
00008000 l       *ABS*	00000000 SPI6_CFG1_TXDMAEN
00004000 l       *ABS*	00000000 SPI6_CFG1_RXDMAEN
0000000b l       *ABS*	00000000 SPI6_CFG1_UDRDET_Shift
00000009 l       *ABS*	00000000 SPI6_CFG1_UDRCFG_Shift
00000005 l       *ABS*	00000000 SPI6_CFG1_FTHVL_Shift
00000000 l       *ABS*	00000000 SPI6_CFG1_DSIZE_Shift
5800140c l       *ABS*	00000000 SPI6_CFG2
80000000 l       *ABS*	00000000 SPI6_CFG2_AFCNTR
40000000 l       *ABS*	00000000 SPI6_CFG2_SSOM
20000000 l       *ABS*	00000000 SPI6_CFG2_SSOE
10000000 l       *ABS*	00000000 SPI6_CFG2_SSIOP
04000000 l       *ABS*	00000000 SPI6_CFG2_SSM
02000000 l       *ABS*	00000000 SPI6_CFG2_CPOL
01000000 l       *ABS*	00000000 SPI6_CFG2_CPHA
00800000 l       *ABS*	00000000 SPI6_CFG2_LSBFRST
00400000 l       *ABS*	00000000 SPI6_CFG2_MASTER
00000013 l       *ABS*	00000000 SPI6_CFG2_SP_Shift
00000011 l       *ABS*	00000000 SPI6_CFG2_COMM_Shift
00008000 l       *ABS*	00000000 SPI6_CFG2_IOSWP
00000004 l       *ABS*	00000000 SPI6_CFG2_MIDI_Shift
00000000 l       *ABS*	00000000 SPI6_CFG2_MSSI_Shift
58001410 l       *ABS*	00000000 SPI6_IER
00000400 l       *ABS*	00000000 SPI6_IER_TSERFIE
00000200 l       *ABS*	00000000 SPI6_IER_MODFIE
00000100 l       *ABS*	00000000 SPI6_IER_TIFREIE
00000080 l       *ABS*	00000000 SPI6_IER_CRCEIE
00000040 l       *ABS*	00000000 SPI6_IER_OVRIE
00000020 l       *ABS*	00000000 SPI6_IER_UDRIE
00000010 l       *ABS*	00000000 SPI6_IER_TXTFIE
00000008 l       *ABS*	00000000 SPI6_IER_EOTIE
00000004 l       *ABS*	00000000 SPI6_IER_DPXPIE
00000002 l       *ABS*	00000000 SPI6_IER_TXPIE
00000001 l       *ABS*	00000000 SPI6_IER_RXPIE
58001414 l       *ABS*	00000000 SPI6_SR
00000010 l       *ABS*	00000000 SPI6_SR_CTSIZE_Shift
00008000 l       *ABS*	00000000 SPI6_SR_RXWNE
0000000d l       *ABS*	00000000 SPI6_SR_RXPLVL_Shift
00001000 l       *ABS*	00000000 SPI6_SR_TXC
00000800 l       *ABS*	00000000 SPI6_SR_SUSP
00000400 l       *ABS*	00000000 SPI6_SR_TSERF
00000200 l       *ABS*	00000000 SPI6_SR_MODF
00000100 l       *ABS*	00000000 SPI6_SR_TIFRE
00000080 l       *ABS*	00000000 SPI6_SR_CRCE
00000040 l       *ABS*	00000000 SPI6_SR_OVR
00000020 l       *ABS*	00000000 SPI6_SR_UDR
00000010 l       *ABS*	00000000 SPI6_SR_TXTF
00000008 l       *ABS*	00000000 SPI6_SR_EOT
00000004 l       *ABS*	00000000 SPI6_SR_DXP
00000002 l       *ABS*	00000000 SPI6_SR_TXP
00000001 l       *ABS*	00000000 SPI6_SR_RXP
58001418 l       *ABS*	00000000 SPI6_IFCR
00000800 l       *ABS*	00000000 SPI6_IFCR_SUSPC
00000400 l       *ABS*	00000000 SPI6_IFCR_TSERFC
00000200 l       *ABS*	00000000 SPI6_IFCR_MODFC
00000100 l       *ABS*	00000000 SPI6_IFCR_TIFREC
00000080 l       *ABS*	00000000 SPI6_IFCR_CRCEC
00000040 l       *ABS*	00000000 SPI6_IFCR_OVRC
00000020 l       *ABS*	00000000 SPI6_IFCR_UDRC
00000010 l       *ABS*	00000000 SPI6_IFCR_TXTFC
00000008 l       *ABS*	00000000 SPI6_IFCR_EOTC
58001420 l       *ABS*	00000000 SPI6_TXDR
00000000 l       *ABS*	00000000 SPI6_TXDR_TXDR_Shift
58001430 l       *ABS*	00000000 SPI6_RXDR
00000000 l       *ABS*	00000000 SPI6_RXDR_RXDR_Shift
58001440 l       *ABS*	00000000 SPI6_CRCPOLY
00000000 l       *ABS*	00000000 SPI6_CRCPOLY_CRCPOLY_Shift
58001444 l       *ABS*	00000000 SPI6_TXCRC
00000000 l       *ABS*	00000000 SPI6_TXCRC_TXCRC_Shift
58001448 l       *ABS*	00000000 SPI6_RXCRC
00000000 l       *ABS*	00000000 SPI6_RXCRC_RXCRC_Shift
5800144c l       *ABS*	00000000 SPI6_UDRDR
00000000 l       *ABS*	00000000 SPI6_UDRDR_UDRDR_Shift
58001450 l       *ABS*	00000000 SPI6_CGFR
02000000 l       *ABS*	00000000 SPI6_CGFR_MCKOE
01000000 l       *ABS*	00000000 SPI6_CGFR_ODD
00000010 l       *ABS*	00000000 SPI6_CGFR_I2SDIV_Shift
00004000 l       *ABS*	00000000 SPI6_CGFR_DATFMT
00002000 l       *ABS*	00000000 SPI6_CGFR_WSINV
00001000 l       *ABS*	00000000 SPI6_CGFR_FIXCH
00000800 l       *ABS*	00000000 SPI6_CGFR_CKPOL
00000400 l       *ABS*	00000000 SPI6_CGFR_CHLEN
00000008 l       *ABS*	00000000 SPI6_CGFR_DATLEN_Shift
00000080 l       *ABS*	00000000 SPI6_CGFR_PCMSYNC
00000004 l       *ABS*	00000000 SPI6_CGFR_I2SSTD_Shift
00000001 l       *ABS*	00000000 SPI6_CGFR_I2SCFG_Shift
00000001 l       *ABS*	00000000 SPI6_CGFR_I2SMOD
50001000 l       *ABS*	00000000 LTDC_BASE
50001008 l       *ABS*	00000000 LTDC_SSCR
00000010 l       *ABS*	00000000 LTDC_SSCR_HSW_Shift
00000000 l       *ABS*	00000000 LTDC_SSCR_VSH_Shift
5000100c l       *ABS*	00000000 LTDC_BPCR
00000010 l       *ABS*	00000000 LTDC_BPCR_AHBP_Shift
00000000 l       *ABS*	00000000 LTDC_BPCR_AVBP_Shift
50001010 l       *ABS*	00000000 LTDC_AWCR
00000010 l       *ABS*	00000000 LTDC_AWCR_AAV_Shift
00000000 l       *ABS*	00000000 LTDC_AWCR_AAH_Shift
50001014 l       *ABS*	00000000 LTDC_TWCR
00000010 l       *ABS*	00000000 LTDC_TWCR_TOTALW_Shift
00000000 l       *ABS*	00000000 LTDC_TWCR_TOTALH_Shift
50001018 l       *ABS*	00000000 LTDC_GCR
80000000 l       *ABS*	00000000 LTDC_GCR_HSPOL
40000000 l       *ABS*	00000000 LTDC_GCR_VSPOL
20000000 l       *ABS*	00000000 LTDC_GCR_DEPOL
10000000 l       *ABS*	00000000 LTDC_GCR_PCPOL
00010000 l       *ABS*	00000000 LTDC_GCR_DEN
0000000c l       *ABS*	00000000 LTDC_GCR_DRW_Shift
00000008 l       *ABS*	00000000 LTDC_GCR_DGW_Shift
00000004 l       *ABS*	00000000 LTDC_GCR_DBW_Shift
00000001 l       *ABS*	00000000 LTDC_GCR_LTDCEN
50001024 l       *ABS*	00000000 LTDC_SRCR
00000002 l       *ABS*	00000000 LTDC_SRCR_VBR
00000001 l       *ABS*	00000000 LTDC_SRCR_IMR
5000102c l       *ABS*	00000000 LTDC_BCCR
00000000 l       *ABS*	00000000 LTDC_BCCR_BCBLUE_Shift
00000008 l       *ABS*	00000000 LTDC_BCCR_BCGREEN_Shift
00000010 l       *ABS*	00000000 LTDC_BCCR_BCRED_Shift
50001034 l       *ABS*	00000000 LTDC_IER
00000008 l       *ABS*	00000000 LTDC_IER_RRIE
00000004 l       *ABS*	00000000 LTDC_IER_TERRIE
00000002 l       *ABS*	00000000 LTDC_IER_FUIE
00000001 l       *ABS*	00000000 LTDC_IER_LIE
50001038 l       *ABS*	00000000 LTDC_ISR
00000008 l       *ABS*	00000000 LTDC_ISR_RRIF
00000004 l       *ABS*	00000000 LTDC_ISR_TERRIF
00000002 l       *ABS*	00000000 LTDC_ISR_FUIF
00000001 l       *ABS*	00000000 LTDC_ISR_LIF
5000103c l       *ABS*	00000000 LTDC_ICR
00000008 l       *ABS*	00000000 LTDC_ICR_CRRIF
00000004 l       *ABS*	00000000 LTDC_ICR_CTERRIF
00000002 l       *ABS*	00000000 LTDC_ICR_CFUIF
00000001 l       *ABS*	00000000 LTDC_ICR_CLIF
50001040 l       *ABS*	00000000 LTDC_LIPCR
00000000 l       *ABS*	00000000 LTDC_LIPCR_LIPOS_Shift
50001044 l       *ABS*	00000000 LTDC_CPSR
00000010 l       *ABS*	00000000 LTDC_CPSR_CXPOS_Shift
00000000 l       *ABS*	00000000 LTDC_CPSR_CYPOS_Shift
50001048 l       *ABS*	00000000 LTDC_CDSR
00000008 l       *ABS*	00000000 LTDC_CDSR_HSYNCS
00000004 l       *ABS*	00000000 LTDC_CDSR_VSYNCS
00000002 l       *ABS*	00000000 LTDC_CDSR_HDES
00000001 l       *ABS*	00000000 LTDC_CDSR_VDES
50001084 l       *ABS*	00000000 LTDC_L1CR
00000010 l       *ABS*	00000000 LTDC_L1CR_CLUTEN
00000002 l       *ABS*	00000000 LTDC_L1CR_COLKEN
00000001 l       *ABS*	00000000 LTDC_L1CR_LEN
50001088 l       *ABS*	00000000 LTDC_L1WHPCR
00000010 l       *ABS*	00000000 LTDC_L1WHPCR_WHSPPOS_Shift
00000000 l       *ABS*	00000000 LTDC_L1WHPCR_WHSTPOS_Shift
5000108c l       *ABS*	00000000 LTDC_L1WVPCR
00000010 l       *ABS*	00000000 LTDC_L1WVPCR_WVSPPOS_Shift
00000000 l       *ABS*	00000000 LTDC_L1WVPCR_WVSTPOS_Shift
50001090 l       *ABS*	00000000 LTDC_L1CKCR
00000010 l       *ABS*	00000000 LTDC_L1CKCR_CKRED_Shift
00000008 l       *ABS*	00000000 LTDC_L1CKCR_CKGREEN_Shift
00000000 l       *ABS*	00000000 LTDC_L1CKCR_CKBLUE_Shift
50001094 l       *ABS*	00000000 LTDC_L1PFCR
00000000 l       *ABS*	00000000 LTDC_L1PFCR_PF_Shift
50001098 l       *ABS*	00000000 LTDC_L1CACR
00000000 l       *ABS*	00000000 LTDC_L1CACR_CONSTA_Shift
5000109c l       *ABS*	00000000 LTDC_L1DCCR
00000018 l       *ABS*	00000000 LTDC_L1DCCR_DCALPHA_Shift
00000010 l       *ABS*	00000000 LTDC_L1DCCR_DCRED_Shift
00000008 l       *ABS*	00000000 LTDC_L1DCCR_DCGREEN_Shift
00000000 l       *ABS*	00000000 LTDC_L1DCCR_DCBLUE_Shift
500010a0 l       *ABS*	00000000 LTDC_L1BFCR
00000008 l       *ABS*	00000000 LTDC_L1BFCR_BF1_Shift
00000000 l       *ABS*	00000000 LTDC_L1BFCR_BF2_Shift
500010ac l       *ABS*	00000000 LTDC_L1CFBAR
00000000 l       *ABS*	00000000 LTDC_L1CFBAR_CFBADD_Shift
500010b0 l       *ABS*	00000000 LTDC_L1CFBLR
00000010 l       *ABS*	00000000 LTDC_L1CFBLR_CFBP_Shift
00000000 l       *ABS*	00000000 LTDC_L1CFBLR_CFBLL_Shift
500010b4 l       *ABS*	00000000 LTDC_L1CFBLNR
00000000 l       *ABS*	00000000 LTDC_L1CFBLNR_CFBLNBR_Shift
500010c4 l       *ABS*	00000000 LTDC_L1CLUTWR
00000018 l       *ABS*	00000000 LTDC_L1CLUTWR_CLUTADD_Shift
00000010 l       *ABS*	00000000 LTDC_L1CLUTWR_RED_Shift
00000008 l       *ABS*	00000000 LTDC_L1CLUTWR_GREEN_Shift
00000000 l       *ABS*	00000000 LTDC_L1CLUTWR_BLUE_Shift
50001104 l       *ABS*	00000000 LTDC_L2CR
00000010 l       *ABS*	00000000 LTDC_L2CR_CLUTEN
00000002 l       *ABS*	00000000 LTDC_L2CR_COLKEN
00000001 l       *ABS*	00000000 LTDC_L2CR_LEN
50001108 l       *ABS*	00000000 LTDC_L2WHPCR
00000010 l       *ABS*	00000000 LTDC_L2WHPCR_WHSPPOS_Shift
00000000 l       *ABS*	00000000 LTDC_L2WHPCR_WHSTPOS_Shift
5000110c l       *ABS*	00000000 LTDC_L2WVPCR
00000010 l       *ABS*	00000000 LTDC_L2WVPCR_WVSPPOS_Shift
00000000 l       *ABS*	00000000 LTDC_L2WVPCR_WVSTPOS_Shift
50001110 l       *ABS*	00000000 LTDC_L2CKCR
00000010 l       *ABS*	00000000 LTDC_L2CKCR_CKRED_Shift
00000008 l       *ABS*	00000000 LTDC_L2CKCR_CKGREEN_Shift
00000000 l       *ABS*	00000000 LTDC_L2CKCR_CKBLUE_Shift
50001114 l       *ABS*	00000000 LTDC_L2PFCR
00000000 l       *ABS*	00000000 LTDC_L2PFCR_PF_Shift
50001118 l       *ABS*	00000000 LTDC_L2CACR
00000000 l       *ABS*	00000000 LTDC_L2CACR_CONSTA_Shift
5000111c l       *ABS*	00000000 LTDC_L2DCCR
00000018 l       *ABS*	00000000 LTDC_L2DCCR_DCALPHA_Shift
00000010 l       *ABS*	00000000 LTDC_L2DCCR_DCRED_Shift
00000008 l       *ABS*	00000000 LTDC_L2DCCR_DCGREEN_Shift
00000000 l       *ABS*	00000000 LTDC_L2DCCR_DCBLUE_Shift
50001120 l       *ABS*	00000000 LTDC_L2BFCR
00000008 l       *ABS*	00000000 LTDC_L2BFCR_BF1_Shift
00000000 l       *ABS*	00000000 LTDC_L2BFCR_BF2_Shift
5000112c l       *ABS*	00000000 LTDC_L2CFBAR
00000000 l       *ABS*	00000000 LTDC_L2CFBAR_CFBADD_Shift
50001130 l       *ABS*	00000000 LTDC_L2CFBLR
00000010 l       *ABS*	00000000 LTDC_L2CFBLR_CFBP_Shift
00000000 l       *ABS*	00000000 LTDC_L2CFBLR_CFBLL_Shift
50001134 l       *ABS*	00000000 LTDC_L2CFBLNR
00000000 l       *ABS*	00000000 LTDC_L2CFBLNR_CFBLNBR_Shift
50001144 l       *ABS*	00000000 LTDC_L2CLUTWR
00000018 l       *ABS*	00000000 LTDC_L2CLUTWR_CLUTADD_Shift
00000010 l       *ABS*	00000000 LTDC_L2CLUTWR_RED_Shift
00000008 l       *ABS*	00000000 LTDC_L2CLUTWR_GREEN_Shift
00000000 l       *ABS*	00000000 LTDC_L2CLUTWR_BLUE_Shift
40004000 l       *ABS*	00000000 SPDIFRX_BASE
40004000 l       *ABS*	00000000 SPDIFRX_CR
00000000 l       *ABS*	00000000 SPDIFRX_CR_SPDIFRXEN_Shift
00000004 l       *ABS*	00000000 SPDIFRX_CR_RXDMAEN
00000008 l       *ABS*	00000000 SPDIFRX_CR_RXSTEO
00000004 l       *ABS*	00000000 SPDIFRX_CR_DRFMT_Shift
00000040 l       *ABS*	00000000 SPDIFRX_CR_PMSK
00000080 l       *ABS*	00000000 SPDIFRX_CR_VMSK
00000100 l       *ABS*	00000000 SPDIFRX_CR_CUMSK
00000200 l       *ABS*	00000000 SPDIFRX_CR_PTMSK
00000400 l       *ABS*	00000000 SPDIFRX_CR_CBDMAEN
00000800 l       *ABS*	00000000 SPDIFRX_CR_CHSEL
0000000c l       *ABS*	00000000 SPDIFRX_CR_NBTR_Shift
00004000 l       *ABS*	00000000 SPDIFRX_CR_WFA
00000010 l       *ABS*	00000000 SPDIFRX_CR_INSEL_Shift
00100000 l       *ABS*	00000000 SPDIFRX_CR_CKSEN
00200000 l       *ABS*	00000000 SPDIFRX_CR_CKSBKPEN
40004004 l       *ABS*	00000000 SPDIFRX_IMR
00000001 l       *ABS*	00000000 SPDIFRX_IMR_RXNEIE
00000002 l       *ABS*	00000000 SPDIFRX_IMR_CSRNEIE
00000004 l       *ABS*	00000000 SPDIFRX_IMR_PERRIE
00000008 l       *ABS*	00000000 SPDIFRX_IMR_OVRIE
00000010 l       *ABS*	00000000 SPDIFRX_IMR_SBLKIE
00000020 l       *ABS*	00000000 SPDIFRX_IMR_SYNCDIE
00000040 l       *ABS*	00000000 SPDIFRX_IMR_IFEIE
40004008 l       *ABS*	00000000 SPDIFRX_SR
00000001 l       *ABS*	00000000 SPDIFRX_SR_RXNE
00000002 l       *ABS*	00000000 SPDIFRX_SR_CSRNE
00000004 l       *ABS*	00000000 SPDIFRX_SR_PERR
00000008 l       *ABS*	00000000 SPDIFRX_SR_OVR
00000010 l       *ABS*	00000000 SPDIFRX_SR_SBD
00000020 l       *ABS*	00000000 SPDIFRX_SR_SYNCD
00000040 l       *ABS*	00000000 SPDIFRX_SR_FERR
00000080 l       *ABS*	00000000 SPDIFRX_SR_SERR
00000100 l       *ABS*	00000000 SPDIFRX_SR_TERR
00000010 l       *ABS*	00000000 SPDIFRX_SR_WIDTH5_Shift
4000400c l       *ABS*	00000000 SPDIFRX_IFCR
00000004 l       *ABS*	00000000 SPDIFRX_IFCR_PERRCF
00000008 l       *ABS*	00000000 SPDIFRX_IFCR_OVRCF
00000010 l       *ABS*	00000000 SPDIFRX_IFCR_SBDCF
00000020 l       *ABS*	00000000 SPDIFRX_IFCR_SYNCDCF
40004010 l       *ABS*	00000000 SPDIFRX_DR_00
00000000 l       *ABS*	00000000 SPDIFRX_DR_00_DR_Shift
01000000 l       *ABS*	00000000 SPDIFRX_DR_00_PE
02000000 l       *ABS*	00000000 SPDIFRX_DR_00_V
04000000 l       *ABS*	00000000 SPDIFRX_DR_00_U
08000000 l       *ABS*	00000000 SPDIFRX_DR_00_C
0000001c l       *ABS*	00000000 SPDIFRX_DR_00_PT_Shift
40004014 l       *ABS*	00000000 SPDIFRX_CSR
00000000 l       *ABS*	00000000 SPDIFRX_CSR_USR_Shift
00000010 l       *ABS*	00000000 SPDIFRX_CSR_CS_Shift
01000000 l       *ABS*	00000000 SPDIFRX_CSR_SOB
40004018 l       *ABS*	00000000 SPDIFRX_DIR
00000000 l       *ABS*	00000000 SPDIFRX_DIR_THI_Shift
00000010 l       *ABS*	00000000 SPDIFRX_DIR_TLO_Shift
400043f4 l       *ABS*	00000000 SPDIFRX_VERR
00000000 l       *ABS*	00000000 SPDIFRX_VERR_MINREV_Shift
00000004 l       *ABS*	00000000 SPDIFRX_VERR_MAJREV_Shift
400043f8 l       *ABS*	00000000 SPDIFRX_IDR
00000000 l       *ABS*	00000000 SPDIFRX_IDR_ID_Shift
400043fc l       *ABS*	00000000 SPDIFRX_SIDR
00000000 l       *ABS*	00000000 SPDIFRX_SIDR_SID_Shift
40004010 l       *ABS*	00000000 SPDIFRX_DR_01
00000001 l       *ABS*	00000000 SPDIFRX_DR_01_PE
00000002 l       *ABS*	00000000 SPDIFRX_DR_01_V
00000004 l       *ABS*	00000000 SPDIFRX_DR_01_U
00000008 l       *ABS*	00000000 SPDIFRX_DR_01_C
00000004 l       *ABS*	00000000 SPDIFRX_DR_01_PT_Shift
00000008 l       *ABS*	00000000 SPDIFRX_DR_01_DR_Shift
40004010 l       *ABS*	00000000 SPDIFRX_DR_10
00000000 l       *ABS*	00000000 SPDIFRX_DR_10_DRNL1_Shift
00000010 l       *ABS*	00000000 SPDIFRX_DR_10_DRNL2_Shift
58026000 l       *ABS*	00000000 ADC3_BASE
58026000 l       *ABS*	00000000 ADC3_ISR
00000400 l       *ABS*	00000000 ADC3_ISR_JQOVF
00000200 l       *ABS*	00000000 ADC3_ISR_AWD3
00000100 l       *ABS*	00000000 ADC3_ISR_AWD2
00000080 l       *ABS*	00000000 ADC3_ISR_AWD1
00000040 l       *ABS*	00000000 ADC3_ISR_JEOS
00000020 l       *ABS*	00000000 ADC3_ISR_JEOC
00000010 l       *ABS*	00000000 ADC3_ISR_OVR
00000008 l       *ABS*	00000000 ADC3_ISR_EOS
00000004 l       *ABS*	00000000 ADC3_ISR_EOC
00000002 l       *ABS*	00000000 ADC3_ISR_EOSMP
00000001 l       *ABS*	00000000 ADC3_ISR_ADRDY
58026004 l       *ABS*	00000000 ADC3_IER
00000400 l       *ABS*	00000000 ADC3_IER_JQOVFIE
00000200 l       *ABS*	00000000 ADC3_IER_AWD3IE
00000100 l       *ABS*	00000000 ADC3_IER_AWD2IE
00000080 l       *ABS*	00000000 ADC3_IER_AWD1IE
00000040 l       *ABS*	00000000 ADC3_IER_JEOSIE
00000020 l       *ABS*	00000000 ADC3_IER_JEOCIE
00000010 l       *ABS*	00000000 ADC3_IER_OVRIE
00000008 l       *ABS*	00000000 ADC3_IER_EOSIE
00000004 l       *ABS*	00000000 ADC3_IER_EOCIE
00000002 l       *ABS*	00000000 ADC3_IER_EOSMPIE
00000001 l       *ABS*	00000000 ADC3_IER_ADRDYIE
58026008 l       *ABS*	00000000 ADC3_CR
80000000 l       *ABS*	00000000 ADC3_CR_ADCAL
40000000 l       *ABS*	00000000 ADC3_CR_ADCALDIF
20000000 l       *ABS*	00000000 ADC3_CR_DEEPPWD
10000000 l       *ABS*	00000000 ADC3_CR_ADVREGEN
08000000 l       *ABS*	00000000 ADC3_CR_LINCALRDYW6
04000000 l       *ABS*	00000000 ADC3_CR_LINCALRDYW5
02000000 l       *ABS*	00000000 ADC3_CR_LINCALRDYW4
01000000 l       *ABS*	00000000 ADC3_CR_LINCALRDYW3
00800000 l       *ABS*	00000000 ADC3_CR_LINCALRDYW2
00400000 l       *ABS*	00000000 ADC3_CR_LINCALRDYW1
00010000 l       *ABS*	00000000 ADC3_CR_ADCALLIN
00000100 l       *ABS*	00000000 ADC3_CR_BOOST
00000020 l       *ABS*	00000000 ADC3_CR_JADSTP
00000010 l       *ABS*	00000000 ADC3_CR_ADSTP
00000008 l       *ABS*	00000000 ADC3_CR_JADSTART
00000004 l       *ABS*	00000000 ADC3_CR_ADSTART
00000002 l       *ABS*	00000000 ADC3_CR_ADDIS
00000001 l       *ABS*	00000000 ADC3_CR_ADEN
5802600c l       *ABS*	00000000 ADC3_CFGR
80000000 l       *ABS*	00000000 ADC3_CFGR_JQDIS
0000001a l       *ABS*	00000000 ADC3_CFGR_AWDCH1CH_Shift
02000000 l       *ABS*	00000000 ADC3_CFGR_JAUTO
01000000 l       *ABS*	00000000 ADC3_CFGR_JAWD1EN
00800000 l       *ABS*	00000000 ADC3_CFGR_AWD1EN
00400000 l       *ABS*	00000000 ADC3_CFGR_AWD1SGL
00200000 l       *ABS*	00000000 ADC3_CFGR_JQM
00100000 l       *ABS*	00000000 ADC3_CFGR_JDISCEN
00000011 l       *ABS*	00000000 ADC3_CFGR_DISCNUM_Shift
00010000 l       *ABS*	00000000 ADC3_CFGR_DISCEN
00004000 l       *ABS*	00000000 ADC3_CFGR_AUTDLY
00002000 l       *ABS*	00000000 ADC3_CFGR_CONT
00001000 l       *ABS*	00000000 ADC3_CFGR_OVRMOD
0000000a l       *ABS*	00000000 ADC3_CFGR_EXTEN_Shift
00000005 l       *ABS*	00000000 ADC3_CFGR_EXTSEL_Shift
00000002 l       *ABS*	00000000 ADC3_CFGR_RES_Shift
00000000 l       *ABS*	00000000 ADC3_CFGR_DMNGT_Shift
58026010 l       *ABS*	00000000 ADC3_CFGR2
00000001 l       *ABS*	00000000 ADC3_CFGR2_ROVSE
00000002 l       *ABS*	00000000 ADC3_CFGR2_JOVSE
00000005 l       *ABS*	00000000 ADC3_CFGR2_OVSS_Shift
00000200 l       *ABS*	00000000 ADC3_CFGR2_TROVS
00000400 l       *ABS*	00000000 ADC3_CFGR2_ROVSM
00000800 l       *ABS*	00000000 ADC3_CFGR2_RSHIFT1
00001000 l       *ABS*	00000000 ADC3_CFGR2_RSHIFT2
00002000 l       *ABS*	00000000 ADC3_CFGR2_RSHIFT3
00004000 l       *ABS*	00000000 ADC3_CFGR2_RSHIFT4
00000010 l       *ABS*	00000000 ADC3_CFGR2_OSR_Shift
0000001c l       *ABS*	00000000 ADC3_CFGR2_LSHIFT_Shift
58026014 l       *ABS*	00000000 ADC3_SMPR1
0000001b l       *ABS*	00000000 ADC3_SMPR1_SMP9_Shift
00000018 l       *ABS*	00000000 ADC3_SMPR1_SMP8_Shift
00000015 l       *ABS*	00000000 ADC3_SMPR1_SMP7_Shift
00000012 l       *ABS*	00000000 ADC3_SMPR1_SMP6_Shift
0000000f l       *ABS*	00000000 ADC3_SMPR1_SMP5_Shift
0000000c l       *ABS*	00000000 ADC3_SMPR1_SMP4_Shift
00000009 l       *ABS*	00000000 ADC3_SMPR1_SMP3_Shift
00000006 l       *ABS*	00000000 ADC3_SMPR1_SMP2_Shift
00000003 l       *ABS*	00000000 ADC3_SMPR1_SMP1_Shift
58026018 l       *ABS*	00000000 ADC3_SMPR2
0000001b l       *ABS*	00000000 ADC3_SMPR2_SMP19_Shift
00000018 l       *ABS*	00000000 ADC3_SMPR2_SMP18_Shift
00000015 l       *ABS*	00000000 ADC3_SMPR2_SMP17_Shift
00000012 l       *ABS*	00000000 ADC3_SMPR2_SMP16_Shift
0000000f l       *ABS*	00000000 ADC3_SMPR2_SMP15_Shift
0000000c l       *ABS*	00000000 ADC3_SMPR2_SMP14_Shift
00000009 l       *ABS*	00000000 ADC3_SMPR2_SMP13_Shift
00000006 l       *ABS*	00000000 ADC3_SMPR2_SMP12_Shift
00000003 l       *ABS*	00000000 ADC3_SMPR2_SMP11_Shift
00000000 l       *ABS*	00000000 ADC3_SMPR2_SMP10_Shift
58026020 l       *ABS*	00000000 ADC3_LTR1
00000000 l       *ABS*	00000000 ADC3_LTR1_LTR1_Shift
58026024 l       *ABS*	00000000 ADC3_LHTR1
00000000 l       *ABS*	00000000 ADC3_LHTR1_LHTR1_Shift
58026030 l       *ABS*	00000000 ADC3_SQR1
00000018 l       *ABS*	00000000 ADC3_SQR1_SQ4_Shift
00000012 l       *ABS*	00000000 ADC3_SQR1_SQ3_Shift
0000000c l       *ABS*	00000000 ADC3_SQR1_SQ2_Shift
00000006 l       *ABS*	00000000 ADC3_SQR1_SQ1_Shift
00000000 l       *ABS*	00000000 ADC3_SQR1_L3_Shift
58026034 l       *ABS*	00000000 ADC3_SQR2
00000018 l       *ABS*	00000000 ADC3_SQR2_SQ9_Shift
00000012 l       *ABS*	00000000 ADC3_SQR2_SQ8_Shift
0000000c l       *ABS*	00000000 ADC3_SQR2_SQ7_Shift
00000006 l       *ABS*	00000000 ADC3_SQR2_SQ6_Shift
00000000 l       *ABS*	00000000 ADC3_SQR2_SQ5_Shift
58026038 l       *ABS*	00000000 ADC3_SQR3
00000018 l       *ABS*	00000000 ADC3_SQR3_SQ14_Shift
00000012 l       *ABS*	00000000 ADC3_SQR3_SQ13_Shift
0000000c l       *ABS*	00000000 ADC3_SQR3_SQ12_Shift
00000006 l       *ABS*	00000000 ADC3_SQR3_SQ11_Shift
00000000 l       *ABS*	00000000 ADC3_SQR3_SQ10_Shift
5802603c l       *ABS*	00000000 ADC3_SQR4
00000006 l       *ABS*	00000000 ADC3_SQR4_SQ16_Shift
00000000 l       *ABS*	00000000 ADC3_SQR4_SQ15_Shift
58026040 l       *ABS*	00000000 ADC3_DR
00000000 l       *ABS*	00000000 ADC3_DR_RDATA_Shift
5802604c l       *ABS*	00000000 ADC3_JSQR
0000001b l       *ABS*	00000000 ADC3_JSQR_JSQ4_Shift
00000015 l       *ABS*	00000000 ADC3_JSQR_JSQ3_Shift
0000000f l       *ABS*	00000000 ADC3_JSQR_JSQ2_Shift
00000009 l       *ABS*	00000000 ADC3_JSQR_JSQ1_Shift
00000007 l       *ABS*	00000000 ADC3_JSQR_JEXTEN_Shift
00000002 l       *ABS*	00000000 ADC3_JSQR_JEXTSEL_Shift
00000000 l       *ABS*	00000000 ADC3_JSQR_JL_Shift
58026060 l       *ABS*	00000000 ADC3_OFR1
80000000 l       *ABS*	00000000 ADC3_OFR1_SSATE
0000001a l       *ABS*	00000000 ADC3_OFR1_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC3_OFR1_OFFSET1_Shift
58026064 l       *ABS*	00000000 ADC3_OFR2
80000000 l       *ABS*	00000000 ADC3_OFR2_SSATE
0000001a l       *ABS*	00000000 ADC3_OFR2_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC3_OFR2_OFFSET1_Shift
58026068 l       *ABS*	00000000 ADC3_OFR3
80000000 l       *ABS*	00000000 ADC3_OFR3_SSATE
0000001a l       *ABS*	00000000 ADC3_OFR3_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC3_OFR3_OFFSET1_Shift
5802606c l       *ABS*	00000000 ADC3_OFR4
80000000 l       *ABS*	00000000 ADC3_OFR4_SSATE
0000001a l       *ABS*	00000000 ADC3_OFR4_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC3_OFR4_OFFSET1_Shift
58026080 l       *ABS*	00000000 ADC3_JDR1
00000000 l       *ABS*	00000000 ADC3_JDR1_JDATA1_Shift
58026084 l       *ABS*	00000000 ADC3_JDR2
00000000 l       *ABS*	00000000 ADC3_JDR2_JDATA2_Shift
58026088 l       *ABS*	00000000 ADC3_JDR3
00000000 l       *ABS*	00000000 ADC3_JDR3_JDATA3_Shift
5802608c l       *ABS*	00000000 ADC3_JDR4
00000000 l       *ABS*	00000000 ADC3_JDR4_JDATA4_Shift
580260a0 l       *ABS*	00000000 ADC3_AWD2CR
00000000 l       *ABS*	00000000 ADC3_AWD2CR_AWD2CH_Shift
580260a4 l       *ABS*	00000000 ADC3_AWD3CR
00000001 l       *ABS*	00000000 ADC3_AWD3CR_AWD3CH_Shift
580260c0 l       *ABS*	00000000 ADC3_DIFSEL
00000000 l       *ABS*	00000000 ADC3_DIFSEL_DIFSEL_Shift
580260c4 l       *ABS*	00000000 ADC3_CALFACT
00000010 l       *ABS*	00000000 ADC3_CALFACT_CALFACT_D_Shift
00000000 l       *ABS*	00000000 ADC3_CALFACT_CALFACT_S_Shift
5802601c l       *ABS*	00000000 ADC3_PCSEL
00000000 l       *ABS*	00000000 ADC3_PCSEL_PCSEL_Shift
580260b0 l       *ABS*	00000000 ADC3_LTR2
00000000 l       *ABS*	00000000 ADC3_LTR2_LTR2_Shift
580260b4 l       *ABS*	00000000 ADC3_HTR2
00000000 l       *ABS*	00000000 ADC3_HTR2_HTR2_Shift
580260b8 l       *ABS*	00000000 ADC3_LTR3
00000000 l       *ABS*	00000000 ADC3_LTR3_LTR3_Shift
580260bc l       *ABS*	00000000 ADC3_HTR3
00000000 l       *ABS*	00000000 ADC3_HTR3_HTR3_Shift
580260c8 l       *ABS*	00000000 ADC3_CALFACT2
00000000 l       *ABS*	00000000 ADC3_CALFACT2_LINCALFACT_Shift
40022000 l       *ABS*	00000000 ADC1_BASE
40022000 l       *ABS*	00000000 ADC1_ISR
00000400 l       *ABS*	00000000 ADC1_ISR_JQOVF
00000200 l       *ABS*	00000000 ADC1_ISR_AWD3
00000100 l       *ABS*	00000000 ADC1_ISR_AWD2
00000080 l       *ABS*	00000000 ADC1_ISR_AWD1
00000040 l       *ABS*	00000000 ADC1_ISR_JEOS
00000020 l       *ABS*	00000000 ADC1_ISR_JEOC
00000010 l       *ABS*	00000000 ADC1_ISR_OVR
00000008 l       *ABS*	00000000 ADC1_ISR_EOS
00000004 l       *ABS*	00000000 ADC1_ISR_EOC
00000002 l       *ABS*	00000000 ADC1_ISR_EOSMP
00000001 l       *ABS*	00000000 ADC1_ISR_ADRDY
40022004 l       *ABS*	00000000 ADC1_IER
00000400 l       *ABS*	00000000 ADC1_IER_JQOVFIE
00000200 l       *ABS*	00000000 ADC1_IER_AWD3IE
00000100 l       *ABS*	00000000 ADC1_IER_AWD2IE
00000080 l       *ABS*	00000000 ADC1_IER_AWD1IE
00000040 l       *ABS*	00000000 ADC1_IER_JEOSIE
00000020 l       *ABS*	00000000 ADC1_IER_JEOCIE
00000010 l       *ABS*	00000000 ADC1_IER_OVRIE
00000008 l       *ABS*	00000000 ADC1_IER_EOSIE
00000004 l       *ABS*	00000000 ADC1_IER_EOCIE
00000002 l       *ABS*	00000000 ADC1_IER_EOSMPIE
00000001 l       *ABS*	00000000 ADC1_IER_ADRDYIE
40022008 l       *ABS*	00000000 ADC1_CR
80000000 l       *ABS*	00000000 ADC1_CR_ADCAL
40000000 l       *ABS*	00000000 ADC1_CR_ADCALDIF
20000000 l       *ABS*	00000000 ADC1_CR_DEEPPWD
10000000 l       *ABS*	00000000 ADC1_CR_ADVREGEN
08000000 l       *ABS*	00000000 ADC1_CR_LINCALRDYW6
04000000 l       *ABS*	00000000 ADC1_CR_LINCALRDYW5
02000000 l       *ABS*	00000000 ADC1_CR_LINCALRDYW4
01000000 l       *ABS*	00000000 ADC1_CR_LINCALRDYW3
00800000 l       *ABS*	00000000 ADC1_CR_LINCALRDYW2
00400000 l       *ABS*	00000000 ADC1_CR_LINCALRDYW1
00010000 l       *ABS*	00000000 ADC1_CR_ADCALLIN
00000100 l       *ABS*	00000000 ADC1_CR_BOOST
00000020 l       *ABS*	00000000 ADC1_CR_JADSTP
00000010 l       *ABS*	00000000 ADC1_CR_ADSTP
00000008 l       *ABS*	00000000 ADC1_CR_JADSTART
00000004 l       *ABS*	00000000 ADC1_CR_ADSTART
00000002 l       *ABS*	00000000 ADC1_CR_ADDIS
00000001 l       *ABS*	00000000 ADC1_CR_ADEN
4002200c l       *ABS*	00000000 ADC1_CFGR
80000000 l       *ABS*	00000000 ADC1_CFGR_JQDIS
0000001a l       *ABS*	00000000 ADC1_CFGR_AWDCH1CH_Shift
02000000 l       *ABS*	00000000 ADC1_CFGR_JAUTO
01000000 l       *ABS*	00000000 ADC1_CFGR_JAWD1EN
00800000 l       *ABS*	00000000 ADC1_CFGR_AWD1EN
00400000 l       *ABS*	00000000 ADC1_CFGR_AWD1SGL
00200000 l       *ABS*	00000000 ADC1_CFGR_JQM
00100000 l       *ABS*	00000000 ADC1_CFGR_JDISCEN
00000011 l       *ABS*	00000000 ADC1_CFGR_DISCNUM_Shift
00010000 l       *ABS*	00000000 ADC1_CFGR_DISCEN
00004000 l       *ABS*	00000000 ADC1_CFGR_AUTDLY
00002000 l       *ABS*	00000000 ADC1_CFGR_CONT
00001000 l       *ABS*	00000000 ADC1_CFGR_OVRMOD
0000000a l       *ABS*	00000000 ADC1_CFGR_EXTEN_Shift
00000005 l       *ABS*	00000000 ADC1_CFGR_EXTSEL_Shift
00000002 l       *ABS*	00000000 ADC1_CFGR_RES_Shift
00000000 l       *ABS*	00000000 ADC1_CFGR_DMNGT_Shift
40022010 l       *ABS*	00000000 ADC1_CFGR2
00000001 l       *ABS*	00000000 ADC1_CFGR2_ROVSE
00000002 l       *ABS*	00000000 ADC1_CFGR2_JOVSE
00000005 l       *ABS*	00000000 ADC1_CFGR2_OVSS_Shift
00000200 l       *ABS*	00000000 ADC1_CFGR2_TROVS
00000400 l       *ABS*	00000000 ADC1_CFGR2_ROVSM
00000800 l       *ABS*	00000000 ADC1_CFGR2_RSHIFT1
00001000 l       *ABS*	00000000 ADC1_CFGR2_RSHIFT2
00002000 l       *ABS*	00000000 ADC1_CFGR2_RSHIFT3
00004000 l       *ABS*	00000000 ADC1_CFGR2_RSHIFT4
00000010 l       *ABS*	00000000 ADC1_CFGR2_OSR_Shift
0000001c l       *ABS*	00000000 ADC1_CFGR2_LSHIFT_Shift
40022014 l       *ABS*	00000000 ADC1_SMPR1
0000001b l       *ABS*	00000000 ADC1_SMPR1_SMP9_Shift
00000018 l       *ABS*	00000000 ADC1_SMPR1_SMP8_Shift
00000015 l       *ABS*	00000000 ADC1_SMPR1_SMP7_Shift
00000012 l       *ABS*	00000000 ADC1_SMPR1_SMP6_Shift
0000000f l       *ABS*	00000000 ADC1_SMPR1_SMP5_Shift
0000000c l       *ABS*	00000000 ADC1_SMPR1_SMP4_Shift
00000009 l       *ABS*	00000000 ADC1_SMPR1_SMP3_Shift
00000006 l       *ABS*	00000000 ADC1_SMPR1_SMP2_Shift
00000003 l       *ABS*	00000000 ADC1_SMPR1_SMP1_Shift
40022018 l       *ABS*	00000000 ADC1_SMPR2
0000001b l       *ABS*	00000000 ADC1_SMPR2_SMP19_Shift
00000018 l       *ABS*	00000000 ADC1_SMPR2_SMP18_Shift
00000015 l       *ABS*	00000000 ADC1_SMPR2_SMP17_Shift
00000012 l       *ABS*	00000000 ADC1_SMPR2_SMP16_Shift
0000000f l       *ABS*	00000000 ADC1_SMPR2_SMP15_Shift
0000000c l       *ABS*	00000000 ADC1_SMPR2_SMP14_Shift
00000009 l       *ABS*	00000000 ADC1_SMPR2_SMP13_Shift
00000006 l       *ABS*	00000000 ADC1_SMPR2_SMP12_Shift
00000003 l       *ABS*	00000000 ADC1_SMPR2_SMP11_Shift
00000000 l       *ABS*	00000000 ADC1_SMPR2_SMP10_Shift
40022020 l       *ABS*	00000000 ADC1_LTR1
00000000 l       *ABS*	00000000 ADC1_LTR1_LTR1_Shift
40022024 l       *ABS*	00000000 ADC1_LHTR1
00000000 l       *ABS*	00000000 ADC1_LHTR1_LHTR1_Shift
40022030 l       *ABS*	00000000 ADC1_SQR1
00000018 l       *ABS*	00000000 ADC1_SQR1_SQ4_Shift
00000012 l       *ABS*	00000000 ADC1_SQR1_SQ3_Shift
0000000c l       *ABS*	00000000 ADC1_SQR1_SQ2_Shift
00000006 l       *ABS*	00000000 ADC1_SQR1_SQ1_Shift
00000000 l       *ABS*	00000000 ADC1_SQR1_L3_Shift
40022034 l       *ABS*	00000000 ADC1_SQR2
00000018 l       *ABS*	00000000 ADC1_SQR2_SQ9_Shift
00000012 l       *ABS*	00000000 ADC1_SQR2_SQ8_Shift
0000000c l       *ABS*	00000000 ADC1_SQR2_SQ7_Shift
00000006 l       *ABS*	00000000 ADC1_SQR2_SQ6_Shift
00000000 l       *ABS*	00000000 ADC1_SQR2_SQ5_Shift
40022038 l       *ABS*	00000000 ADC1_SQR3
00000018 l       *ABS*	00000000 ADC1_SQR3_SQ14_Shift
00000012 l       *ABS*	00000000 ADC1_SQR3_SQ13_Shift
0000000c l       *ABS*	00000000 ADC1_SQR3_SQ12_Shift
00000006 l       *ABS*	00000000 ADC1_SQR3_SQ11_Shift
00000000 l       *ABS*	00000000 ADC1_SQR3_SQ10_Shift
4002203c l       *ABS*	00000000 ADC1_SQR4
00000006 l       *ABS*	00000000 ADC1_SQR4_SQ16_Shift
00000000 l       *ABS*	00000000 ADC1_SQR4_SQ15_Shift
40022040 l       *ABS*	00000000 ADC1_DR
00000000 l       *ABS*	00000000 ADC1_DR_RDATA_Shift
4002204c l       *ABS*	00000000 ADC1_JSQR
0000001b l       *ABS*	00000000 ADC1_JSQR_JSQ4_Shift
00000015 l       *ABS*	00000000 ADC1_JSQR_JSQ3_Shift
0000000f l       *ABS*	00000000 ADC1_JSQR_JSQ2_Shift
00000009 l       *ABS*	00000000 ADC1_JSQR_JSQ1_Shift
00000007 l       *ABS*	00000000 ADC1_JSQR_JEXTEN_Shift
00000002 l       *ABS*	00000000 ADC1_JSQR_JEXTSEL_Shift
00000000 l       *ABS*	00000000 ADC1_JSQR_JL_Shift
40022060 l       *ABS*	00000000 ADC1_OFR1
80000000 l       *ABS*	00000000 ADC1_OFR1_SSATE
0000001a l       *ABS*	00000000 ADC1_OFR1_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC1_OFR1_OFFSET1_Shift
40022064 l       *ABS*	00000000 ADC1_OFR2
80000000 l       *ABS*	00000000 ADC1_OFR2_SSATE
0000001a l       *ABS*	00000000 ADC1_OFR2_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC1_OFR2_OFFSET1_Shift
40022068 l       *ABS*	00000000 ADC1_OFR3
80000000 l       *ABS*	00000000 ADC1_OFR3_SSATE
0000001a l       *ABS*	00000000 ADC1_OFR3_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC1_OFR3_OFFSET1_Shift
4002206c l       *ABS*	00000000 ADC1_OFR4
80000000 l       *ABS*	00000000 ADC1_OFR4_SSATE
0000001a l       *ABS*	00000000 ADC1_OFR4_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC1_OFR4_OFFSET1_Shift
40022080 l       *ABS*	00000000 ADC1_JDR1
00000000 l       *ABS*	00000000 ADC1_JDR1_JDATA1_Shift
40022084 l       *ABS*	00000000 ADC1_JDR2
00000000 l       *ABS*	00000000 ADC1_JDR2_JDATA2_Shift
40022088 l       *ABS*	00000000 ADC1_JDR3
00000000 l       *ABS*	00000000 ADC1_JDR3_JDATA3_Shift
4002208c l       *ABS*	00000000 ADC1_JDR4
00000000 l       *ABS*	00000000 ADC1_JDR4_JDATA4_Shift
400220a0 l       *ABS*	00000000 ADC1_AWD2CR
00000000 l       *ABS*	00000000 ADC1_AWD2CR_AWD2CH_Shift
400220a4 l       *ABS*	00000000 ADC1_AWD3CR
00000001 l       *ABS*	00000000 ADC1_AWD3CR_AWD3CH_Shift
400220c0 l       *ABS*	00000000 ADC1_DIFSEL
00000000 l       *ABS*	00000000 ADC1_DIFSEL_DIFSEL_Shift
400220c4 l       *ABS*	00000000 ADC1_CALFACT
00000010 l       *ABS*	00000000 ADC1_CALFACT_CALFACT_D_Shift
00000000 l       *ABS*	00000000 ADC1_CALFACT_CALFACT_S_Shift
4002201c l       *ABS*	00000000 ADC1_PCSEL
00000000 l       *ABS*	00000000 ADC1_PCSEL_PCSEL_Shift
400220b0 l       *ABS*	00000000 ADC1_LTR2
00000000 l       *ABS*	00000000 ADC1_LTR2_LTR2_Shift
400220b4 l       *ABS*	00000000 ADC1_HTR2
00000000 l       *ABS*	00000000 ADC1_HTR2_HTR2_Shift
400220b8 l       *ABS*	00000000 ADC1_LTR3
00000000 l       *ABS*	00000000 ADC1_LTR3_LTR3_Shift
400220bc l       *ABS*	00000000 ADC1_HTR3
00000000 l       *ABS*	00000000 ADC1_HTR3_HTR3_Shift
400220c8 l       *ABS*	00000000 ADC1_CALFACT2
00000000 l       *ABS*	00000000 ADC1_CALFACT2_LINCALFACT_Shift
40022100 l       *ABS*	00000000 ADC2_BASE
40022100 l       *ABS*	00000000 ADC2_ISR
00000400 l       *ABS*	00000000 ADC2_ISR_JQOVF
00000200 l       *ABS*	00000000 ADC2_ISR_AWD3
00000100 l       *ABS*	00000000 ADC2_ISR_AWD2
00000080 l       *ABS*	00000000 ADC2_ISR_AWD1
00000040 l       *ABS*	00000000 ADC2_ISR_JEOS
00000020 l       *ABS*	00000000 ADC2_ISR_JEOC
00000010 l       *ABS*	00000000 ADC2_ISR_OVR
00000008 l       *ABS*	00000000 ADC2_ISR_EOS
00000004 l       *ABS*	00000000 ADC2_ISR_EOC
00000002 l       *ABS*	00000000 ADC2_ISR_EOSMP
00000001 l       *ABS*	00000000 ADC2_ISR_ADRDY
40022104 l       *ABS*	00000000 ADC2_IER
00000400 l       *ABS*	00000000 ADC2_IER_JQOVFIE
00000200 l       *ABS*	00000000 ADC2_IER_AWD3IE
00000100 l       *ABS*	00000000 ADC2_IER_AWD2IE
00000080 l       *ABS*	00000000 ADC2_IER_AWD1IE
00000040 l       *ABS*	00000000 ADC2_IER_JEOSIE
00000020 l       *ABS*	00000000 ADC2_IER_JEOCIE
00000010 l       *ABS*	00000000 ADC2_IER_OVRIE
00000008 l       *ABS*	00000000 ADC2_IER_EOSIE
00000004 l       *ABS*	00000000 ADC2_IER_EOCIE
00000002 l       *ABS*	00000000 ADC2_IER_EOSMPIE
00000001 l       *ABS*	00000000 ADC2_IER_ADRDYIE
40022108 l       *ABS*	00000000 ADC2_CR
80000000 l       *ABS*	00000000 ADC2_CR_ADCAL
40000000 l       *ABS*	00000000 ADC2_CR_ADCALDIF
20000000 l       *ABS*	00000000 ADC2_CR_DEEPPWD
10000000 l       *ABS*	00000000 ADC2_CR_ADVREGEN
08000000 l       *ABS*	00000000 ADC2_CR_LINCALRDYW6
04000000 l       *ABS*	00000000 ADC2_CR_LINCALRDYW5
02000000 l       *ABS*	00000000 ADC2_CR_LINCALRDYW4
01000000 l       *ABS*	00000000 ADC2_CR_LINCALRDYW3
00800000 l       *ABS*	00000000 ADC2_CR_LINCALRDYW2
00400000 l       *ABS*	00000000 ADC2_CR_LINCALRDYW1
00010000 l       *ABS*	00000000 ADC2_CR_ADCALLIN
00000100 l       *ABS*	00000000 ADC2_CR_BOOST
00000020 l       *ABS*	00000000 ADC2_CR_JADSTP
00000010 l       *ABS*	00000000 ADC2_CR_ADSTP
00000008 l       *ABS*	00000000 ADC2_CR_JADSTART
00000004 l       *ABS*	00000000 ADC2_CR_ADSTART
00000002 l       *ABS*	00000000 ADC2_CR_ADDIS
00000001 l       *ABS*	00000000 ADC2_CR_ADEN
4002210c l       *ABS*	00000000 ADC2_CFGR
80000000 l       *ABS*	00000000 ADC2_CFGR_JQDIS
0000001a l       *ABS*	00000000 ADC2_CFGR_AWDCH1CH_Shift
02000000 l       *ABS*	00000000 ADC2_CFGR_JAUTO
01000000 l       *ABS*	00000000 ADC2_CFGR_JAWD1EN
00800000 l       *ABS*	00000000 ADC2_CFGR_AWD1EN
00400000 l       *ABS*	00000000 ADC2_CFGR_AWD1SGL
00200000 l       *ABS*	00000000 ADC2_CFGR_JQM
00100000 l       *ABS*	00000000 ADC2_CFGR_JDISCEN
00000011 l       *ABS*	00000000 ADC2_CFGR_DISCNUM_Shift
00010000 l       *ABS*	00000000 ADC2_CFGR_DISCEN
00004000 l       *ABS*	00000000 ADC2_CFGR_AUTDLY
00002000 l       *ABS*	00000000 ADC2_CFGR_CONT
00001000 l       *ABS*	00000000 ADC2_CFGR_OVRMOD
0000000a l       *ABS*	00000000 ADC2_CFGR_EXTEN_Shift
00000005 l       *ABS*	00000000 ADC2_CFGR_EXTSEL_Shift
00000002 l       *ABS*	00000000 ADC2_CFGR_RES_Shift
00000000 l       *ABS*	00000000 ADC2_CFGR_DMNGT_Shift
40022110 l       *ABS*	00000000 ADC2_CFGR2
00000001 l       *ABS*	00000000 ADC2_CFGR2_ROVSE
00000002 l       *ABS*	00000000 ADC2_CFGR2_JOVSE
00000005 l       *ABS*	00000000 ADC2_CFGR2_OVSS_Shift
00000200 l       *ABS*	00000000 ADC2_CFGR2_TROVS
00000400 l       *ABS*	00000000 ADC2_CFGR2_ROVSM
00000800 l       *ABS*	00000000 ADC2_CFGR2_RSHIFT1
00001000 l       *ABS*	00000000 ADC2_CFGR2_RSHIFT2
00002000 l       *ABS*	00000000 ADC2_CFGR2_RSHIFT3
00004000 l       *ABS*	00000000 ADC2_CFGR2_RSHIFT4
00000010 l       *ABS*	00000000 ADC2_CFGR2_OSR_Shift
0000001c l       *ABS*	00000000 ADC2_CFGR2_LSHIFT_Shift
40022114 l       *ABS*	00000000 ADC2_SMPR1
0000001b l       *ABS*	00000000 ADC2_SMPR1_SMP9_Shift
00000018 l       *ABS*	00000000 ADC2_SMPR1_SMP8_Shift
00000015 l       *ABS*	00000000 ADC2_SMPR1_SMP7_Shift
00000012 l       *ABS*	00000000 ADC2_SMPR1_SMP6_Shift
0000000f l       *ABS*	00000000 ADC2_SMPR1_SMP5_Shift
0000000c l       *ABS*	00000000 ADC2_SMPR1_SMP4_Shift
00000009 l       *ABS*	00000000 ADC2_SMPR1_SMP3_Shift
00000006 l       *ABS*	00000000 ADC2_SMPR1_SMP2_Shift
00000003 l       *ABS*	00000000 ADC2_SMPR1_SMP1_Shift
40022118 l       *ABS*	00000000 ADC2_SMPR2
0000001b l       *ABS*	00000000 ADC2_SMPR2_SMP19_Shift
00000018 l       *ABS*	00000000 ADC2_SMPR2_SMP18_Shift
00000015 l       *ABS*	00000000 ADC2_SMPR2_SMP17_Shift
00000012 l       *ABS*	00000000 ADC2_SMPR2_SMP16_Shift
0000000f l       *ABS*	00000000 ADC2_SMPR2_SMP15_Shift
0000000c l       *ABS*	00000000 ADC2_SMPR2_SMP14_Shift
00000009 l       *ABS*	00000000 ADC2_SMPR2_SMP13_Shift
00000006 l       *ABS*	00000000 ADC2_SMPR2_SMP12_Shift
00000003 l       *ABS*	00000000 ADC2_SMPR2_SMP11_Shift
00000000 l       *ABS*	00000000 ADC2_SMPR2_SMP10_Shift
40022120 l       *ABS*	00000000 ADC2_LTR1
00000000 l       *ABS*	00000000 ADC2_LTR1_LTR1_Shift
40022124 l       *ABS*	00000000 ADC2_LHTR1
00000000 l       *ABS*	00000000 ADC2_LHTR1_LHTR1_Shift
40022130 l       *ABS*	00000000 ADC2_SQR1
00000018 l       *ABS*	00000000 ADC2_SQR1_SQ4_Shift
00000012 l       *ABS*	00000000 ADC2_SQR1_SQ3_Shift
0000000c l       *ABS*	00000000 ADC2_SQR1_SQ2_Shift
00000006 l       *ABS*	00000000 ADC2_SQR1_SQ1_Shift
00000000 l       *ABS*	00000000 ADC2_SQR1_L3_Shift
40022134 l       *ABS*	00000000 ADC2_SQR2
00000018 l       *ABS*	00000000 ADC2_SQR2_SQ9_Shift
00000012 l       *ABS*	00000000 ADC2_SQR2_SQ8_Shift
0000000c l       *ABS*	00000000 ADC2_SQR2_SQ7_Shift
00000006 l       *ABS*	00000000 ADC2_SQR2_SQ6_Shift
00000000 l       *ABS*	00000000 ADC2_SQR2_SQ5_Shift
40022138 l       *ABS*	00000000 ADC2_SQR3
00000018 l       *ABS*	00000000 ADC2_SQR3_SQ14_Shift
00000012 l       *ABS*	00000000 ADC2_SQR3_SQ13_Shift
0000000c l       *ABS*	00000000 ADC2_SQR3_SQ12_Shift
00000006 l       *ABS*	00000000 ADC2_SQR3_SQ11_Shift
00000000 l       *ABS*	00000000 ADC2_SQR3_SQ10_Shift
4002213c l       *ABS*	00000000 ADC2_SQR4
00000006 l       *ABS*	00000000 ADC2_SQR4_SQ16_Shift
00000000 l       *ABS*	00000000 ADC2_SQR4_SQ15_Shift
40022140 l       *ABS*	00000000 ADC2_DR
00000000 l       *ABS*	00000000 ADC2_DR_RDATA_Shift
4002214c l       *ABS*	00000000 ADC2_JSQR
0000001b l       *ABS*	00000000 ADC2_JSQR_JSQ4_Shift
00000015 l       *ABS*	00000000 ADC2_JSQR_JSQ3_Shift
0000000f l       *ABS*	00000000 ADC2_JSQR_JSQ2_Shift
00000009 l       *ABS*	00000000 ADC2_JSQR_JSQ1_Shift
00000007 l       *ABS*	00000000 ADC2_JSQR_JEXTEN_Shift
00000002 l       *ABS*	00000000 ADC2_JSQR_JEXTSEL_Shift
00000000 l       *ABS*	00000000 ADC2_JSQR_JL_Shift
40022160 l       *ABS*	00000000 ADC2_OFR1
80000000 l       *ABS*	00000000 ADC2_OFR1_SSATE
0000001a l       *ABS*	00000000 ADC2_OFR1_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC2_OFR1_OFFSET1_Shift
40022164 l       *ABS*	00000000 ADC2_OFR2
80000000 l       *ABS*	00000000 ADC2_OFR2_SSATE
0000001a l       *ABS*	00000000 ADC2_OFR2_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC2_OFR2_OFFSET1_Shift
40022168 l       *ABS*	00000000 ADC2_OFR3
80000000 l       *ABS*	00000000 ADC2_OFR3_SSATE
0000001a l       *ABS*	00000000 ADC2_OFR3_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC2_OFR3_OFFSET1_Shift
4002216c l       *ABS*	00000000 ADC2_OFR4
80000000 l       *ABS*	00000000 ADC2_OFR4_SSATE
0000001a l       *ABS*	00000000 ADC2_OFR4_OFFSET1_CH_Shift
00000000 l       *ABS*	00000000 ADC2_OFR4_OFFSET1_Shift
40022180 l       *ABS*	00000000 ADC2_JDR1
00000000 l       *ABS*	00000000 ADC2_JDR1_JDATA1_Shift
40022184 l       *ABS*	00000000 ADC2_JDR2
00000000 l       *ABS*	00000000 ADC2_JDR2_JDATA2_Shift
40022188 l       *ABS*	00000000 ADC2_JDR3
00000000 l       *ABS*	00000000 ADC2_JDR3_JDATA3_Shift
4002218c l       *ABS*	00000000 ADC2_JDR4
00000000 l       *ABS*	00000000 ADC2_JDR4_JDATA4_Shift
400221a0 l       *ABS*	00000000 ADC2_AWD2CR
00000000 l       *ABS*	00000000 ADC2_AWD2CR_AWD2CH_Shift
400221a4 l       *ABS*	00000000 ADC2_AWD3CR
00000001 l       *ABS*	00000000 ADC2_AWD3CR_AWD3CH_Shift
400221c0 l       *ABS*	00000000 ADC2_DIFSEL
00000000 l       *ABS*	00000000 ADC2_DIFSEL_DIFSEL_Shift
400221c4 l       *ABS*	00000000 ADC2_CALFACT
00000010 l       *ABS*	00000000 ADC2_CALFACT_CALFACT_D_Shift
00000000 l       *ABS*	00000000 ADC2_CALFACT_CALFACT_S_Shift
4002211c l       *ABS*	00000000 ADC2_PCSEL
00000000 l       *ABS*	00000000 ADC2_PCSEL_PCSEL_Shift
400221b0 l       *ABS*	00000000 ADC2_LTR2
00000000 l       *ABS*	00000000 ADC2_LTR2_LTR2_Shift
400221b4 l       *ABS*	00000000 ADC2_HTR2
00000000 l       *ABS*	00000000 ADC2_HTR2_HTR2_Shift
400221b8 l       *ABS*	00000000 ADC2_LTR3
00000000 l       *ABS*	00000000 ADC2_LTR3_LTR3_Shift
400221bc l       *ABS*	00000000 ADC2_HTR3
00000000 l       *ABS*	00000000 ADC2_HTR3_HTR3_Shift
400221c8 l       *ABS*	00000000 ADC2_CALFACT2
00000000 l       *ABS*	00000000 ADC2_CALFACT2_LINCALFACT_Shift
58026300 l       *ABS*	00000000 ADC3_Common_BASE
58026300 l       *ABS*	00000000 ADC3_Common_CSR
00000001 l       *ABS*	00000000 ADC3_Common_CSR_ADRDY_MST
00000002 l       *ABS*	00000000 ADC3_Common_CSR_EOSMP_MST
00000004 l       *ABS*	00000000 ADC3_Common_CSR_EOC_MST
00000008 l       *ABS*	00000000 ADC3_Common_CSR_EOS_MST
00000010 l       *ABS*	00000000 ADC3_Common_CSR_OVR_MST
00000020 l       *ABS*	00000000 ADC3_Common_CSR_JEOC_MST
00000040 l       *ABS*	00000000 ADC3_Common_CSR_JEOS_MST
00000080 l       *ABS*	00000000 ADC3_Common_CSR_AWD1_MST
00000100 l       *ABS*	00000000 ADC3_Common_CSR_AWD2_MST
00000200 l       *ABS*	00000000 ADC3_Common_CSR_AWD3_MST
00000400 l       *ABS*	00000000 ADC3_Common_CSR_JQOVF_MST
00010000 l       *ABS*	00000000 ADC3_Common_CSR_ADRDY_SLV
00020000 l       *ABS*	00000000 ADC3_Common_CSR_EOSMP_SLV
00040000 l       *ABS*	00000000 ADC3_Common_CSR_EOC_SLV
00080000 l       *ABS*	00000000 ADC3_Common_CSR_EOS_SLV
00100000 l       *ABS*	00000000 ADC3_Common_CSR_OVR_SLV
00200000 l       *ABS*	00000000 ADC3_Common_CSR_JEOC_SLV
00400000 l       *ABS*	00000000 ADC3_Common_CSR_JEOS_SLV
00800000 l       *ABS*	00000000 ADC3_Common_CSR_AWD1_SLV
01000000 l       *ABS*	00000000 ADC3_Common_CSR_AWD2_SLV
02000000 l       *ABS*	00000000 ADC3_Common_CSR_AWD3_SLV
04000000 l       *ABS*	00000000 ADC3_Common_CSR_JQOVF_SLV
58026308 l       *ABS*	00000000 ADC3_Common_CCR
00000000 l       *ABS*	00000000 ADC3_Common_CCR_DUAL_Shift
00000008 l       *ABS*	00000000 ADC3_Common_CCR_DELAY_Shift
0000000e l       *ABS*	00000000 ADC3_Common_CCR_DAMDF_Shift
00000010 l       *ABS*	00000000 ADC3_Common_CCR_CKMODE_Shift
00000012 l       *ABS*	00000000 ADC3_Common_CCR_PRESC_Shift
00400000 l       *ABS*	00000000 ADC3_Common_CCR_VREFEN
00800000 l       *ABS*	00000000 ADC3_Common_CCR_TSEN
01000000 l       *ABS*	00000000 ADC3_Common_CCR_VBATEN
5802630c l       *ABS*	00000000 ADC3_Common_CDR
00000010 l       *ABS*	00000000 ADC3_Common_CDR_RDATA_SLV_Shift
00000000 l       *ABS*	00000000 ADC3_Common_CDR_RDATA_MST_Shift
58026310 l       *ABS*	00000000 ADC3_Common_CDR2
00000000 l       *ABS*	00000000 ADC3_Common_CDR2_RDATA_ALT_Shift
40022300 l       *ABS*	00000000 ADC12_Common_BASE
40022300 l       *ABS*	00000000 ADC12_Common_CSR
00000001 l       *ABS*	00000000 ADC12_Common_CSR_ADRDY_MST
00000002 l       *ABS*	00000000 ADC12_Common_CSR_EOSMP_MST
00000004 l       *ABS*	00000000 ADC12_Common_CSR_EOC_MST
00000008 l       *ABS*	00000000 ADC12_Common_CSR_EOS_MST
00000010 l       *ABS*	00000000 ADC12_Common_CSR_OVR_MST
00000020 l       *ABS*	00000000 ADC12_Common_CSR_JEOC_MST
00000040 l       *ABS*	00000000 ADC12_Common_CSR_JEOS_MST
00000080 l       *ABS*	00000000 ADC12_Common_CSR_AWD1_MST
00000100 l       *ABS*	00000000 ADC12_Common_CSR_AWD2_MST
00000200 l       *ABS*	00000000 ADC12_Common_CSR_AWD3_MST
00000400 l       *ABS*	00000000 ADC12_Common_CSR_JQOVF_MST
00010000 l       *ABS*	00000000 ADC12_Common_CSR_ADRDY_SLV
00020000 l       *ABS*	00000000 ADC12_Common_CSR_EOSMP_SLV
00040000 l       *ABS*	00000000 ADC12_Common_CSR_EOC_SLV
00080000 l       *ABS*	00000000 ADC12_Common_CSR_EOS_SLV
00100000 l       *ABS*	00000000 ADC12_Common_CSR_OVR_SLV
00200000 l       *ABS*	00000000 ADC12_Common_CSR_JEOC_SLV
00400000 l       *ABS*	00000000 ADC12_Common_CSR_JEOS_SLV
00800000 l       *ABS*	00000000 ADC12_Common_CSR_AWD1_SLV
01000000 l       *ABS*	00000000 ADC12_Common_CSR_AWD2_SLV
02000000 l       *ABS*	00000000 ADC12_Common_CSR_AWD3_SLV
04000000 l       *ABS*	00000000 ADC12_Common_CSR_JQOVF_SLV
40022308 l       *ABS*	00000000 ADC12_Common_CCR
00000000 l       *ABS*	00000000 ADC12_Common_CCR_DUAL_Shift
00000008 l       *ABS*	00000000 ADC12_Common_CCR_DELAY_Shift
0000000e l       *ABS*	00000000 ADC12_Common_CCR_DAMDF_Shift
00000010 l       *ABS*	00000000 ADC12_Common_CCR_CKMODE_Shift
00000012 l       *ABS*	00000000 ADC12_Common_CCR_PRESC_Shift
00400000 l       *ABS*	00000000 ADC12_Common_CCR_VREFEN
00800000 l       *ABS*	00000000 ADC12_Common_CCR_TSEN
01000000 l       *ABS*	00000000 ADC12_Common_CCR_VBATEN
4002230c l       *ABS*	00000000 ADC12_Common_CDR
00000010 l       *ABS*	00000000 ADC12_Common_CDR_RDATA_SLV_Shift
00000000 l       *ABS*	00000000 ADC12_Common_CDR_RDATA_MST_Shift
40022310 l       *ABS*	00000000 ADC12_Common_CDR2
00000000 l       *ABS*	00000000 ADC12_Common_CDR2_RDATA_ALT_Shift
40020800 l       *ABS*	00000000 DMAMUX1_BASE
40020800 l       *ABS*	00000000 DMAMUX1_C0CR
00000000 l       *ABS*	00000000 DMAMUX1_C0CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C0CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C0CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C0CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C0CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C0CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C0CR_SYNC_ID_Shift
40020804 l       *ABS*	00000000 DMAMUX1_C1CR
00000000 l       *ABS*	00000000 DMAMUX1_C1CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C1CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C1CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C1CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C1CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C1CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C1CR_SYNC_ID_Shift
40020808 l       *ABS*	00000000 DMAMUX1_C2CR
00000000 l       *ABS*	00000000 DMAMUX1_C2CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C2CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C2CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C2CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C2CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C2CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C2CR_SYNC_ID_Shift
4002080c l       *ABS*	00000000 DMAMUX1_C3CR
00000000 l       *ABS*	00000000 DMAMUX1_C3CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C3CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C3CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C3CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C3CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C3CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C3CR_SYNC_ID_Shift
40020810 l       *ABS*	00000000 DMAMUX1_C4CR
00000000 l       *ABS*	00000000 DMAMUX1_C4CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C4CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C4CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C4CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C4CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C4CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C4CR_SYNC_ID_Shift
40020814 l       *ABS*	00000000 DMAMUX1_C5CR
00000000 l       *ABS*	00000000 DMAMUX1_C5CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C5CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C5CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C5CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C5CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C5CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C5CR_SYNC_ID_Shift
40020818 l       *ABS*	00000000 DMAMUX1_C6CR
00000000 l       *ABS*	00000000 DMAMUX1_C6CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C6CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C6CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C6CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C6CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C6CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C6CR_SYNC_ID_Shift
4002081c l       *ABS*	00000000 DMAMUX1_C7CR
00000000 l       *ABS*	00000000 DMAMUX1_C7CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C7CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C7CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C7CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C7CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C7CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C7CR_SYNC_ID_Shift
40020820 l       *ABS*	00000000 DMAMUX1_C8CR
00000000 l       *ABS*	00000000 DMAMUX1_C8CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C8CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C8CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C8CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C8CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C8CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C8CR_SYNC_ID_Shift
40020824 l       *ABS*	00000000 DMAMUX1_C9CR
00000000 l       *ABS*	00000000 DMAMUX1_C9CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C9CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C9CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C9CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C9CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C9CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C9CR_SYNC_ID_Shift
40020828 l       *ABS*	00000000 DMAMUX1_C10CR
00000000 l       *ABS*	00000000 DMAMUX1_C10CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C10CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C10CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C10CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C10CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C10CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C10CR_SYNC_ID_Shift
4002082c l       *ABS*	00000000 DMAMUX1_C11CR
00000000 l       *ABS*	00000000 DMAMUX1_C11CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C11CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C11CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C11CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C11CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C11CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C11CR_SYNC_ID_Shift
40020830 l       *ABS*	00000000 DMAMUX1_C12CR
00000000 l       *ABS*	00000000 DMAMUX1_C12CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C12CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C12CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C12CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C12CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C12CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C12CR_SYNC_ID_Shift
40020834 l       *ABS*	00000000 DMAMUX1_C13CR
00000000 l       *ABS*	00000000 DMAMUX1_C13CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C13CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C13CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C13CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C13CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C13CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C13CR_SYNC_ID_Shift
40020838 l       *ABS*	00000000 DMAMUX1_C14CR
00000000 l       *ABS*	00000000 DMAMUX1_C14CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C14CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C14CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C14CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C14CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C14CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C14CR_SYNC_ID_Shift
4002083c l       *ABS*	00000000 DMAMUX1_C15CR
00000000 l       *ABS*	00000000 DMAMUX1_C15CR_DMAREQ_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_C15CR_SOIE
00000200 l       *ABS*	00000000 DMAMUX1_C15CR_EGE
00010000 l       *ABS*	00000000 DMAMUX1_C15CR_SE
00000011 l       *ABS*	00000000 DMAMUX1_C15CR_SPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_C15CR_NBREQ_Shift
00000018 l       *ABS*	00000000 DMAMUX1_C15CR_SYNC_ID_Shift
40020900 l       *ABS*	00000000 DMAMUX1_RG0CR
00000000 l       *ABS*	00000000 DMAMUX1_RG0CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG0CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG0CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG0CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG0CR_GNBREQ_Shift
40020904 l       *ABS*	00000000 DMAMUX1_RG1CR
00000000 l       *ABS*	00000000 DMAMUX1_RG1CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG1CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG1CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG1CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG1CR_GNBREQ_Shift
40020908 l       *ABS*	00000000 DMAMUX1_RG2CR
00000000 l       *ABS*	00000000 DMAMUX1_RG2CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG2CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG2CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG2CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG2CR_GNBREQ_Shift
4002090c l       *ABS*	00000000 DMAMUX1_RG3CR
00000000 l       *ABS*	00000000 DMAMUX1_RG3CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG3CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG3CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG3CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG3CR_GNBREQ_Shift
40020910 l       *ABS*	00000000 DMAMUX1_RG4CR
00000000 l       *ABS*	00000000 DMAMUX1_RG4CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG4CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG4CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG4CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG4CR_GNBREQ_Shift
40020914 l       *ABS*	00000000 DMAMUX1_RG5CR
00000000 l       *ABS*	00000000 DMAMUX1_RG5CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG5CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG5CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG5CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG5CR_GNBREQ_Shift
40020918 l       *ABS*	00000000 DMAMUX1_RG6CR
00000000 l       *ABS*	00000000 DMAMUX1_RG6CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG6CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG6CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG6CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG6CR_GNBREQ_Shift
4002091c l       *ABS*	00000000 DMAMUX1_RG7CR
00000000 l       *ABS*	00000000 DMAMUX1_RG7CR_SIG_ID_Shift
00000100 l       *ABS*	00000000 DMAMUX1_RG7CR_OIE
00010000 l       *ABS*	00000000 DMAMUX1_RG7CR_GE
00000011 l       *ABS*	00000000 DMAMUX1_RG7CR_GPOL_Shift
00000013 l       *ABS*	00000000 DMAMUX1_RG7CR_GNBREQ_Shift
40020940 l       *ABS*	00000000 DMAMUX1_RGSR
00000000 l       *ABS*	00000000 DMAMUX1_RGSR_OF_Shift
40020944 l       *ABS*	00000000 DMAMUX1_RGCFR
00000000 l       *ABS*	00000000 DMAMUX1_RGCFR_COF_Shift
40020880 l       *ABS*	00000000 DMAMUX1_CSR
00000000 l       *ABS*	00000000 DMAMUX1_CSR_SOF_Shift
40020884 l       *ABS*	00000000 DMAMUX1_CFR
00000000 l       *ABS*	00000000 DMAMUX1_CFR_CSOF_Shift
58024c00 l       *ABS*	00000000 CRC_BASE
58024c00 l       *ABS*	00000000 CRC_DR
00000000 l       *ABS*	00000000 CRC_DR_DR_Shift
58024c04 l       *ABS*	00000000 CRC_IDR
00000000 l       *ABS*	00000000 CRC_IDR_IDR_Shift
58024c08 l       *ABS*	00000000 CRC_CR
00000001 l       *ABS*	00000000 CRC_CR_RESET
00000003 l       *ABS*	00000000 CRC_CR_POLYSIZE_Shift
00000005 l       *ABS*	00000000 CRC_CR_REV_IN_Shift
00000080 l       *ABS*	00000000 CRC_CR_REV_OUT
58024c0c l       *ABS*	00000000 CRC_INIT
00000000 l       *ABS*	00000000 CRC_INIT_CRC_INIT_Shift
58024c10 l       *ABS*	00000000 CRC_POL
00000000 l       *ABS*	00000000 CRC_POL_POL_Shift
58024400 l       *ABS*	00000000 RCC_BASE
58024400 l       *ABS*	00000000 RCC_CR
00000001 l       *ABS*	00000000 RCC_CR_HSION
00000002 l       *ABS*	00000000 RCC_CR_HSIKERON
00000004 l       *ABS*	00000000 RCC_CR_HSIRDY
00000003 l       *ABS*	00000000 RCC_CR_HSIDIV_Shift
00000020 l       *ABS*	00000000 RCC_CR_HSIDIVF
00000080 l       *ABS*	00000000 RCC_CR_CSION
00000100 l       *ABS*	00000000 RCC_CR_CSIRDY
00000200 l       *ABS*	00000000 RCC_CR_CSIKERON
00001000 l       *ABS*	00000000 RCC_CR_RC48ON
00002000 l       *ABS*	00000000 RCC_CR_RC48RDY
00004000 l       *ABS*	00000000 RCC_CR_D1CKRDY
00008000 l       *ABS*	00000000 RCC_CR_D2CKRDY
00010000 l       *ABS*	00000000 RCC_CR_HSEON
00020000 l       *ABS*	00000000 RCC_CR_HSERDY
00040000 l       *ABS*	00000000 RCC_CR_HSEBYP
00080000 l       *ABS*	00000000 RCC_CR_HSECSSON
01000000 l       *ABS*	00000000 RCC_CR_PLL1ON
02000000 l       *ABS*	00000000 RCC_CR_PLL1RDY
04000000 l       *ABS*	00000000 RCC_CR_PLL2ON
08000000 l       *ABS*	00000000 RCC_CR_PLL2RDY
10000000 l       *ABS*	00000000 RCC_CR_PLL3ON
20000000 l       *ABS*	00000000 RCC_CR_PLL3RDY
58024404 l       *ABS*	00000000 RCC_ICSCR
00000000 l       *ABS*	00000000 RCC_ICSCR_HSICAL_Shift
0000000c l       *ABS*	00000000 RCC_ICSCR_HSITRIM_Shift
00000012 l       *ABS*	00000000 RCC_ICSCR_CSICAL_Shift
0000001a l       *ABS*	00000000 RCC_ICSCR_CSITRIM_Shift
58024408 l       *ABS*	00000000 RCC_CRRCR
00000000 l       *ABS*	00000000 RCC_CRRCR_RC48CAL_Shift
58024410 l       *ABS*	00000000 RCC_CFGR
00000000 l       *ABS*	00000000 RCC_CFGR_SW_Shift
00000003 l       *ABS*	00000000 RCC_CFGR_SWS_Shift
00000040 l       *ABS*	00000000 RCC_CFGR_STOPWUCK
00000080 l       *ABS*	00000000 RCC_CFGR_STOPKERWUCK
00000008 l       *ABS*	00000000 RCC_CFGR_RTCPRE_Shift
00004000 l       *ABS*	00000000 RCC_CFGR_HRTIMSEL
00008000 l       *ABS*	00000000 RCC_CFGR_TIMPRE
00000012 l       *ABS*	00000000 RCC_CFGR_MCO1PRE_Shift
00000016 l       *ABS*	00000000 RCC_CFGR_MCO1SEL_Shift
00000019 l       *ABS*	00000000 RCC_CFGR_MCO2PRE_Shift
0000001d l       *ABS*	00000000 RCC_CFGR_MCO2SEL_Shift
58024418 l       *ABS*	00000000 RCC_D1CFGR
00000000 l       *ABS*	00000000 RCC_D1CFGR_HPRE_Shift
00000004 l       *ABS*	00000000 RCC_D1CFGR_D1PPRE_Shift
00000008 l       *ABS*	00000000 RCC_D1CFGR_D1CPRE_Shift
5802441c l       *ABS*	00000000 RCC_D2CFGR
00000004 l       *ABS*	00000000 RCC_D2CFGR_D2PPRE1_Shift
00000008 l       *ABS*	00000000 RCC_D2CFGR_D2PPRE2_Shift
58024420 l       *ABS*	00000000 RCC_D3CFGR
00000004 l       *ABS*	00000000 RCC_D3CFGR_D3PPRE_Shift
58024428 l       *ABS*	00000000 RCC_PLLCKSELR
00000000 l       *ABS*	00000000 RCC_PLLCKSELR_PLLSRC_Shift
00000004 l       *ABS*	00000000 RCC_PLLCKSELR_DIVM1_Shift
0000000c l       *ABS*	00000000 RCC_PLLCKSELR_DIVM2_Shift
00000014 l       *ABS*	00000000 RCC_PLLCKSELR_DIVM3_Shift
5802442c l       *ABS*	00000000 RCC_PLLCFGR
00000001 l       *ABS*	00000000 RCC_PLLCFGR_PLL1FRACEN
00000002 l       *ABS*	00000000 RCC_PLLCFGR_PLL1VCOSEL
00000002 l       *ABS*	00000000 RCC_PLLCFGR_PLL1RGE_Shift
00000010 l       *ABS*	00000000 RCC_PLLCFGR_PLL2FRACEN
00000020 l       *ABS*	00000000 RCC_PLLCFGR_PLL2VCOSEL
00000006 l       *ABS*	00000000 RCC_PLLCFGR_PLL2RGE_Shift
00000100 l       *ABS*	00000000 RCC_PLLCFGR_PLL3FRACEN
00000200 l       *ABS*	00000000 RCC_PLLCFGR_PLL3VCOSEL
0000000a l       *ABS*	00000000 RCC_PLLCFGR_PLL3RGE_Shift
00010000 l       *ABS*	00000000 RCC_PLLCFGR_DIVP1EN
00020000 l       *ABS*	00000000 RCC_PLLCFGR_DIVQ1EN
00040000 l       *ABS*	00000000 RCC_PLLCFGR_DIVR1EN
00080000 l       *ABS*	00000000 RCC_PLLCFGR_DIVP2EN
00100000 l       *ABS*	00000000 RCC_PLLCFGR_DIVQ2EN
00200000 l       *ABS*	00000000 RCC_PLLCFGR_DIVR2EN
00400000 l       *ABS*	00000000 RCC_PLLCFGR_DIVP3EN
00800000 l       *ABS*	00000000 RCC_PLLCFGR_DIVQ3EN
01000000 l       *ABS*	00000000 RCC_PLLCFGR_DIVR3EN
58024430 l       *ABS*	00000000 RCC_PLL1DIVR
00000000 l       *ABS*	00000000 RCC_PLL1DIVR_DIVN1_Shift
00000009 l       *ABS*	00000000 RCC_PLL1DIVR_DIVP1_Shift
00000010 l       *ABS*	00000000 RCC_PLL1DIVR_DIVQ1_Shift
00000018 l       *ABS*	00000000 RCC_PLL1DIVR_DIVR1_Shift
58024434 l       *ABS*	00000000 RCC_PLL1FRACR
00000003 l       *ABS*	00000000 RCC_PLL1FRACR_FRACN1_Shift
58024438 l       *ABS*	00000000 RCC_PLL2DIVR
00000000 l       *ABS*	00000000 RCC_PLL2DIVR_DIVN1_Shift
00000009 l       *ABS*	00000000 RCC_PLL2DIVR_DIVP1_Shift
00000010 l       *ABS*	00000000 RCC_PLL2DIVR_DIVQ1_Shift
00000018 l       *ABS*	00000000 RCC_PLL2DIVR_DIVR1_Shift
5802443c l       *ABS*	00000000 RCC_PLL2FRACR
00000003 l       *ABS*	00000000 RCC_PLL2FRACR_FRACN2_Shift
58024440 l       *ABS*	00000000 RCC_PLL3DIVR
00000000 l       *ABS*	00000000 RCC_PLL3DIVR_DIVN3_Shift
00000009 l       *ABS*	00000000 RCC_PLL3DIVR_DIVP3_Shift
00000010 l       *ABS*	00000000 RCC_PLL3DIVR_DIVQ3_Shift
00000018 l       *ABS*	00000000 RCC_PLL3DIVR_DIVR3_Shift
58024444 l       *ABS*	00000000 RCC_PLL3FRACR
00000003 l       *ABS*	00000000 RCC_PLL3FRACR_FRACN3_Shift
5802444c l       *ABS*	00000000 RCC_D1CCIPR
00000000 l       *ABS*	00000000 RCC_D1CCIPR_FMCSRC_Shift
00000004 l       *ABS*	00000000 RCC_D1CCIPR_QSPISRC_Shift
00010000 l       *ABS*	00000000 RCC_D1CCIPR_SDMMCSRC
0000001c l       *ABS*	00000000 RCC_D1CCIPR_CKPERSRC_Shift
58024450 l       *ABS*	00000000 RCC_D2CCIP1R
00000000 l       *ABS*	00000000 RCC_D2CCIP1R_SAI1SRC_Shift
00000006 l       *ABS*	00000000 RCC_D2CCIP1R_SAI23SRC_Shift
0000000c l       *ABS*	00000000 RCC_D2CCIP1R_SPI123SRC_Shift
00000010 l       *ABS*	00000000 RCC_D2CCIP1R_SPI45SRC_Shift
00000014 l       *ABS*	00000000 RCC_D2CCIP1R_SPDIFSRC_Shift
01000000 l       *ABS*	00000000 RCC_D2CCIP1R_DFSDM1SRC
0000001c l       *ABS*	00000000 RCC_D2CCIP1R_FDCANSRC_Shift
80000000 l       *ABS*	00000000 RCC_D2CCIP1R_SWPSRC
58024454 l       *ABS*	00000000 RCC_D2CCIP2R
00000000 l       *ABS*	00000000 RCC_D2CCIP2R_USART234578SRC_Shift
00000003 l       *ABS*	00000000 RCC_D2CCIP2R_USART16SRC_Shift
00000008 l       *ABS*	00000000 RCC_D2CCIP2R_RNGSRC_Shift
0000000c l       *ABS*	00000000 RCC_D2CCIP2R_I2C123SRC_Shift
00000014 l       *ABS*	00000000 RCC_D2CCIP2R_USBSRC_Shift
00000016 l       *ABS*	00000000 RCC_D2CCIP2R_CECSRC_Shift
0000001c l       *ABS*	00000000 RCC_D2CCIP2R_LPTIM1SRC_Shift
58024458 l       *ABS*	00000000 RCC_D3CCIPR
00000000 l       *ABS*	00000000 RCC_D3CCIPR_LPUART1SRC_Shift
00000008 l       *ABS*	00000000 RCC_D3CCIPR_I2C4SRC_Shift
0000000a l       *ABS*	00000000 RCC_D3CCIPR_LPTIM2SRC_Shift
0000000d l       *ABS*	00000000 RCC_D3CCIPR_LPTIM345SRC_Shift
00000010 l       *ABS*	00000000 RCC_D3CCIPR_ADCSRC_Shift
00000015 l       *ABS*	00000000 RCC_D3CCIPR_SAI4ASRC_Shift
00000018 l       *ABS*	00000000 RCC_D3CCIPR_SAI4BSRC_Shift
0000001c l       *ABS*	00000000 RCC_D3CCIPR_SPI6SRC_Shift
58024460 l       *ABS*	00000000 RCC_CIER
00000001 l       *ABS*	00000000 RCC_CIER_LSIRDYIE
00000002 l       *ABS*	00000000 RCC_CIER_LSERDYIE
00000004 l       *ABS*	00000000 RCC_CIER_HSIRDYIE
00000008 l       *ABS*	00000000 RCC_CIER_HSERDYIE
00000010 l       *ABS*	00000000 RCC_CIER_CSIRDYIE
00000020 l       *ABS*	00000000 RCC_CIER_RC48RDYIE
00000040 l       *ABS*	00000000 RCC_CIER_PLL1RDYIE
00000080 l       *ABS*	00000000 RCC_CIER_PLL2RDYIE
00000100 l       *ABS*	00000000 RCC_CIER_PLL3RDYIE
00000200 l       *ABS*	00000000 RCC_CIER_LSECSSIE
58024464 l       *ABS*	00000000 RCC_CIFR
00000001 l       *ABS*	00000000 RCC_CIFR_LSIRDYF
00000002 l       *ABS*	00000000 RCC_CIFR_LSERDYF
00000004 l       *ABS*	00000000 RCC_CIFR_HSIRDYF
00000008 l       *ABS*	00000000 RCC_CIFR_HSERDYF
00000010 l       *ABS*	00000000 RCC_CIFR_CSIRDY
00000020 l       *ABS*	00000000 RCC_CIFR_RC48RDYF
00000040 l       *ABS*	00000000 RCC_CIFR_PLL1RDYF
00000080 l       *ABS*	00000000 RCC_CIFR_PLL2RDYF
00000100 l       *ABS*	00000000 RCC_CIFR_PLL3RDYF
00000200 l       *ABS*	00000000 RCC_CIFR_LSECSSF
00000400 l       *ABS*	00000000 RCC_CIFR_HSECSSF
58024468 l       *ABS*	00000000 RCC_CICR
00000001 l       *ABS*	00000000 RCC_CICR_LSIRDYC
00000002 l       *ABS*	00000000 RCC_CICR_LSERDYC
00000004 l       *ABS*	00000000 RCC_CICR_HSIRDYC
00000008 l       *ABS*	00000000 RCC_CICR_HSERDYC
00000010 l       *ABS*	00000000 RCC_CICR_HSE_ready_Interrupt_Clear
00000020 l       *ABS*	00000000 RCC_CICR_RC48RDYC
00000040 l       *ABS*	00000000 RCC_CICR_PLL1RDYC
00000080 l       *ABS*	00000000 RCC_CICR_PLL2RDYC
00000100 l       *ABS*	00000000 RCC_CICR_PLL3RDYC
00000200 l       *ABS*	00000000 RCC_CICR_LSECSSC
00000400 l       *ABS*	00000000 RCC_CICR_HSECSSC
58024470 l       *ABS*	00000000 RCC_BDCR
00000001 l       *ABS*	00000000 RCC_BDCR_LSEON
00000002 l       *ABS*	00000000 RCC_BDCR_LSERDY
00000004 l       *ABS*	00000000 RCC_BDCR_LSEBYP
00000003 l       *ABS*	00000000 RCC_BDCR_LSEDRV_Shift
00000020 l       *ABS*	00000000 RCC_BDCR_LSECSSON
00000040 l       *ABS*	00000000 RCC_BDCR_LSECSSD
00000008 l       *ABS*	00000000 RCC_BDCR_RTCSRC_Shift
00008000 l       *ABS*	00000000 RCC_BDCR_RTCEN
00010000 l       *ABS*	00000000 RCC_BDCR_VSWRST
58024474 l       *ABS*	00000000 RCC_CSR
00000001 l       *ABS*	00000000 RCC_CSR_LSION
00000002 l       *ABS*	00000000 RCC_CSR_LSIRDY
5802447c l       *ABS*	00000000 RCC_AHB3RSTR
00000001 l       *ABS*	00000000 RCC_AHB3RSTR_MDMARST
00000010 l       *ABS*	00000000 RCC_AHB3RSTR_DMA2DRST
00000020 l       *ABS*	00000000 RCC_AHB3RSTR_JPGDECRST
00001000 l       *ABS*	00000000 RCC_AHB3RSTR_FMCRST
00004000 l       *ABS*	00000000 RCC_AHB3RSTR_QSPIRST
00010000 l       *ABS*	00000000 RCC_AHB3RSTR_SDMMC1RST
80000000 l       *ABS*	00000000 RCC_AHB3RSTR_CPURST
58024480 l       *ABS*	00000000 RCC_AHB1RSTR
00000001 l       *ABS*	00000000 RCC_AHB1RSTR_DMA1RST
00000002 l       *ABS*	00000000 RCC_AHB1RSTR_DMA2RST
00000020 l       *ABS*	00000000 RCC_AHB1RSTR_ADC12RST
00008000 l       *ABS*	00000000 RCC_AHB1RSTR_ETH1MACRST
02000000 l       *ABS*	00000000 RCC_AHB1RSTR_USB1OTGRST
08000000 l       *ABS*	00000000 RCC_AHB1RSTR_USB2OTGRST
58024484 l       *ABS*	00000000 RCC_AHB2RSTR
00000001 l       *ABS*	00000000 RCC_AHB2RSTR_CAMITFRST
00000010 l       *ABS*	00000000 RCC_AHB2RSTR_CRYPTRST
00000020 l       *ABS*	00000000 RCC_AHB2RSTR_HASHRST
00000040 l       *ABS*	00000000 RCC_AHB2RSTR_RNGRST
00000200 l       *ABS*	00000000 RCC_AHB2RSTR_SDMMC2RST
58024488 l       *ABS*	00000000 RCC_AHB4RSTR
00000001 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOARST
00000002 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOBRST
00000004 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOCRST
00000008 l       *ABS*	00000000 RCC_AHB4RSTR_GPIODRST
00000010 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOERST
00000020 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOFRST
00000040 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOGRST
00000080 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOHRST
00000100 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOIRST
00000200 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOJRST
00000400 l       *ABS*	00000000 RCC_AHB4RSTR_GPIOKRST
00080000 l       *ABS*	00000000 RCC_AHB4RSTR_CRCRST
00200000 l       *ABS*	00000000 RCC_AHB4RSTR_BDMARST
01000000 l       *ABS*	00000000 RCC_AHB4RSTR_ADC3RST
02000000 l       *ABS*	00000000 RCC_AHB4RSTR_HSEMRST
5802448c l       *ABS*	00000000 RCC_APB3RSTR
00000008 l       *ABS*	00000000 RCC_APB3RSTR_LTDCRST
58024490 l       *ABS*	00000000 RCC_APB1LRSTR
00000001 l       *ABS*	00000000 RCC_APB1LRSTR_TIM2RST
00000002 l       *ABS*	00000000 RCC_APB1LRSTR_TIM3RST
00000004 l       *ABS*	00000000 RCC_APB1LRSTR_TIM4RST
00000008 l       *ABS*	00000000 RCC_APB1LRSTR_TIM5RST
00000010 l       *ABS*	00000000 RCC_APB1LRSTR_TIM6RST
00000020 l       *ABS*	00000000 RCC_APB1LRSTR_TIM7RST
00000040 l       *ABS*	00000000 RCC_APB1LRSTR_TIM12RST
00000080 l       *ABS*	00000000 RCC_APB1LRSTR_TIM13RST
00000100 l       *ABS*	00000000 RCC_APB1LRSTR_TIM14RST
00000200 l       *ABS*	00000000 RCC_APB1LRSTR_LPTIM1RST
00004000 l       *ABS*	00000000 RCC_APB1LRSTR_SPI2RST
00008000 l       *ABS*	00000000 RCC_APB1LRSTR_SPI3RST
00010000 l       *ABS*	00000000 RCC_APB1LRSTR_SPDIFRXRST
00020000 l       *ABS*	00000000 RCC_APB1LRSTR_USART2RST
00040000 l       *ABS*	00000000 RCC_APB1LRSTR_USART3RST
00080000 l       *ABS*	00000000 RCC_APB1LRSTR_UART4RST
00100000 l       *ABS*	00000000 RCC_APB1LRSTR_UART5RST
00200000 l       *ABS*	00000000 RCC_APB1LRSTR_I2C1RST
00400000 l       *ABS*	00000000 RCC_APB1LRSTR_I2C2RST
00800000 l       *ABS*	00000000 RCC_APB1LRSTR_I2C3RST
08000000 l       *ABS*	00000000 RCC_APB1LRSTR_CECRST
20000000 l       *ABS*	00000000 RCC_APB1LRSTR_DAC12RST
40000000 l       *ABS*	00000000 RCC_APB1LRSTR_USART7RST
80000000 l       *ABS*	00000000 RCC_APB1LRSTR_USART8RST
58024494 l       *ABS*	00000000 RCC_APB1HRSTR
00000002 l       *ABS*	00000000 RCC_APB1HRSTR_CRSRST
00000004 l       *ABS*	00000000 RCC_APB1HRSTR_SWPRST
00000010 l       *ABS*	00000000 RCC_APB1HRSTR_OPAMPRST
00000020 l       *ABS*	00000000 RCC_APB1HRSTR_MDIOSRST
00000100 l       *ABS*	00000000 RCC_APB1HRSTR_FDCANRST
58024498 l       *ABS*	00000000 RCC_APB2RSTR
00000001 l       *ABS*	00000000 RCC_APB2RSTR_TIM1RST
00000002 l       *ABS*	00000000 RCC_APB2RSTR_TIM8RST
00000010 l       *ABS*	00000000 RCC_APB2RSTR_USART1RST
00000020 l       *ABS*	00000000 RCC_APB2RSTR_USART6RST
00001000 l       *ABS*	00000000 RCC_APB2RSTR_SPI1RST
00002000 l       *ABS*	00000000 RCC_APB2RSTR_SPI4RST
00010000 l       *ABS*	00000000 RCC_APB2RSTR_TIM15RST
00020000 l       *ABS*	00000000 RCC_APB2RSTR_TIM16RST
00040000 l       *ABS*	00000000 RCC_APB2RSTR_TIM17RST
00100000 l       *ABS*	00000000 RCC_APB2RSTR_SPI5RST
00400000 l       *ABS*	00000000 RCC_APB2RSTR_SAI1RST
00800000 l       *ABS*	00000000 RCC_APB2RSTR_SAI2RST
01000000 l       *ABS*	00000000 RCC_APB2RSTR_SAI3RST
10000000 l       *ABS*	00000000 RCC_APB2RSTR_DFSDM1RST
20000000 l       *ABS*	00000000 RCC_APB2RSTR_HRTIMRST
5802449c l       *ABS*	00000000 RCC_APB4RSTR
00000002 l       *ABS*	00000000 RCC_APB4RSTR_SYSCFGRST
00000008 l       *ABS*	00000000 RCC_APB4RSTR_LPUART1RST
00000020 l       *ABS*	00000000 RCC_APB4RSTR_SPI6RST
00000080 l       *ABS*	00000000 RCC_APB4RSTR_I2C4RST
00000200 l       *ABS*	00000000 RCC_APB4RSTR_LPTIM2RST
00000400 l       *ABS*	00000000 RCC_APB4RSTR_LPTIM3RST
00000800 l       *ABS*	00000000 RCC_APB4RSTR_LPTIM4RST
00001000 l       *ABS*	00000000 RCC_APB4RSTR_LPTIM5RST
00004000 l       *ABS*	00000000 RCC_APB4RSTR_COMP12RST
00008000 l       *ABS*	00000000 RCC_APB4RSTR_VREFRST
00200000 l       *ABS*	00000000 RCC_APB4RSTR_SAI4RST
580244a0 l       *ABS*	00000000 RCC_GCR
00000001 l       *ABS*	00000000 RCC_GCR_WW1RSC
580244a8 l       *ABS*	00000000 RCC_D3AMR
00000001 l       *ABS*	00000000 RCC_D3AMR_BDMAAMEN
00000008 l       *ABS*	00000000 RCC_D3AMR_LPUART1AMEN
00000020 l       *ABS*	00000000 RCC_D3AMR_SPI6AMEN
00000080 l       *ABS*	00000000 RCC_D3AMR_I2C4AMEN
00000200 l       *ABS*	00000000 RCC_D3AMR_LPTIM2AMEN
00000400 l       *ABS*	00000000 RCC_D3AMR_LPTIM3AMEN
00000800 l       *ABS*	00000000 RCC_D3AMR_LPTIM4AMEN
00001000 l       *ABS*	00000000 RCC_D3AMR_LPTIM5AMEN
00004000 l       *ABS*	00000000 RCC_D3AMR_COMP12AMEN
00008000 l       *ABS*	00000000 RCC_D3AMR_VREFAMEN
00010000 l       *ABS*	00000000 RCC_D3AMR_RTCAMEN
00080000 l       *ABS*	00000000 RCC_D3AMR_CRCAMEN
00200000 l       *ABS*	00000000 RCC_D3AMR_SAI4AMEN
01000000 l       *ABS*	00000000 RCC_D3AMR_ADC3AMEN
10000000 l       *ABS*	00000000 RCC_D3AMR_BKPRAMAMEN
20000000 l       *ABS*	00000000 RCC_D3AMR_SRAM4AMEN
580244d0 l       *ABS*	00000000 RCC_RSR
00010000 l       *ABS*	00000000 RCC_RSR_RMVF
00020000 l       *ABS*	00000000 RCC_RSR_CPURSTF
00080000 l       *ABS*	00000000 RCC_RSR_D1RSTF
00100000 l       *ABS*	00000000 RCC_RSR_D2RSTF
00200000 l       *ABS*	00000000 RCC_RSR_BORRSTF
00400000 l       *ABS*	00000000 RCC_RSR_PINRSTF
00800000 l       *ABS*	00000000 RCC_RSR_PORRSTF
01000000 l       *ABS*	00000000 RCC_RSR_SFTRSTF
04000000 l       *ABS*	00000000 RCC_RSR_IWDG1RSTF
10000000 l       *ABS*	00000000 RCC_RSR_WWDG1RSTF
40000000 l       *ABS*	00000000 RCC_RSR_LPWRRSTF
58024530 l       *ABS*	00000000 RCC_C1_RSR
00010000 l       *ABS*	00000000 RCC_C1_RSR_RMVF
00020000 l       *ABS*	00000000 RCC_C1_RSR_CPURSTF
00080000 l       *ABS*	00000000 RCC_C1_RSR_D1RSTF
00100000 l       *ABS*	00000000 RCC_C1_RSR_D2RSTF
00200000 l       *ABS*	00000000 RCC_C1_RSR_BORRSTF
00400000 l       *ABS*	00000000 RCC_C1_RSR_PINRSTF
00800000 l       *ABS*	00000000 RCC_C1_RSR_PORRSTF
01000000 l       *ABS*	00000000 RCC_C1_RSR_SFTRSTF
04000000 l       *ABS*	00000000 RCC_C1_RSR_IWDG1RSTF
10000000 l       *ABS*	00000000 RCC_C1_RSR_WWDG1RSTF
40000000 l       *ABS*	00000000 RCC_C1_RSR_LPWRRSTF
58024534 l       *ABS*	00000000 RCC_C1_AHB3ENR
00000001 l       *ABS*	00000000 RCC_C1_AHB3ENR_MDMAEN
00000010 l       *ABS*	00000000 RCC_C1_AHB3ENR_DMA2DEN
00000020 l       *ABS*	00000000 RCC_C1_AHB3ENR_JPGDECEN
00001000 l       *ABS*	00000000 RCC_C1_AHB3ENR_FMCEN
00004000 l       *ABS*	00000000 RCC_C1_AHB3ENR_QSPIEN
00010000 l       *ABS*	00000000 RCC_C1_AHB3ENR_SDMMC1EN
580244d4 l       *ABS*	00000000 RCC_AHB3ENR
00000001 l       *ABS*	00000000 RCC_AHB3ENR_MDMAEN
00000010 l       *ABS*	00000000 RCC_AHB3ENR_DMA2DEN
00000020 l       *ABS*	00000000 RCC_AHB3ENR_JPGDECEN
00001000 l       *ABS*	00000000 RCC_AHB3ENR_FMCEN
00004000 l       *ABS*	00000000 RCC_AHB3ENR_QSPIEN
00010000 l       *ABS*	00000000 RCC_AHB3ENR_SDMMC1EN
580244d8 l       *ABS*	00000000 RCC_AHB1ENR
00000001 l       *ABS*	00000000 RCC_AHB1ENR_DMA1EN
00000002 l       *ABS*	00000000 RCC_AHB1ENR_DMA2EN
00000020 l       *ABS*	00000000 RCC_AHB1ENR_ADC12EN
00008000 l       *ABS*	00000000 RCC_AHB1ENR_ETH1MACEN
00010000 l       *ABS*	00000000 RCC_AHB1ENR_ETH1TXEN
00020000 l       *ABS*	00000000 RCC_AHB1ENR_ETH1RXEN
00040000 l       *ABS*	00000000 RCC_AHB1ENR_USB2OTGHSULPIEN
02000000 l       *ABS*	00000000 RCC_AHB1ENR_USB1OTGEN
04000000 l       *ABS*	00000000 RCC_AHB1ENR_USB1ULPIEN
08000000 l       *ABS*	00000000 RCC_AHB1ENR_USB2OTGEN
10000000 l       *ABS*	00000000 RCC_AHB1ENR_USB2ULPIEN
58024538 l       *ABS*	00000000 RCC_C1_AHB1ENR
00000001 l       *ABS*	00000000 RCC_C1_AHB1ENR_DMA1EN
00000002 l       *ABS*	00000000 RCC_C1_AHB1ENR_DMA2EN
00000020 l       *ABS*	00000000 RCC_C1_AHB1ENR_ADC12EN
00008000 l       *ABS*	00000000 RCC_C1_AHB1ENR_ETH1MACEN
00010000 l       *ABS*	00000000 RCC_C1_AHB1ENR_ETH1TXEN
00020000 l       *ABS*	00000000 RCC_C1_AHB1ENR_ETH1RXEN
02000000 l       *ABS*	00000000 RCC_C1_AHB1ENR_USB1OTGEN
04000000 l       *ABS*	00000000 RCC_C1_AHB1ENR_USB1ULPIEN
08000000 l       *ABS*	00000000 RCC_C1_AHB1ENR_USB2OTGEN
10000000 l       *ABS*	00000000 RCC_C1_AHB1ENR_USB2ULPIEN
5802453c l       *ABS*	00000000 RCC_C1_AHB2ENR
00000001 l       *ABS*	00000000 RCC_C1_AHB2ENR_CAMITFEN
00000010 l       *ABS*	00000000 RCC_C1_AHB2ENR_CRYPTEN
00000020 l       *ABS*	00000000 RCC_C1_AHB2ENR_HASHEN
00000040 l       *ABS*	00000000 RCC_C1_AHB2ENR_RNGEN
00000200 l       *ABS*	00000000 RCC_C1_AHB2ENR_SDMMC2EN
20000000 l       *ABS*	00000000 RCC_C1_AHB2ENR_SRAM1EN
40000000 l       *ABS*	00000000 RCC_C1_AHB2ENR_SRAM2EN
80000000 l       *ABS*	00000000 RCC_C1_AHB2ENR_SRAM3EN
580244dc l       *ABS*	00000000 RCC_AHB2ENR
00000001 l       *ABS*	00000000 RCC_AHB2ENR_CAMITFEN
00000010 l       *ABS*	00000000 RCC_AHB2ENR_CRYPTEN
00000020 l       *ABS*	00000000 RCC_AHB2ENR_HASHEN
00000040 l       *ABS*	00000000 RCC_AHB2ENR_RNGEN
00000200 l       *ABS*	00000000 RCC_AHB2ENR_SDMMC2EN
20000000 l       *ABS*	00000000 RCC_AHB2ENR_SRAM1EN
40000000 l       *ABS*	00000000 RCC_AHB2ENR_SRAM2EN
80000000 l       *ABS*	00000000 RCC_AHB2ENR_SRAM3EN
580244e0 l       *ABS*	00000000 RCC_AHB4ENR
00000001 l       *ABS*	00000000 RCC_AHB4ENR_GPIOAEN
00000002 l       *ABS*	00000000 RCC_AHB4ENR_GPIOBEN
00000004 l       *ABS*	00000000 RCC_AHB4ENR_GPIOCEN
00000008 l       *ABS*	00000000 RCC_AHB4ENR_GPIODEN
00000010 l       *ABS*	00000000 RCC_AHB4ENR_GPIOEEN
00000020 l       *ABS*	00000000 RCC_AHB4ENR_GPIOFEN
00000040 l       *ABS*	00000000 RCC_AHB4ENR_GPIOGEN
00000080 l       *ABS*	00000000 RCC_AHB4ENR_GPIOHEN
00000100 l       *ABS*	00000000 RCC_AHB4ENR_GPIOIEN
00000200 l       *ABS*	00000000 RCC_AHB4ENR_GPIOJEN
00000400 l       *ABS*	00000000 RCC_AHB4ENR_GPIOKEN
00080000 l       *ABS*	00000000 RCC_AHB4ENR_CRCEN
00200000 l       *ABS*	00000000 RCC_AHB4ENR_BDMAEN
01000000 l       *ABS*	00000000 RCC_AHB4ENR_ADC3EN
02000000 l       *ABS*	00000000 RCC_AHB4ENR_HSEMEN
10000000 l       *ABS*	00000000 RCC_AHB4ENR_BKPRAMEN
58024540 l       *ABS*	00000000 RCC_C1_AHB4ENR
00000001 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOAEN
00000002 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOBEN
00000004 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOCEN
00000008 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIODEN
00000010 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOEEN
00000020 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOFEN
00000040 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOGEN
00000080 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOHEN
00000100 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOIEN
00000200 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOJEN
00000400 l       *ABS*	00000000 RCC_C1_AHB4ENR_GPIOKEN
00080000 l       *ABS*	00000000 RCC_C1_AHB4ENR_CRCEN
00200000 l       *ABS*	00000000 RCC_C1_AHB4ENR_BDMAEN
01000000 l       *ABS*	00000000 RCC_C1_AHB4ENR_ADC3EN
02000000 l       *ABS*	00000000 RCC_C1_AHB4ENR_HSEMEN
10000000 l       *ABS*	00000000 RCC_C1_AHB4ENR_BKPRAMEN
58024544 l       *ABS*	00000000 RCC_C1_APB3ENR
00000008 l       *ABS*	00000000 RCC_C1_APB3ENR_LTDCEN
00000040 l       *ABS*	00000000 RCC_C1_APB3ENR_WWDG1EN
580244e4 l       *ABS*	00000000 RCC_APB3ENR
00000008 l       *ABS*	00000000 RCC_APB3ENR_LTDCEN
00000040 l       *ABS*	00000000 RCC_APB3ENR_WWDG1EN
580244e8 l       *ABS*	00000000 RCC_APB1LENR
00000001 l       *ABS*	00000000 RCC_APB1LENR_TIM2EN
00000002 l       *ABS*	00000000 RCC_APB1LENR_TIM3EN
00000004 l       *ABS*	00000000 RCC_APB1LENR_TIM4EN
00000008 l       *ABS*	00000000 RCC_APB1LENR_TIM5EN
00000010 l       *ABS*	00000000 RCC_APB1LENR_TIM6EN
00000020 l       *ABS*	00000000 RCC_APB1LENR_TIM7EN
00000040 l       *ABS*	00000000 RCC_APB1LENR_TIM12EN
00000080 l       *ABS*	00000000 RCC_APB1LENR_TIM13EN
00000100 l       *ABS*	00000000 RCC_APB1LENR_TIM14EN
00000200 l       *ABS*	00000000 RCC_APB1LENR_LPTIM1EN
00004000 l       *ABS*	00000000 RCC_APB1LENR_SPI2EN
00008000 l       *ABS*	00000000 RCC_APB1LENR_SPI3EN
00010000 l       *ABS*	00000000 RCC_APB1LENR_SPDIFRXEN
00020000 l       *ABS*	00000000 RCC_APB1LENR_USART2EN
00040000 l       *ABS*	00000000 RCC_APB1LENR_USART3EN
00080000 l       *ABS*	00000000 RCC_APB1LENR_UART4EN
00100000 l       *ABS*	00000000 RCC_APB1LENR_UART5EN
00200000 l       *ABS*	00000000 RCC_APB1LENR_I2C1EN
00400000 l       *ABS*	00000000 RCC_APB1LENR_I2C2EN
00800000 l       *ABS*	00000000 RCC_APB1LENR_I2C3EN
08000000 l       *ABS*	00000000 RCC_APB1LENR_CECEN
20000000 l       *ABS*	00000000 RCC_APB1LENR_DAC12EN
40000000 l       *ABS*	00000000 RCC_APB1LENR_USART7EN
80000000 l       *ABS*	00000000 RCC_APB1LENR_USART8EN
58024548 l       *ABS*	00000000 RCC_C1_APB1LENR
00000001 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM2EN
00000002 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM3EN
00000004 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM4EN
00000008 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM5EN
00000010 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM6EN
00000020 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM7EN
00000040 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM12EN
00000080 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM13EN
00000100 l       *ABS*	00000000 RCC_C1_APB1LENR_TIM14EN
00000200 l       *ABS*	00000000 RCC_C1_APB1LENR_LPTIM1EN
00004000 l       *ABS*	00000000 RCC_C1_APB1LENR_SPI2EN
00008000 l       *ABS*	00000000 RCC_C1_APB1LENR_SPI3EN
00010000 l       *ABS*	00000000 RCC_C1_APB1LENR_SPDIFRXEN
00020000 l       *ABS*	00000000 RCC_C1_APB1LENR_USART2EN
00040000 l       *ABS*	00000000 RCC_C1_APB1LENR_USART3EN
00080000 l       *ABS*	00000000 RCC_C1_APB1LENR_UART4EN
00100000 l       *ABS*	00000000 RCC_C1_APB1LENR_UART5EN
00200000 l       *ABS*	00000000 RCC_C1_APB1LENR_I2C1EN
00400000 l       *ABS*	00000000 RCC_C1_APB1LENR_I2C2EN
00800000 l       *ABS*	00000000 RCC_C1_APB1LENR_I2C3EN
08000000 l       *ABS*	00000000 RCC_C1_APB1LENR_HDMICECEN
20000000 l       *ABS*	00000000 RCC_C1_APB1LENR_DAC12EN
40000000 l       *ABS*	00000000 RCC_C1_APB1LENR_USART7EN
80000000 l       *ABS*	00000000 RCC_C1_APB1LENR_USART8EN
580244ec l       *ABS*	00000000 RCC_APB1HENR
00000002 l       *ABS*	00000000 RCC_APB1HENR_CRSEN
00000004 l       *ABS*	00000000 RCC_APB1HENR_SWPEN
00000010 l       *ABS*	00000000 RCC_APB1HENR_OPAMPEN
00000020 l       *ABS*	00000000 RCC_APB1HENR_MDIOSEN
00000100 l       *ABS*	00000000 RCC_APB1HENR_FDCANEN
5802454c l       *ABS*	00000000 RCC_C1_APB1HENR
00000002 l       *ABS*	00000000 RCC_C1_APB1HENR_CRSEN
00000004 l       *ABS*	00000000 RCC_C1_APB1HENR_SWPEN
00000010 l       *ABS*	00000000 RCC_C1_APB1HENR_OPAMPEN
00000020 l       *ABS*	00000000 RCC_C1_APB1HENR_MDIOSEN
00000100 l       *ABS*	00000000 RCC_C1_APB1HENR_FDCANEN
58024550 l       *ABS*	00000000 RCC_C1_APB2ENR
00000001 l       *ABS*	00000000 RCC_C1_APB2ENR_TIM1EN
00000002 l       *ABS*	00000000 RCC_C1_APB2ENR_TIM8EN
00000010 l       *ABS*	00000000 RCC_C1_APB2ENR_USART1EN
00000020 l       *ABS*	00000000 RCC_C1_APB2ENR_USART6EN
00001000 l       *ABS*	00000000 RCC_C1_APB2ENR_SPI1EN
00002000 l       *ABS*	00000000 RCC_C1_APB2ENR_SPI4EN
00020000 l       *ABS*	00000000 RCC_C1_APB2ENR_TIM16EN
00010000 l       *ABS*	00000000 RCC_C1_APB2ENR_TIM15EN
00040000 l       *ABS*	00000000 RCC_C1_APB2ENR_TIM17EN
00100000 l       *ABS*	00000000 RCC_C1_APB2ENR_SPI5EN
00400000 l       *ABS*	00000000 RCC_C1_APB2ENR_SAI1EN
00800000 l       *ABS*	00000000 RCC_C1_APB2ENR_SAI2EN
01000000 l       *ABS*	00000000 RCC_C1_APB2ENR_SAI3EN
10000000 l       *ABS*	00000000 RCC_C1_APB2ENR_DFSDM1EN
20000000 l       *ABS*	00000000 RCC_C1_APB2ENR_HRTIMEN
580244f0 l       *ABS*	00000000 RCC_APB2ENR
00000001 l       *ABS*	00000000 RCC_APB2ENR_TIM1EN
00000002 l       *ABS*	00000000 RCC_APB2ENR_TIM8EN
00000010 l       *ABS*	00000000 RCC_APB2ENR_USART1EN
00000020 l       *ABS*	00000000 RCC_APB2ENR_USART6EN
00001000 l       *ABS*	00000000 RCC_APB2ENR_SPI1EN
00002000 l       *ABS*	00000000 RCC_APB2ENR_SPI4EN
00020000 l       *ABS*	00000000 RCC_APB2ENR_TIM16EN
00010000 l       *ABS*	00000000 RCC_APB2ENR_TIM15EN
00040000 l       *ABS*	00000000 RCC_APB2ENR_TIM17EN
00100000 l       *ABS*	00000000 RCC_APB2ENR_SPI5EN
00400000 l       *ABS*	00000000 RCC_APB2ENR_SAI1EN
00800000 l       *ABS*	00000000 RCC_APB2ENR_SAI2EN
01000000 l       *ABS*	00000000 RCC_APB2ENR_SAI3EN
10000000 l       *ABS*	00000000 RCC_APB2ENR_DFSDM1EN
20000000 l       *ABS*	00000000 RCC_APB2ENR_HRTIMEN
580244f4 l       *ABS*	00000000 RCC_APB4ENR
00000002 l       *ABS*	00000000 RCC_APB4ENR_SYSCFGEN
00000008 l       *ABS*	00000000 RCC_APB4ENR_LPUART1EN
00000020 l       *ABS*	00000000 RCC_APB4ENR_SPI6EN
00000080 l       *ABS*	00000000 RCC_APB4ENR_I2C4EN
00000200 l       *ABS*	00000000 RCC_APB4ENR_LPTIM2EN
00000400 l       *ABS*	00000000 RCC_APB4ENR_LPTIM3EN
00000800 l       *ABS*	00000000 RCC_APB4ENR_LPTIM4EN
00001000 l       *ABS*	00000000 RCC_APB4ENR_LPTIM5EN
00004000 l       *ABS*	00000000 RCC_APB4ENR_COMP12EN
00008000 l       *ABS*	00000000 RCC_APB4ENR_VREFEN
00010000 l       *ABS*	00000000 RCC_APB4ENR_RTCAPBEN
00200000 l       *ABS*	00000000 RCC_APB4ENR_SAI4EN
58024554 l       *ABS*	00000000 RCC_C1_APB4ENR
00000002 l       *ABS*	00000000 RCC_C1_APB4ENR_SYSCFGEN
00000008 l       *ABS*	00000000 RCC_C1_APB4ENR_LPUART1EN
00000020 l       *ABS*	00000000 RCC_C1_APB4ENR_SPI6EN
00000080 l       *ABS*	00000000 RCC_C1_APB4ENR_I2C4EN
00000200 l       *ABS*	00000000 RCC_C1_APB4ENR_LPTIM2EN
00000400 l       *ABS*	00000000 RCC_C1_APB4ENR_LPTIM3EN
00000800 l       *ABS*	00000000 RCC_C1_APB4ENR_LPTIM4EN
00001000 l       *ABS*	00000000 RCC_C1_APB4ENR_LPTIM5EN
00004000 l       *ABS*	00000000 RCC_C1_APB4ENR_COMP12EN
00008000 l       *ABS*	00000000 RCC_C1_APB4ENR_VREFEN
00010000 l       *ABS*	00000000 RCC_C1_APB4ENR_RTCAPBEN
00200000 l       *ABS*	00000000 RCC_C1_APB4ENR_SAI4EN
5802455c l       *ABS*	00000000 RCC_C1_AHB3LPENR
00000001 l       *ABS*	00000000 RCC_C1_AHB3LPENR_MDMALPEN
00000010 l       *ABS*	00000000 RCC_C1_AHB3LPENR_DMA2DLPEN
00000020 l       *ABS*	00000000 RCC_C1_AHB3LPENR_JPGDECLPEN
00000100 l       *ABS*	00000000 RCC_C1_AHB3LPENR_FLITFLPEN
00001000 l       *ABS*	00000000 RCC_C1_AHB3LPENR_FMCLPEN
00004000 l       *ABS*	00000000 RCC_C1_AHB3LPENR_QSPILPEN
00010000 l       *ABS*	00000000 RCC_C1_AHB3LPENR_SDMMC1LPEN
10000000 l       *ABS*	00000000 RCC_C1_AHB3LPENR_D1DTCM1LPEN
20000000 l       *ABS*	00000000 RCC_C1_AHB3LPENR_DTCM2LPEN
40000000 l       *ABS*	00000000 RCC_C1_AHB3LPENR_ITCMLPEN
80000000 l       *ABS*	00000000 RCC_C1_AHB3LPENR_AXISRAMLPEN
580244fc l       *ABS*	00000000 RCC_AHB3LPENR
00000001 l       *ABS*	00000000 RCC_AHB3LPENR_MDMALPEN
00000010 l       *ABS*	00000000 RCC_AHB3LPENR_DMA2DLPEN
00000020 l       *ABS*	00000000 RCC_AHB3LPENR_JPGDECLPEN
00000100 l       *ABS*	00000000 RCC_AHB3LPENR_FLASHLPEN
00001000 l       *ABS*	00000000 RCC_AHB3LPENR_FMCLPEN
00004000 l       *ABS*	00000000 RCC_AHB3LPENR_QSPILPEN
00010000 l       *ABS*	00000000 RCC_AHB3LPENR_SDMMC1LPEN
10000000 l       *ABS*	00000000 RCC_AHB3LPENR_D1DTCM1LPEN
20000000 l       *ABS*	00000000 RCC_AHB3LPENR_DTCM2LPEN
40000000 l       *ABS*	00000000 RCC_AHB3LPENR_ITCMLPEN
80000000 l       *ABS*	00000000 RCC_AHB3LPENR_AXISRAMLPEN
58024500 l       *ABS*	00000000 RCC_AHB1LPENR
00000001 l       *ABS*	00000000 RCC_AHB1LPENR_DMA1LPEN
00000002 l       *ABS*	00000000 RCC_AHB1LPENR_DMA2LPEN
00000020 l       *ABS*	00000000 RCC_AHB1LPENR_ADC12LPEN
00008000 l       *ABS*	00000000 RCC_AHB1LPENR_ETH1MACLPEN
00010000 l       *ABS*	00000000 RCC_AHB1LPENR_ETH1TXLPEN
00020000 l       *ABS*	00000000 RCC_AHB1LPENR_ETH1RXLPEN
02000000 l       *ABS*	00000000 RCC_AHB1LPENR_USB1OTGHSLPEN
04000000 l       *ABS*	00000000 RCC_AHB1LPENR_USB1OTGHSULPILPEN
08000000 l       *ABS*	00000000 RCC_AHB1LPENR_USB2OTGHSLPEN
10000000 l       *ABS*	00000000 RCC_AHB1LPENR_USB2OTGHSULPILPEN
58024560 l       *ABS*	00000000 RCC_C1_AHB1LPENR
00000001 l       *ABS*	00000000 RCC_C1_AHB1LPENR_DMA1LPEN
00000002 l       *ABS*	00000000 RCC_C1_AHB1LPENR_DMA2LPEN
00000020 l       *ABS*	00000000 RCC_C1_AHB1LPENR_ADC12LPEN
00008000 l       *ABS*	00000000 RCC_C1_AHB1LPENR_ETH1MACLPEN
00010000 l       *ABS*	00000000 RCC_C1_AHB1LPENR_ETH1TXLPEN
00020000 l       *ABS*	00000000 RCC_C1_AHB1LPENR_ETH1RXLPEN
02000000 l       *ABS*	00000000 RCC_C1_AHB1LPENR_USB1OTGLPEN
04000000 l       *ABS*	00000000 RCC_C1_AHB1LPENR_USB1ULPILPEN
08000000 l       *ABS*	00000000 RCC_C1_AHB1LPENR_USB2OTGLPEN
10000000 l       *ABS*	00000000 RCC_C1_AHB1LPENR_USB2ULPILPEN
58024564 l       *ABS*	00000000 RCC_C1_AHB2LPENR
00000001 l       *ABS*	00000000 RCC_C1_AHB2LPENR_CAMITFLPEN
00000010 l       *ABS*	00000000 RCC_C1_AHB2LPENR_CRYPTLPEN
00000020 l       *ABS*	00000000 RCC_C1_AHB2LPENR_HASHLPEN
00000200 l       *ABS*	00000000 RCC_C1_AHB2LPENR_SDMMC2LPEN
00000040 l       *ABS*	00000000 RCC_C1_AHB2LPENR_RNGLPEN
20000000 l       *ABS*	00000000 RCC_C1_AHB2LPENR_SRAM1LPEN
40000000 l       *ABS*	00000000 RCC_C1_AHB2LPENR_SRAM2LPEN
80000000 l       *ABS*	00000000 RCC_C1_AHB2LPENR_SRAM3LPEN
58024504 l       *ABS*	00000000 RCC_AHB2LPENR
00000001 l       *ABS*	00000000 RCC_AHB2LPENR_CAMITFLPEN
00000010 l       *ABS*	00000000 RCC_AHB2LPENR_CRYPTLPEN
00000020 l       *ABS*	00000000 RCC_AHB2LPENR_HASHLPEN
00000200 l       *ABS*	00000000 RCC_AHB2LPENR_SDMMC2LPEN
00000040 l       *ABS*	00000000 RCC_AHB2LPENR_RNGLPEN
20000000 l       *ABS*	00000000 RCC_AHB2LPENR_SRAM1LPEN
40000000 l       *ABS*	00000000 RCC_AHB2LPENR_SRAM2LPEN
80000000 l       *ABS*	00000000 RCC_AHB2LPENR_SRAM3LPEN
58024508 l       *ABS*	00000000 RCC_AHB4LPENR
00000001 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOALPEN
00000002 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOBLPEN
00000004 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOCLPEN
00000008 l       *ABS*	00000000 RCC_AHB4LPENR_GPIODLPEN
00000010 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOELPEN
00000020 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOFLPEN
00000040 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOGLPEN
00000080 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOHLPEN
00000100 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOILPEN
00000200 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOJLPEN
00000400 l       *ABS*	00000000 RCC_AHB4LPENR_GPIOKLPEN
00080000 l       *ABS*	00000000 RCC_AHB4LPENR_CRCLPEN
00200000 l       *ABS*	00000000 RCC_AHB4LPENR_BDMALPEN
01000000 l       *ABS*	00000000 RCC_AHB4LPENR_ADC3LPEN
10000000 l       *ABS*	00000000 RCC_AHB4LPENR_BKPRAMLPEN
20000000 l       *ABS*	00000000 RCC_AHB4LPENR_SRAM4LPEN
58024568 l       *ABS*	00000000 RCC_C1_AHB4LPENR
00000001 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOALPEN
00000002 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOBLPEN
00000004 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOCLPEN
00000008 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIODLPEN
00000010 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOELPEN
00000020 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOFLPEN
00000040 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOGLPEN
00000080 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOHLPEN
00000100 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOILPEN
00000200 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOJLPEN
00000400 l       *ABS*	00000000 RCC_C1_AHB4LPENR_GPIOKLPEN
00080000 l       *ABS*	00000000 RCC_C1_AHB4LPENR_CRCLPEN
00200000 l       *ABS*	00000000 RCC_C1_AHB4LPENR_BDMALPEN
01000000 l       *ABS*	00000000 RCC_C1_AHB4LPENR_ADC3LPEN
10000000 l       *ABS*	00000000 RCC_C1_AHB4LPENR_BKPRAMLPEN
20000000 l       *ABS*	00000000 RCC_C1_AHB4LPENR_SRAM4LPEN
5802456c l       *ABS*	00000000 RCC_C1_APB3LPENR
00000008 l       *ABS*	00000000 RCC_C1_APB3LPENR_LTDCLPEN
00000040 l       *ABS*	00000000 RCC_C1_APB3LPENR_WWDG1LPEN
5802450c l       *ABS*	00000000 RCC_APB3LPENR
00000008 l       *ABS*	00000000 RCC_APB3LPENR_LTDCLPEN
00000040 l       *ABS*	00000000 RCC_APB3LPENR_WWDG1LPEN
58024510 l       *ABS*	00000000 RCC_APB1LLPENR
00000001 l       *ABS*	00000000 RCC_APB1LLPENR_TIM2LPEN
00000002 l       *ABS*	00000000 RCC_APB1LLPENR_TIM3LPEN
00000004 l       *ABS*	00000000 RCC_APB1LLPENR_TIM4LPEN
00000008 l       *ABS*	00000000 RCC_APB1LLPENR_TIM5LPEN
00000010 l       *ABS*	00000000 RCC_APB1LLPENR_TIM6LPEN
00000020 l       *ABS*	00000000 RCC_APB1LLPENR_TIM7LPEN
00000040 l       *ABS*	00000000 RCC_APB1LLPENR_TIM12LPEN
00000080 l       *ABS*	00000000 RCC_APB1LLPENR_TIM13LPEN
00000100 l       *ABS*	00000000 RCC_APB1LLPENR_TIM14LPEN
00000200 l       *ABS*	00000000 RCC_APB1LLPENR_LPTIM1LPEN
00004000 l       *ABS*	00000000 RCC_APB1LLPENR_SPI2LPEN
00008000 l       *ABS*	00000000 RCC_APB1LLPENR_SPI3LPEN
00010000 l       *ABS*	00000000 RCC_APB1LLPENR_SPDIFRXLPEN
00020000 l       *ABS*	00000000 RCC_APB1LLPENR_USART2LPEN
00040000 l       *ABS*	00000000 RCC_APB1LLPENR_USART3LPEN
00080000 l       *ABS*	00000000 RCC_APB1LLPENR_UART4LPEN
00100000 l       *ABS*	00000000 RCC_APB1LLPENR_UART5LPEN
00200000 l       *ABS*	00000000 RCC_APB1LLPENR_I2C1LPEN
00400000 l       *ABS*	00000000 RCC_APB1LLPENR_I2C2LPEN
00800000 l       *ABS*	00000000 RCC_APB1LLPENR_I2C3LPEN
08000000 l       *ABS*	00000000 RCC_APB1LLPENR_HDMICECLPEN
20000000 l       *ABS*	00000000 RCC_APB1LLPENR_DAC12LPEN
40000000 l       *ABS*	00000000 RCC_APB1LLPENR_USART7LPEN
80000000 l       *ABS*	00000000 RCC_APB1LLPENR_USART8LPEN
58024570 l       *ABS*	00000000 RCC_C1_APB1LLPENR
00000001 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM2LPEN
00000002 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM3LPEN
00000004 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM4LPEN
00000008 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM5LPEN
00000010 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM6LPEN
00000020 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM7LPEN
00000040 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM12LPEN
00000080 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM13LPEN
00000100 l       *ABS*	00000000 RCC_C1_APB1LLPENR_TIM14LPEN
00000200 l       *ABS*	00000000 RCC_C1_APB1LLPENR_LPTIM1LPEN
00004000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_SPI2LPEN
00008000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_SPI3LPEN
00010000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_SPDIFRXLPEN
00020000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_USART2LPEN
00040000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_USART3LPEN
00080000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_UART4LPEN
00100000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_UART5LPEN
00200000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_I2C1LPEN
00400000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_I2C2LPEN
00800000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_I2C3LPEN
08000000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_HDMICECLPEN
20000000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_DAC12LPEN
40000000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_USART7LPEN
80000000 l       *ABS*	00000000 RCC_C1_APB1LLPENR_USART8LPEN
58024574 l       *ABS*	00000000 RCC_C1_APB1HLPENR
00000002 l       *ABS*	00000000 RCC_C1_APB1HLPENR_CRSLPEN
00000004 l       *ABS*	00000000 RCC_C1_APB1HLPENR_SWPLPEN
00000010 l       *ABS*	00000000 RCC_C1_APB1HLPENR_OPAMPLPEN
00000020 l       *ABS*	00000000 RCC_C1_APB1HLPENR_MDIOSLPEN
00000100 l       *ABS*	00000000 RCC_C1_APB1HLPENR_FDCANLPEN
58024514 l       *ABS*	00000000 RCC_APB1HLPENR
00000002 l       *ABS*	00000000 RCC_APB1HLPENR_CRSLPEN
00000004 l       *ABS*	00000000 RCC_APB1HLPENR_SWPLPEN
00000010 l       *ABS*	00000000 RCC_APB1HLPENR_OPAMPLPEN
00000020 l       *ABS*	00000000 RCC_APB1HLPENR_MDIOSLPEN
00000100 l       *ABS*	00000000 RCC_APB1HLPENR_FDCANLPEN
58024518 l       *ABS*	00000000 RCC_APB2LPENR
00000001 l       *ABS*	00000000 RCC_APB2LPENR_TIM1LPEN
00000002 l       *ABS*	00000000 RCC_APB2LPENR_TIM8LPEN
00000010 l       *ABS*	00000000 RCC_APB2LPENR_USART1LPEN
00000020 l       *ABS*	00000000 RCC_APB2LPENR_USART6LPEN
00001000 l       *ABS*	00000000 RCC_APB2LPENR_SPI1LPEN
00002000 l       *ABS*	00000000 RCC_APB2LPENR_SPI4LPEN
00010000 l       *ABS*	00000000 RCC_APB2LPENR_TIM15LPEN
00020000 l       *ABS*	00000000 RCC_APB2LPENR_TIM16LPEN
00040000 l       *ABS*	00000000 RCC_APB2LPENR_TIM17LPEN
00100000 l       *ABS*	00000000 RCC_APB2LPENR_SPI5LPEN
00400000 l       *ABS*	00000000 RCC_APB2LPENR_SAI1LPEN
00800000 l       *ABS*	00000000 RCC_APB2LPENR_SAI2LPEN
01000000 l       *ABS*	00000000 RCC_APB2LPENR_SAI3LPEN
10000000 l       *ABS*	00000000 RCC_APB2LPENR_DFSDM1LPEN
20000000 l       *ABS*	00000000 RCC_APB2LPENR_HRTIMLPEN
58024578 l       *ABS*	00000000 RCC_C1_APB2LPENR
00000001 l       *ABS*	00000000 RCC_C1_APB2LPENR_TIM1LPEN
00000002 l       *ABS*	00000000 RCC_C1_APB2LPENR_TIM8LPEN
00000010 l       *ABS*	00000000 RCC_C1_APB2LPENR_USART1LPEN
00000020 l       *ABS*	00000000 RCC_C1_APB2LPENR_USART6LPEN
00001000 l       *ABS*	00000000 RCC_C1_APB2LPENR_SPI1LPEN
00002000 l       *ABS*	00000000 RCC_C1_APB2LPENR_SPI4LPEN
00010000 l       *ABS*	00000000 RCC_C1_APB2LPENR_TIM15LPEN
00020000 l       *ABS*	00000000 RCC_C1_APB2LPENR_TIM16LPEN
00040000 l       *ABS*	00000000 RCC_C1_APB2LPENR_TIM17LPEN
00100000 l       *ABS*	00000000 RCC_C1_APB2LPENR_SPI5LPEN
00400000 l       *ABS*	00000000 RCC_C1_APB2LPENR_SAI1LPEN
00800000 l       *ABS*	00000000 RCC_C1_APB2LPENR_SAI2LPEN
01000000 l       *ABS*	00000000 RCC_C1_APB2LPENR_SAI3LPEN
10000000 l       *ABS*	00000000 RCC_C1_APB2LPENR_DFSDM1LPEN
20000000 l       *ABS*	00000000 RCC_C1_APB2LPENR_HRTIMLPEN
5802457c l       *ABS*	00000000 RCC_C1_APB4LPENR
00000002 l       *ABS*	00000000 RCC_C1_APB4LPENR_SYSCFGLPEN
00000008 l       *ABS*	00000000 RCC_C1_APB4LPENR_LPUART1LPEN
00000020 l       *ABS*	00000000 RCC_C1_APB4LPENR_SPI6LPEN
00000080 l       *ABS*	00000000 RCC_C1_APB4LPENR_I2C4LPEN
00000200 l       *ABS*	00000000 RCC_C1_APB4LPENR_LPTIM2LPEN
00000400 l       *ABS*	00000000 RCC_C1_APB4LPENR_LPTIM3LPEN
00000800 l       *ABS*	00000000 RCC_C1_APB4LPENR_LPTIM4LPEN
00001000 l       *ABS*	00000000 RCC_C1_APB4LPENR_LPTIM5LPEN
00004000 l       *ABS*	00000000 RCC_C1_APB4LPENR_COMP12LPEN
00008000 l       *ABS*	00000000 RCC_C1_APB4LPENR_VREFLPEN
00010000 l       *ABS*	00000000 RCC_C1_APB4LPENR_RTCAPBLPEN
00200000 l       *ABS*	00000000 RCC_C1_APB4LPENR_SAI4LPEN
5802451c l       *ABS*	00000000 RCC_APB4LPENR
00000002 l       *ABS*	00000000 RCC_APB4LPENR_SYSCFGLPEN
00000008 l       *ABS*	00000000 RCC_APB4LPENR_LPUART1LPEN
00000020 l       *ABS*	00000000 RCC_APB4LPENR_SPI6LPEN
00000080 l       *ABS*	00000000 RCC_APB4LPENR_I2C4LPEN
00000200 l       *ABS*	00000000 RCC_APB4LPENR_LPTIM2LPEN
00000400 l       *ABS*	00000000 RCC_APB4LPENR_LPTIM3LPEN
00000800 l       *ABS*	00000000 RCC_APB4LPENR_LPTIM4LPEN
00001000 l       *ABS*	00000000 RCC_APB4LPENR_LPTIM5LPEN
00004000 l       *ABS*	00000000 RCC_APB4LPENR_COMP12LPEN
00008000 l       *ABS*	00000000 RCC_APB4LPENR_VREFLPEN
00010000 l       *ABS*	00000000 RCC_APB4LPENR_RTCAPBLPEN
00200000 l       *ABS*	00000000 RCC_APB4LPENR_SAI4LPEN
40002400 l       *ABS*	00000000 LPTIM1_BASE
40002400 l       *ABS*	00000000 LPTIM1_ISR
00000040 l       *ABS*	00000000 LPTIM1_ISR_DOWN
00000020 l       *ABS*	00000000 LPTIM1_ISR_UP
00000010 l       *ABS*	00000000 LPTIM1_ISR_ARROK
00000008 l       *ABS*	00000000 LPTIM1_ISR_CMPOK
00000004 l       *ABS*	00000000 LPTIM1_ISR_EXTTRIG
00000002 l       *ABS*	00000000 LPTIM1_ISR_ARRM
00000001 l       *ABS*	00000000 LPTIM1_ISR_CMPM
40002404 l       *ABS*	00000000 LPTIM1_ICR
00000040 l       *ABS*	00000000 LPTIM1_ICR_DOWNCF
00000020 l       *ABS*	00000000 LPTIM1_ICR_UPCF
00000010 l       *ABS*	00000000 LPTIM1_ICR_ARROKCF
00000008 l       *ABS*	00000000 LPTIM1_ICR_CMPOKCF
00000004 l       *ABS*	00000000 LPTIM1_ICR_EXTTRIGCF
00000002 l       *ABS*	00000000 LPTIM1_ICR_ARRMCF
00000001 l       *ABS*	00000000 LPTIM1_ICR_CMPMCF
40002408 l       *ABS*	00000000 LPTIM1_IER
00000040 l       *ABS*	00000000 LPTIM1_IER_DOWNIE
00000020 l       *ABS*	00000000 LPTIM1_IER_UPIE
00000010 l       *ABS*	00000000 LPTIM1_IER_ARROKIE
00000008 l       *ABS*	00000000 LPTIM1_IER_CMPOKIE
00000004 l       *ABS*	00000000 LPTIM1_IER_EXTTRIGIE
00000002 l       *ABS*	00000000 LPTIM1_IER_ARRMIE
00000001 l       *ABS*	00000000 LPTIM1_IER_CMPMIE
4000240c l       *ABS*	00000000 LPTIM1_CFGR
01000000 l       *ABS*	00000000 LPTIM1_CFGR_ENC
00800000 l       *ABS*	00000000 LPTIM1_CFGR_COUNTMODE
00400000 l       *ABS*	00000000 LPTIM1_CFGR_PRELOAD
00200000 l       *ABS*	00000000 LPTIM1_CFGR_WAVPOL
00100000 l       *ABS*	00000000 LPTIM1_CFGR_WAVE
00080000 l       *ABS*	00000000 LPTIM1_CFGR_TIMOUT
00000011 l       *ABS*	00000000 LPTIM1_CFGR_TRIGEN_Shift
0000000d l       *ABS*	00000000 LPTIM1_CFGR_TRIGSEL_Shift
00000009 l       *ABS*	00000000 LPTIM1_CFGR_PRESC_Shift
00000006 l       *ABS*	00000000 LPTIM1_CFGR_TRGFLT_Shift
00000003 l       *ABS*	00000000 LPTIM1_CFGR_CKFLT_Shift
00000001 l       *ABS*	00000000 LPTIM1_CFGR_CKPOL_Shift
00000001 l       *ABS*	00000000 LPTIM1_CFGR_CKSEL
40002410 l       *ABS*	00000000 LPTIM1_CR
00000001 l       *ABS*	00000000 LPTIM1_CR_ENABLE
00000002 l       *ABS*	00000000 LPTIM1_CR_SNGSTRT
00000004 l       *ABS*	00000000 LPTIM1_CR_CNTSTRT
00000008 l       *ABS*	00000000 LPTIM1_CR_COUNTRST
00000010 l       *ABS*	00000000 LPTIM1_CR_RSTARE
40002414 l       *ABS*	00000000 LPTIM1_CMP
00000000 l       *ABS*	00000000 LPTIM1_CMP_CMP_Shift
40002418 l       *ABS*	00000000 LPTIM1_ARR
00000000 l       *ABS*	00000000 LPTIM1_ARR_ARR_Shift
4000241c l       *ABS*	00000000 LPTIM1_CNT
00000000 l       *ABS*	00000000 LPTIM1_CNT_CNT_Shift
40002424 l       *ABS*	00000000 LPTIM1_CFGR2
00000000 l       *ABS*	00000000 LPTIM1_CFGR2_IN1SEL_Shift
00000004 l       *ABS*	00000000 LPTIM1_CFGR2_IN2SEL_Shift
58002400 l       *ABS*	00000000 LPTIM2_BASE
58002400 l       *ABS*	00000000 LPTIM2_ISR
00000040 l       *ABS*	00000000 LPTIM2_ISR_DOWN
00000020 l       *ABS*	00000000 LPTIM2_ISR_UP
00000010 l       *ABS*	00000000 LPTIM2_ISR_ARROK
00000008 l       *ABS*	00000000 LPTIM2_ISR_CMPOK
00000004 l       *ABS*	00000000 LPTIM2_ISR_EXTTRIG
00000002 l       *ABS*	00000000 LPTIM2_ISR_ARRM
00000001 l       *ABS*	00000000 LPTIM2_ISR_CMPM
58002404 l       *ABS*	00000000 LPTIM2_ICR
00000040 l       *ABS*	00000000 LPTIM2_ICR_DOWNCF
00000020 l       *ABS*	00000000 LPTIM2_ICR_UPCF
00000010 l       *ABS*	00000000 LPTIM2_ICR_ARROKCF
00000008 l       *ABS*	00000000 LPTIM2_ICR_CMPOKCF
00000004 l       *ABS*	00000000 LPTIM2_ICR_EXTTRIGCF
00000002 l       *ABS*	00000000 LPTIM2_ICR_ARRMCF
00000001 l       *ABS*	00000000 LPTIM2_ICR_CMPMCF
58002408 l       *ABS*	00000000 LPTIM2_IER
00000040 l       *ABS*	00000000 LPTIM2_IER_DOWNIE
00000020 l       *ABS*	00000000 LPTIM2_IER_UPIE
00000010 l       *ABS*	00000000 LPTIM2_IER_ARROKIE
00000008 l       *ABS*	00000000 LPTIM2_IER_CMPOKIE
00000004 l       *ABS*	00000000 LPTIM2_IER_EXTTRIGIE
00000002 l       *ABS*	00000000 LPTIM2_IER_ARRMIE
00000001 l       *ABS*	00000000 LPTIM2_IER_CMPMIE
5800240c l       *ABS*	00000000 LPTIM2_CFGR
01000000 l       *ABS*	00000000 LPTIM2_CFGR_ENC
00800000 l       *ABS*	00000000 LPTIM2_CFGR_COUNTMODE
00400000 l       *ABS*	00000000 LPTIM2_CFGR_PRELOAD
00200000 l       *ABS*	00000000 LPTIM2_CFGR_WAVPOL
00100000 l       *ABS*	00000000 LPTIM2_CFGR_WAVE
00080000 l       *ABS*	00000000 LPTIM2_CFGR_TIMOUT
00000011 l       *ABS*	00000000 LPTIM2_CFGR_TRIGEN_Shift
0000000d l       *ABS*	00000000 LPTIM2_CFGR_TRIGSEL_Shift
00000009 l       *ABS*	00000000 LPTIM2_CFGR_PRESC_Shift
00000006 l       *ABS*	00000000 LPTIM2_CFGR_TRGFLT_Shift
00000003 l       *ABS*	00000000 LPTIM2_CFGR_CKFLT_Shift
00000001 l       *ABS*	00000000 LPTIM2_CFGR_CKPOL_Shift
00000001 l       *ABS*	00000000 LPTIM2_CFGR_CKSEL
58002410 l       *ABS*	00000000 LPTIM2_CR
00000001 l       *ABS*	00000000 LPTIM2_CR_ENABLE
00000002 l       *ABS*	00000000 LPTIM2_CR_SNGSTRT
00000004 l       *ABS*	00000000 LPTIM2_CR_CNTSTRT
00000008 l       *ABS*	00000000 LPTIM2_CR_COUNTRST
00000010 l       *ABS*	00000000 LPTIM2_CR_RSTARE
58002414 l       *ABS*	00000000 LPTIM2_CMP
00000000 l       *ABS*	00000000 LPTIM2_CMP_CMP_Shift
58002418 l       *ABS*	00000000 LPTIM2_ARR
00000000 l       *ABS*	00000000 LPTIM2_ARR_ARR_Shift
5800241c l       *ABS*	00000000 LPTIM2_CNT
00000000 l       *ABS*	00000000 LPTIM2_CNT_CNT_Shift
58002424 l       *ABS*	00000000 LPTIM2_CFGR2
00000000 l       *ABS*	00000000 LPTIM2_CFGR2_IN1SEL_Shift
00000004 l       *ABS*	00000000 LPTIM2_CFGR2_IN2SEL_Shift
58002800 l       *ABS*	00000000 LPTIM3_BASE
58002800 l       *ABS*	00000000 LPTIM3_ISR
00000040 l       *ABS*	00000000 LPTIM3_ISR_DOWN
00000020 l       *ABS*	00000000 LPTIM3_ISR_UP
00000010 l       *ABS*	00000000 LPTIM3_ISR_ARROK
00000008 l       *ABS*	00000000 LPTIM3_ISR_CMPOK
00000004 l       *ABS*	00000000 LPTIM3_ISR_EXTTRIG
00000002 l       *ABS*	00000000 LPTIM3_ISR_ARRM
00000001 l       *ABS*	00000000 LPTIM3_ISR_CMPM
58002804 l       *ABS*	00000000 LPTIM3_ICR
00000040 l       *ABS*	00000000 LPTIM3_ICR_DOWNCF
00000020 l       *ABS*	00000000 LPTIM3_ICR_UPCF
00000010 l       *ABS*	00000000 LPTIM3_ICR_ARROKCF
00000008 l       *ABS*	00000000 LPTIM3_ICR_CMPOKCF
00000004 l       *ABS*	00000000 LPTIM3_ICR_EXTTRIGCF
00000002 l       *ABS*	00000000 LPTIM3_ICR_ARRMCF
00000001 l       *ABS*	00000000 LPTIM3_ICR_CMPMCF
58002808 l       *ABS*	00000000 LPTIM3_IER
00000040 l       *ABS*	00000000 LPTIM3_IER_DOWNIE
00000020 l       *ABS*	00000000 LPTIM3_IER_UPIE
00000010 l       *ABS*	00000000 LPTIM3_IER_ARROKIE
00000008 l       *ABS*	00000000 LPTIM3_IER_CMPOKIE
00000004 l       *ABS*	00000000 LPTIM3_IER_EXTTRIGIE
00000002 l       *ABS*	00000000 LPTIM3_IER_ARRMIE
00000001 l       *ABS*	00000000 LPTIM3_IER_CMPMIE
5800280c l       *ABS*	00000000 LPTIM3_CFGR
01000000 l       *ABS*	00000000 LPTIM3_CFGR_ENC
00800000 l       *ABS*	00000000 LPTIM3_CFGR_COUNTMODE
00400000 l       *ABS*	00000000 LPTIM3_CFGR_PRELOAD
00200000 l       *ABS*	00000000 LPTIM3_CFGR_WAVPOL
00100000 l       *ABS*	00000000 LPTIM3_CFGR_WAVE
00080000 l       *ABS*	00000000 LPTIM3_CFGR_TIMOUT
00000011 l       *ABS*	00000000 LPTIM3_CFGR_TRIGEN_Shift
0000000d l       *ABS*	00000000 LPTIM3_CFGR_TRIGSEL_Shift
00000009 l       *ABS*	00000000 LPTIM3_CFGR_PRESC_Shift
00000006 l       *ABS*	00000000 LPTIM3_CFGR_TRGFLT_Shift
00000003 l       *ABS*	00000000 LPTIM3_CFGR_CKFLT_Shift
00000001 l       *ABS*	00000000 LPTIM3_CFGR_CKPOL_Shift
00000001 l       *ABS*	00000000 LPTIM3_CFGR_CKSEL
58002810 l       *ABS*	00000000 LPTIM3_CR
00000001 l       *ABS*	00000000 LPTIM3_CR_ENABLE
00000002 l       *ABS*	00000000 LPTIM3_CR_SNGSTRT
00000004 l       *ABS*	00000000 LPTIM3_CR_CNTSTRT
00000008 l       *ABS*	00000000 LPTIM3_CR_COUNTRST
00000010 l       *ABS*	00000000 LPTIM3_CR_RSTARE
58002814 l       *ABS*	00000000 LPTIM3_CMP
00000000 l       *ABS*	00000000 LPTIM3_CMP_CMP_Shift
58002818 l       *ABS*	00000000 LPTIM3_ARR
00000000 l       *ABS*	00000000 LPTIM3_ARR_ARR_Shift
5800281c l       *ABS*	00000000 LPTIM3_CNT
00000000 l       *ABS*	00000000 LPTIM3_CNT_CNT_Shift
58002824 l       *ABS*	00000000 LPTIM3_CFGR2
00000000 l       *ABS*	00000000 LPTIM3_CFGR2_IN1SEL_Shift
58002c00 l       *ABS*	00000000 LPTIM4_BASE
58002c00 l       *ABS*	00000000 LPTIM4_ISR
00000040 l       *ABS*	00000000 LPTIM4_ISR_DOWN
00000020 l       *ABS*	00000000 LPTIM4_ISR_UP
00000010 l       *ABS*	00000000 LPTIM4_ISR_ARROK
00000008 l       *ABS*	00000000 LPTIM4_ISR_CMPOK
00000004 l       *ABS*	00000000 LPTIM4_ISR_EXTTRIG
00000002 l       *ABS*	00000000 LPTIM4_ISR_ARRM
00000001 l       *ABS*	00000000 LPTIM4_ISR_CMPM
58002c04 l       *ABS*	00000000 LPTIM4_ICR
00000040 l       *ABS*	00000000 LPTIM4_ICR_DOWNCF
00000020 l       *ABS*	00000000 LPTIM4_ICR_UPCF
00000010 l       *ABS*	00000000 LPTIM4_ICR_ARROKCF
00000008 l       *ABS*	00000000 LPTIM4_ICR_CMPOKCF
00000004 l       *ABS*	00000000 LPTIM4_ICR_EXTTRIGCF
00000002 l       *ABS*	00000000 LPTIM4_ICR_ARRMCF
00000001 l       *ABS*	00000000 LPTIM4_ICR_CMPMCF
58002c08 l       *ABS*	00000000 LPTIM4_IER
00000040 l       *ABS*	00000000 LPTIM4_IER_DOWNIE
00000020 l       *ABS*	00000000 LPTIM4_IER_UPIE
00000010 l       *ABS*	00000000 LPTIM4_IER_ARROKIE
00000008 l       *ABS*	00000000 LPTIM4_IER_CMPOKIE
00000004 l       *ABS*	00000000 LPTIM4_IER_EXTTRIGIE
00000002 l       *ABS*	00000000 LPTIM4_IER_ARRMIE
00000001 l       *ABS*	00000000 LPTIM4_IER_CMPMIE
58002c0c l       *ABS*	00000000 LPTIM4_CFGR
01000000 l       *ABS*	00000000 LPTIM4_CFGR_ENC
00800000 l       *ABS*	00000000 LPTIM4_CFGR_COUNTMODE
00400000 l       *ABS*	00000000 LPTIM4_CFGR_PRELOAD
00200000 l       *ABS*	00000000 LPTIM4_CFGR_WAVPOL
00100000 l       *ABS*	00000000 LPTIM4_CFGR_WAVE
00080000 l       *ABS*	00000000 LPTIM4_CFGR_TIMOUT
00000011 l       *ABS*	00000000 LPTIM4_CFGR_TRIGEN_Shift
0000000d l       *ABS*	00000000 LPTIM4_CFGR_TRIGSEL_Shift
00000009 l       *ABS*	00000000 LPTIM4_CFGR_PRESC_Shift
00000006 l       *ABS*	00000000 LPTIM4_CFGR_TRGFLT_Shift
00000003 l       *ABS*	00000000 LPTIM4_CFGR_CKFLT_Shift
00000001 l       *ABS*	00000000 LPTIM4_CFGR_CKPOL_Shift
00000001 l       *ABS*	00000000 LPTIM4_CFGR_CKSEL
58002c10 l       *ABS*	00000000 LPTIM4_CR
00000001 l       *ABS*	00000000 LPTIM4_CR_ENABLE
00000002 l       *ABS*	00000000 LPTIM4_CR_SNGSTRT
00000004 l       *ABS*	00000000 LPTIM4_CR_CNTSTRT
00000008 l       *ABS*	00000000 LPTIM4_CR_COUNTRST
00000010 l       *ABS*	00000000 LPTIM4_CR_RSTARE
58002c14 l       *ABS*	00000000 LPTIM4_CMP
00000000 l       *ABS*	00000000 LPTIM4_CMP_CMP_Shift
58002c18 l       *ABS*	00000000 LPTIM4_ARR
00000000 l       *ABS*	00000000 LPTIM4_ARR_ARR_Shift
58002c1c l       *ABS*	00000000 LPTIM4_CNT
00000000 l       *ABS*	00000000 LPTIM4_CNT_CNT_Shift
58002c24 l       *ABS*	00000000 LPTIM4_CFGR2
00000000 l       *ABS*	00000000 LPTIM4_CFGR2_IN1SEL_Shift
58003000 l       *ABS*	00000000 LPTIM5_BASE
58003000 l       *ABS*	00000000 LPTIM5_ISR
00000040 l       *ABS*	00000000 LPTIM5_ISR_DOWN
00000020 l       *ABS*	00000000 LPTIM5_ISR_UP
00000010 l       *ABS*	00000000 LPTIM5_ISR_ARROK
00000008 l       *ABS*	00000000 LPTIM5_ISR_CMPOK
00000004 l       *ABS*	00000000 LPTIM5_ISR_EXTTRIG
00000002 l       *ABS*	00000000 LPTIM5_ISR_ARRM
00000001 l       *ABS*	00000000 LPTIM5_ISR_CMPM
58003004 l       *ABS*	00000000 LPTIM5_ICR
00000040 l       *ABS*	00000000 LPTIM5_ICR_DOWNCF
00000020 l       *ABS*	00000000 LPTIM5_ICR_UPCF
00000010 l       *ABS*	00000000 LPTIM5_ICR_ARROKCF
00000008 l       *ABS*	00000000 LPTIM5_ICR_CMPOKCF
00000004 l       *ABS*	00000000 LPTIM5_ICR_EXTTRIGCF
00000002 l       *ABS*	00000000 LPTIM5_ICR_ARRMCF
00000001 l       *ABS*	00000000 LPTIM5_ICR_CMPMCF
58003008 l       *ABS*	00000000 LPTIM5_IER
00000040 l       *ABS*	00000000 LPTIM5_IER_DOWNIE
00000020 l       *ABS*	00000000 LPTIM5_IER_UPIE
00000010 l       *ABS*	00000000 LPTIM5_IER_ARROKIE
00000008 l       *ABS*	00000000 LPTIM5_IER_CMPOKIE
00000004 l       *ABS*	00000000 LPTIM5_IER_EXTTRIGIE
00000002 l       *ABS*	00000000 LPTIM5_IER_ARRMIE
00000001 l       *ABS*	00000000 LPTIM5_IER_CMPMIE
5800300c l       *ABS*	00000000 LPTIM5_CFGR
01000000 l       *ABS*	00000000 LPTIM5_CFGR_ENC
00800000 l       *ABS*	00000000 LPTIM5_CFGR_COUNTMODE
00400000 l       *ABS*	00000000 LPTIM5_CFGR_PRELOAD
00200000 l       *ABS*	00000000 LPTIM5_CFGR_WAVPOL
00100000 l       *ABS*	00000000 LPTIM5_CFGR_WAVE
00080000 l       *ABS*	00000000 LPTIM5_CFGR_TIMOUT
00000011 l       *ABS*	00000000 LPTIM5_CFGR_TRIGEN_Shift
0000000d l       *ABS*	00000000 LPTIM5_CFGR_TRIGSEL_Shift
00000009 l       *ABS*	00000000 LPTIM5_CFGR_PRESC_Shift
00000006 l       *ABS*	00000000 LPTIM5_CFGR_TRGFLT_Shift
00000003 l       *ABS*	00000000 LPTIM5_CFGR_CKFLT_Shift
00000001 l       *ABS*	00000000 LPTIM5_CFGR_CKPOL_Shift
00000001 l       *ABS*	00000000 LPTIM5_CFGR_CKSEL
58003010 l       *ABS*	00000000 LPTIM5_CR
00000001 l       *ABS*	00000000 LPTIM5_CR_ENABLE
00000002 l       *ABS*	00000000 LPTIM5_CR_SNGSTRT
00000004 l       *ABS*	00000000 LPTIM5_CR_CNTSTRT
00000008 l       *ABS*	00000000 LPTIM5_CR_COUNTRST
00000010 l       *ABS*	00000000 LPTIM5_CR_RSTARE
58003014 l       *ABS*	00000000 LPTIM5_CMP
00000000 l       *ABS*	00000000 LPTIM5_CMP_CMP_Shift
58003018 l       *ABS*	00000000 LPTIM5_ARR
00000000 l       *ABS*	00000000 LPTIM5_ARR_ARR_Shift
5800301c l       *ABS*	00000000 LPTIM5_CNT
00000000 l       *ABS*	00000000 LPTIM5_CNT_CNT_Shift
58003024 l       *ABS*	00000000 LPTIM5_CFGR2
00000000 l       *ABS*	00000000 LPTIM5_CFGR2_IN1SEL_Shift
58000c00 l       *ABS*	00000000 LPUART1_BASE
58000c00 l       *ABS*	00000000 LPUART1_CR1
80000000 l       *ABS*	00000000 LPUART1_CR1_RXFFIE
40000000 l       *ABS*	00000000 LPUART1_CR1_TXFEIE
20000000 l       *ABS*	00000000 LPUART1_CR1_FIFOEN
10000000 l       *ABS*	00000000 LPUART1_CR1_M1
00000015 l       *ABS*	00000000 LPUART1_CR1_DEAT_Shift
00000010 l       *ABS*	00000000 LPUART1_CR1_DEDT_Shift
00004000 l       *ABS*	00000000 LPUART1_CR1_CMIE
00002000 l       *ABS*	00000000 LPUART1_CR1_MME
00001000 l       *ABS*	00000000 LPUART1_CR1_M0
00000800 l       *ABS*	00000000 LPUART1_CR1_WAKE
00000400 l       *ABS*	00000000 LPUART1_CR1_PCE
00000200 l       *ABS*	00000000 LPUART1_CR1_PS
00000100 l       *ABS*	00000000 LPUART1_CR1_PEIE
00000080 l       *ABS*	00000000 LPUART1_CR1_TXEIE
00000040 l       *ABS*	00000000 LPUART1_CR1_TCIE
00000020 l       *ABS*	00000000 LPUART1_CR1_RXNEIE
00000010 l       *ABS*	00000000 LPUART1_CR1_IDLEIE
00000008 l       *ABS*	00000000 LPUART1_CR1_TE
00000004 l       *ABS*	00000000 LPUART1_CR1_RE
00000002 l       *ABS*	00000000 LPUART1_CR1_UESM
00000001 l       *ABS*	00000000 LPUART1_CR1_UE
58000c04 l       *ABS*	00000000 LPUART1_CR2
00000018 l       *ABS*	00000000 LPUART1_CR2_ADD_Shift
00080000 l       *ABS*	00000000 LPUART1_CR2_MSBFIRST
00040000 l       *ABS*	00000000 LPUART1_CR2_DATAINV
00020000 l       *ABS*	00000000 LPUART1_CR2_TXINV
00010000 l       *ABS*	00000000 LPUART1_CR2_RXINV
00008000 l       *ABS*	00000000 LPUART1_CR2_SWAP
0000000c l       *ABS*	00000000 LPUART1_CR2_STOP_Shift
00000010 l       *ABS*	00000000 LPUART1_CR2_ADDM7
58000c08 l       *ABS*	00000000 LPUART1_CR3
0000001d l       *ABS*	00000000 LPUART1_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 LPUART1_CR3_RXFTIE
00000019 l       *ABS*	00000000 LPUART1_CR3_RXFTCFG_Shift
00800000 l       *ABS*	00000000 LPUART1_CR3_TXFTIE
00400000 l       *ABS*	00000000 LPUART1_CR3_WUFIE
00000014 l       *ABS*	00000000 LPUART1_CR3_WUS_Shift
00008000 l       *ABS*	00000000 LPUART1_CR3_DEP
00004000 l       *ABS*	00000000 LPUART1_CR3_DEM
00002000 l       *ABS*	00000000 LPUART1_CR3_DDRE
00001000 l       *ABS*	00000000 LPUART1_CR3_OVRDIS
00000400 l       *ABS*	00000000 LPUART1_CR3_CTSIE
00000200 l       *ABS*	00000000 LPUART1_CR3_CTSE
00000100 l       *ABS*	00000000 LPUART1_CR3_RTSE
00000080 l       *ABS*	00000000 LPUART1_CR3_DMAT
00000040 l       *ABS*	00000000 LPUART1_CR3_DMAR
00000008 l       *ABS*	00000000 LPUART1_CR3_HDSEL
00000001 l       *ABS*	00000000 LPUART1_CR3_EIE
58000c0c l       *ABS*	00000000 LPUART1_BRR
00000000 l       *ABS*	00000000 LPUART1_BRR_BRR_Shift
58000c10 l       *ABS*	00000000 LPUART1_GTPR
00000008 l       *ABS*	00000000 LPUART1_GTPR_GT_Shift
00000000 l       *ABS*	00000000 LPUART1_GTPR_PSC_Shift
58000c14 l       *ABS*	00000000 LPUART1_RTOR
00000018 l       *ABS*	00000000 LPUART1_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 LPUART1_RTOR_RTO_Shift
58000c18 l       *ABS*	00000000 LPUART1_RQR
00000010 l       *ABS*	00000000 LPUART1_RQR_TXFRQ
00000008 l       *ABS*	00000000 LPUART1_RQR_RXFRQ
00000004 l       *ABS*	00000000 LPUART1_RQR_MMRQ
00000002 l       *ABS*	00000000 LPUART1_RQR_SBKRQ
00000001 l       *ABS*	00000000 LPUART1_RQR_ABRRQ
58000c1c l       *ABS*	00000000 LPUART1_ISR
08000000 l       *ABS*	00000000 LPUART1_ISR_TXFT
04000000 l       *ABS*	00000000 LPUART1_ISR_RXFT
01000000 l       *ABS*	00000000 LPUART1_ISR_RXFF
00800000 l       *ABS*	00000000 LPUART1_ISR_TXFE
00400000 l       *ABS*	00000000 LPUART1_ISR_REACK
00200000 l       *ABS*	00000000 LPUART1_ISR_TEACK
00100000 l       *ABS*	00000000 LPUART1_ISR_WUF
00080000 l       *ABS*	00000000 LPUART1_ISR_RWU
00040000 l       *ABS*	00000000 LPUART1_ISR_SBKF
00020000 l       *ABS*	00000000 LPUART1_ISR_CMF
00010000 l       *ABS*	00000000 LPUART1_ISR_BUSY
00000400 l       *ABS*	00000000 LPUART1_ISR_CTS
00000200 l       *ABS*	00000000 LPUART1_ISR_CTSIF
00000080 l       *ABS*	00000000 LPUART1_ISR_TXE
00000040 l       *ABS*	00000000 LPUART1_ISR_TC
00000020 l       *ABS*	00000000 LPUART1_ISR_RXNE
00000010 l       *ABS*	00000000 LPUART1_ISR_IDLE
00000008 l       *ABS*	00000000 LPUART1_ISR_ORE
00000004 l       *ABS*	00000000 LPUART1_ISR_NE
00000002 l       *ABS*	00000000 LPUART1_ISR_FE
00000001 l       *ABS*	00000000 LPUART1_ISR_PE
58000c20 l       *ABS*	00000000 LPUART1_ICR
00100000 l       *ABS*	00000000 LPUART1_ICR_WUCF
00020000 l       *ABS*	00000000 LPUART1_ICR_CMCF
00000200 l       *ABS*	00000000 LPUART1_ICR_CTSCF
00000040 l       *ABS*	00000000 LPUART1_ICR_TCCF
00000010 l       *ABS*	00000000 LPUART1_ICR_IDLECF
00000008 l       *ABS*	00000000 LPUART1_ICR_ORECF
00000004 l       *ABS*	00000000 LPUART1_ICR_NCF
00000002 l       *ABS*	00000000 LPUART1_ICR_FECF
00000001 l       *ABS*	00000000 LPUART1_ICR_PECF
58000c24 l       *ABS*	00000000 LPUART1_RDR
00000000 l       *ABS*	00000000 LPUART1_RDR_RDR_Shift
58000c28 l       *ABS*	00000000 LPUART1_TDR
00000000 l       *ABS*	00000000 LPUART1_TDR_TDR_Shift
58000c2c l       *ABS*	00000000 LPUART1_PRESC
00000000 l       *ABS*	00000000 LPUART1_PRESC_PRESCALER_Shift
58000400 l       *ABS*	00000000 SYSCFG_BASE
58000404 l       *ABS*	00000000 SYSCFG_PMCR
00000001 l       *ABS*	00000000 SYSCFG_PMCR_I2C1FMP
00000002 l       *ABS*	00000000 SYSCFG_PMCR_I2C2FMP
00000004 l       *ABS*	00000000 SYSCFG_PMCR_I2C3FMP
00000008 l       *ABS*	00000000 SYSCFG_PMCR_I2C4FMP
00000010 l       *ABS*	00000000 SYSCFG_PMCR_PB6FMP
00000020 l       *ABS*	00000000 SYSCFG_PMCR_PB7FMP
00000040 l       *ABS*	00000000 SYSCFG_PMCR_PB8FMP
00000080 l       *ABS*	00000000 SYSCFG_PMCR_PB9FMP
00000100 l       *ABS*	00000000 SYSCFG_PMCR_BOOSTE
00000200 l       *ABS*	00000000 SYSCFG_PMCR_BOOSTVDDSEL
00000015 l       *ABS*	00000000 SYSCFG_PMCR_EPIS_Shift
01000000 l       *ABS*	00000000 SYSCFG_PMCR_PA0SO
02000000 l       *ABS*	00000000 SYSCFG_PMCR_PA1SO
04000000 l       *ABS*	00000000 SYSCFG_PMCR_PC2SO
08000000 l       *ABS*	00000000 SYSCFG_PMCR_PC3SO
58000408 l       *ABS*	00000000 SYSCFG_EXTICR1
0000000c l       *ABS*	00000000 SYSCFG_EXTICR1_EXTI3_Shift
00000008 l       *ABS*	00000000 SYSCFG_EXTICR1_EXTI2_Shift
00000004 l       *ABS*	00000000 SYSCFG_EXTICR1_EXTI1_Shift
00000000 l       *ABS*	00000000 SYSCFG_EXTICR1_EXTI0_Shift
5800040c l       *ABS*	00000000 SYSCFG_EXTICR2
0000000c l       *ABS*	00000000 SYSCFG_EXTICR2_EXTI7_Shift
00000008 l       *ABS*	00000000 SYSCFG_EXTICR2_EXTI6_Shift
00000004 l       *ABS*	00000000 SYSCFG_EXTICR2_EXTI5_Shift
00000000 l       *ABS*	00000000 SYSCFG_EXTICR2_EXTI4_Shift
58000410 l       *ABS*	00000000 SYSCFG_EXTICR3
0000000c l       *ABS*	00000000 SYSCFG_EXTICR3_EXTI11_Shift
00000008 l       *ABS*	00000000 SYSCFG_EXTICR3_EXTI10_Shift
00000004 l       *ABS*	00000000 SYSCFG_EXTICR3_EXTI9_Shift
00000000 l       *ABS*	00000000 SYSCFG_EXTICR3_EXTI8_Shift
58000414 l       *ABS*	00000000 SYSCFG_EXTICR4
0000000c l       *ABS*	00000000 SYSCFG_EXTICR4_EXTI15_Shift
00000008 l       *ABS*	00000000 SYSCFG_EXTICR4_EXTI14_Shift
00000004 l       *ABS*	00000000 SYSCFG_EXTICR4_EXTI13_Shift
00000000 l       *ABS*	00000000 SYSCFG_EXTICR4_EXTI12_Shift
58000420 l       *ABS*	00000000 SYSCFG_CCCSR
00000001 l       *ABS*	00000000 SYSCFG_CCCSR_EN
00000002 l       *ABS*	00000000 SYSCFG_CCCSR_CS
00000100 l       *ABS*	00000000 SYSCFG_CCCSR_READY
00010000 l       *ABS*	00000000 SYSCFG_CCCSR_HSLV
58000424 l       *ABS*	00000000 SYSCFG_CCVR
00000000 l       *ABS*	00000000 SYSCFG_CCVR_NCV_Shift
00000004 l       *ABS*	00000000 SYSCFG_CCVR_PCV_Shift
58000428 l       *ABS*	00000000 SYSCFG_CCCR
00000000 l       *ABS*	00000000 SYSCFG_CCCR_NCC_Shift
00000004 l       *ABS*	00000000 SYSCFG_CCCR_PCC_Shift
5800042c l       *ABS*	00000000 SYSCFG_PWRCR
00000000 l       *ABS*	00000000 SYSCFG_PWRCR_ODEN_Shift
58000524 l       *ABS*	00000000 SYSCFG_PKGR
00000000 l       *ABS*	00000000 SYSCFG_PKGR_PKG_Shift
58000700 l       *ABS*	00000000 SYSCFG_UR0
00000001 l       *ABS*	00000000 SYSCFG_UR0_BKS
00000010 l       *ABS*	00000000 SYSCFG_UR0_RDP_Shift
58000708 l       *ABS*	00000000 SYSCFG_UR2
00000000 l       *ABS*	00000000 SYSCFG_UR2_BORH_Shift
00000010 l       *ABS*	00000000 SYSCFG_UR2_BOOT_ADD0_Shift
5800070c l       *ABS*	00000000 SYSCFG_UR3
00000010 l       *ABS*	00000000 SYSCFG_UR3_BOOT_ADD1_Shift
58000710 l       *ABS*	00000000 SYSCFG_UR4
00010000 l       *ABS*	00000000 SYSCFG_UR4_MEPAD_1
58000714 l       *ABS*	00000000 SYSCFG_UR5
00000001 l       *ABS*	00000000 SYSCFG_UR5_MESAD_1
00000010 l       *ABS*	00000000 SYSCFG_UR5_WRPN_1_Shift
58000718 l       *ABS*	00000000 SYSCFG_UR6
00000000 l       *ABS*	00000000 SYSCFG_UR6_PA_BEG_1_Shift
00000010 l       *ABS*	00000000 SYSCFG_UR6_PA_END_1_Shift
5800071c l       *ABS*	00000000 SYSCFG_UR7
00000000 l       *ABS*	00000000 SYSCFG_UR7_SA_BEG_1_Shift
00000010 l       *ABS*	00000000 SYSCFG_UR7_SA_END_1_Shift
58000720 l       *ABS*	00000000 SYSCFG_UR8
00000001 l       *ABS*	00000000 SYSCFG_UR8_MEPAD_2
00010000 l       *ABS*	00000000 SYSCFG_UR8_MESAD_2
58000724 l       *ABS*	00000000 SYSCFG_UR9
00000000 l       *ABS*	00000000 SYSCFG_UR9_WRPN_2_Shift
00000010 l       *ABS*	00000000 SYSCFG_UR9_PA_BEG_2_Shift
58000728 l       *ABS*	00000000 SYSCFG_UR10
00000000 l       *ABS*	00000000 SYSCFG_UR10_PA_END_2_Shift
00000010 l       *ABS*	00000000 SYSCFG_UR10_SA_BEG_2_Shift
5800072c l       *ABS*	00000000 SYSCFG_UR11
00000000 l       *ABS*	00000000 SYSCFG_UR11_SA_END_2_Shift
00010000 l       *ABS*	00000000 SYSCFG_UR11_IWDG1M
58000730 l       *ABS*	00000000 SYSCFG_UR12
00010000 l       *ABS*	00000000 SYSCFG_UR12_SECURE
58000734 l       *ABS*	00000000 SYSCFG_UR13
00000000 l       *ABS*	00000000 SYSCFG_UR13_SDRS_Shift
00010000 l       *ABS*	00000000 SYSCFG_UR13_D1SBRST
58000738 l       *ABS*	00000000 SYSCFG_UR14
00000001 l       *ABS*	00000000 SYSCFG_UR14_D1STPRST
5800073c l       *ABS*	00000000 SYSCFG_UR15
00010000 l       *ABS*	00000000 SYSCFG_UR15_FZIWDGSTB
58000740 l       *ABS*	00000000 SYSCFG_UR16
00000001 l       *ABS*	00000000 SYSCFG_UR16_FZIWDGSTP
00010000 l       *ABS*	00000000 SYSCFG_UR16_PKP
58000744 l       *ABS*	00000000 SYSCFG_UR17
00000001 l       *ABS*	00000000 SYSCFG_UR17_IO_HSLV
58000000 l       *ABS*	00000000 EXTI_BASE
58000000 l       *ABS*	00000000 EXTI_RTSR1
00000001 l       *ABS*	00000000 EXTI_RTSR1_TR0
00000002 l       *ABS*	00000000 EXTI_RTSR1_TR1
00000004 l       *ABS*	00000000 EXTI_RTSR1_TR2
00000008 l       *ABS*	00000000 EXTI_RTSR1_TR3
00000010 l       *ABS*	00000000 EXTI_RTSR1_TR4
00000020 l       *ABS*	00000000 EXTI_RTSR1_TR5
00000040 l       *ABS*	00000000 EXTI_RTSR1_TR6
00000080 l       *ABS*	00000000 EXTI_RTSR1_TR7
00000100 l       *ABS*	00000000 EXTI_RTSR1_TR8
00000200 l       *ABS*	00000000 EXTI_RTSR1_TR9
00000400 l       *ABS*	00000000 EXTI_RTSR1_TR10
00000800 l       *ABS*	00000000 EXTI_RTSR1_TR11
00001000 l       *ABS*	00000000 EXTI_RTSR1_TR12
00002000 l       *ABS*	00000000 EXTI_RTSR1_TR13
00004000 l       *ABS*	00000000 EXTI_RTSR1_TR14
00008000 l       *ABS*	00000000 EXTI_RTSR1_TR15
00010000 l       *ABS*	00000000 EXTI_RTSR1_TR16
00020000 l       *ABS*	00000000 EXTI_RTSR1_TR17
00040000 l       *ABS*	00000000 EXTI_RTSR1_TR18
00080000 l       *ABS*	00000000 EXTI_RTSR1_TR19
00100000 l       *ABS*	00000000 EXTI_RTSR1_TR20
00200000 l       *ABS*	00000000 EXTI_RTSR1_TR21
58000004 l       *ABS*	00000000 EXTI_FTSR1
00000001 l       *ABS*	00000000 EXTI_FTSR1_TR0
00000002 l       *ABS*	00000000 EXTI_FTSR1_TR1
00000004 l       *ABS*	00000000 EXTI_FTSR1_TR2
00000008 l       *ABS*	00000000 EXTI_FTSR1_TR3
00000010 l       *ABS*	00000000 EXTI_FTSR1_TR4
00000020 l       *ABS*	00000000 EXTI_FTSR1_TR5
00000040 l       *ABS*	00000000 EXTI_FTSR1_TR6
00000080 l       *ABS*	00000000 EXTI_FTSR1_TR7
00000100 l       *ABS*	00000000 EXTI_FTSR1_TR8
00000200 l       *ABS*	00000000 EXTI_FTSR1_TR9
00000400 l       *ABS*	00000000 EXTI_FTSR1_TR10
00000800 l       *ABS*	00000000 EXTI_FTSR1_TR11
00001000 l       *ABS*	00000000 EXTI_FTSR1_TR12
00002000 l       *ABS*	00000000 EXTI_FTSR1_TR13
00004000 l       *ABS*	00000000 EXTI_FTSR1_TR14
00008000 l       *ABS*	00000000 EXTI_FTSR1_TR15
00010000 l       *ABS*	00000000 EXTI_FTSR1_TR16
00020000 l       *ABS*	00000000 EXTI_FTSR1_TR17
00040000 l       *ABS*	00000000 EXTI_FTSR1_TR18
00080000 l       *ABS*	00000000 EXTI_FTSR1_TR19
00100000 l       *ABS*	00000000 EXTI_FTSR1_TR20
00200000 l       *ABS*	00000000 EXTI_FTSR1_TR21
58000008 l       *ABS*	00000000 EXTI_SWIER1
00000001 l       *ABS*	00000000 EXTI_SWIER1_SWIER0
00000002 l       *ABS*	00000000 EXTI_SWIER1_SWIER1
00000004 l       *ABS*	00000000 EXTI_SWIER1_SWIER2
00000008 l       *ABS*	00000000 EXTI_SWIER1_SWIER3
00000010 l       *ABS*	00000000 EXTI_SWIER1_SWIER4
00000020 l       *ABS*	00000000 EXTI_SWIER1_SWIER5
00000040 l       *ABS*	00000000 EXTI_SWIER1_SWIER6
00000080 l       *ABS*	00000000 EXTI_SWIER1_SWIER7
00000100 l       *ABS*	00000000 EXTI_SWIER1_SWIER8
00000200 l       *ABS*	00000000 EXTI_SWIER1_SWIER9
00000400 l       *ABS*	00000000 EXTI_SWIER1_SWIER10
00000800 l       *ABS*	00000000 EXTI_SWIER1_SWIER11
00001000 l       *ABS*	00000000 EXTI_SWIER1_SWIER12
00002000 l       *ABS*	00000000 EXTI_SWIER1_SWIER13
00004000 l       *ABS*	00000000 EXTI_SWIER1_SWIER14
00008000 l       *ABS*	00000000 EXTI_SWIER1_SWIER15
00010000 l       *ABS*	00000000 EXTI_SWIER1_SWIER16
00020000 l       *ABS*	00000000 EXTI_SWIER1_SWIER17
00040000 l       *ABS*	00000000 EXTI_SWIER1_SWIER18
00080000 l       *ABS*	00000000 EXTI_SWIER1_SWIER19
00100000 l       *ABS*	00000000 EXTI_SWIER1_SWIER20
00200000 l       *ABS*	00000000 EXTI_SWIER1_SWIER21
5800000c l       *ABS*	00000000 EXTI_D3PMR1
00000001 l       *ABS*	00000000 EXTI_D3PMR1_MR0
00000002 l       *ABS*	00000000 EXTI_D3PMR1_MR1
00000004 l       *ABS*	00000000 EXTI_D3PMR1_MR2
00000008 l       *ABS*	00000000 EXTI_D3PMR1_MR3
00000010 l       *ABS*	00000000 EXTI_D3PMR1_MR4
00000020 l       *ABS*	00000000 EXTI_D3PMR1_MR5
00000040 l       *ABS*	00000000 EXTI_D3PMR1_MR6
00000080 l       *ABS*	00000000 EXTI_D3PMR1_MR7
00000100 l       *ABS*	00000000 EXTI_D3PMR1_MR8
00000200 l       *ABS*	00000000 EXTI_D3PMR1_MR9
00000400 l       *ABS*	00000000 EXTI_D3PMR1_MR10
00000800 l       *ABS*	00000000 EXTI_D3PMR1_MR11
00001000 l       *ABS*	00000000 EXTI_D3PMR1_MR12
00002000 l       *ABS*	00000000 EXTI_D3PMR1_MR13
00004000 l       *ABS*	00000000 EXTI_D3PMR1_MR14
00008000 l       *ABS*	00000000 EXTI_D3PMR1_MR15
00080000 l       *ABS*	00000000 EXTI_D3PMR1_MR19
00100000 l       *ABS*	00000000 EXTI_D3PMR1_MR20
00200000 l       *ABS*	00000000 EXTI_D3PMR1_MR21
02000000 l       *ABS*	00000000 EXTI_D3PMR1_MR25
58000010 l       *ABS*	00000000 EXTI_D3PCR1L
00000000 l       *ABS*	00000000 EXTI_D3PCR1L_PCS0_Shift
00000002 l       *ABS*	00000000 EXTI_D3PCR1L_PCS1_Shift
00000004 l       *ABS*	00000000 EXTI_D3PCR1L_PCS2_Shift
00000006 l       *ABS*	00000000 EXTI_D3PCR1L_PCS3_Shift
00000008 l       *ABS*	00000000 EXTI_D3PCR1L_PCS4_Shift
0000000a l       *ABS*	00000000 EXTI_D3PCR1L_PCS5_Shift
0000000c l       *ABS*	00000000 EXTI_D3PCR1L_PCS6_Shift
0000000e l       *ABS*	00000000 EXTI_D3PCR1L_PCS7_Shift
00000010 l       *ABS*	00000000 EXTI_D3PCR1L_PCS8_Shift
00000012 l       *ABS*	00000000 EXTI_D3PCR1L_PCS9_Shift
00000014 l       *ABS*	00000000 EXTI_D3PCR1L_PCS10_Shift
00000016 l       *ABS*	00000000 EXTI_D3PCR1L_PCS11_Shift
00000018 l       *ABS*	00000000 EXTI_D3PCR1L_PCS12_Shift
0000001a l       *ABS*	00000000 EXTI_D3PCR1L_PCS13_Shift
0000001c l       *ABS*	00000000 EXTI_D3PCR1L_PCS14_Shift
0000001e l       *ABS*	00000000 EXTI_D3PCR1L_PCS15_Shift
58000014 l       *ABS*	00000000 EXTI_D3PCR1H
00000006 l       *ABS*	00000000 EXTI_D3PCR1H_PCS19_Shift
00000008 l       *ABS*	00000000 EXTI_D3PCR1H_PCS20_Shift
0000000a l       *ABS*	00000000 EXTI_D3PCR1H_PCS21_Shift
00000012 l       *ABS*	00000000 EXTI_D3PCR1H_PCS25_Shift
58000020 l       *ABS*	00000000 EXTI_RTSR2
00020000 l       *ABS*	00000000 EXTI_RTSR2_TR49
00080000 l       *ABS*	00000000 EXTI_RTSR2_TR51
58000024 l       *ABS*	00000000 EXTI_FTSR2
00020000 l       *ABS*	00000000 EXTI_FTSR2_TR49
00080000 l       *ABS*	00000000 EXTI_FTSR2_TR51
58000028 l       *ABS*	00000000 EXTI_SWIER2
00020000 l       *ABS*	00000000 EXTI_SWIER2_SWIER49
00080000 l       *ABS*	00000000 EXTI_SWIER2_SWIER51
5800002c l       *ABS*	00000000 EXTI_D3PMR2
00000004 l       *ABS*	00000000 EXTI_D3PMR2_MR34
00000008 l       *ABS*	00000000 EXTI_D3PMR2_MR35
00000200 l       *ABS*	00000000 EXTI_D3PMR2_MR41
00010000 l       *ABS*	00000000 EXTI_D3PMR2_MR48
00020000 l       *ABS*	00000000 EXTI_D3PMR2_MR49
00040000 l       *ABS*	00000000 EXTI_D3PMR2_MR50
00080000 l       *ABS*	00000000 EXTI_D3PMR2_MR51
00100000 l       *ABS*	00000000 EXTI_D3PMR2_MR52
00200000 l       *ABS*	00000000 EXTI_D3PMR2_MR53
58000030 l       *ABS*	00000000 EXTI_D3PCR2L
00000006 l       *ABS*	00000000 EXTI_D3PCR2L_PCS35_Shift
00000004 l       *ABS*	00000000 EXTI_D3PCR2L_PCS34_Shift
00000012 l       *ABS*	00000000 EXTI_D3PCR2L_PCS41_Shift
58000034 l       *ABS*	00000000 EXTI_D3PCR2H
00000000 l       *ABS*	00000000 EXTI_D3PCR2H_PCS48_Shift
00000002 l       *ABS*	00000000 EXTI_D3PCR2H_PCS49_Shift
00000004 l       *ABS*	00000000 EXTI_D3PCR2H_PCS50_Shift
00000006 l       *ABS*	00000000 EXTI_D3PCR2H_PCS51_Shift
00000008 l       *ABS*	00000000 EXTI_D3PCR2H_PCS52_Shift
0000000a l       *ABS*	00000000 EXTI_D3PCR2H_PCS53_Shift
58000040 l       *ABS*	00000000 EXTI_RTSR3
00040000 l       *ABS*	00000000 EXTI_RTSR3_TR82
00100000 l       *ABS*	00000000 EXTI_RTSR3_TR84
00200000 l       *ABS*	00000000 EXTI_RTSR3_TR85
00400000 l       *ABS*	00000000 EXTI_RTSR3_TR86
58000044 l       *ABS*	00000000 EXTI_FTSR3
00040000 l       *ABS*	00000000 EXTI_FTSR3_TR82
00100000 l       *ABS*	00000000 EXTI_FTSR3_TR84
00200000 l       *ABS*	00000000 EXTI_FTSR3_TR85
00400000 l       *ABS*	00000000 EXTI_FTSR3_TR86
58000048 l       *ABS*	00000000 EXTI_SWIER3
00040000 l       *ABS*	00000000 EXTI_SWIER3_SWIER82
00100000 l       *ABS*	00000000 EXTI_SWIER3_SWIER84
00200000 l       *ABS*	00000000 EXTI_SWIER3_SWIER85
00400000 l       *ABS*	00000000 EXTI_SWIER3_SWIER86
5800004c l       *ABS*	00000000 EXTI_D3PMR3
01000000 l       *ABS*	00000000 EXTI_D3PMR3_MR88
58000054 l       *ABS*	00000000 EXTI_D3PCR3H
00000012 l       *ABS*	00000000 EXTI_D3PCR3H_PCS88_Shift
58000080 l       *ABS*	00000000 EXTI_CPUIMR1
00000001 l       *ABS*	00000000 EXTI_CPUIMR1_MR0
00000002 l       *ABS*	00000000 EXTI_CPUIMR1_MR1
00000004 l       *ABS*	00000000 EXTI_CPUIMR1_MR2
00000008 l       *ABS*	00000000 EXTI_CPUIMR1_MR3
00000010 l       *ABS*	00000000 EXTI_CPUIMR1_MR4
00000020 l       *ABS*	00000000 EXTI_CPUIMR1_MR5
00000040 l       *ABS*	00000000 EXTI_CPUIMR1_MR6
00000080 l       *ABS*	00000000 EXTI_CPUIMR1_MR7
00000100 l       *ABS*	00000000 EXTI_CPUIMR1_MR8
00000200 l       *ABS*	00000000 EXTI_CPUIMR1_MR9
00000400 l       *ABS*	00000000 EXTI_CPUIMR1_MR10
00000800 l       *ABS*	00000000 EXTI_CPUIMR1_MR11
00001000 l       *ABS*	00000000 EXTI_CPUIMR1_MR12
00002000 l       *ABS*	00000000 EXTI_CPUIMR1_MR13
00004000 l       *ABS*	00000000 EXTI_CPUIMR1_MR14
00008000 l       *ABS*	00000000 EXTI_CPUIMR1_MR15
00010000 l       *ABS*	00000000 EXTI_CPUIMR1_MR16
00020000 l       *ABS*	00000000 EXTI_CPUIMR1_MR17
00040000 l       *ABS*	00000000 EXTI_CPUIMR1_MR18
00080000 l       *ABS*	00000000 EXTI_CPUIMR1_MR19
00100000 l       *ABS*	00000000 EXTI_CPUIMR1_MR20
00200000 l       *ABS*	00000000 EXTI_CPUIMR1_MR21
00400000 l       *ABS*	00000000 EXTI_CPUIMR1_MR22
00800000 l       *ABS*	00000000 EXTI_CPUIMR1_MR23
01000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR24
02000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR25
04000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR26
08000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR27
10000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR28
20000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR29
40000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR30
80000000 l       *ABS*	00000000 EXTI_CPUIMR1_MR31
58000084 l       *ABS*	00000000 EXTI_CPUEMR1
00000001 l       *ABS*	00000000 EXTI_CPUEMR1_MR0
00000002 l       *ABS*	00000000 EXTI_CPUEMR1_MR1
00000004 l       *ABS*	00000000 EXTI_CPUEMR1_MR2
00000008 l       *ABS*	00000000 EXTI_CPUEMR1_MR3
00000010 l       *ABS*	00000000 EXTI_CPUEMR1_MR4
00000020 l       *ABS*	00000000 EXTI_CPUEMR1_MR5
00000040 l       *ABS*	00000000 EXTI_CPUEMR1_MR6
00000080 l       *ABS*	00000000 EXTI_CPUEMR1_MR7
00000100 l       *ABS*	00000000 EXTI_CPUEMR1_MR8
00000200 l       *ABS*	00000000 EXTI_CPUEMR1_MR9
00000400 l       *ABS*	00000000 EXTI_CPUEMR1_MR10
00000800 l       *ABS*	00000000 EXTI_CPUEMR1_MR11
00001000 l       *ABS*	00000000 EXTI_CPUEMR1_MR12
00002000 l       *ABS*	00000000 EXTI_CPUEMR1_MR13
00004000 l       *ABS*	00000000 EXTI_CPUEMR1_MR14
00008000 l       *ABS*	00000000 EXTI_CPUEMR1_MR15
00010000 l       *ABS*	00000000 EXTI_CPUEMR1_MR16
00020000 l       *ABS*	00000000 EXTI_CPUEMR1_MR17
00040000 l       *ABS*	00000000 EXTI_CPUEMR1_MR18
00080000 l       *ABS*	00000000 EXTI_CPUEMR1_MR19
00100000 l       *ABS*	00000000 EXTI_CPUEMR1_MR20
00200000 l       *ABS*	00000000 EXTI_CPUEMR1_MR21
00400000 l       *ABS*	00000000 EXTI_CPUEMR1_MR22
00800000 l       *ABS*	00000000 EXTI_CPUEMR1_MR23
01000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR24
02000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR25
04000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR26
08000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR27
10000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR28
20000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR29
40000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR30
80000000 l       *ABS*	00000000 EXTI_CPUEMR1_MR31
58000088 l       *ABS*	00000000 EXTI_CPUPR1
00000001 l       *ABS*	00000000 EXTI_CPUPR1_PR0
00000002 l       *ABS*	00000000 EXTI_CPUPR1_PR1
00000004 l       *ABS*	00000000 EXTI_CPUPR1_PR2
00000008 l       *ABS*	00000000 EXTI_CPUPR1_PR3
00000010 l       *ABS*	00000000 EXTI_CPUPR1_PR4
00000020 l       *ABS*	00000000 EXTI_CPUPR1_PR5
00000040 l       *ABS*	00000000 EXTI_CPUPR1_PR6
00000080 l       *ABS*	00000000 EXTI_CPUPR1_PR7
00000100 l       *ABS*	00000000 EXTI_CPUPR1_PR8
00000200 l       *ABS*	00000000 EXTI_CPUPR1_PR9
00000400 l       *ABS*	00000000 EXTI_CPUPR1_PR10
00000800 l       *ABS*	00000000 EXTI_CPUPR1_PR11
00001000 l       *ABS*	00000000 EXTI_CPUPR1_PR12
00002000 l       *ABS*	00000000 EXTI_CPUPR1_PR13
00004000 l       *ABS*	00000000 EXTI_CPUPR1_PR14
00008000 l       *ABS*	00000000 EXTI_CPUPR1_PR15
00010000 l       *ABS*	00000000 EXTI_CPUPR1_PR16
00020000 l       *ABS*	00000000 EXTI_CPUPR1_PR17
00040000 l       *ABS*	00000000 EXTI_CPUPR1_PR18
00080000 l       *ABS*	00000000 EXTI_CPUPR1_PR19
00100000 l       *ABS*	00000000 EXTI_CPUPR1_PR20
00200000 l       *ABS*	00000000 EXTI_CPUPR1_PR21
58000090 l       *ABS*	00000000 EXTI_CPUIMR2
00000001 l       *ABS*	00000000 EXTI_CPUIMR2_MR0
00000002 l       *ABS*	00000000 EXTI_CPUIMR2_MR1
00000004 l       *ABS*	00000000 EXTI_CPUIMR2_MR2
00000008 l       *ABS*	00000000 EXTI_CPUIMR2_MR3
00000010 l       *ABS*	00000000 EXTI_CPUIMR2_MR4
00000020 l       *ABS*	00000000 EXTI_CPUIMR2_MR5
00000040 l       *ABS*	00000000 EXTI_CPUIMR2_MR6
00000080 l       *ABS*	00000000 EXTI_CPUIMR2_MR7
00000100 l       *ABS*	00000000 EXTI_CPUIMR2_MR8
00000200 l       *ABS*	00000000 EXTI_CPUIMR2_MR9
00000400 l       *ABS*	00000000 EXTI_CPUIMR2_MR10
00000800 l       *ABS*	00000000 EXTI_CPUIMR2_MR11
00001000 l       *ABS*	00000000 EXTI_CPUIMR2_MR12
00004000 l       *ABS*	00000000 EXTI_CPUIMR2_MR14
00008000 l       *ABS*	00000000 EXTI_CPUIMR2_MR15
00010000 l       *ABS*	00000000 EXTI_CPUIMR2_MR16
00020000 l       *ABS*	00000000 EXTI_CPUIMR2_MR17
00040000 l       *ABS*	00000000 EXTI_CPUIMR2_MR18
00080000 l       *ABS*	00000000 EXTI_CPUIMR2_MR19
00100000 l       *ABS*	00000000 EXTI_CPUIMR2_MR20
00200000 l       *ABS*	00000000 EXTI_CPUIMR2_MR21
00400000 l       *ABS*	00000000 EXTI_CPUIMR2_MR22
00800000 l       *ABS*	00000000 EXTI_CPUIMR2_MR23
01000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR24
02000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR25
04000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR26
08000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR27
10000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR28
20000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR29
40000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR30
80000000 l       *ABS*	00000000 EXTI_CPUIMR2_MR31
58000094 l       *ABS*	00000000 EXTI_CPUEMR2
00000001 l       *ABS*	00000000 EXTI_CPUEMR2_MR32
00000002 l       *ABS*	00000000 EXTI_CPUEMR2_MR33
00000004 l       *ABS*	00000000 EXTI_CPUEMR2_MR34
00000008 l       *ABS*	00000000 EXTI_CPUEMR2_MR35
00000010 l       *ABS*	00000000 EXTI_CPUEMR2_MR36
00000020 l       *ABS*	00000000 EXTI_CPUEMR2_MR37
00000040 l       *ABS*	00000000 EXTI_CPUEMR2_MR38
00000080 l       *ABS*	00000000 EXTI_CPUEMR2_MR39
00000100 l       *ABS*	00000000 EXTI_CPUEMR2_MR40
00000200 l       *ABS*	00000000 EXTI_CPUEMR2_MR41
00000400 l       *ABS*	00000000 EXTI_CPUEMR2_MR42
00000800 l       *ABS*	00000000 EXTI_CPUEMR2_MR43
00001000 l       *ABS*	00000000 EXTI_CPUEMR2_MR44
00004000 l       *ABS*	00000000 EXTI_CPUEMR2_MR46
00008000 l       *ABS*	00000000 EXTI_CPUEMR2_MR47
00010000 l       *ABS*	00000000 EXTI_CPUEMR2_MR48
00020000 l       *ABS*	00000000 EXTI_CPUEMR2_MR49
00040000 l       *ABS*	00000000 EXTI_CPUEMR2_MR50
00080000 l       *ABS*	00000000 EXTI_CPUEMR2_MR51
00100000 l       *ABS*	00000000 EXTI_CPUEMR2_MR52
00200000 l       *ABS*	00000000 EXTI_CPUEMR2_MR53
00400000 l       *ABS*	00000000 EXTI_CPUEMR2_MR54
00800000 l       *ABS*	00000000 EXTI_CPUEMR2_MR55
01000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR56
02000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR57
04000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR58
08000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR59
10000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR60
20000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR61
40000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR62
80000000 l       *ABS*	00000000 EXTI_CPUEMR2_MR63
58000098 l       *ABS*	00000000 EXTI_CPUPR2
00020000 l       *ABS*	00000000 EXTI_CPUPR2_PR49
00080000 l       *ABS*	00000000 EXTI_CPUPR2_PR51
580000a0 l       *ABS*	00000000 EXTI_CPUIMR3
00000001 l       *ABS*	00000000 EXTI_CPUIMR3_MR64
00000002 l       *ABS*	00000000 EXTI_CPUIMR3_MR65
00000004 l       *ABS*	00000000 EXTI_CPUIMR3_MR66
00000008 l       *ABS*	00000000 EXTI_CPUIMR3_MR67
00000010 l       *ABS*	00000000 EXTI_CPUIMR3_MR68
00000020 l       *ABS*	00000000 EXTI_CPUIMR3_MR69
00000040 l       *ABS*	00000000 EXTI_CPUIMR3_MR70
00000080 l       *ABS*	00000000 EXTI_CPUIMR3_MR71
00000100 l       *ABS*	00000000 EXTI_CPUIMR3_MR72
00000200 l       *ABS*	00000000 EXTI_CPUIMR3_MR73
00000400 l       *ABS*	00000000 EXTI_CPUIMR3_MR74
00000800 l       *ABS*	00000000 EXTI_CPUIMR3_MR75
00001000 l       *ABS*	00000000 EXTI_CPUIMR3_MR76
00002000 l       *ABS*	00000000 EXTI_CPUIMR3_MR77
00004000 l       *ABS*	00000000 EXTI_CPUIMR3_MR78
00008000 l       *ABS*	00000000 EXTI_CPUIMR3_MR79
00010000 l       *ABS*	00000000 EXTI_CPUIMR3_MR80
00040000 l       *ABS*	00000000 EXTI_CPUIMR3_MR82
00100000 l       *ABS*	00000000 EXTI_CPUIMR3_MR84
00200000 l       *ABS*	00000000 EXTI_CPUIMR3_MR85
00400000 l       *ABS*	00000000 EXTI_CPUIMR3_MR86
00800000 l       *ABS*	00000000 EXTI_CPUIMR3_MR87
01000000 l       *ABS*	00000000 EXTI_CPUIMR3_MR88
580000a4 l       *ABS*	00000000 EXTI_CPUEMR3
00000001 l       *ABS*	00000000 EXTI_CPUEMR3_MR64
00000002 l       *ABS*	00000000 EXTI_CPUEMR3_MR65
00000004 l       *ABS*	00000000 EXTI_CPUEMR3_MR66
00000008 l       *ABS*	00000000 EXTI_CPUEMR3_MR67
00000010 l       *ABS*	00000000 EXTI_CPUEMR3_MR68
00000020 l       *ABS*	00000000 EXTI_CPUEMR3_MR69
00000040 l       *ABS*	00000000 EXTI_CPUEMR3_MR70
00000080 l       *ABS*	00000000 EXTI_CPUEMR3_MR71
00000100 l       *ABS*	00000000 EXTI_CPUEMR3_MR72
00000200 l       *ABS*	00000000 EXTI_CPUEMR3_MR73
00000400 l       *ABS*	00000000 EXTI_CPUEMR3_MR74
00000800 l       *ABS*	00000000 EXTI_CPUEMR3_MR75
00001000 l       *ABS*	00000000 EXTI_CPUEMR3_MR76
00002000 l       *ABS*	00000000 EXTI_CPUEMR3_MR77
00004000 l       *ABS*	00000000 EXTI_CPUEMR3_MR78
00008000 l       *ABS*	00000000 EXTI_CPUEMR3_MR79
00010000 l       *ABS*	00000000 EXTI_CPUEMR3_MR80
00040000 l       *ABS*	00000000 EXTI_CPUEMR3_MR82
00100000 l       *ABS*	00000000 EXTI_CPUEMR3_MR84
00200000 l       *ABS*	00000000 EXTI_CPUEMR3_MR85
00400000 l       *ABS*	00000000 EXTI_CPUEMR3_MR86
00800000 l       *ABS*	00000000 EXTI_CPUEMR3_MR87
01000000 l       *ABS*	00000000 EXTI_CPUEMR3_MR88
580000a8 l       *ABS*	00000000 EXTI_CPUPR3
00040000 l       *ABS*	00000000 EXTI_CPUPR3_PR82
00100000 l       *ABS*	00000000 EXTI_CPUPR3_PR84
00200000 l       *ABS*	00000000 EXTI_CPUPR3_PR85
00400000 l       *ABS*	00000000 EXTI_CPUPR3_PR86
52008000 l       *ABS*	00000000 DELAY_Block_SDMMC1_BASE
52008000 l       *ABS*	00000000 DELAY_Block_SDMMC1_CR
00000001 l       *ABS*	00000000 DELAY_Block_SDMMC1_CR_DEN
00000002 l       *ABS*	00000000 DELAY_Block_SDMMC1_CR_SEN
52008004 l       *ABS*	00000000 DELAY_Block_SDMMC1_CFGR
00000000 l       *ABS*	00000000 DELAY_Block_SDMMC1_CFGR_SEL_Shift
00000008 l       *ABS*	00000000 DELAY_Block_SDMMC1_CFGR_UNIT_Shift
00000010 l       *ABS*	00000000 DELAY_Block_SDMMC1_CFGR_LNG_Shift
80000000 l       *ABS*	00000000 DELAY_Block_SDMMC1_CFGR_LNGF
52006000 l       *ABS*	00000000 DELAY_Block_QUADSPI_BASE
52006000 l       *ABS*	00000000 DELAY_Block_QUADSPI_CR
00000001 l       *ABS*	00000000 DELAY_Block_QUADSPI_CR_DEN
00000002 l       *ABS*	00000000 DELAY_Block_QUADSPI_CR_SEN
52006004 l       *ABS*	00000000 DELAY_Block_QUADSPI_CFGR
00000000 l       *ABS*	00000000 DELAY_Block_QUADSPI_CFGR_SEL_Shift
00000008 l       *ABS*	00000000 DELAY_Block_QUADSPI_CFGR_UNIT_Shift
00000010 l       *ABS*	00000000 DELAY_Block_QUADSPI_CFGR_LNG_Shift
80000000 l       *ABS*	00000000 DELAY_Block_QUADSPI_CFGR_LNGF
48022800 l       *ABS*	00000000 DELAY_Block_SDMMC2_BASE
48022800 l       *ABS*	00000000 DELAY_Block_SDMMC2_CR
00000001 l       *ABS*	00000000 DELAY_Block_SDMMC2_CR_DEN
00000002 l       *ABS*	00000000 DELAY_Block_SDMMC2_CR_SEN
48022804 l       *ABS*	00000000 DELAY_Block_SDMMC2_CFGR
00000000 l       *ABS*	00000000 DELAY_Block_SDMMC2_CFGR_SEL_Shift
00000008 l       *ABS*	00000000 DELAY_Block_SDMMC2_CFGR_UNIT_Shift
00000010 l       *ABS*	00000000 DELAY_Block_SDMMC2_CFGR_LNG_Shift
80000000 l       *ABS*	00000000 DELAY_Block_SDMMC2_CFGR_LNGF
52002000 l       *ABS*	00000000 Flash_BASE
52002000 l       *ABS*	00000000 Flash_ACR
00000000 l       *ABS*	00000000 Flash_ACR_LATENCY_Shift
00000004 l       *ABS*	00000000 Flash_ACR_WRHIGHFREQ_Shift
52002100 l       *ABS*	00000000 Flash_ACR_
00000000 l       *ABS*	00000000 Flash_ACR__LATENCY_Shift
00000004 l       *ABS*	00000000 Flash_ACR__WRHIGHFREQ_Shift
52002004 l       *ABS*	00000000 Flash_KEYR1
00000000 l       *ABS*	00000000 Flash_KEYR1_KEYR1_Shift
52002008 l       *ABS*	00000000 Flash_OPTKEYR
00000000 l       *ABS*	00000000 Flash_OPTKEYR_OPTKEYR_Shift
52002108 l       *ABS*	00000000 Flash_OPTKEYR_
00000000 l       *ABS*	00000000 Flash_OPTKEYR__OPTKEYR_Shift
5200200c l       *ABS*	00000000 Flash_CR1
00000001 l       *ABS*	00000000 Flash_CR1_LOCK1
00000002 l       *ABS*	00000000 Flash_CR1_PG1
00000004 l       *ABS*	00000000 Flash_CR1_SER1
00000008 l       *ABS*	00000000 Flash_CR1_BER1
00000004 l       *ABS*	00000000 Flash_CR1_PSIZE1_Shift
00000040 l       *ABS*	00000000 Flash_CR1_FW1
00000080 l       *ABS*	00000000 Flash_CR1_START1
00000008 l       *ABS*	00000000 Flash_CR1_SNB1_Shift
00008000 l       *ABS*	00000000 Flash_CR1_CRC_EN
00010000 l       *ABS*	00000000 Flash_CR1_EOPIE1
00020000 l       *ABS*	00000000 Flash_CR1_WRPERRIE1
00040000 l       *ABS*	00000000 Flash_CR1_PGSERRIE1
00080000 l       *ABS*	00000000 Flash_CR1_STRBERRIE1
00200000 l       *ABS*	00000000 Flash_CR1_INCERRIE1
00400000 l       *ABS*	00000000 Flash_CR1_OPERRIE1
00800000 l       *ABS*	00000000 Flash_CR1_RDPERRIE1
01000000 l       *ABS*	00000000 Flash_CR1_RDSERRIE1
02000000 l       *ABS*	00000000 Flash_CR1_SNECCERRIE1
04000000 l       *ABS*	00000000 Flash_CR1_DBECCERRIE1
08000000 l       *ABS*	00000000 Flash_CR1_CRCENDIE1
52002010 l       *ABS*	00000000 Flash_SR1
00000001 l       *ABS*	00000000 Flash_SR1_BSY1
00000002 l       *ABS*	00000000 Flash_SR1_WBNE1
00000004 l       *ABS*	00000000 Flash_SR1_QW1
00000008 l       *ABS*	00000000 Flash_SR1_CRC_BUSY1
00010000 l       *ABS*	00000000 Flash_SR1_EOP1
00020000 l       *ABS*	00000000 Flash_SR1_WRPERR1
00040000 l       *ABS*	00000000 Flash_SR1_PGSERR1
00080000 l       *ABS*	00000000 Flash_SR1_STRBERR1
00200000 l       *ABS*	00000000 Flash_SR1_INCERR1
00400000 l       *ABS*	00000000 Flash_SR1_OPERR1
00800000 l       *ABS*	00000000 Flash_SR1_RDPERR1
01000000 l       *ABS*	00000000 Flash_SR1_RDSERR1
02000000 l       *ABS*	00000000 Flash_SR1_SNECCERR11
04000000 l       *ABS*	00000000 Flash_SR1_DBECCERR1
08000000 l       *ABS*	00000000 Flash_SR1_CRCEND1
52002014 l       *ABS*	00000000 Flash_CCR1
00010000 l       *ABS*	00000000 Flash_CCR1_CLR_EOP1
00020000 l       *ABS*	00000000 Flash_CCR1_CLR_WRPERR1
00040000 l       *ABS*	00000000 Flash_CCR1_CLR_PGSERR1
00080000 l       *ABS*	00000000 Flash_CCR1_CLR_STRBERR1
00200000 l       *ABS*	00000000 Flash_CCR1_CLR_INCERR1
00400000 l       *ABS*	00000000 Flash_CCR1_CLR_OPERR1
00800000 l       *ABS*	00000000 Flash_CCR1_CLR_RDPERR1
01000000 l       *ABS*	00000000 Flash_CCR1_CLR_RDSERR1
02000000 l       *ABS*	00000000 Flash_CCR1_CLR_SNECCERR1
04000000 l       *ABS*	00000000 Flash_CCR1_CLR_DBECCERR1
08000000 l       *ABS*	00000000 Flash_CCR1_CLR_CRCEND1
52002018 l       *ABS*	00000000 Flash_OPTCR
00000001 l       *ABS*	00000000 Flash_OPTCR_OPTLOCK
00000002 l       *ABS*	00000000 Flash_OPTCR_OPTSTART
00000010 l       *ABS*	00000000 Flash_OPTCR_MER
40000000 l       *ABS*	00000000 Flash_OPTCR_OPTCHANGEERRIE
80000000 l       *ABS*	00000000 Flash_OPTCR_SWAP_BANK
52002118 l       *ABS*	00000000 Flash_OPTCR_
00000001 l       *ABS*	00000000 Flash_OPTCR__OPTLOCK
00000002 l       *ABS*	00000000 Flash_OPTCR__OPTSTART
00000010 l       *ABS*	00000000 Flash_OPTCR__MER
40000000 l       *ABS*	00000000 Flash_OPTCR__OPTCHANGEERRIE
80000000 l       *ABS*	00000000 Flash_OPTCR__SWAP_BANK
5200211c l       *ABS*	00000000 Flash_OPTSR_CUR_
00000001 l       *ABS*	00000000 Flash_OPTSR_CUR__OPT_BUSY
00000002 l       *ABS*	00000000 Flash_OPTSR_CUR__BOR_LEV_Shift
00000010 l       *ABS*	00000000 Flash_OPTSR_CUR__IWDG1_HW
00000040 l       *ABS*	00000000 Flash_OPTSR_CUR__nRST_STOP_D1
00000080 l       *ABS*	00000000 Flash_OPTSR_CUR__nRST_STBY_D1
00000008 l       *ABS*	00000000 Flash_OPTSR_CUR__RDP_Shift
00020000 l       *ABS*	00000000 Flash_OPTSR_CUR__FZ_IWDG_STOP
00040000 l       *ABS*	00000000 Flash_OPTSR_CUR__FZ_IWDG_SDBY
00000013 l       *ABS*	00000000 Flash_OPTSR_CUR__ST_RAM_SIZE_Shift
00200000 l       *ABS*	00000000 Flash_OPTSR_CUR__SECURITY
04000000 l       *ABS*	00000000 Flash_OPTSR_CUR__RSS1
10000000 l       *ABS*	00000000 Flash_OPTSR_CUR__PERSO_OK
20000000 l       *ABS*	00000000 Flash_OPTSR_CUR__IO_HSLV
40000000 l       *ABS*	00000000 Flash_OPTSR_CUR__OPTCHANGEERR
80000000 l       *ABS*	00000000 Flash_OPTSR_CUR__SWAP_BANK_OPT
5200201c l       *ABS*	00000000 Flash_OPTSR_CUR
00000001 l       *ABS*	00000000 Flash_OPTSR_CUR_OPT_BUSY
00000002 l       *ABS*	00000000 Flash_OPTSR_CUR_BOR_LEV_Shift
00000010 l       *ABS*	00000000 Flash_OPTSR_CUR_IWDG1_HW
00000040 l       *ABS*	00000000 Flash_OPTSR_CUR_nRST_STOP_D1
00000080 l       *ABS*	00000000 Flash_OPTSR_CUR_nRST_STBY_D1
00000008 l       *ABS*	00000000 Flash_OPTSR_CUR_RDP_Shift
00020000 l       *ABS*	00000000 Flash_OPTSR_CUR_FZ_IWDG_STOP
00040000 l       *ABS*	00000000 Flash_OPTSR_CUR_FZ_IWDG_SDBY
00000013 l       *ABS*	00000000 Flash_OPTSR_CUR_ST_RAM_SIZE_Shift
00200000 l       *ABS*	00000000 Flash_OPTSR_CUR_SECURITY
04000000 l       *ABS*	00000000 Flash_OPTSR_CUR_RSS1
10000000 l       *ABS*	00000000 Flash_OPTSR_CUR_PERSO_OK
20000000 l       *ABS*	00000000 Flash_OPTSR_CUR_IO_HSLV
40000000 l       *ABS*	00000000 Flash_OPTSR_CUR_OPTCHANGEERR
80000000 l       *ABS*	00000000 Flash_OPTSR_CUR_SWAP_BANK_OPT
52002020 l       *ABS*	00000000 Flash_OPTSR_PRG
00000002 l       *ABS*	00000000 Flash_OPTSR_PRG_BOR_LEV_Shift
00000010 l       *ABS*	00000000 Flash_OPTSR_PRG_IWDG1_HW
00000040 l       *ABS*	00000000 Flash_OPTSR_PRG_nRST_STOP_D1
00000080 l       *ABS*	00000000 Flash_OPTSR_PRG_nRST_STBY_D1
00000008 l       *ABS*	00000000 Flash_OPTSR_PRG_RDP_Shift
00020000 l       *ABS*	00000000 Flash_OPTSR_PRG_FZ_IWDG_STOP
00040000 l       *ABS*	00000000 Flash_OPTSR_PRG_FZ_IWDG_SDBY
00000013 l       *ABS*	00000000 Flash_OPTSR_PRG_ST_RAM_SIZE_Shift
00200000 l       *ABS*	00000000 Flash_OPTSR_PRG_SECURITY
04000000 l       *ABS*	00000000 Flash_OPTSR_PRG_RSS1
08000000 l       *ABS*	00000000 Flash_OPTSR_PRG_RSS2
20000000 l       *ABS*	00000000 Flash_OPTSR_PRG_IO_HSLV
80000000 l       *ABS*	00000000 Flash_OPTSR_PRG_SWAP_BANK_OPT
52002120 l       *ABS*	00000000 Flash_OPTSR_PRG_
00000002 l       *ABS*	00000000 Flash_OPTSR_PRG__BOR_LEV_Shift
00000010 l       *ABS*	00000000 Flash_OPTSR_PRG__IWDG1_HW
00000040 l       *ABS*	00000000 Flash_OPTSR_PRG__nRST_STOP_D1
00000080 l       *ABS*	00000000 Flash_OPTSR_PRG__nRST_STBY_D1
00000008 l       *ABS*	00000000 Flash_OPTSR_PRG__RDP_Shift
00020000 l       *ABS*	00000000 Flash_OPTSR_PRG__FZ_IWDG_STOP
00040000 l       *ABS*	00000000 Flash_OPTSR_PRG__FZ_IWDG_SDBY
00000013 l       *ABS*	00000000 Flash_OPTSR_PRG__ST_RAM_SIZE_Shift
00200000 l       *ABS*	00000000 Flash_OPTSR_PRG__SECURITY
04000000 l       *ABS*	00000000 Flash_OPTSR_PRG__RSS1
08000000 l       *ABS*	00000000 Flash_OPTSR_PRG__RSS2
20000000 l       *ABS*	00000000 Flash_OPTSR_PRG__IO_HSLV
80000000 l       *ABS*	00000000 Flash_OPTSR_PRG__SWAP_BANK_OPT
52002124 l       *ABS*	00000000 Flash_OPTCCR_
40000000 l       *ABS*	00000000 Flash_OPTCCR__CLR_OPTCHANGEERR
52002024 l       *ABS*	00000000 Flash_OPTCCR
40000000 l       *ABS*	00000000 Flash_OPTCCR_CLR_OPTCHANGEERR
52002028 l       *ABS*	00000000 Flash_PRAR_CUR1
00000000 l       *ABS*	00000000 Flash_PRAR_CUR1_PROT_AREA_START1_Shift
00000010 l       *ABS*	00000000 Flash_PRAR_CUR1_PROT_AREA_END1_Shift
80000000 l       *ABS*	00000000 Flash_PRAR_CUR1_DMEP1
5200202c l       *ABS*	00000000 Flash_PRAR_PRG1
00000000 l       *ABS*	00000000 Flash_PRAR_PRG1_PROT_AREA_START1_Shift
00000010 l       *ABS*	00000000 Flash_PRAR_PRG1_PROT_AREA_END1_Shift
80000000 l       *ABS*	00000000 Flash_PRAR_PRG1_DMEP1
52002030 l       *ABS*	00000000 Flash_SCAR_CUR1
00000000 l       *ABS*	00000000 Flash_SCAR_CUR1_SEC_AREA_START1_Shift
00000010 l       *ABS*	00000000 Flash_SCAR_CUR1_SEC_AREA_END1_Shift
80000000 l       *ABS*	00000000 Flash_SCAR_CUR1_DMES1
52002034 l       *ABS*	00000000 Flash_SCAR_PRG1
00000000 l       *ABS*	00000000 Flash_SCAR_PRG1_SEC_AREA_START1_Shift
00000010 l       *ABS*	00000000 Flash_SCAR_PRG1_SEC_AREA_END1_Shift
80000000 l       *ABS*	00000000 Flash_SCAR_PRG1_DMES1
52002038 l       *ABS*	00000000 Flash_WPSN_CUR1R
00000000 l       *ABS*	00000000 Flash_WPSN_CUR1R_WRPSn1_Shift
5200203c l       *ABS*	00000000 Flash_WPSN_PRG1R
00000000 l       *ABS*	00000000 Flash_WPSN_PRG1R_WRPSn1_Shift
52002040 l       *ABS*	00000000 Flash_BOOT_CURR
00000000 l       *ABS*	00000000 Flash_BOOT_CURR_BOOT_ADD0_Shift
00000010 l       *ABS*	00000000 Flash_BOOT_CURR_BOOT_ADD1_Shift
52002044 l       *ABS*	00000000 Flash_BOOT_PRGR
00000000 l       *ABS*	00000000 Flash_BOOT_PRGR_BOOT_ADD0_Shift
00000010 l       *ABS*	00000000 Flash_BOOT_PRGR_BOOT_ADD1_Shift
52002050 l       *ABS*	00000000 Flash_CRCCR1
00000000 l       *ABS*	00000000 Flash_CRCCR1_CRC_SECT_Shift
00000080 l       *ABS*	00000000 Flash_CRCCR1_ALL_BANK
00000100 l       *ABS*	00000000 Flash_CRCCR1_CRC_BY_SECT
00000200 l       *ABS*	00000000 Flash_CRCCR1_ADD_SECT
00000400 l       *ABS*	00000000 Flash_CRCCR1_CLEAN_SECT
00010000 l       *ABS*	00000000 Flash_CRCCR1_START_CRC
00020000 l       *ABS*	00000000 Flash_CRCCR1_CLEAN_CRC
00000014 l       *ABS*	00000000 Flash_CRCCR1_CRC_BURST_Shift
52002054 l       *ABS*	00000000 Flash_CRCSADD1R
00000000 l       *ABS*	00000000 Flash_CRCSADD1R_CRC_START_ADDR_Shift
52002058 l       *ABS*	00000000 Flash_CRCEADD1R
00000000 l       *ABS*	00000000 Flash_CRCEADD1R_CRC_END_ADDR_Shift
5200205c l       *ABS*	00000000 Flash_CRCDATAR
00000000 l       *ABS*	00000000 Flash_CRCDATAR_CRC_DATA_Shift
52002060 l       *ABS*	00000000 Flash_ECC_FA1R
00000000 l       *ABS*	00000000 Flash_ECC_FA1R_FAIL_ECC_ADDR1_Shift
52002104 l       *ABS*	00000000 Flash_KEYR2
00000000 l       *ABS*	00000000 Flash_KEYR2_KEYR2_Shift
5200210c l       *ABS*	00000000 Flash_CR2
00000001 l       *ABS*	00000000 Flash_CR2_LOCK2
00000002 l       *ABS*	00000000 Flash_CR2_PG2
00000004 l       *ABS*	00000000 Flash_CR2_SER2
00000008 l       *ABS*	00000000 Flash_CR2_BER2
00000004 l       *ABS*	00000000 Flash_CR2_PSIZE2_Shift
00000040 l       *ABS*	00000000 Flash_CR2_FW2
00000080 l       *ABS*	00000000 Flash_CR2_START2
00000008 l       *ABS*	00000000 Flash_CR2_SNB2_Shift
00008000 l       *ABS*	00000000 Flash_CR2_CRC_EN
00010000 l       *ABS*	00000000 Flash_CR2_EOPIE2
00020000 l       *ABS*	00000000 Flash_CR2_WRPERRIE2
00040000 l       *ABS*	00000000 Flash_CR2_PGSERRIE2
00080000 l       *ABS*	00000000 Flash_CR2_STRBERRIE2
00200000 l       *ABS*	00000000 Flash_CR2_INCERRIE2
00400000 l       *ABS*	00000000 Flash_CR2_OPERRIE2
00800000 l       *ABS*	00000000 Flash_CR2_RDPERRIE2
01000000 l       *ABS*	00000000 Flash_CR2_RDSERRIE2
02000000 l       *ABS*	00000000 Flash_CR2_SNECCERRIE2
04000000 l       *ABS*	00000000 Flash_CR2_DBECCERRIE2
08000000 l       *ABS*	00000000 Flash_CR2_CRCENDIE2
52002110 l       *ABS*	00000000 Flash_SR2
00000001 l       *ABS*	00000000 Flash_SR2_BSY2
00000002 l       *ABS*	00000000 Flash_SR2_WBNE2
00000004 l       *ABS*	00000000 Flash_SR2_QW2
00000008 l       *ABS*	00000000 Flash_SR2_CRC_BUSY2
00010000 l       *ABS*	00000000 Flash_SR2_EOP2
00020000 l       *ABS*	00000000 Flash_SR2_WRPERR2
00040000 l       *ABS*	00000000 Flash_SR2_PGSERR2
00080000 l       *ABS*	00000000 Flash_SR2_STRBERR2
00200000 l       *ABS*	00000000 Flash_SR2_INCERR2
00400000 l       *ABS*	00000000 Flash_SR2_OPERR2
00800000 l       *ABS*	00000000 Flash_SR2_RDPERR2
01000000 l       *ABS*	00000000 Flash_SR2_RDSERR2
02000000 l       *ABS*	00000000 Flash_SR2_SNECCERR2
04000000 l       *ABS*	00000000 Flash_SR2_DBECCERR2
08000000 l       *ABS*	00000000 Flash_SR2_CRCEND2
52002114 l       *ABS*	00000000 Flash_CCR2
00010000 l       *ABS*	00000000 Flash_CCR2_CLR_EOP2
00020000 l       *ABS*	00000000 Flash_CCR2_CLR_WRPERR2
00040000 l       *ABS*	00000000 Flash_CCR2_CLR_PGSERR2
00080000 l       *ABS*	00000000 Flash_CCR2_CLR_STRBERR2
00200000 l       *ABS*	00000000 Flash_CCR2_CLR_INCERR2
00400000 l       *ABS*	00000000 Flash_CCR2_CLR_OPERR2
00800000 l       *ABS*	00000000 Flash_CCR2_CLR_RDPERR2
01000000 l       *ABS*	00000000 Flash_CCR2_CLR_RDSERR1
02000000 l       *ABS*	00000000 Flash_CCR2_CLR_SNECCERR2
04000000 l       *ABS*	00000000 Flash_CCR2_CLR_DBECCERR1
08000000 l       *ABS*	00000000 Flash_CCR2_CLR_CRCEND2
52002128 l       *ABS*	00000000 Flash_PRAR_CUR2
00000000 l       *ABS*	00000000 Flash_PRAR_CUR2_PROT_AREA_START2_Shift
00000010 l       *ABS*	00000000 Flash_PRAR_CUR2_PROT_AREA_END2_Shift
80000000 l       *ABS*	00000000 Flash_PRAR_CUR2_DMEP2
5200202c l       *ABS*	00000000 Flash_PRAR_PRG2
00000000 l       *ABS*	00000000 Flash_PRAR_PRG2_PROT_AREA_START2_Shift
00000010 l       *ABS*	00000000 Flash_PRAR_PRG2_PROT_AREA_END2_Shift
80000000 l       *ABS*	00000000 Flash_PRAR_PRG2_DMEP2
52002130 l       *ABS*	00000000 Flash_SCAR_CUR2
00000000 l       *ABS*	00000000 Flash_SCAR_CUR2_SEC_AREA_START2_Shift
00000010 l       *ABS*	00000000 Flash_SCAR_CUR2_SEC_AREA_END2_Shift
80000000 l       *ABS*	00000000 Flash_SCAR_CUR2_DMES2
52002134 l       *ABS*	00000000 Flash_SCAR_PRG2
00000000 l       *ABS*	00000000 Flash_SCAR_PRG2_SEC_AREA_START2_Shift
00000010 l       *ABS*	00000000 Flash_SCAR_PRG2_SEC_AREA_END2_Shift
80000000 l       *ABS*	00000000 Flash_SCAR_PRG2_DMES2
52002138 l       *ABS*	00000000 Flash_WPSN_CUR2R
00000000 l       *ABS*	00000000 Flash_WPSN_CUR2R_WRPSn2_Shift
5200213c l       *ABS*	00000000 Flash_WPSN_PRG2R
00000000 l       *ABS*	00000000 Flash_WPSN_PRG2R_WRPSn2_Shift
52002150 l       *ABS*	00000000 Flash_CRCCR2
00000000 l       *ABS*	00000000 Flash_CRCCR2_CRC_SECT_Shift
00000080 l       *ABS*	00000000 Flash_CRCCR2_ALL_BANK
00000100 l       *ABS*	00000000 Flash_CRCCR2_CRC_BY_SECT
00000200 l       *ABS*	00000000 Flash_CRCCR2_ADD_SECT
00000400 l       *ABS*	00000000 Flash_CRCCR2_CLEAN_SECT
00010000 l       *ABS*	00000000 Flash_CRCCR2_START_CRC
00020000 l       *ABS*	00000000 Flash_CRCCR2_CLEAN_CRC
00000014 l       *ABS*	00000000 Flash_CRCCR2_CRC_BURST_Shift
52002154 l       *ABS*	00000000 Flash_CRCSADD2R
00000000 l       *ABS*	00000000 Flash_CRCSADD2R_CRC_START_ADDR_Shift
52002158 l       *ABS*	00000000 Flash_CRCEADD2R
00000000 l       *ABS*	00000000 Flash_CRCEADD2R_CRC_END_ADDR_Shift
52002160 l       *ABS*	00000000 Flash_ECC_FA2R
00000000 l       *ABS*	00000000 Flash_ECC_FA2R_FAIL_ECC_ADDR2_Shift
51000000 l       *ABS*	00000000 AXI_BASE
51001fd0 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_4
00000000 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_4_JEP106CON_Shift
00000004 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_4_KCOUNT4_Shift
51001fe0 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_0
00000000 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_0_PARTNUM_Shift
51001fe4 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_1
00000000 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_1_PARTNUM_Shift
00000004 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_1_JEP106I_Shift
51001fe8 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_2
00000000 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_2_JEP106ID_Shift
00000008 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_2_JEDEC
00000004 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_2_REVISION_Shift
51001fec l       *ABS*	00000000 AXI_AXI_PERIPH_ID_3
00000000 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_3_CUST_MOD_NUM_Shift
00000004 l       *ABS*	00000000 AXI_AXI_PERIPH_ID_3_REV_AND_Shift
51001ff0 l       *ABS*	00000000 AXI_AXI_COMP_ID_0
00000000 l       *ABS*	00000000 AXI_AXI_COMP_ID_0_PREAMBLE_Shift
51001ff4 l       *ABS*	00000000 AXI_AXI_COMP_ID_1
00000000 l       *ABS*	00000000 AXI_AXI_COMP_ID_1_PREAMBLE_Shift
00000004 l       *ABS*	00000000 AXI_AXI_COMP_ID_1_CLASS_Shift
51001ff8 l       *ABS*	00000000 AXI_AXI_COMP_ID_2
00000000 l       *ABS*	00000000 AXI_AXI_COMP_ID_2_PREAMBLE_Shift
51001ffc l       *ABS*	00000000 AXI_AXI_COMP_ID_3
00000000 l       *ABS*	00000000 AXI_AXI_COMP_ID_3_PREAMBLE_Shift
51002008 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD_ISS_BM
00000001 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD_ISS_BM_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD_ISS_BM_WRITE_ISS_OVERRIDE
51003008 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD_ISS_BM
00000001 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD_ISS_BM_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD_ISS_BM_WRITE_ISS_OVERRIDE
51004008 l       *ABS*	00000000 AXI_AXI_TARG3_FN_MOD_ISS_BM
00000001 l       *ABS*	00000000 AXI_AXI_TARG3_FN_MOD_ISS_BM_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG3_FN_MOD_ISS_BM_WRITE_ISS_OVERRIDE
51005008 l       *ABS*	00000000 AXI_AXI_TARG4_FN_MOD_ISS_BM
00000001 l       *ABS*	00000000 AXI_AXI_TARG4_FN_MOD_ISS_BM_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG4_FN_MOD_ISS_BM_WRITE_ISS_OVERRIDE
51006008 l       *ABS*	00000000 AXI_AXI_TARG5_FN_MOD_ISS_BM
00000001 l       *ABS*	00000000 AXI_AXI_TARG5_FN_MOD_ISS_BM_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG5_FN_MOD_ISS_BM_WRITE_ISS_OVERRIDE
51007008 l       *ABS*	00000000 AXI_AXI_TARG6_FN_MOD_ISS_BM
00000001 l       *ABS*	00000000 AXI_AXI_TARG6_FN_MOD_ISS_BM_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG6_FN_MOD_ISS_BM_WRITE_ISS_OVERRIDE
5100800c l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD_ISS_BM
00000001 l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD_ISS_BM_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD_ISS_BM_WRITE_ISS_OVERRIDE
51002024 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD2
00000001 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD2_BYPASS_MERGE
51003024 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD2
00000001 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD2_BYPASS_MERGE
51008024 l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD2
00000001 l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD2_BYPASS_MERGE
5100202c l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD_LB
00000001 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD_LB_FN_MOD_LB
5100302c l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD_LB
00000001 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD_LB_FN_MOD_LB
51002108 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG1_FN_MOD_WRITE_ISS_OVERRIDE
51003108 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG2_FN_MOD_WRITE_ISS_OVERRIDE
51008108 l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_TARG7_FN_MOD_WRITE_ISS_OVERRIDE
51042024 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD2
00000001 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD2_BYPASS_MERGE
51044024 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD2
00000001 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD2_BYPASS_MERGE
51042028 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD_AHB
00000001 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD_AHB_RD_INC_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD_AHB_WR_INC_OVERRIDE
51044028 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD_AHB
00000001 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD_AHB_RD_INC_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD_AHB_WR_INC_OVERRIDE
51042100 l       *ABS*	00000000 AXI_AXI_INI1_READ_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI1_READ_QOS_AR_QOS_Shift
51043100 l       *ABS*	00000000 AXI_AXI_INI2_READ_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI2_READ_QOS_AR_QOS_Shift
51044100 l       *ABS*	00000000 AXI_AXI_INI3_READ_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI3_READ_QOS_AR_QOS_Shift
51045100 l       *ABS*	00000000 AXI_AXI_INI4_READ_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI4_READ_QOS_AR_QOS_Shift
51046100 l       *ABS*	00000000 AXI_AXI_INI5_READ_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI5_READ_QOS_AR_QOS_Shift
51047100 l       *ABS*	00000000 AXI_AXI_INI6_READ_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI6_READ_QOS_AR_QOS_Shift
51042104 l       *ABS*	00000000 AXI_AXI_INI1_WRITE_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI1_WRITE_QOS_AW_QOS_Shift
51043104 l       *ABS*	00000000 AXI_AXI_INI2_WRITE_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI2_WRITE_QOS_AW_QOS_Shift
51044104 l       *ABS*	00000000 AXI_AXI_INI3_WRITE_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI3_WRITE_QOS_AW_QOS_Shift
51045104 l       *ABS*	00000000 AXI_AXI_INI4_WRITE_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI4_WRITE_QOS_AW_QOS_Shift
51046104 l       *ABS*	00000000 AXI_AXI_INI5_WRITE_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI5_WRITE_QOS_AW_QOS_Shift
51047104 l       *ABS*	00000000 AXI_AXI_INI6_WRITE_QOS
00000000 l       *ABS*	00000000 AXI_AXI_INI6_WRITE_QOS_AW_QOS_Shift
51042108 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI1_FN_MOD_WRITE_ISS_OVERRIDE
51043108 l       *ABS*	00000000 AXI_AXI_INI2_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_INI2_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI2_FN_MOD_WRITE_ISS_OVERRIDE
51044108 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI3_FN_MOD_WRITE_ISS_OVERRIDE
51045108 l       *ABS*	00000000 AXI_AXI_INI4_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_INI4_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI4_FN_MOD_WRITE_ISS_OVERRIDE
51046108 l       *ABS*	00000000 AXI_AXI_INI5_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_INI5_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI5_FN_MOD_WRITE_ISS_OVERRIDE
51047108 l       *ABS*	00000000 AXI_AXI_INI6_FN_MOD
00000001 l       *ABS*	00000000 AXI_AXI_INI6_FN_MOD_READ_ISS_OVERRIDE
00000002 l       *ABS*	00000000 AXI_AXI_INI6_FN_MOD_WRITE_ISS_OVERRIDE
48021400 l       *ABS*	00000000 HASH_BASE
48021400 l       *ABS*	00000000 HASH_CR
00000004 l       *ABS*	00000000 HASH_CR_INIT
00000008 l       *ABS*	00000000 HASH_CR_DMAE
00000004 l       *ABS*	00000000 HASH_CR_DATATYPE_Shift
00000040 l       *ABS*	00000000 HASH_CR_MODE
00000080 l       *ABS*	00000000 HASH_CR_ALGO0
00000008 l       *ABS*	00000000 HASH_CR_NBW_Shift
00001000 l       *ABS*	00000000 HASH_CR_DINNE
00002000 l       *ABS*	00000000 HASH_CR_MDMAT
00010000 l       *ABS*	00000000 HASH_CR_LKEY
00040000 l       *ABS*	00000000 HASH_CR_ALGO1
48021404 l       *ABS*	00000000 HASH_DIN
00000000 l       *ABS*	00000000 HASH_DIN_DATAIN_Shift
48021408 l       *ABS*	00000000 HASH_STR
00000100 l       *ABS*	00000000 HASH_STR_DCAL
00000000 l       *ABS*	00000000 HASH_STR_NBLW_Shift
4802140c l       *ABS*	00000000 HASH_HR0
00000000 l       *ABS*	00000000 HASH_HR0_H0_Shift
48021410 l       *ABS*	00000000 HASH_HR1
00000000 l       *ABS*	00000000 HASH_HR1_H1_Shift
48021414 l       *ABS*	00000000 HASH_HR2
00000000 l       *ABS*	00000000 HASH_HR2_H2_Shift
48021418 l       *ABS*	00000000 HASH_HR3
00000000 l       *ABS*	00000000 HASH_HR3_H3_Shift
4802141c l       *ABS*	00000000 HASH_HR4
00000000 l       *ABS*	00000000 HASH_HR4_H4_Shift
48021420 l       *ABS*	00000000 HASH_IMR
00000002 l       *ABS*	00000000 HASH_IMR_DCIE
00000001 l       *ABS*	00000000 HASH_IMR_DINIE
48021424 l       *ABS*	00000000 HASH_SR
00000008 l       *ABS*	00000000 HASH_SR_BUSY
00000004 l       *ABS*	00000000 HASH_SR_DMAS
00000002 l       *ABS*	00000000 HASH_SR_DCIS
00000001 l       *ABS*	00000000 HASH_SR_DINIS
480214f8 l       *ABS*	00000000 HASH_CSR0
00000000 l       *ABS*	00000000 HASH_CSR0_CSR0_Shift
480214fc l       *ABS*	00000000 HASH_CSR1
00000000 l       *ABS*	00000000 HASH_CSR1_CSR1_Shift
48021500 l       *ABS*	00000000 HASH_CSR2
00000000 l       *ABS*	00000000 HASH_CSR2_CSR2_Shift
48021504 l       *ABS*	00000000 HASH_CSR3
00000000 l       *ABS*	00000000 HASH_CSR3_CSR3_Shift
48021508 l       *ABS*	00000000 HASH_CSR4
00000000 l       *ABS*	00000000 HASH_CSR4_CSR4_Shift
4802150c l       *ABS*	00000000 HASH_CSR5
00000000 l       *ABS*	00000000 HASH_CSR5_CSR5_Shift
48021510 l       *ABS*	00000000 HASH_CSR6
00000000 l       *ABS*	00000000 HASH_CSR6_CSR6_Shift
48021514 l       *ABS*	00000000 HASH_CSR7
00000000 l       *ABS*	00000000 HASH_CSR7_CSR7_Shift
48021518 l       *ABS*	00000000 HASH_CSR8
00000000 l       *ABS*	00000000 HASH_CSR8_CSR8_Shift
4802151c l       *ABS*	00000000 HASH_CSR9
00000000 l       *ABS*	00000000 HASH_CSR9_CSR9_Shift
48021520 l       *ABS*	00000000 HASH_CSR10
00000000 l       *ABS*	00000000 HASH_CSR10_CSR10_Shift
48021524 l       *ABS*	00000000 HASH_CSR11
00000000 l       *ABS*	00000000 HASH_CSR11_CSR11_Shift
48021528 l       *ABS*	00000000 HASH_CSR12
00000000 l       *ABS*	00000000 HASH_CSR12_CSR12_Shift
4802152c l       *ABS*	00000000 HASH_CSR13
00000000 l       *ABS*	00000000 HASH_CSR13_CSR13_Shift
48021530 l       *ABS*	00000000 HASH_CSR14
00000000 l       *ABS*	00000000 HASH_CSR14_CSR14_Shift
48021534 l       *ABS*	00000000 HASH_CSR15
00000000 l       *ABS*	00000000 HASH_CSR15_CSR15_Shift
48021538 l       *ABS*	00000000 HASH_CSR16
00000000 l       *ABS*	00000000 HASH_CSR16_CSR16_Shift
4802153c l       *ABS*	00000000 HASH_CSR17
00000000 l       *ABS*	00000000 HASH_CSR17_CSR17_Shift
48021540 l       *ABS*	00000000 HASH_CSR18
00000000 l       *ABS*	00000000 HASH_CSR18_CSR18_Shift
48021544 l       *ABS*	00000000 HASH_CSR19
00000000 l       *ABS*	00000000 HASH_CSR19_CSR19_Shift
48021548 l       *ABS*	00000000 HASH_CSR20
00000000 l       *ABS*	00000000 HASH_CSR20_CSR20_Shift
4802154c l       *ABS*	00000000 HASH_CSR21
00000000 l       *ABS*	00000000 HASH_CSR21_CSR21_Shift
48021550 l       *ABS*	00000000 HASH_CSR22
00000000 l       *ABS*	00000000 HASH_CSR22_CSR22_Shift
48021554 l       *ABS*	00000000 HASH_CSR23
00000000 l       *ABS*	00000000 HASH_CSR23_CSR23_Shift
48021558 l       *ABS*	00000000 HASH_CSR24
00000000 l       *ABS*	00000000 HASH_CSR24_CSR24_Shift
4802155c l       *ABS*	00000000 HASH_CSR25
00000000 l       *ABS*	00000000 HASH_CSR25_CSR25_Shift
48021560 l       *ABS*	00000000 HASH_CSR26
00000000 l       *ABS*	00000000 HASH_CSR26_CSR26_Shift
48021564 l       *ABS*	00000000 HASH_CSR27
00000000 l       *ABS*	00000000 HASH_CSR27_CSR27_Shift
48021568 l       *ABS*	00000000 HASH_CSR28
00000000 l       *ABS*	00000000 HASH_CSR28_CSR28_Shift
4802156c l       *ABS*	00000000 HASH_CSR29
00000000 l       *ABS*	00000000 HASH_CSR29_CSR29_Shift
48021570 l       *ABS*	00000000 HASH_CSR30
00000000 l       *ABS*	00000000 HASH_CSR30_CSR30_Shift
48021574 l       *ABS*	00000000 HASH_CSR31
00000000 l       *ABS*	00000000 HASH_CSR31_CSR31_Shift
48021578 l       *ABS*	00000000 HASH_CSR32
00000000 l       *ABS*	00000000 HASH_CSR32_CSR32_Shift
4802157c l       *ABS*	00000000 HASH_CSR33
00000000 l       *ABS*	00000000 HASH_CSR33_CSR33_Shift
48021580 l       *ABS*	00000000 HASH_CSR34
00000000 l       *ABS*	00000000 HASH_CSR34_CSR34_Shift
48021584 l       *ABS*	00000000 HASH_CSR35
00000000 l       *ABS*	00000000 HASH_CSR35_CSR35_Shift
48021588 l       *ABS*	00000000 HASH_CSR36
00000000 l       *ABS*	00000000 HASH_CSR36_CSR36_Shift
4802158c l       *ABS*	00000000 HASH_CSR37
00000000 l       *ABS*	00000000 HASH_CSR37_CSR37_Shift
48021590 l       *ABS*	00000000 HASH_CSR38
00000000 l       *ABS*	00000000 HASH_CSR38_CSR38_Shift
48021594 l       *ABS*	00000000 HASH_CSR39
00000000 l       *ABS*	00000000 HASH_CSR39_CSR39_Shift
48021598 l       *ABS*	00000000 HASH_CSR40
00000000 l       *ABS*	00000000 HASH_CSR40_CSR40_Shift
4802159c l       *ABS*	00000000 HASH_CSR41
00000000 l       *ABS*	00000000 HASH_CSR41_CSR41_Shift
480215a0 l       *ABS*	00000000 HASH_CSR42
00000000 l       *ABS*	00000000 HASH_CSR42_CSR42_Shift
480215a4 l       *ABS*	00000000 HASH_CSR43
00000000 l       *ABS*	00000000 HASH_CSR43_CSR43_Shift
480215a8 l       *ABS*	00000000 HASH_CSR44
00000000 l       *ABS*	00000000 HASH_CSR44_CSR44_Shift
480215ac l       *ABS*	00000000 HASH_CSR45
00000000 l       *ABS*	00000000 HASH_CSR45_CSR45_Shift
480215b0 l       *ABS*	00000000 HASH_CSR46
00000000 l       *ABS*	00000000 HASH_CSR46_CSR46_Shift
480215b4 l       *ABS*	00000000 HASH_CSR47
00000000 l       *ABS*	00000000 HASH_CSR47_CSR47_Shift
480215b8 l       *ABS*	00000000 HASH_CSR48
00000000 l       *ABS*	00000000 HASH_CSR48_CSR48_Shift
480215bc l       *ABS*	00000000 HASH_CSR49
00000000 l       *ABS*	00000000 HASH_CSR49_CSR49_Shift
480215c0 l       *ABS*	00000000 HASH_CSR50
00000000 l       *ABS*	00000000 HASH_CSR50_CSR50_Shift
480215c4 l       *ABS*	00000000 HASH_CSR51
00000000 l       *ABS*	00000000 HASH_CSR51_CSR51_Shift
480215c8 l       *ABS*	00000000 HASH_CSR52
00000000 l       *ABS*	00000000 HASH_CSR52_CSR52_Shift
480215cc l       *ABS*	00000000 HASH_CSR53
00000000 l       *ABS*	00000000 HASH_CSR53_CSR53_Shift
48021710 l       *ABS*	00000000 HASH_HASH_HR0
00000000 l       *ABS*	00000000 HASH_HASH_HR0_H0_Shift
48021714 l       *ABS*	00000000 HASH_HASH_HR1
00000000 l       *ABS*	00000000 HASH_HASH_HR1_H1_Shift
48021718 l       *ABS*	00000000 HASH_HASH_HR2
00000000 l       *ABS*	00000000 HASH_HASH_HR2_H2_Shift
4802171c l       *ABS*	00000000 HASH_HASH_HR3
00000000 l       *ABS*	00000000 HASH_HASH_HR3_H3_Shift
48021720 l       *ABS*	00000000 HASH_HASH_HR4
00000000 l       *ABS*	00000000 HASH_HASH_HR4_H4_Shift
48021724 l       *ABS*	00000000 HASH_HASH_HR5
00000000 l       *ABS*	00000000 HASH_HASH_HR5_H5_Shift
48021728 l       *ABS*	00000000 HASH_HASH_HR6
00000000 l       *ABS*	00000000 HASH_HASH_HR6_H6_Shift
4802172c l       *ABS*	00000000 HASH_HASH_HR7
00000000 l       *ABS*	00000000 HASH_HASH_HR7_H7_Shift
48021000 l       *ABS*	00000000 CRYP_BASE
48021000 l       *ABS*	00000000 CRYP_CR
00000004 l       *ABS*	00000000 CRYP_CR_ALGODIR
00000003 l       *ABS*	00000000 CRYP_CR_ALGOMODE0_Shift
00000006 l       *ABS*	00000000 CRYP_CR_DATATYPE_Shift
00000008 l       *ABS*	00000000 CRYP_CR_KEYSIZE_Shift
00004000 l       *ABS*	00000000 CRYP_CR_FFLUSH
00008000 l       *ABS*	00000000 CRYP_CR_CRYPEN
00000010 l       *ABS*	00000000 CRYP_CR_GCM_CCMPH_Shift
00080000 l       *ABS*	00000000 CRYP_CR_ALGOMODE3
48021004 l       *ABS*	00000000 CRYP_SR
00000010 l       *ABS*	00000000 CRYP_SR_BUSY
00000008 l       *ABS*	00000000 CRYP_SR_OFFU
00000004 l       *ABS*	00000000 CRYP_SR_OFNE
00000002 l       *ABS*	00000000 CRYP_SR_IFNF
00000001 l       *ABS*	00000000 CRYP_SR_IFEM
48021008 l       *ABS*	00000000 CRYP_DIN
00000000 l       *ABS*	00000000 CRYP_DIN_DATAIN_Shift
4802100c l       *ABS*	00000000 CRYP_DOUT
00000000 l       *ABS*	00000000 CRYP_DOUT_DATAOUT_Shift
48021010 l       *ABS*	00000000 CRYP_DMACR
00000002 l       *ABS*	00000000 CRYP_DMACR_DOEN
00000001 l       *ABS*	00000000 CRYP_DMACR_DIEN
48021014 l       *ABS*	00000000 CRYP_IMSCR
00000002 l       *ABS*	00000000 CRYP_IMSCR_OUTIM
00000001 l       *ABS*	00000000 CRYP_IMSCR_INIM
48021018 l       *ABS*	00000000 CRYP_RISR
00000002 l       *ABS*	00000000 CRYP_RISR_OUTRIS
00000001 l       *ABS*	00000000 CRYP_RISR_INRIS
4802101c l       *ABS*	00000000 CRYP_MISR
00000002 l       *ABS*	00000000 CRYP_MISR_OUTMIS
00000001 l       *ABS*	00000000 CRYP_MISR_INMIS
48021020 l       *ABS*	00000000 CRYP_K0LR
00000001 l       *ABS*	00000000 CRYP_K0LR_K224
00000002 l       *ABS*	00000000 CRYP_K0LR_K225
00000004 l       *ABS*	00000000 CRYP_K0LR_K226
00000008 l       *ABS*	00000000 CRYP_K0LR_K227
00000010 l       *ABS*	00000000 CRYP_K0LR_K228
00000020 l       *ABS*	00000000 CRYP_K0LR_K229
00000040 l       *ABS*	00000000 CRYP_K0LR_K230
00000080 l       *ABS*	00000000 CRYP_K0LR_K231
00000100 l       *ABS*	00000000 CRYP_K0LR_K232
00000200 l       *ABS*	00000000 CRYP_K0LR_K233
00000400 l       *ABS*	00000000 CRYP_K0LR_K234
00000800 l       *ABS*	00000000 CRYP_K0LR_K235
00001000 l       *ABS*	00000000 CRYP_K0LR_K236
00002000 l       *ABS*	00000000 CRYP_K0LR_K237
00004000 l       *ABS*	00000000 CRYP_K0LR_K238
00008000 l       *ABS*	00000000 CRYP_K0LR_K239
00010000 l       *ABS*	00000000 CRYP_K0LR_K240
00020000 l       *ABS*	00000000 CRYP_K0LR_K241
00040000 l       *ABS*	00000000 CRYP_K0LR_K242
00080000 l       *ABS*	00000000 CRYP_K0LR_K243
00100000 l       *ABS*	00000000 CRYP_K0LR_K244
00200000 l       *ABS*	00000000 CRYP_K0LR_K245
00400000 l       *ABS*	00000000 CRYP_K0LR_K246
00800000 l       *ABS*	00000000 CRYP_K0LR_K247
01000000 l       *ABS*	00000000 CRYP_K0LR_K248
02000000 l       *ABS*	00000000 CRYP_K0LR_K249
04000000 l       *ABS*	00000000 CRYP_K0LR_K250
08000000 l       *ABS*	00000000 CRYP_K0LR_K251
10000000 l       *ABS*	00000000 CRYP_K0LR_K252
20000000 l       *ABS*	00000000 CRYP_K0LR_K253
40000000 l       *ABS*	00000000 CRYP_K0LR_K254
80000000 l       *ABS*	00000000 CRYP_K0LR_K255
48021024 l       *ABS*	00000000 CRYP_K0RR
00000001 l       *ABS*	00000000 CRYP_K0RR_K192
00000002 l       *ABS*	00000000 CRYP_K0RR_K193
00000004 l       *ABS*	00000000 CRYP_K0RR_K194
00000008 l       *ABS*	00000000 CRYP_K0RR_K195
00000010 l       *ABS*	00000000 CRYP_K0RR_K196
00000020 l       *ABS*	00000000 CRYP_K0RR_K197
00000040 l       *ABS*	00000000 CRYP_K0RR_K198
00000080 l       *ABS*	00000000 CRYP_K0RR_K199
00000100 l       *ABS*	00000000 CRYP_K0RR_K200
00000200 l       *ABS*	00000000 CRYP_K0RR_K201
00000400 l       *ABS*	00000000 CRYP_K0RR_K202
00000800 l       *ABS*	00000000 CRYP_K0RR_K203
00001000 l       *ABS*	00000000 CRYP_K0RR_K204
00002000 l       *ABS*	00000000 CRYP_K0RR_K205
00004000 l       *ABS*	00000000 CRYP_K0RR_K206
00008000 l       *ABS*	00000000 CRYP_K0RR_K207
00010000 l       *ABS*	00000000 CRYP_K0RR_K208
00020000 l       *ABS*	00000000 CRYP_K0RR_K209
00040000 l       *ABS*	00000000 CRYP_K0RR_K210
00080000 l       *ABS*	00000000 CRYP_K0RR_K211
00100000 l       *ABS*	00000000 CRYP_K0RR_K212
00200000 l       *ABS*	00000000 CRYP_K0RR_K213
00400000 l       *ABS*	00000000 CRYP_K0RR_K214
00800000 l       *ABS*	00000000 CRYP_K0RR_K215
01000000 l       *ABS*	00000000 CRYP_K0RR_K216
02000000 l       *ABS*	00000000 CRYP_K0RR_K217
04000000 l       *ABS*	00000000 CRYP_K0RR_K218
08000000 l       *ABS*	00000000 CRYP_K0RR_K219
10000000 l       *ABS*	00000000 CRYP_K0RR_K220
20000000 l       *ABS*	00000000 CRYP_K0RR_K221
40000000 l       *ABS*	00000000 CRYP_K0RR_K222
80000000 l       *ABS*	00000000 CRYP_K0RR_K223
48021028 l       *ABS*	00000000 CRYP_K1LR
00000001 l       *ABS*	00000000 CRYP_K1LR_K160
00000002 l       *ABS*	00000000 CRYP_K1LR_K161
00000004 l       *ABS*	00000000 CRYP_K1LR_K162
00000008 l       *ABS*	00000000 CRYP_K1LR_K163
00000010 l       *ABS*	00000000 CRYP_K1LR_K164
00000020 l       *ABS*	00000000 CRYP_K1LR_K165
00000040 l       *ABS*	00000000 CRYP_K1LR_K166
00000080 l       *ABS*	00000000 CRYP_K1LR_K167
00000100 l       *ABS*	00000000 CRYP_K1LR_K168
00000200 l       *ABS*	00000000 CRYP_K1LR_K169
00000400 l       *ABS*	00000000 CRYP_K1LR_K170
00000800 l       *ABS*	00000000 CRYP_K1LR_K171
00001000 l       *ABS*	00000000 CRYP_K1LR_K172
00002000 l       *ABS*	00000000 CRYP_K1LR_K173
00004000 l       *ABS*	00000000 CRYP_K1LR_K174
00008000 l       *ABS*	00000000 CRYP_K1LR_K175
00010000 l       *ABS*	00000000 CRYP_K1LR_K176
00020000 l       *ABS*	00000000 CRYP_K1LR_K177
00040000 l       *ABS*	00000000 CRYP_K1LR_K178
00080000 l       *ABS*	00000000 CRYP_K1LR_K179
00100000 l       *ABS*	00000000 CRYP_K1LR_K180
00200000 l       *ABS*	00000000 CRYP_K1LR_K181
00400000 l       *ABS*	00000000 CRYP_K1LR_K182
00800000 l       *ABS*	00000000 CRYP_K1LR_K183
01000000 l       *ABS*	00000000 CRYP_K1LR_K184
02000000 l       *ABS*	00000000 CRYP_K1LR_K185
04000000 l       *ABS*	00000000 CRYP_K1LR_K186
08000000 l       *ABS*	00000000 CRYP_K1LR_K187
10000000 l       *ABS*	00000000 CRYP_K1LR_K188
20000000 l       *ABS*	00000000 CRYP_K1LR_K189
40000000 l       *ABS*	00000000 CRYP_K1LR_K190
80000000 l       *ABS*	00000000 CRYP_K1LR_K191
4802102c l       *ABS*	00000000 CRYP_K1RR
00000001 l       *ABS*	00000000 CRYP_K1RR_K128
00000002 l       *ABS*	00000000 CRYP_K1RR_K129
00000004 l       *ABS*	00000000 CRYP_K1RR_K130
00000008 l       *ABS*	00000000 CRYP_K1RR_K131
00000010 l       *ABS*	00000000 CRYP_K1RR_K132
00000020 l       *ABS*	00000000 CRYP_K1RR_K133
00000040 l       *ABS*	00000000 CRYP_K1RR_K134
00000080 l       *ABS*	00000000 CRYP_K1RR_K135
00000100 l       *ABS*	00000000 CRYP_K1RR_K136
00000200 l       *ABS*	00000000 CRYP_K1RR_K137
00000400 l       *ABS*	00000000 CRYP_K1RR_K138
00000800 l       *ABS*	00000000 CRYP_K1RR_K139
00001000 l       *ABS*	00000000 CRYP_K1RR_K140
00002000 l       *ABS*	00000000 CRYP_K1RR_K141
00004000 l       *ABS*	00000000 CRYP_K1RR_K142
00008000 l       *ABS*	00000000 CRYP_K1RR_K143
00010000 l       *ABS*	00000000 CRYP_K1RR_K144
00020000 l       *ABS*	00000000 CRYP_K1RR_K145
00040000 l       *ABS*	00000000 CRYP_K1RR_K146
00080000 l       *ABS*	00000000 CRYP_K1RR_K147
00100000 l       *ABS*	00000000 CRYP_K1RR_K148
00200000 l       *ABS*	00000000 CRYP_K1RR_K149
00400000 l       *ABS*	00000000 CRYP_K1RR_K150
00800000 l       *ABS*	00000000 CRYP_K1RR_K151
01000000 l       *ABS*	00000000 CRYP_K1RR_K152
02000000 l       *ABS*	00000000 CRYP_K1RR_K153
04000000 l       *ABS*	00000000 CRYP_K1RR_K154
08000000 l       *ABS*	00000000 CRYP_K1RR_K155
10000000 l       *ABS*	00000000 CRYP_K1RR_K156
20000000 l       *ABS*	00000000 CRYP_K1RR_K157
40000000 l       *ABS*	00000000 CRYP_K1RR_K158
80000000 l       *ABS*	00000000 CRYP_K1RR_K159
48021030 l       *ABS*	00000000 CRYP_K2LR
00000001 l       *ABS*	00000000 CRYP_K2LR_K96
00000002 l       *ABS*	00000000 CRYP_K2LR_K97
00000004 l       *ABS*	00000000 CRYP_K2LR_K98
00000008 l       *ABS*	00000000 CRYP_K2LR_K99
00000010 l       *ABS*	00000000 CRYP_K2LR_K100
00000020 l       *ABS*	00000000 CRYP_K2LR_K101
00000040 l       *ABS*	00000000 CRYP_K2LR_K102
00000080 l       *ABS*	00000000 CRYP_K2LR_K103
00000100 l       *ABS*	00000000 CRYP_K2LR_K104
00000200 l       *ABS*	00000000 CRYP_K2LR_K105
00000400 l       *ABS*	00000000 CRYP_K2LR_K106
00000800 l       *ABS*	00000000 CRYP_K2LR_K107
00001000 l       *ABS*	00000000 CRYP_K2LR_K108
00002000 l       *ABS*	00000000 CRYP_K2LR_K109
00004000 l       *ABS*	00000000 CRYP_K2LR_K110
00008000 l       *ABS*	00000000 CRYP_K2LR_K111
00010000 l       *ABS*	00000000 CRYP_K2LR_K112
00020000 l       *ABS*	00000000 CRYP_K2LR_K113
00040000 l       *ABS*	00000000 CRYP_K2LR_K114
00080000 l       *ABS*	00000000 CRYP_K2LR_K115
00100000 l       *ABS*	00000000 CRYP_K2LR_K116
00200000 l       *ABS*	00000000 CRYP_K2LR_K117
00400000 l       *ABS*	00000000 CRYP_K2LR_K118
00800000 l       *ABS*	00000000 CRYP_K2LR_K119
01000000 l       *ABS*	00000000 CRYP_K2LR_K120
02000000 l       *ABS*	00000000 CRYP_K2LR_K121
04000000 l       *ABS*	00000000 CRYP_K2LR_K122
08000000 l       *ABS*	00000000 CRYP_K2LR_K123
10000000 l       *ABS*	00000000 CRYP_K2LR_K124
20000000 l       *ABS*	00000000 CRYP_K2LR_K125
40000000 l       *ABS*	00000000 CRYP_K2LR_K126
80000000 l       *ABS*	00000000 CRYP_K2LR_K127
48021034 l       *ABS*	00000000 CRYP_K2RR
00000001 l       *ABS*	00000000 CRYP_K2RR_K64
00000002 l       *ABS*	00000000 CRYP_K2RR_K65
00000004 l       *ABS*	00000000 CRYP_K2RR_K66
00000008 l       *ABS*	00000000 CRYP_K2RR_K67
00000010 l       *ABS*	00000000 CRYP_K2RR_K68
00000020 l       *ABS*	00000000 CRYP_K2RR_K69
00000040 l       *ABS*	00000000 CRYP_K2RR_K70
00000080 l       *ABS*	00000000 CRYP_K2RR_K71
00000100 l       *ABS*	00000000 CRYP_K2RR_K72
00000200 l       *ABS*	00000000 CRYP_K2RR_K73
00000400 l       *ABS*	00000000 CRYP_K2RR_K74
00000800 l       *ABS*	00000000 CRYP_K2RR_K75
00001000 l       *ABS*	00000000 CRYP_K2RR_K76
00002000 l       *ABS*	00000000 CRYP_K2RR_K77
00004000 l       *ABS*	00000000 CRYP_K2RR_K78
00008000 l       *ABS*	00000000 CRYP_K2RR_K79
00010000 l       *ABS*	00000000 CRYP_K2RR_K80
00020000 l       *ABS*	00000000 CRYP_K2RR_K81
00040000 l       *ABS*	00000000 CRYP_K2RR_K82
00080000 l       *ABS*	00000000 CRYP_K2RR_K83
00100000 l       *ABS*	00000000 CRYP_K2RR_K84
00200000 l       *ABS*	00000000 CRYP_K2RR_K85
00400000 l       *ABS*	00000000 CRYP_K2RR_K86
00800000 l       *ABS*	00000000 CRYP_K2RR_K87
01000000 l       *ABS*	00000000 CRYP_K2RR_K88
02000000 l       *ABS*	00000000 CRYP_K2RR_K89
04000000 l       *ABS*	00000000 CRYP_K2RR_K90
08000000 l       *ABS*	00000000 CRYP_K2RR_K91
10000000 l       *ABS*	00000000 CRYP_K2RR_K92
20000000 l       *ABS*	00000000 CRYP_K2RR_K93
40000000 l       *ABS*	00000000 CRYP_K2RR_K94
80000000 l       *ABS*	00000000 CRYP_K2RR_K95
48021038 l       *ABS*	00000000 CRYP_K3LR
00000001 l       *ABS*	00000000 CRYP_K3LR_K32
00000002 l       *ABS*	00000000 CRYP_K3LR_K33
00000004 l       *ABS*	00000000 CRYP_K3LR_K34
00000008 l       *ABS*	00000000 CRYP_K3LR_K35
00000010 l       *ABS*	00000000 CRYP_K3LR_K36
00000020 l       *ABS*	00000000 CRYP_K3LR_K37
00000040 l       *ABS*	00000000 CRYP_K3LR_K38
00000080 l       *ABS*	00000000 CRYP_K3LR_K39
00000100 l       *ABS*	00000000 CRYP_K3LR_K40
00000200 l       *ABS*	00000000 CRYP_K3LR_K41
00000400 l       *ABS*	00000000 CRYP_K3LR_K42
00000800 l       *ABS*	00000000 CRYP_K3LR_K43
00001000 l       *ABS*	00000000 CRYP_K3LR_K44
00002000 l       *ABS*	00000000 CRYP_K3LR_K45
00004000 l       *ABS*	00000000 CRYP_K3LR_K46
00008000 l       *ABS*	00000000 CRYP_K3LR_K47
00010000 l       *ABS*	00000000 CRYP_K3LR_K48
00020000 l       *ABS*	00000000 CRYP_K3LR_K49
00040000 l       *ABS*	00000000 CRYP_K3LR_K50
00080000 l       *ABS*	00000000 CRYP_K3LR_K51
00100000 l       *ABS*	00000000 CRYP_K3LR_K52
00200000 l       *ABS*	00000000 CRYP_K3LR_K53
00400000 l       *ABS*	00000000 CRYP_K3LR_K54
00800000 l       *ABS*	00000000 CRYP_K3LR_K55
01000000 l       *ABS*	00000000 CRYP_K3LR_K56
02000000 l       *ABS*	00000000 CRYP_K3LR_K57
04000000 l       *ABS*	00000000 CRYP_K3LR_K58
08000000 l       *ABS*	00000000 CRYP_K3LR_K59
10000000 l       *ABS*	00000000 CRYP_K3LR_K60
20000000 l       *ABS*	00000000 CRYP_K3LR_K61
40000000 l       *ABS*	00000000 CRYP_K3LR_K62
80000000 l       *ABS*	00000000 CRYP_K3LR_K63
4802103c l       *ABS*	00000000 CRYP_K3RR
00000001 l       *ABS*	00000000 CRYP_K3RR_K0
00000002 l       *ABS*	00000000 CRYP_K3RR_K1
00000004 l       *ABS*	00000000 CRYP_K3RR_K2
00000008 l       *ABS*	00000000 CRYP_K3RR_K3
00000010 l       *ABS*	00000000 CRYP_K3RR_K4
00000020 l       *ABS*	00000000 CRYP_K3RR_K5
00000040 l       *ABS*	00000000 CRYP_K3RR_K6
00000080 l       *ABS*	00000000 CRYP_K3RR_K7
00000100 l       *ABS*	00000000 CRYP_K3RR_K8
00000200 l       *ABS*	00000000 CRYP_K3RR_K9
00000400 l       *ABS*	00000000 CRYP_K3RR_K10
00000800 l       *ABS*	00000000 CRYP_K3RR_K11
00001000 l       *ABS*	00000000 CRYP_K3RR_K12
00002000 l       *ABS*	00000000 CRYP_K3RR_K13
00004000 l       *ABS*	00000000 CRYP_K3RR_K14
00008000 l       *ABS*	00000000 CRYP_K3RR_K15
00010000 l       *ABS*	00000000 CRYP_K3RR_K16
00020000 l       *ABS*	00000000 CRYP_K3RR_K17
00040000 l       *ABS*	00000000 CRYP_K3RR_K18
00080000 l       *ABS*	00000000 CRYP_K3RR_K19
00100000 l       *ABS*	00000000 CRYP_K3RR_K20
00200000 l       *ABS*	00000000 CRYP_K3RR_K21
00400000 l       *ABS*	00000000 CRYP_K3RR_K22
00800000 l       *ABS*	00000000 CRYP_K3RR_K23
01000000 l       *ABS*	00000000 CRYP_K3RR_K24
02000000 l       *ABS*	00000000 CRYP_K3RR_K25
04000000 l       *ABS*	00000000 CRYP_K3RR_K26
08000000 l       *ABS*	00000000 CRYP_K3RR_K27
10000000 l       *ABS*	00000000 CRYP_K3RR_K28
20000000 l       *ABS*	00000000 CRYP_K3RR_K29
40000000 l       *ABS*	00000000 CRYP_K3RR_K30
80000000 l       *ABS*	00000000 CRYP_K3RR_K31
48021040 l       *ABS*	00000000 CRYP_IV0LR
00000001 l       *ABS*	00000000 CRYP_IV0LR_IV31
00000002 l       *ABS*	00000000 CRYP_IV0LR_IV30
00000004 l       *ABS*	00000000 CRYP_IV0LR_IV29
00000008 l       *ABS*	00000000 CRYP_IV0LR_IV28
00000010 l       *ABS*	00000000 CRYP_IV0LR_IV27
00000020 l       *ABS*	00000000 CRYP_IV0LR_IV26
00000040 l       *ABS*	00000000 CRYP_IV0LR_IV25
00000080 l       *ABS*	00000000 CRYP_IV0LR_IV24
00000100 l       *ABS*	00000000 CRYP_IV0LR_IV23
00000200 l       *ABS*	00000000 CRYP_IV0LR_IV22
00000400 l       *ABS*	00000000 CRYP_IV0LR_IV21
00000800 l       *ABS*	00000000 CRYP_IV0LR_IV20
00001000 l       *ABS*	00000000 CRYP_IV0LR_IV19
00002000 l       *ABS*	00000000 CRYP_IV0LR_IV18
00004000 l       *ABS*	00000000 CRYP_IV0LR_IV17
00008000 l       *ABS*	00000000 CRYP_IV0LR_IV16
00010000 l       *ABS*	00000000 CRYP_IV0LR_IV15
00020000 l       *ABS*	00000000 CRYP_IV0LR_IV14
00040000 l       *ABS*	00000000 CRYP_IV0LR_IV13
00080000 l       *ABS*	00000000 CRYP_IV0LR_IV12
00100000 l       *ABS*	00000000 CRYP_IV0LR_IV11
00200000 l       *ABS*	00000000 CRYP_IV0LR_IV10
00400000 l       *ABS*	00000000 CRYP_IV0LR_IV9
00800000 l       *ABS*	00000000 CRYP_IV0LR_IV8
01000000 l       *ABS*	00000000 CRYP_IV0LR_IV7
02000000 l       *ABS*	00000000 CRYP_IV0LR_IV6
04000000 l       *ABS*	00000000 CRYP_IV0LR_IV5
08000000 l       *ABS*	00000000 CRYP_IV0LR_IV4
10000000 l       *ABS*	00000000 CRYP_IV0LR_IV3
20000000 l       *ABS*	00000000 CRYP_IV0LR_IV2
40000000 l       *ABS*	00000000 CRYP_IV0LR_IV1
80000000 l       *ABS*	00000000 CRYP_IV0LR_IV0
48021044 l       *ABS*	00000000 CRYP_IV0RR
00000001 l       *ABS*	00000000 CRYP_IV0RR_IV63
00000002 l       *ABS*	00000000 CRYP_IV0RR_IV62
00000004 l       *ABS*	00000000 CRYP_IV0RR_IV61
00000008 l       *ABS*	00000000 CRYP_IV0RR_IV60
00000010 l       *ABS*	00000000 CRYP_IV0RR_IV59
00000020 l       *ABS*	00000000 CRYP_IV0RR_IV58
00000040 l       *ABS*	00000000 CRYP_IV0RR_IV57
00000080 l       *ABS*	00000000 CRYP_IV0RR_IV56
00000100 l       *ABS*	00000000 CRYP_IV0RR_IV55
00000200 l       *ABS*	00000000 CRYP_IV0RR_IV54
00000400 l       *ABS*	00000000 CRYP_IV0RR_IV53
00000800 l       *ABS*	00000000 CRYP_IV0RR_IV52
00001000 l       *ABS*	00000000 CRYP_IV0RR_IV51
00002000 l       *ABS*	00000000 CRYP_IV0RR_IV50
00004000 l       *ABS*	00000000 CRYP_IV0RR_IV49
00008000 l       *ABS*	00000000 CRYP_IV0RR_IV48
00010000 l       *ABS*	00000000 CRYP_IV0RR_IV47
00020000 l       *ABS*	00000000 CRYP_IV0RR_IV46
00040000 l       *ABS*	00000000 CRYP_IV0RR_IV45
00080000 l       *ABS*	00000000 CRYP_IV0RR_IV44
00100000 l       *ABS*	00000000 CRYP_IV0RR_IV43
00200000 l       *ABS*	00000000 CRYP_IV0RR_IV42
00400000 l       *ABS*	00000000 CRYP_IV0RR_IV41
00800000 l       *ABS*	00000000 CRYP_IV0RR_IV40
01000000 l       *ABS*	00000000 CRYP_IV0RR_IV39
02000000 l       *ABS*	00000000 CRYP_IV0RR_IV38
04000000 l       *ABS*	00000000 CRYP_IV0RR_IV37
08000000 l       *ABS*	00000000 CRYP_IV0RR_IV36
10000000 l       *ABS*	00000000 CRYP_IV0RR_IV35
20000000 l       *ABS*	00000000 CRYP_IV0RR_IV34
40000000 l       *ABS*	00000000 CRYP_IV0RR_IV33
80000000 l       *ABS*	00000000 CRYP_IV0RR_IV32
48021048 l       *ABS*	00000000 CRYP_IV1LR
00000001 l       *ABS*	00000000 CRYP_IV1LR_IV95
00000002 l       *ABS*	00000000 CRYP_IV1LR_IV94
00000004 l       *ABS*	00000000 CRYP_IV1LR_IV93
00000008 l       *ABS*	00000000 CRYP_IV1LR_IV92
00000010 l       *ABS*	00000000 CRYP_IV1LR_IV91
00000020 l       *ABS*	00000000 CRYP_IV1LR_IV90
00000040 l       *ABS*	00000000 CRYP_IV1LR_IV89
00000080 l       *ABS*	00000000 CRYP_IV1LR_IV88
00000100 l       *ABS*	00000000 CRYP_IV1LR_IV87
00000200 l       *ABS*	00000000 CRYP_IV1LR_IV86
00000400 l       *ABS*	00000000 CRYP_IV1LR_IV85
00000800 l       *ABS*	00000000 CRYP_IV1LR_IV84
00001000 l       *ABS*	00000000 CRYP_IV1LR_IV83
00002000 l       *ABS*	00000000 CRYP_IV1LR_IV82
00004000 l       *ABS*	00000000 CRYP_IV1LR_IV81
00008000 l       *ABS*	00000000 CRYP_IV1LR_IV80
00010000 l       *ABS*	00000000 CRYP_IV1LR_IV79
00020000 l       *ABS*	00000000 CRYP_IV1LR_IV78
00040000 l       *ABS*	00000000 CRYP_IV1LR_IV77
00080000 l       *ABS*	00000000 CRYP_IV1LR_IV76
00100000 l       *ABS*	00000000 CRYP_IV1LR_IV75
00200000 l       *ABS*	00000000 CRYP_IV1LR_IV74
00400000 l       *ABS*	00000000 CRYP_IV1LR_IV73
00800000 l       *ABS*	00000000 CRYP_IV1LR_IV72
01000000 l       *ABS*	00000000 CRYP_IV1LR_IV71
02000000 l       *ABS*	00000000 CRYP_IV1LR_IV70
04000000 l       *ABS*	00000000 CRYP_IV1LR_IV69
08000000 l       *ABS*	00000000 CRYP_IV1LR_IV68
10000000 l       *ABS*	00000000 CRYP_IV1LR_IV67
20000000 l       *ABS*	00000000 CRYP_IV1LR_IV66
40000000 l       *ABS*	00000000 CRYP_IV1LR_IV65
80000000 l       *ABS*	00000000 CRYP_IV1LR_IV64
4802104c l       *ABS*	00000000 CRYP_IV1RR
00000001 l       *ABS*	00000000 CRYP_IV1RR_IV127
00000002 l       *ABS*	00000000 CRYP_IV1RR_IV126
00000004 l       *ABS*	00000000 CRYP_IV1RR_IV125
00000008 l       *ABS*	00000000 CRYP_IV1RR_IV124
00000010 l       *ABS*	00000000 CRYP_IV1RR_IV123
00000020 l       *ABS*	00000000 CRYP_IV1RR_IV122
00000040 l       *ABS*	00000000 CRYP_IV1RR_IV121
00000080 l       *ABS*	00000000 CRYP_IV1RR_IV120
00000100 l       *ABS*	00000000 CRYP_IV1RR_IV119
00000200 l       *ABS*	00000000 CRYP_IV1RR_IV118
00000400 l       *ABS*	00000000 CRYP_IV1RR_IV117
00000800 l       *ABS*	00000000 CRYP_IV1RR_IV116
00001000 l       *ABS*	00000000 CRYP_IV1RR_IV115
00002000 l       *ABS*	00000000 CRYP_IV1RR_IV114
00004000 l       *ABS*	00000000 CRYP_IV1RR_IV113
00008000 l       *ABS*	00000000 CRYP_IV1RR_IV112
00010000 l       *ABS*	00000000 CRYP_IV1RR_IV111
00020000 l       *ABS*	00000000 CRYP_IV1RR_IV110
00040000 l       *ABS*	00000000 CRYP_IV1RR_IV109
00080000 l       *ABS*	00000000 CRYP_IV1RR_IV108
00100000 l       *ABS*	00000000 CRYP_IV1RR_IV107
00200000 l       *ABS*	00000000 CRYP_IV1RR_IV106
00400000 l       *ABS*	00000000 CRYP_IV1RR_IV105
00800000 l       *ABS*	00000000 CRYP_IV1RR_IV104
01000000 l       *ABS*	00000000 CRYP_IV1RR_IV103
02000000 l       *ABS*	00000000 CRYP_IV1RR_IV102
04000000 l       *ABS*	00000000 CRYP_IV1RR_IV101
08000000 l       *ABS*	00000000 CRYP_IV1RR_IV100
10000000 l       *ABS*	00000000 CRYP_IV1RR_IV99
20000000 l       *ABS*	00000000 CRYP_IV1RR_IV98
40000000 l       *ABS*	00000000 CRYP_IV1RR_IV97
80000000 l       *ABS*	00000000 CRYP_IV1RR_IV96
48021050 l       *ABS*	00000000 CRYP_CSGCMCCM0R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM0R_CSGCMCCM0_Shift
48021054 l       *ABS*	00000000 CRYP_CSGCMCCM1R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM1R_CSGCMCCM1_Shift
48021058 l       *ABS*	00000000 CRYP_CSGCMCCM2R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM2R_CSGCMCCM2_Shift
4802105c l       *ABS*	00000000 CRYP_CSGCMCCM3R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM3R_CSGCMCCM3_Shift
48021060 l       *ABS*	00000000 CRYP_CSGCMCCM4R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM4R_CSGCMCCM4_Shift
48021064 l       *ABS*	00000000 CRYP_CSGCMCCM5R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM5R_CSGCMCCM5_Shift
48021068 l       *ABS*	00000000 CRYP_CSGCMCCM6R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM6R_CSGCMCCM6_Shift
4802106c l       *ABS*	00000000 CRYP_CSGCMCCM7R
00000000 l       *ABS*	00000000 CRYP_CSGCMCCM7R_CSGCMCCM7_Shift
48021070 l       *ABS*	00000000 CRYP_CSGCM0R
00000000 l       *ABS*	00000000 CRYP_CSGCM0R_CSGCM0_Shift
48021074 l       *ABS*	00000000 CRYP_CSGCM1R
00000000 l       *ABS*	00000000 CRYP_CSGCM1R_CSGCM1_Shift
48021078 l       *ABS*	00000000 CRYP_CSGCM2R
00000000 l       *ABS*	00000000 CRYP_CSGCM2R_CSGCM2_Shift
4802107c l       *ABS*	00000000 CRYP_CSGCM3R
00000000 l       *ABS*	00000000 CRYP_CSGCM3R_CSGCM3_Shift
48021080 l       *ABS*	00000000 CRYP_CSGCM4R
00000000 l       *ABS*	00000000 CRYP_CSGCM4R_CSGCM4_Shift
48021084 l       *ABS*	00000000 CRYP_CSGCM5R
00000000 l       *ABS*	00000000 CRYP_CSGCM5R_CSGCM5_Shift
48021088 l       *ABS*	00000000 CRYP_CSGCM6R
00000000 l       *ABS*	00000000 CRYP_CSGCM6R_CSGCM6_Shift
4802108c l       *ABS*	00000000 CRYP_CSGCM7R
00000000 l       *ABS*	00000000 CRYP_CSGCM7R_CSGCM7_Shift
48020000 l       *ABS*	00000000 DCMI_BASE
48020000 l       *ABS*	00000000 DCMI_CR
00100000 l       *ABS*	00000000 DCMI_CR_OELS
00080000 l       *ABS*	00000000 DCMI_CR_LSM
00040000 l       *ABS*	00000000 DCMI_CR_OEBS
00000010 l       *ABS*	00000000 DCMI_CR_BSM_Shift
00004000 l       *ABS*	00000000 DCMI_CR_ENABLE
0000000a l       *ABS*	00000000 DCMI_CR_EDM_Shift
00000008 l       *ABS*	00000000 DCMI_CR_FCRC_Shift
00000080 l       *ABS*	00000000 DCMI_CR_VSPOL
00000040 l       *ABS*	00000000 DCMI_CR_HSPOL
00000020 l       *ABS*	00000000 DCMI_CR_PCKPOL
00000010 l       *ABS*	00000000 DCMI_CR_ESS
00000008 l       *ABS*	00000000 DCMI_CR_JPEG
00000004 l       *ABS*	00000000 DCMI_CR_CROP
00000002 l       *ABS*	00000000 DCMI_CR_CM
00000001 l       *ABS*	00000000 DCMI_CR_CAPTURE
48020004 l       *ABS*	00000000 DCMI_SR
00000004 l       *ABS*	00000000 DCMI_SR_FNE
00000002 l       *ABS*	00000000 DCMI_SR_VSYNC
00000001 l       *ABS*	00000000 DCMI_SR_HSYNC
48020008 l       *ABS*	00000000 DCMI_RIS
00000010 l       *ABS*	00000000 DCMI_RIS_LINE_RIS
00000008 l       *ABS*	00000000 DCMI_RIS_VSYNC_RIS
00000004 l       *ABS*	00000000 DCMI_RIS_ERR_RIS
00000002 l       *ABS*	00000000 DCMI_RIS_OVR_RIS
00000001 l       *ABS*	00000000 DCMI_RIS_FRAME_RIS
4802000c l       *ABS*	00000000 DCMI_IER
00000010 l       *ABS*	00000000 DCMI_IER_LINE_IE
00000008 l       *ABS*	00000000 DCMI_IER_VSYNC_IE
00000004 l       *ABS*	00000000 DCMI_IER_ERR_IE
00000002 l       *ABS*	00000000 DCMI_IER_OVR_IE
00000001 l       *ABS*	00000000 DCMI_IER_FRAME_IE
48020010 l       *ABS*	00000000 DCMI_MIS
00000010 l       *ABS*	00000000 DCMI_MIS_LINE_MIS
00000008 l       *ABS*	00000000 DCMI_MIS_VSYNC_MIS
00000004 l       *ABS*	00000000 DCMI_MIS_ERR_MIS
00000002 l       *ABS*	00000000 DCMI_MIS_OVR_MIS
00000001 l       *ABS*	00000000 DCMI_MIS_FRAME_MIS
48020014 l       *ABS*	00000000 DCMI_ICR
00000010 l       *ABS*	00000000 DCMI_ICR_LINE_ISC
00000008 l       *ABS*	00000000 DCMI_ICR_VSYNC_ISC
00000004 l       *ABS*	00000000 DCMI_ICR_ERR_ISC
00000002 l       *ABS*	00000000 DCMI_ICR_OVR_ISC
00000001 l       *ABS*	00000000 DCMI_ICR_FRAME_ISC
48020018 l       *ABS*	00000000 DCMI_ESCR
00000018 l       *ABS*	00000000 DCMI_ESCR_FEC_Shift
00000010 l       *ABS*	00000000 DCMI_ESCR_LEC_Shift
00000008 l       *ABS*	00000000 DCMI_ESCR_LSC_Shift
00000000 l       *ABS*	00000000 DCMI_ESCR_FSC_Shift
4802001c l       *ABS*	00000000 DCMI_ESUR
00000018 l       *ABS*	00000000 DCMI_ESUR_FEU_Shift
00000010 l       *ABS*	00000000 DCMI_ESUR_LEU_Shift
00000008 l       *ABS*	00000000 DCMI_ESUR_LSU_Shift
00000000 l       *ABS*	00000000 DCMI_ESUR_FSU_Shift
48020020 l       *ABS*	00000000 DCMI_CWSTRT
00000010 l       *ABS*	00000000 DCMI_CWSTRT_VST_Shift
00000000 l       *ABS*	00000000 DCMI_CWSTRT_HOFFCNT_Shift
48020024 l       *ABS*	00000000 DCMI_CWSIZE
00000010 l       *ABS*	00000000 DCMI_CWSIZE_VLINE_Shift
00000000 l       *ABS*	00000000 DCMI_CWSIZE_CAPCNT_Shift
48020028 l       *ABS*	00000000 DCMI_DR
00000018 l       *ABS*	00000000 DCMI_DR_Byte3_Shift
00000010 l       *ABS*	00000000 DCMI_DR_Byte2_Shift
00000008 l       *ABS*	00000000 DCMI_DR_Byte1_Shift
00000000 l       *ABS*	00000000 DCMI_DR_Byte0_Shift
40040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_BASE
40040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL
00000001 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_SRQSCS
00000002 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_SRQ
00000100 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_HNGSCS
00000200 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_HNPRQ
00000400 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_HSHNPEN
00000800 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_DHNPEN
00010000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_CIDSTS
00020000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_DBCT
00040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_ASVLD
00080000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_BSVLD
00001000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGCTL_EHEN
40040004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT_SEDET
00000100 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT_SRSSCHG
00000200 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT_HNSSCHG
00020000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT_HNGDET
00040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT_ADTOCHG
00080000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT_DBCDNE
00100000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GOTGINT_IDCHNG
40040008 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GAHBCFG
00000001 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GAHBCFG_GINT
00000001 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GAHBCFG_HBSTLEN_Shift
00000020 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GAHBCFG_DMAEN
00000080 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GAHBCFG_TXFELVL
00000100 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GAHBCFG_PTXFELVL
4004000c l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_TOCAL_Shift
00000040 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_PHYSEL
00000100 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_SRPCAP
00000200 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_HNPCAP
0000000a l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_TRDT_Shift
00008000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_PHYLPCS
00020000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIFSLS
00040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIAR
00080000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_ULPICSM
00100000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSD
00200000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSI
00400000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_TSDPS
00800000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_PCCI
01000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_PTCI
02000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIIPD
20000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_FHMOD
40000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GUSBCFG_FDMOD
40040010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL
00000001 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_CSRST
00000002 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_HSRST
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_FCRST
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_RXFFLSH
00000020 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_TXFFLSH
00000006 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_TXFNUM_Shift
80000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_AHBIDL
40000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRSTCTL_DMAREQ
40040014 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS
00000001 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_CMOD
00000002 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_MMIS
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_OTGINT
00000008 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_SOF
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_RXFLVL
00000020 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_NPTXFE
00000040 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_GINAKEFF
00000080 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_BOUTNAKEFF
00000400 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_ESUSP
00000800 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_USBSUSP
00001000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_USBRST
00002000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_ENUMDNE
00004000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_ISOODRP
00008000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_EOPF
00040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_IEPINT
00080000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_OEPINT
00100000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_IISOIXFR
00200000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_PXFR_INCOMPISOOUT
00400000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_DATAFSUSP
01000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_HPRTINT
02000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_HCINT
04000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_PTXFE
10000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_CIDSCHG
20000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_DISCINT
40000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_SRQINT
80000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTSTS_WKUINT
40040018 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK
00000002 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_MMISM
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_OTGINT
00000008 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_SOFM
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_RXFLVLM
00000020 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_NPTXFEM
00000040 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_GINAKEFFM
00000080 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_GONAKEFFM
00000400 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_ESUSPM
00000800 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_USBSUSPM
00001000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_USBRST
00002000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_ENUMDNEM
00004000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_ISOODRPM
00008000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_EOPFM
00040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_IEPINT
00080000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_OEPINT
00100000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_IISOIXFRM
00200000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_PXFRM_IISOOXFRM
00400000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_FSUSPM
01000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_PRTIM
02000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_HCIM
04000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_PTXFEM
10000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_CIDSCHGM
20000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_DISCINT
40000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_SRQIM
80000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_WUIM
00800000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_RSTDE
08000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GINTMSK_LPMINTM
4004001c l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Host
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Host_CHNUM_Shift
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Host_BCNT_Shift
0000000f l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Host_DPID_Shift
00000011 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Host_PKTSTS_Shift
40040020 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Host
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Host_CHNUM_Shift
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Host_BCNT_Shift
0000000f l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Host_DPID_Shift
00000011 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Host_PKTSTS_Shift
40040024 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXFSIZ
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXFSIZ_RXFD_Shift
40040028 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFD_Shift
40040028 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF0_Device
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FD_Shift
4004002c l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GNPTXSTS
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXFSAV_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTQXSAV_Shift
00000018 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXQTOP_Shift
40040038 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG
00010000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_PWRDWN
00020000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_BCDEN
00040000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_DCDEN
00080000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_PDEN
00100000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_SDEN
00200000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_VBDEN
00000001 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_DCDET
00000002 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_PDET
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_SDET
00000008 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GCCFG_PS2DET
4004003c l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_CID
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_CID_PRODUCT_ID_Shift
40040100 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_HPTXFSIZ
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXFD_Shift
40040104 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF1
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXFD_Shift
40040108 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF2
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXFD_Shift
4004011c l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF3
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXFD_Shift
40040120 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF4
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXFD_Shift
40040124 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF5
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXFD_Shift
40040128 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF6
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXFD_Shift
4004012c l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF7
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXFD_Shift
4004001c l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Device
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Device_EPNUM_Shift
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Device_BCNT_Shift
0000000f l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Device_DPID_Shift
00000011 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Device_PKTSTS_Shift
00000015 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSR_Device_FRMNUM_Shift
40040020 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Device
00000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Device_EPNUM_Shift
00000004 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Device_BCNT_Shift
0000000f l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Device_DPID_Shift
00000011 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Device_PKTSTS_Shift
00000015 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GRXSTSP_Device_FRMNUM_Shift
40040054 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG
00000001 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_LPMEN
00000002 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_LPMACK
00000002 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_BESL_Shift
00000040 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_REMWAKE
00000080 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_L1SSEN
00000008 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_BESLTHRS_Shift
00001000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_L1DSEN
0000000d l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRST_Shift
00008000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_SLPSTS
00010000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_L1RSMOK
00000011 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_LPMCHIDX_Shift
00000015 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNT_Shift
01000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_SNDLPM
00000019 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNTSTS_Shift
10000000 l       *ABS*	00000000 OTG1_HS_GLOBAL_OTG_HS_GLPMCFG_ENBESL
40080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_BASE
40080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL
00000001 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_SRQSCS
00000002 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_SRQ
00000100 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_HNGSCS
00000200 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_HNPRQ
00000400 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_HSHNPEN
00000800 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_DHNPEN
00010000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_CIDSTS
00020000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_DBCT
00040000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_ASVLD
00080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_BSVLD
00001000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGCTL_EHEN
40080004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT_SEDET
00000100 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT_SRSSCHG
00000200 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT_HNSSCHG
00020000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT_HNGDET
00040000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT_ADTOCHG
00080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT_DBCDNE
00100000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GOTGINT_IDCHNG
40080008 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GAHBCFG
00000001 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GAHBCFG_GINT
00000001 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GAHBCFG_HBSTLEN_Shift
00000020 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GAHBCFG_DMAEN
00000080 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GAHBCFG_TXFELVL
00000100 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GAHBCFG_PTXFELVL
4008000c l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_TOCAL_Shift
00000040 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_PHYSEL
00000100 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_SRPCAP
00000200 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_HNPCAP
0000000a l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_TRDT_Shift
00008000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_PHYLPCS
00020000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIFSLS
00040000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIAR
00080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_ULPICSM
00100000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSD
00200000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIEVBUSI
00400000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_TSDPS
00800000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_PCCI
01000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_PTCI
02000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_ULPIIPD
20000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_FHMOD
40000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GUSBCFG_FDMOD
40080010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL
00000001 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_CSRST
00000002 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_HSRST
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_FCRST
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_RXFFLSH
00000020 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_TXFFLSH
00000006 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_TXFNUM_Shift
80000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_AHBIDL
40000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRSTCTL_DMAREQ
40080014 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS
00000001 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_CMOD
00000002 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_MMIS
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_OTGINT
00000008 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_SOF
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_RXFLVL
00000020 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_NPTXFE
00000040 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_GINAKEFF
00000080 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_BOUTNAKEFF
00000400 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_ESUSP
00000800 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_USBSUSP
00001000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_USBRST
00002000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_ENUMDNE
00004000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_ISOODRP
00008000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_EOPF
00040000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_IEPINT
00080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_OEPINT
00100000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_IISOIXFR
00200000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_PXFR_INCOMPISOOUT
00400000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_DATAFSUSP
01000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_HPRTINT
02000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_HCINT
04000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_PTXFE
10000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_CIDSCHG
20000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_DISCINT
40000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_SRQINT
80000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTSTS_WKUINT
40080018 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK
00000002 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_MMISM
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_OTGINT
00000008 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_SOFM
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_RXFLVLM
00000020 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_NPTXFEM
00000040 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_GINAKEFFM
00000080 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_GONAKEFFM
00000400 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_ESUSPM
00000800 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_USBSUSPM
00001000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_USBRST
00002000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_ENUMDNEM
00004000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_ISOODRPM
00008000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_EOPFM
00040000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_IEPINT
00080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_OEPINT
00100000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_IISOIXFRM
00200000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_PXFRM_IISOOXFRM
00400000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_FSUSPM
01000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_PRTIM
02000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_HCIM
04000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_PTXFEM
10000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_CIDSCHGM
20000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_DISCINT
40000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_SRQIM
80000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_WUIM
00800000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_RSTDE
08000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GINTMSK_LPMINTM
4008001c l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Host
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Host_CHNUM_Shift
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Host_BCNT_Shift
0000000f l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Host_DPID_Shift
00000011 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Host_PKTSTS_Shift
40080020 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Host
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Host_CHNUM_Shift
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Host_BCNT_Shift
0000000f l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Host_DPID_Shift
00000011 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Host_PKTSTS_Shift
40080024 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXFSIZ
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXFSIZ_RXFD_Shift
40080028 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_HNPTXFSIZ_Host_NPTXFD_Shift
40080028 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF0_Device
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF0_Device_TX0FD_Shift
4008002c l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GNPTXSTS
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXFSAV_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTQXSAV_Shift
00000018 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GNPTXSTS_NPTXQTOP_Shift
40080038 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG
00010000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_PWRDWN
00020000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_BCDEN
00040000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_DCDEN
00080000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_PDEN
00100000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_SDEN
00200000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_VBDEN
00000001 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_DCDET
00000002 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_PDET
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_SDET
00000008 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GCCFG_PS2DET
4008003c l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_CID
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_CID_PRODUCT_ID_Shift
40080100 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_HPTXFSIZ
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_HPTXFSIZ_PTXFD_Shift
40080104 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF1
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF1_INEPTXFD_Shift
40080108 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF2
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF2_INEPTXFD_Shift
4008011c l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF3
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF3_INEPTXFD_Shift
40080120 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF4
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF4_INEPTXFD_Shift
40080124 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF5
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF5_INEPTXFD_Shift
40080128 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF6
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF6_INEPTXFD_Shift
4008012c l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF7
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXSA_Shift
00000010 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_DIEPTXF7_INEPTXFD_Shift
4008001c l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Device
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Device_EPNUM_Shift
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Device_BCNT_Shift
0000000f l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Device_DPID_Shift
00000011 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Device_PKTSTS_Shift
00000015 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSR_Device_FRMNUM_Shift
40080020 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Device
00000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Device_EPNUM_Shift
00000004 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Device_BCNT_Shift
0000000f l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Device_DPID_Shift
00000011 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Device_PKTSTS_Shift
00000015 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GRXSTSP_Device_FRMNUM_Shift
40080054 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG
00000001 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_LPMEN
00000002 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_LPMACK
00000002 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_BESL_Shift
00000040 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_REMWAKE
00000080 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_L1SSEN
00000008 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_BESLTHRS_Shift
00001000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_L1DSEN
0000000d l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRST_Shift
00008000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_SLPSTS
00010000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_L1RSMOK
00000011 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_LPMCHIDX_Shift
00000015 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNT_Shift
01000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_SNDLPM
00000019 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_LPMRCNTSTS_Shift
10000000 l       *ABS*	00000000 OTG2_HS_GLOBAL_OTG_HS_GLPMCFG_ENBESL
40040400 l       *ABS*	00000000 OTG1_HS_HOST_BASE
40040400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCFG
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCFG_FSLSPCS_Shift
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCFG_FSLSS
40040404 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HFIR
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HFIR_FRIVL_Shift
40040408 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HFNUM
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HFNUM_FRNUM_Shift
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HFNUM_FTREM_Shift
40040410 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPTXSTS
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPTXSTS_PTXFSAVL_Shift
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPTXSTS_PTXQSAV_Shift
00000018 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPTXSTS_PTXQTOP_Shift
40040414 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HAINT
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HAINT_HAINT_Shift
40040418 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HAINTMSK
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HAINTMSK_HAINTM_Shift
40040440 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PCSTS
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PCDET
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PENA
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PENCHNG
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_POCA
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_POCCHNG
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PRES
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PSUSP
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PRST
0000000a l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PLSTS_Shift
00001000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PPWR
0000000d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PTCTL_Shift
00000011 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HPRT_PSPD_Shift
40040500 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR0_CHENA
40040520 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR1_CHENA
40040540 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR2_CHENA
40040560 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR3_CHENA
40040580 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR4_CHENA
400405a0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR5_CHENA
400405c0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR6_CHENA
400405e0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR7_CHENA
40040600 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR8_CHENA
40040620 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR9_CHENA
40040640 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR10_CHENA
40040660 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR11_CHENA
40040504 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT0
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT0_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT0_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT0_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT0_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT0_SPLITEN
40040524 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT1
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT1_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT1_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT1_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT1_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT1_SPLITEN
40040544 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT2
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT2_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT2_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT2_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT2_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT2_SPLITEN
40040564 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT3
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT3_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT3_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT3_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT3_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT3_SPLITEN
40040584 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT4
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT4_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT4_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT4_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT4_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT4_SPLITEN
400405a4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT5
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT5_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT5_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT5_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT5_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT5_SPLITEN
400405c4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT6
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT6_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT6_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT6_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT6_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT6_SPLITEN
400405e4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT7
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT7_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT7_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT7_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT7_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT7_SPLITEN
40040604 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT8
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT8_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT8_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT8_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT8_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT8_SPLITEN
40040624 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT9
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT9_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT9_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT9_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT9_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT9_SPLITEN
40040644 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT10
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT10_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT10_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT10_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT10_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT10_SPLITEN
40040664 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT11
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT11_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT11_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT11_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT11_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT11_SPLITEN
40040508 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT0_DTERR
40040528 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT1_DTERR
40040548 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT2_DTERR
40040568 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT3_DTERR
40040588 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT4_DTERR
400405a8 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT5_DTERR
400405c8 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT6_DTERR
400405e8 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT7_DTERR
40040608 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT8_DTERR
40040628 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT9_DTERR
40040648 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT10_DTERR
40040668 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT11_DTERR
4004050c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK0_DTERRM
4004052c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK1_DTERRM
4004054c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK2_DTERRM
4004056c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK3_DTERRM
4004058c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK4_DTERRM
400405ac l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK5_DTERRM
400405cc l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK6_DTERRM
400405ec l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK7_DTERRM
4004060c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK8_DTERRM
4004062c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK9_DTERRM
4004064c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK10_DTERRM
4004066c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK11_DTERRM
40040510 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ0
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ0_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ0_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ0_DPID_Shift
40040530 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ1
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ1_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ1_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ1_DPID_Shift
40040550 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ2
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ2_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ2_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ2_DPID_Shift
40040570 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ3
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ3_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ3_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ3_DPID_Shift
40040590 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ4
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ4_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ4_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ4_DPID_Shift
400405b0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ5
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ5_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ5_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ5_DPID_Shift
400405d0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ6
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ6_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ6_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ6_DPID_Shift
400405f0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ7
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ7_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ7_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ7_DPID_Shift
40040610 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ8
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ8_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ8_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ8_DPID_Shift
40040630 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ9
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ9_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ9_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ9_DPID_Shift
40040650 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ10
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ10_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ10_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ10_DPID_Shift
40040670 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ11
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ11_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ11_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ11_DPID_Shift
40040514 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA0
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA0_DMAADDR_Shift
40040534 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA1
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA1_DMAADDR_Shift
40040554 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA2
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA2_DMAADDR_Shift
40040574 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA3
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA3_DMAADDR_Shift
40040594 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA4
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA4_DMAADDR_Shift
400405b4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA5
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA5_DMAADDR_Shift
400405d4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA6
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA6_DMAADDR_Shift
400405f4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA7
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA7_DMAADDR_Shift
40040614 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA8
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA8_DMAADDR_Shift
40040634 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA9
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA9_DMAADDR_Shift
40040654 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA10
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA10_DMAADDR_Shift
40040674 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA11
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA11_DMAADDR_Shift
40040678 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR12_CHENA
4004067c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT12
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT12_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT12_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT12_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT12_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT12_SPLITEN
40040680 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT12_DTERR
40040684 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK12_DTERRM
40040688 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ12
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ12_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ12_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ12_DPID_Shift
4004068c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA12
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA12_DMAADDR_Shift
40040690 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR13_CHENA
40040694 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT13
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT13_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT13_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT13_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT13_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT13_SPLITEN
40040698 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT13_DTERR
4004069c l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK13_DTERRM
400406a0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ13
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ13_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ13_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ13_DPID_Shift
400406a4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA13
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA13_DMAADDR_Shift
400406a8 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR14_CHENA
400406ac l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT14
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT14_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT14_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT14_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT14_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT14_SPLITEN
400406b0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT14_DTERR
400406b4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_STALLM
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK14_DTERRM
400406b8 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ14
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ14_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ14_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ14_DPID_Shift
400406bc l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA14
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA14_DMAADDR_Shift
400406c0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_EPDIR
00020000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_LSDEV
00000012 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_MC_Shift
00000016 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_DAD_Shift
20000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_ODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_CHDIS
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCCHAR15_CHENA
400406c4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT15
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT15_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT15_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT15_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT15_COMPLSPLT
80000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCSPLT15_SPLITEN
400406c8 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_CHH
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_NAK
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_ACK
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_TXERR
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_BBERR
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_FRMOR
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINT15_DTERR
400406cc l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15
00000001 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_CHHM
00000004 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_AHBERR
00000008 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_STALL
00000010 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_NAKM
00000020 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_ACKM
00000040 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_NYET
00000080 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_TXERRM
00000100 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_BBERRM
00000200 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_FRMORM
00000400 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCINTMSK15_DTERRM
400406d0 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ15
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ15_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ15_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCTSIZ15_DPID_Shift
400406d4 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA15
00000000 l       *ABS*	00000000 OTG1_HS_HOST_OTG_HS_HCDMA15_DMAADDR_Shift
40080400 l       *ABS*	00000000 OTG2_HS_HOST_BASE
40080400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCFG
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCFG_FSLSPCS_Shift
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCFG_FSLSS
40080404 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HFIR
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HFIR_FRIVL_Shift
40080408 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HFNUM
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HFNUM_FRNUM_Shift
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HFNUM_FTREM_Shift
40080410 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPTXSTS
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPTXSTS_PTXFSAVL_Shift
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPTXSTS_PTXQSAV_Shift
00000018 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPTXSTS_PTXQTOP_Shift
40080414 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HAINT
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HAINT_HAINT_Shift
40080418 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HAINTMSK
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HAINTMSK_HAINTM_Shift
40080440 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PCSTS
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PCDET
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PENA
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PENCHNG
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_POCA
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_POCCHNG
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PRES
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PSUSP
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PRST
0000000a l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PLSTS_Shift
00001000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PPWR
0000000d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PTCTL_Shift
00000011 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HPRT_PSPD_Shift
40080500 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR0_CHENA
40080520 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR1_CHENA
40080540 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR2_CHENA
40080560 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR3_CHENA
40080580 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR4_CHENA
400805a0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR5_CHENA
400805c0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR6_CHENA
400805e0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR7_CHENA
40080600 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR8_CHENA
40080620 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR9_CHENA
40080640 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR10_CHENA
40080660 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR11_CHENA
40080504 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT0
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT0_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT0_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT0_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT0_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT0_SPLITEN
40080524 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT1
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT1_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT1_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT1_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT1_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT1_SPLITEN
40080544 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT2
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT2_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT2_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT2_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT2_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT2_SPLITEN
40080564 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT3
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT3_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT3_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT3_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT3_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT3_SPLITEN
40080584 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT4
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT4_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT4_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT4_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT4_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT4_SPLITEN
400805a4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT5
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT5_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT5_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT5_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT5_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT5_SPLITEN
400805c4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT6
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT6_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT6_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT6_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT6_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT6_SPLITEN
400805e4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT7
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT7_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT7_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT7_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT7_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT7_SPLITEN
40080604 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT8
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT8_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT8_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT8_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT8_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT8_SPLITEN
40080624 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT9
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT9_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT9_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT9_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT9_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT9_SPLITEN
40080644 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT10
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT10_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT10_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT10_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT10_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT10_SPLITEN
40080664 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT11
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT11_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT11_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT11_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT11_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT11_SPLITEN
40080508 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT0_DTERR
40080528 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT1_DTERR
40080548 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT2_DTERR
40080568 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT3_DTERR
40080588 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT4_DTERR
400805a8 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT5_DTERR
400805c8 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT6_DTERR
400805e8 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT7_DTERR
40080608 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT8_DTERR
40080628 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT9_DTERR
40080648 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT10_DTERR
40080668 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT11_DTERR
4008050c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK0_DTERRM
4008052c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK1_DTERRM
4008054c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK2_DTERRM
4008056c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK3_DTERRM
4008058c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK4_DTERRM
400805ac l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK5_DTERRM
400805cc l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK6_DTERRM
400805ec l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK7_DTERRM
4008060c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK8_DTERRM
4008062c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK9_DTERRM
4008064c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK10_DTERRM
4008066c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK11_DTERRM
40080510 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ0
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ0_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ0_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ0_DPID_Shift
40080530 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ1
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ1_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ1_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ1_DPID_Shift
40080550 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ2
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ2_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ2_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ2_DPID_Shift
40080570 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ3
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ3_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ3_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ3_DPID_Shift
40080590 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ4
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ4_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ4_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ4_DPID_Shift
400805b0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ5
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ5_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ5_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ5_DPID_Shift
400805d0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ6
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ6_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ6_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ6_DPID_Shift
400805f0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ7
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ7_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ7_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ7_DPID_Shift
40080610 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ8
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ8_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ8_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ8_DPID_Shift
40080630 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ9
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ9_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ9_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ9_DPID_Shift
40080650 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ10
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ10_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ10_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ10_DPID_Shift
40080670 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ11
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ11_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ11_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ11_DPID_Shift
40080514 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA0
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA0_DMAADDR_Shift
40080534 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA1
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA1_DMAADDR_Shift
40080554 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA2
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA2_DMAADDR_Shift
40080574 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA3
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA3_DMAADDR_Shift
40080594 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA4
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA4_DMAADDR_Shift
400805b4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA5
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA5_DMAADDR_Shift
400805d4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA6
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA6_DMAADDR_Shift
400805f4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA7
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA7_DMAADDR_Shift
40080614 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA8
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA8_DMAADDR_Shift
40080634 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA9
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA9_DMAADDR_Shift
40080654 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA10
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA10_DMAADDR_Shift
40080674 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA11
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA11_DMAADDR_Shift
40080678 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR12_CHENA
4008067c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT12
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT12_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT12_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT12_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT12_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT12_SPLITEN
40080680 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT12_DTERR
40080684 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK12_DTERRM
40080688 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ12
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ12_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ12_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ12_DPID_Shift
4008068c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA12
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA12_DMAADDR_Shift
40080690 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR13_CHENA
40080694 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT13
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT13_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT13_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT13_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT13_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT13_SPLITEN
40080698 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT13_DTERR
4008069c l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK13_DTERRM
400806a0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ13
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ13_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ13_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ13_DPID_Shift
400806a4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA13
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA13_DMAADDR_Shift
400806a8 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR14_CHENA
400806ac l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT14
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT14_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT14_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT14_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT14_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT14_SPLITEN
400806b0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT14_DTERR
400806b4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_STALLM
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK14_DTERRM
400806b8 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ14
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ14_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ14_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ14_DPID_Shift
400806bc l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA14
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA14_DMAADDR_Shift
400806c0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_MPSIZ_Shift
0000000b l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_EPNUM_Shift
00008000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_EPDIR
00020000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_LSDEV
00000012 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_EPTYP_Shift
00000014 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_MC_Shift
00000016 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_DAD_Shift
20000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_ODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_CHDIS
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCCHAR15_CHENA
400806c4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT15
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT15_PRTADDR_Shift
00000007 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT15_HUBADDR_Shift
0000000e l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT15_XACTPOS_Shift
00010000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT15_COMPLSPLT
80000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCSPLT15_SPLITEN
400806c8 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_CHH
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_NAK
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_ACK
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_TXERR
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_BBERR
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_FRMOR
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINT15_DTERR
400806cc l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15
00000001 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_CHHM
00000004 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_AHBERR
00000008 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_STALL
00000010 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_NAKM
00000020 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_ACKM
00000040 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_NYET
00000080 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_TXERRM
00000100 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_BBERRM
00000200 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_FRMORM
00000400 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCINTMSK15_DTERRM
400806d0 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ15
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ15_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ15_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCTSIZ15_DPID_Shift
400806d4 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA15
00000000 l       *ABS*	00000000 OTG2_HS_HOST_OTG_HS_HCDMA15_DMAADDR_Shift
40040800 l       *ABS*	00000000 OTG1_HS_DEVICE_BASE
40040800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCFG
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCFG_DSPD_Shift
00000004 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCFG_NZLSOHSK
00000004 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCFG_DAD_Shift
0000000b l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCFG_PFIVL_Shift
00000018 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCFG_PERSCHIVL_Shift
40040804 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_RWUSIG
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_SDIS
00000004 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_GINSTS
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_GONSTS
00000004 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_TCTL_Shift
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_SGINAK
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_CGINAK
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_SGONAK
00000400 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_CGONAK
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DCTL_POPRGDNE
40040808 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DSTS
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DSTS_SUSPSTS
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DSTS_ENUMSPD_Shift
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DSTS_EERR
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DSTS_FNSOF_Shift
40040810 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_EPDM
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_TOM
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_ITTXFEMSK
00000020 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_INEPNMM
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_INEPNEM
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_TXFURM
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPMSK_BIM
40040814 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK_XFRCM
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK_EPDM
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK_STUPM
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK_OTEPDM
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK_B2BSTUP
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK_OPEM
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPMSK_BOIM
40040818 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DAINT
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DAINT_IEPINT_Shift
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DAINT_OEPINT_Shift
4004081c l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DAINTMSK
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DAINTMSK_IEPM_Shift
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DAINTMSK_OEPM_Shift
40040828 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DVBUSDIS
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DVBUSDIS_VBUSDT_Shift
4004082c l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DVBUSPULSE
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DVBUSPULSE_DVBUSP_Shift
40040830 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTHRCTL
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTHRCTL_NONISOTHREN
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTHRCTL_ISOTHREN
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTHRCTL_TXTHRLEN_Shift
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTHRCTL_RXTHREN
00000011 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTHRCTL_RXTHRLEN_Shift
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTHRCTL_ARPEN
40040834 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPEMPMSK
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPEMPMSK_INEPTXFEM_Shift
40040838 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DEACHINT
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DEACHINT_IEP1INT
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DEACHINT_OEP1INT
4004083c l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DEACHINTMSK
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DEACHINTMSK_IEP1INTM
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DEACHINTMSK_OEP1INTM
40040900 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL0_EPENA
40040920 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL1_EPENA
40040940 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL2_EPENA
40040960 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL3_EPENA
40040980 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL4_EPENA
400409a0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL5_EPENA
400409c0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL6_EPENA
400409e0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_Stall
00000016 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPCTL7_EPENA
40040908 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT0_NAK
40040928 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT1_NAK
40040948 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT2_NAK
40040968 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT3_NAK
40040988 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT4_NAK
400409a8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT5_NAK
400409c8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT6_NAK
400409e8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_TOC
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_ITTXFE
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_INEPNE
00000080 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_TXFE
00000100 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_BNA
00000800 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_BERR
00002000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPINT7_NAK
40040910 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ0
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ0_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ0_PKTCNT_Shift
40040914 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA1
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA1_DMAADDR_Shift
40040934 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA2
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA2_DMAADDR_Shift
40040954 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA3
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA3_DMAADDR_Shift
40040974 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA4
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA4_DMAADDR_Shift
40040994 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA5
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPDMA5_DMAADDR_Shift
40040918 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS0
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS0_INEPTFSAV_Shift
40040938 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS1
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS1_INEPTFSAV_Shift
40040958 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS2
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS2_INEPTFSAV_Shift
40040978 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS3
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS3_INEPTFSAV_Shift
40040998 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS4
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS4_INEPTFSAV_Shift
400409b8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS5
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS5_INEPTFSAV_Shift
40040930 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ1
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ1_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ1_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ1_MCNT_Shift
40040950 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ2
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ2_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ2_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ2_MCNT_Shift
40040970 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ3
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ3_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ3_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ3_MCNT_Shift
40040990 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ4
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ4_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ4_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ4_MCNT_Shift
400409b0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ5
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ5_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ5_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ5_MCNT_Shift
40040b00 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_USBAEP
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_SNAK
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL0_EPENA
40040b20 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL1_EPENA
40040b40 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL2_EPENA
40040b60 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL3_EPENA
40040b08 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT0
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT0_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT0_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT0_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT0_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT0_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT0_NYET
40040b28 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT1
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT1_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT1_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT1_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT1_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT1_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT1_NYET
40040b48 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT2
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT2_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT2_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT2_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT2_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT2_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT2_NYET
40040b68 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT3
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT3_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT3_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT3_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT3_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT3_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT3_NYET
40040b88 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT4
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT4_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT4_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT4_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT4_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT4_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT4_NYET
40040ba8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT5
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT5_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT5_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT5_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT5_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT5_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT5_NYET
40040bc8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT6
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT6_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT6_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT6_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT6_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT6_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT6_NYET
40040be8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT7
00000001 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT7_XFRC
00000002 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT7_EPDISD
00000008 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT7_STUP
00000010 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT7_OTEPDIS
00000040 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT7_B2BSTUP
00004000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPINT7_NYET
40040b10 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ0
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ0_XFRSIZ_Shift
00080000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ0_PKTCNT
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ0_STUPCNT_Shift
40040b30 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ1
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ1_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ1_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ1_RXDPID_STUPCNT_Shift
40040b50 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ2
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ2_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ2_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ2_RXDPID_STUPCNT_Shift
40040b70 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ3
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ3_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ3_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ3_RXDPID_STUPCNT_Shift
40040b90 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ4
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ4_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ4_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ4_RXDPID_STUPCNT_Shift
400409a0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ6
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ6_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ6_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ6_MCNT_Shift
400409a4 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS6
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS6_INEPTFSAV_Shift
400409a8 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ7
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ7_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ7_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DIEPTSIZ7_MCNT_Shift
400409ac l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS7
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DTXFSTS7_INEPTFSAV_Shift
40040b80 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL4_EPENA
40040ba0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL5_EPENA
40040bc0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL6_EPENA
40040be0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_USBAEP
00010000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_EONUM_DPID
00020000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_NAKSTS
00000012 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_SNPM
00200000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_Stall
04000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_CNAK
08000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_SNAK
10000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_SODDFRM
40000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_EPDIS
80000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPCTL7_EPENA
40040bb0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ5
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ5_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ5_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ5_RXDPID_STUPCNT_Shift
40040bd0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ6
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ6_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ6_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ6_RXDPID_STUPCNT_Shift
40040bf0 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ7
00000000 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ7_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ7_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG1_HS_DEVICE_OTG_HS_DOEPTSIZ7_RXDPID_STUPCNT_Shift
40080800 l       *ABS*	00000000 OTG2_HS_DEVICE_BASE
40080800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCFG
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCFG_DSPD_Shift
00000004 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCFG_NZLSOHSK
00000004 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCFG_DAD_Shift
0000000b l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCFG_PFIVL_Shift
00000018 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCFG_PERSCHIVL_Shift
40080804 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_RWUSIG
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_SDIS
00000004 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_GINSTS
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_GONSTS
00000004 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_TCTL_Shift
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_SGINAK
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_CGINAK
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_SGONAK
00000400 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_CGONAK
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DCTL_POPRGDNE
40080808 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DSTS
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DSTS_SUSPSTS
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DSTS_ENUMSPD_Shift
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DSTS_EERR
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DSTS_FNSOF_Shift
40080810 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_EPDM
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_TOM
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_ITTXFEMSK
00000020 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_INEPNMM
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_INEPNEM
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_TXFURM
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPMSK_BIM
40080814 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK_XFRCM
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK_EPDM
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK_STUPM
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK_OTEPDM
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK_B2BSTUP
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK_OPEM
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPMSK_BOIM
40080818 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DAINT
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DAINT_IEPINT_Shift
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DAINT_OEPINT_Shift
4008081c l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DAINTMSK
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DAINTMSK_IEPM_Shift
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DAINTMSK_OEPM_Shift
40080828 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DVBUSDIS
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DVBUSDIS_VBUSDT_Shift
4008082c l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DVBUSPULSE
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DVBUSPULSE_DVBUSP_Shift
40080830 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTHRCTL
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTHRCTL_NONISOTHREN
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTHRCTL_ISOTHREN
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTHRCTL_TXTHRLEN_Shift
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTHRCTL_RXTHREN
00000011 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTHRCTL_RXTHRLEN_Shift
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTHRCTL_ARPEN
40080834 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPEMPMSK
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPEMPMSK_INEPTXFEM_Shift
40080838 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DEACHINT
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DEACHINT_IEP1INT
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DEACHINT_OEP1INT
4008083c l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DEACHINTMSK
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DEACHINTMSK_IEP1INTM
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DEACHINTMSK_OEP1INTM
40080900 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL0_EPENA
40080920 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL1_EPENA
40080940 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL2_EPENA
40080960 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL3_EPENA
40080980 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL4_EPENA
400809a0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL5_EPENA
400809c0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL6_EPENA
400809e0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_EPTYP_Shift
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_Stall
00000016 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_TXFNUM_Shift
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPCTL7_EPENA
40080908 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT0_NAK
40080928 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT1_NAK
40080948 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT2_NAK
40080968 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT3_NAK
40080988 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT4_NAK
400809a8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT5_NAK
400809c8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT6_NAK
400809e8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_TOC
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_ITTXFE
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_INEPNE
00000080 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_TXFE
00000100 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_TXFIFOUDRN
00000200 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_BNA
00000800 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_PKTDRPSTS
00001000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_BERR
00002000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPINT7_NAK
40080910 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ0
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ0_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ0_PKTCNT_Shift
40080914 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA1
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA1_DMAADDR_Shift
40080934 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA2
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA2_DMAADDR_Shift
40080954 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA3
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA3_DMAADDR_Shift
40080974 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA4
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA4_DMAADDR_Shift
40080994 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA5
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPDMA5_DMAADDR_Shift
40080918 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS0
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS0_INEPTFSAV_Shift
40080938 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS1
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS1_INEPTFSAV_Shift
40080958 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS2
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS2_INEPTFSAV_Shift
40080978 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS3
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS3_INEPTFSAV_Shift
40080998 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS4
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS4_INEPTFSAV_Shift
400809b8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS5
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS5_INEPTFSAV_Shift
40080930 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ1
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ1_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ1_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ1_MCNT_Shift
40080950 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ2
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ2_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ2_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ2_MCNT_Shift
40080970 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ3
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ3_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ3_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ3_MCNT_Shift
40080990 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ4
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ4_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ4_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ4_MCNT_Shift
400809b0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ5
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ5_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ5_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ5_MCNT_Shift
40080b00 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_USBAEP
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_SNAK
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL0_EPENA
40080b20 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL1_EPENA
40080b40 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL2_EPENA
40080b60 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL3_EPENA
40080b08 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT0
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT0_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT0_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT0_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT0_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT0_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT0_NYET
40080b28 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT1
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT1_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT1_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT1_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT1_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT1_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT1_NYET
40080b48 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT2
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT2_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT2_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT2_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT2_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT2_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT2_NYET
40080b68 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT3
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT3_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT3_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT3_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT3_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT3_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT3_NYET
40080b88 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT4
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT4_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT4_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT4_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT4_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT4_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT4_NYET
40080ba8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT5
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT5_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT5_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT5_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT5_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT5_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT5_NYET
40080bc8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT6
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT6_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT6_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT6_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT6_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT6_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT6_NYET
40080be8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT7
00000001 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT7_XFRC
00000002 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT7_EPDISD
00000008 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT7_STUP
00000010 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT7_OTEPDIS
00000040 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT7_B2BSTUP
00004000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPINT7_NYET
40080b10 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ0
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ0_XFRSIZ_Shift
00080000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ0_PKTCNT
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ0_STUPCNT_Shift
40080b30 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ1
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ1_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ1_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ1_RXDPID_STUPCNT_Shift
40080b50 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ2
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ2_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ2_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ2_RXDPID_STUPCNT_Shift
40080b70 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ3
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ3_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ3_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ3_RXDPID_STUPCNT_Shift
40080b90 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ4
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ4_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ4_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ4_RXDPID_STUPCNT_Shift
400809a0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ6
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ6_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ6_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ6_MCNT_Shift
400809a4 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS6
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS6_INEPTFSAV_Shift
400809a8 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ7
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ7_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ7_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DIEPTSIZ7_MCNT_Shift
400809ac l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS7
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DTXFSTS7_INEPTFSAV_Shift
40080b80 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL4_EPENA
40080ba0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL5_EPENA
40080bc0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL6_EPENA
40080be0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_MPSIZ_Shift
00008000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_USBAEP
00010000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_EONUM_DPID
00020000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_NAKSTS
00000012 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_EPTYP_Shift
00100000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_SNPM
00200000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_Stall
04000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_CNAK
08000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_SNAK
10000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_SD0PID_SEVNFRM
20000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_SODDFRM
40000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_EPDIS
80000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPCTL7_EPENA
40080bb0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ5
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ5_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ5_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ5_RXDPID_STUPCNT_Shift
40080bd0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ6
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ6_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ6_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ6_RXDPID_STUPCNT_Shift
40080bf0 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ7
00000000 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ7_XFRSIZ_Shift
00000013 l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ7_PKTCNT_Shift
0000001d l       *ABS*	00000000 OTG2_HS_DEVICE_OTG_HS_DOEPTSIZ7_RXDPID_STUPCNT_Shift
40040e00 l       *ABS*	00000000 OTG1_HS_PWRCLK_BASE
40040e00 l       *ABS*	00000000 OTG1_HS_PWRCLK_OTG_HS_PCGCR
00000001 l       *ABS*	00000000 OTG1_HS_PWRCLK_OTG_HS_PCGCR_STPPCLK
00000002 l       *ABS*	00000000 OTG1_HS_PWRCLK_OTG_HS_PCGCR_GATEHCLK
00000010 l       *ABS*	00000000 OTG1_HS_PWRCLK_OTG_HS_PCGCR_PHYSUSP
40080e00 l       *ABS*	00000000 OTG2_HS_PWRCLK_BASE
40080e00 l       *ABS*	00000000 OTG2_HS_PWRCLK_OTG_HS_PCGCR
00000001 l       *ABS*	00000000 OTG2_HS_PWRCLK_OTG_HS_PCGCR_STPPCLK
00000002 l       *ABS*	00000000 OTG2_HS_PWRCLK_OTG_HS_PCGCR_GATEHCLK
00000010 l       *ABS*	00000000 OTG2_HS_PWRCLK_OTG_HS_PCGCR_PHYSUSP
40029000 l       *ABS*	00000000 Ethernet_DMA_BASE
40029000 l       *ABS*	00000000 Ethernet_DMA_DMAMR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMAMR_SWR
00000002 l       *ABS*	00000000 Ethernet_DMA_DMAMR_DA
00000800 l       *ABS*	00000000 Ethernet_DMA_DMAMR_TXPR
0000000c l       *ABS*	00000000 Ethernet_DMA_DMAMR_PR_Shift
00010000 l       *ABS*	00000000 Ethernet_DMA_DMAMR_INTM
40029004 l       *ABS*	00000000 Ethernet_DMA_DMASBMR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMASBMR_FB
00001000 l       *ABS*	00000000 Ethernet_DMA_DMASBMR_AAL
00004000 l       *ABS*	00000000 Ethernet_DMA_DMASBMR_MB
00008000 l       *ABS*	00000000 Ethernet_DMA_DMASBMR_RB
40029008 l       *ABS*	00000000 Ethernet_DMA_DMAISR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMAISR_DC0IS
00010000 l       *ABS*	00000000 Ethernet_DMA_DMAISR_MTLIS
00020000 l       *ABS*	00000000 Ethernet_DMA_DMAISR_MACIS
4002900c l       *ABS*	00000000 Ethernet_DMA_DMADSR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMADSR_AXWHSTS
00000008 l       *ABS*	00000000 Ethernet_DMA_DMADSR_RPS0_Shift
0000000c l       *ABS*	00000000 Ethernet_DMA_DMADSR_TPS0_Shift
40029100 l       *ABS*	00000000 Ethernet_DMA_DMACCR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACCR_MSS_Shift
00010000 l       *ABS*	00000000 Ethernet_DMA_DMACCR_PBLX8
00000012 l       *ABS*	00000000 Ethernet_DMA_DMACCR_DSL_Shift
40029104 l       *ABS*	00000000 Ethernet_DMA_DMACTxCR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMACTxCR_ST
00000010 l       *ABS*	00000000 Ethernet_DMA_DMACTxCR_OSF
00001000 l       *ABS*	00000000 Ethernet_DMA_DMACTxCR_TSE
00000010 l       *ABS*	00000000 Ethernet_DMA_DMACTxCR_TXPBL_Shift
40029108 l       *ABS*	00000000 Ethernet_DMA_DMACRxCR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMACRxCR_SR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMACRxCR_RBSZ_Shift
00000010 l       *ABS*	00000000 Ethernet_DMA_DMACRxCR_RXPBL_Shift
80000000 l       *ABS*	00000000 Ethernet_DMA_DMACRxCR_RPF
40029114 l       *ABS*	00000000 Ethernet_DMA_DMACTxDLAR
00000002 l       *ABS*	00000000 Ethernet_DMA_DMACTxDLAR_TDESLA_Shift
4002911c l       *ABS*	00000000 Ethernet_DMA_DMACRxDLAR
00000002 l       *ABS*	00000000 Ethernet_DMA_DMACRxDLAR_RDESLA_Shift
40029120 l       *ABS*	00000000 Ethernet_DMA_DMACTxDTPR
00000002 l       *ABS*	00000000 Ethernet_DMA_DMACTxDTPR_TDT_Shift
40029128 l       *ABS*	00000000 Ethernet_DMA_DMACRxDTPR
00000002 l       *ABS*	00000000 Ethernet_DMA_DMACRxDTPR_RDT_Shift
4002912c l       *ABS*	00000000 Ethernet_DMA_DMACTxRLR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACTxRLR_TDRL_Shift
40029130 l       *ABS*	00000000 Ethernet_DMA_DMACRxRLR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACRxRLR_RDRL_Shift
40029134 l       *ABS*	00000000 Ethernet_DMA_DMACIER
00000001 l       *ABS*	00000000 Ethernet_DMA_DMACIER_TIE
00000002 l       *ABS*	00000000 Ethernet_DMA_DMACIER_TXSE
00000004 l       *ABS*	00000000 Ethernet_DMA_DMACIER_TBUE
00000040 l       *ABS*	00000000 Ethernet_DMA_DMACIER_RIE
00000080 l       *ABS*	00000000 Ethernet_DMA_DMACIER_RBUE
00000100 l       *ABS*	00000000 Ethernet_DMA_DMACIER_RSE
00000200 l       *ABS*	00000000 Ethernet_DMA_DMACIER_RWTE
00000400 l       *ABS*	00000000 Ethernet_DMA_DMACIER_ETIE
00000800 l       *ABS*	00000000 Ethernet_DMA_DMACIER_ERIE
00001000 l       *ABS*	00000000 Ethernet_DMA_DMACIER_FBEE
00002000 l       *ABS*	00000000 Ethernet_DMA_DMACIER_CDEE
00004000 l       *ABS*	00000000 Ethernet_DMA_DMACIER_AIE
00008000 l       *ABS*	00000000 Ethernet_DMA_DMACIER_NIE
40029138 l       *ABS*	00000000 Ethernet_DMA_DMACRxIWTR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACRxIWTR_RWT_Shift
40029144 l       *ABS*	00000000 Ethernet_DMA_DMACCATxDR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACCATxDR_CURTDESAPTR_Shift
4002914c l       *ABS*	00000000 Ethernet_DMA_DMACCARxDR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACCARxDR_CURRDESAPTR_Shift
40029154 l       *ABS*	00000000 Ethernet_DMA_DMACCATxBR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACCATxBR_CURTBUFAPTR_Shift
4002915c l       *ABS*	00000000 Ethernet_DMA_DMACCARxBR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACCARxBR_CURRBUFAPTR_Shift
40029160 l       *ABS*	00000000 Ethernet_DMA_DMACSR
00000001 l       *ABS*	00000000 Ethernet_DMA_DMACSR_TI
00000002 l       *ABS*	00000000 Ethernet_DMA_DMACSR_TPS
00000004 l       *ABS*	00000000 Ethernet_DMA_DMACSR_TBU
00000040 l       *ABS*	00000000 Ethernet_DMA_DMACSR_RI
00000080 l       *ABS*	00000000 Ethernet_DMA_DMACSR_RBU
00000100 l       *ABS*	00000000 Ethernet_DMA_DMACSR_RPS
00000200 l       *ABS*	00000000 Ethernet_DMA_DMACSR_RWT
00000400 l       *ABS*	00000000 Ethernet_DMA_DMACSR_ET
00000800 l       *ABS*	00000000 Ethernet_DMA_DMACSR_ER
00001000 l       *ABS*	00000000 Ethernet_DMA_DMACSR_FBE
00002000 l       *ABS*	00000000 Ethernet_DMA_DMACSR_CDE
00004000 l       *ABS*	00000000 Ethernet_DMA_DMACSR_AIS
00008000 l       *ABS*	00000000 Ethernet_DMA_DMACSR_NIS
00000010 l       *ABS*	00000000 Ethernet_DMA_DMACSR_TEB_Shift
00000013 l       *ABS*	00000000 Ethernet_DMA_DMACSR_REB_Shift
4002916c l       *ABS*	00000000 Ethernet_DMA_DMACMFCR
00000000 l       *ABS*	00000000 Ethernet_DMA_DMACMFCR_MFC_Shift
00008000 l       *ABS*	00000000 Ethernet_DMA_DMACMFCR_MFCO
40028c00 l       *ABS*	00000000 Ethernet_MTL_BASE
40028c00 l       *ABS*	00000000 Ethernet_MTL_MTLOMR
00000002 l       *ABS*	00000000 Ethernet_MTL_MTLOMR_DTXSTS
00000100 l       *ABS*	00000000 Ethernet_MTL_MTLOMR_CNTPRST
00000200 l       *ABS*	00000000 Ethernet_MTL_MTLOMR_CNTCLR
40028c20 l       *ABS*	00000000 Ethernet_MTL_MTLISR
00000001 l       *ABS*	00000000 Ethernet_MTL_MTLISR_Q0IS
40028d00 l       *ABS*	00000000 Ethernet_MTL_MTLTxQOMR
00000001 l       *ABS*	00000000 Ethernet_MTL_MTLTxQOMR_FTQ
00000002 l       *ABS*	00000000 Ethernet_MTL_MTLTxQOMR_TSF
00000002 l       *ABS*	00000000 Ethernet_MTL_MTLTxQOMR_TXQEN_Shift
00000004 l       *ABS*	00000000 Ethernet_MTL_MTLTxQOMR_TTC_Shift
00000010 l       *ABS*	00000000 Ethernet_MTL_MTLTxQOMR_TQS_Shift
40028d04 l       *ABS*	00000000 Ethernet_MTL_MTLTxQUR
00000000 l       *ABS*	00000000 Ethernet_MTL_MTLTxQUR_UFFRMCNT_Shift
00000800 l       *ABS*	00000000 Ethernet_MTL_MTLTxQUR_UFCNTOVF
40028d08 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR
00000001 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR_TXQPAUSED
00000001 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR_TRCSTS_Shift
00000008 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR_TWCSTS
00000010 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR_TXQSTS
00000020 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR_TXSTSFSTS
00000010 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR_PTXQ_Shift
00000014 l       *ABS*	00000000 Ethernet_MTL_MTLTxQDR_STXSTSF_Shift
40028d2c l       *ABS*	00000000 Ethernet_MTL_MTLQICSR
00000001 l       *ABS*	00000000 Ethernet_MTL_MTLQICSR_TXUNFIS
00000100 l       *ABS*	00000000 Ethernet_MTL_MTLQICSR_TXUIE
00010000 l       *ABS*	00000000 Ethernet_MTL_MTLQICSR_RXOVFIS
01000000 l       *ABS*	00000000 Ethernet_MTL_MTLQICSR_RXOIE
40028d30 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR
00000000 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_RTC_Shift
00000008 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_FUP
00000010 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_FEP
00000020 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_RSF
00000040 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_DIS_TCP_EF
00000080 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_EHFC
00000008 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_RFA_Shift
0000000e l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_RFD_Shift
00000014 l       *ABS*	00000000 Ethernet_MTL_MTLRxQOMR_RQS_Shift
40028d34 l       *ABS*	00000000 Ethernet_MTL_MTLRxQMPOCR
00000000 l       *ABS*	00000000 Ethernet_MTL_MTLRxQMPOCR_OVFPKTCNT_Shift
00000800 l       *ABS*	00000000 Ethernet_MTL_MTLRxQMPOCR_OVFCNTOVF
00000010 l       *ABS*	00000000 Ethernet_MTL_MTLRxQMPOCR_MISPKTCNT_Shift
08000000 l       *ABS*	00000000 Ethernet_MTL_MTLRxQMPOCR_MISCNTOVF
40028d38 l       *ABS*	00000000 Ethernet_MTL_MTLRxQDR
00000001 l       *ABS*	00000000 Ethernet_MTL_MTLRxQDR_RWCSTS
00000001 l       *ABS*	00000000 Ethernet_MTL_MTLRxQDR_RRCSTS_Shift
00000004 l       *ABS*	00000000 Ethernet_MTL_MTLRxQDR_RXQSTS_Shift
00000010 l       *ABS*	00000000 Ethernet_MTL_MTLRxQDR_PRXQ_Shift
40028000 l       *ABS*	00000000 Ethernet_MAC_BASE
40028000 l       *ABS*	00000000 Ethernet_MAC_MACCR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACCR_RE
00000002 l       *ABS*	00000000 Ethernet_MAC_MACCR_TE
00000002 l       *ABS*	00000000 Ethernet_MAC_MACCR_PRELEN_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACCR_DC
00000005 l       *ABS*	00000000 Ethernet_MAC_MACCR_BL_Shift
00000100 l       *ABS*	00000000 Ethernet_MAC_MACCR_DR
00000200 l       *ABS*	00000000 Ethernet_MAC_MACCR_DCRS
00000400 l       *ABS*	00000000 Ethernet_MAC_MACCR_DO
00000800 l       *ABS*	00000000 Ethernet_MAC_MACCR_ECRSFD
00001000 l       *ABS*	00000000 Ethernet_MAC_MACCR_LM
00002000 l       *ABS*	00000000 Ethernet_MAC_MACCR_DM
00004000 l       *ABS*	00000000 Ethernet_MAC_MACCR_FES
00010000 l       *ABS*	00000000 Ethernet_MAC_MACCR_JE
00020000 l       *ABS*	00000000 Ethernet_MAC_MACCR_JD
00080000 l       *ABS*	00000000 Ethernet_MAC_MACCR_WD
00100000 l       *ABS*	00000000 Ethernet_MAC_MACCR_ACS
00200000 l       *ABS*	00000000 Ethernet_MAC_MACCR_CST
00400000 l       *ABS*	00000000 Ethernet_MAC_MACCR_S2KP
00800000 l       *ABS*	00000000 Ethernet_MAC_MACCR_GPSLCE
00000018 l       *ABS*	00000000 Ethernet_MAC_MACCR_IPG_Shift
08000000 l       *ABS*	00000000 Ethernet_MAC_MACCR_IPC
0000001c l       *ABS*	00000000 Ethernet_MAC_MACCR_SARC_Shift
80000000 l       *ABS*	00000000 Ethernet_MAC_MACCR_ARPEN
40028004 l       *ABS*	00000000 Ethernet_MAC_MACECR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACECR_GPSL_Shift
00010000 l       *ABS*	00000000 Ethernet_MAC_MACECR_DCRCC
00020000 l       *ABS*	00000000 Ethernet_MAC_MACECR_SPEN
00040000 l       *ABS*	00000000 Ethernet_MAC_MACECR_USP
01000000 l       *ABS*	00000000 Ethernet_MAC_MACECR_EIPGEN
00000019 l       *ABS*	00000000 Ethernet_MAC_MACECR_EIPG_Shift
40028008 l       *ABS*	00000000 Ethernet_MAC_MACPFR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACPFR_PR
00000002 l       *ABS*	00000000 Ethernet_MAC_MACPFR_HUC
00000004 l       *ABS*	00000000 Ethernet_MAC_MACPFR_HMC
00000008 l       *ABS*	00000000 Ethernet_MAC_MACPFR_DAIF
00000010 l       *ABS*	00000000 Ethernet_MAC_MACPFR_PM
00000020 l       *ABS*	00000000 Ethernet_MAC_MACPFR_DBF
00000006 l       *ABS*	00000000 Ethernet_MAC_MACPFR_PCF_Shift
00000100 l       *ABS*	00000000 Ethernet_MAC_MACPFR_SAIF
00000200 l       *ABS*	00000000 Ethernet_MAC_MACPFR_SAF
00000400 l       *ABS*	00000000 Ethernet_MAC_MACPFR_HPF
00010000 l       *ABS*	00000000 Ethernet_MAC_MACPFR_VTFE
00100000 l       *ABS*	00000000 Ethernet_MAC_MACPFR_IPFE
00200000 l       *ABS*	00000000 Ethernet_MAC_MACPFR_DNTU
80000000 l       *ABS*	00000000 Ethernet_MAC_MACPFR_RA
4002800c l       *ABS*	00000000 Ethernet_MAC_MACWTR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACWTR_WTO_Shift
00000100 l       *ABS*	00000000 Ethernet_MAC_MACWTR_PWE
40028010 l       *ABS*	00000000 Ethernet_MAC_MACHT0R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACHT0R_HT31T0_Shift
40028014 l       *ABS*	00000000 Ethernet_MAC_MACHT1R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACHT1R_HT63T32_Shift
40028050 l       *ABS*	00000000 Ethernet_MAC_MACVTR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_VL_Shift
00010000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_ETV
00020000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_VTIM
00040000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_ESVL
00080000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_ERSVLM
00100000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_DOVLTC
00000015 l       *ABS*	00000000 Ethernet_MAC_MACVTR_EVLS_Shift
01000000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_EVLRXS
02000000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_VTHM
04000000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_EDVLP
08000000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_ERIVLT
0000001c l       *ABS*	00000000 Ethernet_MAC_MACVTR_EIVLS_Shift
80000000 l       *ABS*	00000000 Ethernet_MAC_MACVTR_EIVLRXS
40028058 l       *ABS*	00000000 Ethernet_MAC_MACVHTR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACVHTR_VLHT_Shift
40028060 l       *ABS*	00000000 Ethernet_MAC_MACVIR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACVIR_VLT_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACVIR_VLC_Shift
00040000 l       *ABS*	00000000 Ethernet_MAC_MACVIR_VLP
00080000 l       *ABS*	00000000 Ethernet_MAC_MACVIR_CSVL
00100000 l       *ABS*	00000000 Ethernet_MAC_MACVIR_VLTI
40028064 l       *ABS*	00000000 Ethernet_MAC_MACIVIR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACIVIR_VLT_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACIVIR_VLC_Shift
00040000 l       *ABS*	00000000 Ethernet_MAC_MACIVIR_VLP
00080000 l       *ABS*	00000000 Ethernet_MAC_MACIVIR_CSVL
00100000 l       *ABS*	00000000 Ethernet_MAC_MACIVIR_VLTI
40028070 l       *ABS*	00000000 Ethernet_MAC_MACQTxFCR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACQTxFCR_FCB_BPA
00000002 l       *ABS*	00000000 Ethernet_MAC_MACQTxFCR_TFE
00000004 l       *ABS*	00000000 Ethernet_MAC_MACQTxFCR_PLT_Shift
00000080 l       *ABS*	00000000 Ethernet_MAC_MACQTxFCR_DZPQ
00000010 l       *ABS*	00000000 Ethernet_MAC_MACQTxFCR_PT_Shift
40028090 l       *ABS*	00000000 Ethernet_MAC_MACRxFCR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACRxFCR_RFE
00000002 l       *ABS*	00000000 Ethernet_MAC_MACRxFCR_UP
400280b0 l       *ABS*	00000000 Ethernet_MAC_MACISR
00000008 l       *ABS*	00000000 Ethernet_MAC_MACISR_PHYIS
00000010 l       *ABS*	00000000 Ethernet_MAC_MACISR_PMTIS
00000020 l       *ABS*	00000000 Ethernet_MAC_MACISR_LPIIS
00000100 l       *ABS*	00000000 Ethernet_MAC_MACISR_MMCIS
00000200 l       *ABS*	00000000 Ethernet_MAC_MACISR_MMCRXIS
00000400 l       *ABS*	00000000 Ethernet_MAC_MACISR_MMCTXIS
00001000 l       *ABS*	00000000 Ethernet_MAC_MACISR_TSIS
00002000 l       *ABS*	00000000 Ethernet_MAC_MACISR_TXSTSIS
00004000 l       *ABS*	00000000 Ethernet_MAC_MACISR_RXSTSIS
400280b4 l       *ABS*	00000000 Ethernet_MAC_MACIER
00000008 l       *ABS*	00000000 Ethernet_MAC_MACIER_PHYIE
00000010 l       *ABS*	00000000 Ethernet_MAC_MACIER_PMTIE
00000020 l       *ABS*	00000000 Ethernet_MAC_MACIER_LPIIE
00001000 l       *ABS*	00000000 Ethernet_MAC_MACIER_TSIE
00002000 l       *ABS*	00000000 Ethernet_MAC_MACIER_TXSTSIE
00004000 l       *ABS*	00000000 Ethernet_MAC_MACIER_RXSTSIE
400280b8 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR_TJT
00000002 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR_NCARR
00000004 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR_LCARR
00000008 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR_EXDEF
00000010 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR_LCOL
00000020 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR_EXCOL
00000100 l       *ABS*	00000000 Ethernet_MAC_MACRxTxSR_RWT
400280c0 l       *ABS*	00000000 Ethernet_MAC_MACPCSR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_PWRDWN
00000002 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_MGKPKTEN
00000004 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_RWKPKTEN
00000020 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_MGKPRCVD
00000040 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_RWKPRCVD
00000200 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_GLBLUCAST
00000400 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_RWKPFE
00000018 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_RWKPTR_Shift
80000000 l       *ABS*	00000000 Ethernet_MAC_MACPCSR_RWKFILTRST
400280c4 l       *ABS*	00000000 Ethernet_MAC_MACRWKPFR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACRWKPFR_MACRWKPFR_Shift
400280d0 l       *ABS*	00000000 Ethernet_MAC_MACLCSR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_TLPIEN
00000002 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_TLPIEX
00000004 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_RLPIEN
00000008 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_RLPIEX
00000100 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_TLPIST
00000200 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_RLPIST
00010000 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_LPIEN
00020000 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_PLS
00040000 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_PLSEN
00080000 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_LPITXA
00100000 l       *ABS*	00000000 Ethernet_MAC_MACLCSR_LPITE
400280d4 l       *ABS*	00000000 Ethernet_MAC_MACLTCR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACLTCR_TWT_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACLTCR_LST_Shift
400280d8 l       *ABS*	00000000 Ethernet_MAC_MACLETR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACLETR_LPIET_Shift
400280dc l       *ABS*	00000000 Ethernet_MAC_MAC1USTCR
00000000 l       *ABS*	00000000 Ethernet_MAC_MAC1USTCR_TIC_1US_CNTR_Shift
40028110 l       *ABS*	00000000 Ethernet_MAC_MACVR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACVR_SNPSVER_Shift
00000008 l       *ABS*	00000000 Ethernet_MAC_MACVR_USERVER_Shift
40028114 l       *ABS*	00000000 Ethernet_MAC_MACDR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACDR_RPESTS
00000001 l       *ABS*	00000000 Ethernet_MAC_MACDR_RFCFCSTS_Shift
00010000 l       *ABS*	00000000 Ethernet_MAC_MACDR_TPESTS
00000011 l       *ABS*	00000000 Ethernet_MAC_MACDR_TFCSTS_Shift
40028120 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_RXFIFOSIZE_Shift
00000006 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_TXFIFOSIZE_Shift
00000800 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_OSTEN
00001000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_PTOEN
00002000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_ADVTHWORD
0000000e l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_ADDR64_Shift
00010000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_DCBEN
00020000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_SPHEN
00040000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_TSOEN
00080000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_DBGMEMA
00100000 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_AVSEL
00000018 l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_HASHTBLSZ_Shift
0000001b l       *ABS*	00000000 Ethernet_MAC_MACHWF1R_L3L4FNUM_Shift
40028124 l       *ABS*	00000000 Ethernet_MAC_MACHWF2R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACHWF2R_RXQCNT_Shift
00000006 l       *ABS*	00000000 Ethernet_MAC_MACHWF2R_TXQCNT_Shift
0000000c l       *ABS*	00000000 Ethernet_MAC_MACHWF2R_RXCHCNT_Shift
00000012 l       *ABS*	00000000 Ethernet_MAC_MACHWF2R_TXCHCNT_Shift
00000018 l       *ABS*	00000000 Ethernet_MAC_MACHWF2R_PPSOUTNUM_Shift
0000001c l       *ABS*	00000000 Ethernet_MAC_MACHWF2R_AUXSNAPNUM_Shift
40028200 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_MB
00000002 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_C45E
00000002 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_GOC_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_SKAP
00000008 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_CR_Shift
0000000c l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_NTC_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_RDA_Shift
00000015 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_PA_Shift
04000000 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_BTB
08000000 l       *ABS*	00000000 Ethernet_MAC_MACMDIOAR_PSE
40028204 l       *ABS*	00000000 Ethernet_MAC_MACMDIODR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACMDIODR_MD_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACMDIODR_RA_Shift
40028ae0 l       *ABS*	00000000 Ethernet_MAC_MACARPAR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACARPAR_ARPPA_Shift
40028300 l       *ABS*	00000000 Ethernet_MAC_MACA0HR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA0HR_ADDRHI_Shift
80000000 l       *ABS*	00000000 Ethernet_MAC_MACA0HR_AE
40028304 l       *ABS*	00000000 Ethernet_MAC_MACA0LR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA0LR_ADDRLO_Shift
4002830c l       *ABS*	00000000 Ethernet_MAC_MACA1LR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA1LR_ADDRLO_Shift
40028314 l       *ABS*	00000000 Ethernet_MAC_MACA2LR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA2LR_ADDRLO_Shift
40028308 l       *ABS*	00000000 Ethernet_MAC_MACA1HR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA1HR_ADDRHI_Shift
00000018 l       *ABS*	00000000 Ethernet_MAC_MACA1HR_MBC_Shift
40000000 l       *ABS*	00000000 Ethernet_MAC_MACA1HR_SA
80000000 l       *ABS*	00000000 Ethernet_MAC_MACA1HR_AE
40028310 l       *ABS*	00000000 Ethernet_MAC_MACA2HR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA2HR_ADDRHI_Shift
00000018 l       *ABS*	00000000 Ethernet_MAC_MACA2HR_MBC_Shift
40000000 l       *ABS*	00000000 Ethernet_MAC_MACA2HR_SA
80000000 l       *ABS*	00000000 Ethernet_MAC_MACA2HR_AE
40028318 l       *ABS*	00000000 Ethernet_MAC_MACA3HR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA3HR_ADDRHI_Shift
00000018 l       *ABS*	00000000 Ethernet_MAC_MACA3HR_MBC_Shift
40000000 l       *ABS*	00000000 Ethernet_MAC_MACA3HR_SA
80000000 l       *ABS*	00000000 Ethernet_MAC_MACA3HR_AE
4002831c l       *ABS*	00000000 Ethernet_MAC_MACA3LR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACA3LR_ADDRLO_Shift
40028700 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL
00000001 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL_CNTRST
00000002 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL_CNTSTOPRO
00000004 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL_RSTONRD
00000008 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL_CNTFREEZ
00000010 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL_CNTPRST
00000020 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL_CNTPRSTLVL
00000100 l       *ABS*	00000000 Ethernet_MAC_MMC_CONTROL_UCDBC
40028704 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT
00000020 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_RXCRCERPIS
00000040 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_RXALGNERPIS
00020000 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_RXUCGPIS
04000000 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_RXLPIUSCIS
08000000 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_RXLPITRCIS
40028708 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT
00004000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_TXSCOLGPIS
00008000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_TXMCOLGPIS
00200000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_TXGPKTIS
04000000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_TXLPIUSCIS
08000000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_TXLPITRCIS
4002870c l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_MASK
00000020 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM
00000040 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_MASK_RXALGNERPIM
00020000 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_MASK_RXUCGPIM
04000000 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_MASK_RXLPIUSCIM
08000000 l       *ABS*	00000000 Ethernet_MAC_MMC_RX_INTERRUPT_MASK_RXLPITRCIM
40028710 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_MASK
00004000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_MASK_TXSCOLGPIM
00008000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_MASK_TXMCOLGPIM
00200000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM
04000000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_MASK_TXLPIUSCIM
08000000 l       *ABS*	00000000 Ethernet_MAC_MMC_TX_INTERRUPT_MASK_TXLPITRCIM
4002874c l       *ABS*	00000000 Ethernet_MAC_TX_SINGLE_COLLISION_GOOD_PACKETS
00000000 l       *ABS*	00000000 Ethernet_MAC_TX_SINGLE_COLLISION_GOOD_PACKETS_TXSNGLCOLG_Shift
40028750 l       *ABS*	00000000 Ethernet_MAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS
00000000 l       *ABS*	00000000 Ethernet_MAC_TX_MULTIPLE_COLLISION_GOOD_PACKETS_TXMULTCOLG_Shift
40028768 l       *ABS*	00000000 Ethernet_MAC_TX_PACKET_COUNT_GOOD
00000000 l       *ABS*	00000000 Ethernet_MAC_TX_PACKET_COUNT_GOOD_TXPKTG_Shift
40028794 l       *ABS*	00000000 Ethernet_MAC_RX_CRC_ERROR_PACKETS
00000000 l       *ABS*	00000000 Ethernet_MAC_RX_CRC_ERROR_PACKETS_RXCRCERR_Shift
40028798 l       *ABS*	00000000 Ethernet_MAC_RX_ALIGNMENT_ERROR_PACKETS
00000000 l       *ABS*	00000000 Ethernet_MAC_RX_ALIGNMENT_ERROR_PACKETS_RXALGNERR_Shift
400287c4 l       *ABS*	00000000 Ethernet_MAC_RX_UNICAST_PACKETS_GOOD
00000000 l       *ABS*	00000000 Ethernet_MAC_RX_UNICAST_PACKETS_GOOD_RXUCASTG_Shift
400287ec l       *ABS*	00000000 Ethernet_MAC_TX_LPI_USEC_CNTR
00000000 l       *ABS*	00000000 Ethernet_MAC_TX_LPI_USEC_CNTR_TXLPIUSC_Shift
400287f0 l       *ABS*	00000000 Ethernet_MAC_TX_LPI_TRAN_CNTR
00000000 l       *ABS*	00000000 Ethernet_MAC_TX_LPI_TRAN_CNTR_TXLPITRC_Shift
400287f4 l       *ABS*	00000000 Ethernet_MAC_RX_LPI_USEC_CNTR
00000000 l       *ABS*	00000000 Ethernet_MAC_RX_LPI_USEC_CNTR_RXLPIUSC_Shift
400287f8 l       *ABS*	00000000 Ethernet_MAC_RX_LPI_TRAN_CNTR
00000000 l       *ABS*	00000000 Ethernet_MAC_RX_LPI_TRAN_CNTR_RXLPITRC_Shift
40028900 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R
00000001 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L3PEN0
00000004 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L3SAM0
00000008 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L3SAIM0
00000010 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L3DAM0
00000020 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L3DAIM0
00000006 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L3HSBM0_Shift
0000000b l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L3HDBM0_Shift
00010000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L4PEN0
00040000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L4SPM0
00080000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L4SPIM0
00100000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L4DPM0
00200000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C0R_L4DPIM0
40028904 l       *ABS*	00000000 Ethernet_MAC_MACL4A0R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL4A0R_L4SP0_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACL4A0R_L4DP0_Shift
40028910 l       *ABS*	00000000 Ethernet_MAC_MACL3A00R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A00R_L3A00_Shift
40028914 l       *ABS*	00000000 Ethernet_MAC_MACL3A10R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A10R_L3A10_Shift
40028918 l       *ABS*	00000000 Ethernet_MAC_MACL3A20
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A20_L3A20_Shift
4002891c l       *ABS*	00000000 Ethernet_MAC_MACL3A30
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A30_L3A30_Shift
40028930 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R
00000001 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L3PEN1
00000004 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L3SAM1
00000008 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L3SAIM1
00000010 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L3DAM1
00000020 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L3DAIM1
00000006 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L3HSBM1_Shift
0000000b l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L3HDBM1_Shift
00010000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L4PEN1
00040000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L4SPM1
00080000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L4SPIM1
00100000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L4DPM1
00200000 l       *ABS*	00000000 Ethernet_MAC_MACL3L4C1R_L4DPIM1
40028934 l       *ABS*	00000000 Ethernet_MAC_MACL4A1R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL4A1R_L4SP1_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACL4A1R_L4DP1_Shift
40028940 l       *ABS*	00000000 Ethernet_MAC_MACL3A01R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A01R_L3A01_Shift
40028944 l       *ABS*	00000000 Ethernet_MAC_MACL3A11R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A11R_L3A11_Shift
40028948 l       *ABS*	00000000 Ethernet_MAC_MACL3A21R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A21R_L3A21_Shift
4002894c l       *ABS*	00000000 Ethernet_MAC_MACL3A31R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACL3A31R_L3A31_Shift
40028b00 l       *ABS*	00000000 Ethernet_MAC_MACTSCR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSENA
00000002 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSCFUPDT
00000004 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSINIT
00000008 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSUPDT
00000020 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSADDREG
00000100 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSENALL
00000200 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSCTRLSSR
00000400 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSVER2ENA
00000800 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSIPENA
00001000 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSIPV6ENA
00002000 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSIPV4ENA
00004000 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSEVNTENA
00008000 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSMSTRENA
00000010 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_SNAPTYPSEL_Shift
00040000 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TSENMACADDR
00080000 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_CSC
01000000 l       *ABS*	00000000 Ethernet_MAC_MACTSCR_TXTSSTSM
40028b04 l       *ABS*	00000000 Ethernet_MAC_MACSSIR
00000008 l       *ABS*	00000000 Ethernet_MAC_MACSSIR_SNSINC_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACSSIR_SSINC_Shift
40028b08 l       *ABS*	00000000 Ethernet_MAC_MACSTSR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACSTSR_TSS_Shift
40028b0c l       *ABS*	00000000 Ethernet_MAC_MACSTNR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACSTNR_TSSS_Shift
40028b10 l       *ABS*	00000000 Ethernet_MAC_MACSTSUR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACSTSUR_TSS_Shift
40028b14 l       *ABS*	00000000 Ethernet_MAC_MACSTNUR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACSTNUR_TSSS_Shift
80000000 l       *ABS*	00000000 Ethernet_MAC_MACSTNUR_ADDSUB
40028b18 l       *ABS*	00000000 Ethernet_MAC_MACTSAR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACTSAR_TSAR_Shift
40028b20 l       *ABS*	00000000 Ethernet_MAC_MACTSSR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_TSSOVF
00000002 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_TSTARGT0
00000004 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_AUXTSTRIG
00000008 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_TSTRGTERR0
00008000 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_TXTSSIS
00000010 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_ATSSTN_Shift
01000000 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_ATSSTM
00000019 l       *ABS*	00000000 Ethernet_MAC_MACTSSR_ATSNS_Shift
40028b30 l       *ABS*	00000000 Ethernet_MAC_MACTxTSSNR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACTxTSSNR_TXTSSLO_Shift
80000000 l       *ABS*	00000000 Ethernet_MAC_MACTxTSSNR_TXTSSMIS
40028b34 l       *ABS*	00000000 Ethernet_MAC_MACTxTSSSR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACTxTSSSR_TXTSSHI_Shift
40028b40 l       *ABS*	00000000 Ethernet_MAC_MACACR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACACR_ATSFC
00000010 l       *ABS*	00000000 Ethernet_MAC_MACACR_ATSEN0
00000020 l       *ABS*	00000000 Ethernet_MAC_MACACR_ATSEN1
00000040 l       *ABS*	00000000 Ethernet_MAC_MACACR_ATSEN2
00000080 l       *ABS*	00000000 Ethernet_MAC_MACACR_ATSEN3
40028b48 l       *ABS*	00000000 Ethernet_MAC_MACATSNR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACATSNR_AUXTSLO_Shift
40028b4c l       *ABS*	00000000 Ethernet_MAC_MACATSSR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACATSSR_AUXTSHI_Shift
40028b50 l       *ABS*	00000000 Ethernet_MAC_MACTSIACR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACTSIACR_OSTIAC_Shift
40028b54 l       *ABS*	00000000 Ethernet_MAC_MACTSEACR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACTSEACR_OSTEAC_Shift
40028b58 l       *ABS*	00000000 Ethernet_MAC_MACTSICNR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACTSICNR_TSIC_Shift
40028b5c l       *ABS*	00000000 Ethernet_MAC_MACTSECNR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACTSECNR_TSEC_Shift
40028b70 l       *ABS*	00000000 Ethernet_MAC_MACPPSCR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACPPSCR_PPSCTRL_Shift
00000010 l       *ABS*	00000000 Ethernet_MAC_MACPPSCR_PPSEN0
00000005 l       *ABS*	00000000 Ethernet_MAC_MACPPSCR_TRGTMODSEL0_Shift
40028b80 l       *ABS*	00000000 Ethernet_MAC_MACPPSTTSR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACPPSTTSR_TSTRH0_Shift
40028b84 l       *ABS*	00000000 Ethernet_MAC_MACPPSTTNR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACPPSTTNR_TTSL0_Shift
80000000 l       *ABS*	00000000 Ethernet_MAC_MACPPSTTNR_TRGTBUSY0
40028b88 l       *ABS*	00000000 Ethernet_MAC_MACPPSIR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACPPSIR_PPSINT0_Shift
40028b8c l       *ABS*	00000000 Ethernet_MAC_MACPPSWR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACPPSWR_PPSWIDTH0_Shift
40028bc0 l       *ABS*	00000000 Ethernet_MAC_MACPOCR
00000001 l       *ABS*	00000000 Ethernet_MAC_MACPOCR_PTOEN
00000002 l       *ABS*	00000000 Ethernet_MAC_MACPOCR_ASYNCEN
00000004 l       *ABS*	00000000 Ethernet_MAC_MACPOCR_APDREQEN
00000010 l       *ABS*	00000000 Ethernet_MAC_MACPOCR_ASYNCTRIG
00000020 l       *ABS*	00000000 Ethernet_MAC_MACPOCR_APDREQTRIG
00000040 l       *ABS*	00000000 Ethernet_MAC_MACPOCR_DRRDIS
00000008 l       *ABS*	00000000 Ethernet_MAC_MACPOCR_DN_Shift
40028bc4 l       *ABS*	00000000 Ethernet_MAC_MACSPI0R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACSPI0R_SPI0_Shift
40028bc8 l       *ABS*	00000000 Ethernet_MAC_MACSPI1R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACSPI1R_SPI1_Shift
40028bcc l       *ABS*	00000000 Ethernet_MAC_MACSPI2R
00000000 l       *ABS*	00000000 Ethernet_MAC_MACSPI2R_SPI2_Shift
40028bd0 l       *ABS*	00000000 Ethernet_MAC_MACLMIR
00000000 l       *ABS*	00000000 Ethernet_MAC_MACLMIR_LSI_Shift
00000008 l       *ABS*	00000000 Ethernet_MAC_MACLMIR_DRSYNCR_Shift
00000018 l       *ABS*	00000000 Ethernet_MAC_MACLMIR_LMPDRI_Shift
40020000 l       *ABS*	00000000 DMA1_BASE
40020000 l       *ABS*	00000000 DMA1_LISR
08000000 l       *ABS*	00000000 DMA1_LISR_TCIF3
04000000 l       *ABS*	00000000 DMA1_LISR_HTIF3
02000000 l       *ABS*	00000000 DMA1_LISR_TEIF3
01000000 l       *ABS*	00000000 DMA1_LISR_DMEIF3
00400000 l       *ABS*	00000000 DMA1_LISR_FEIF3
00200000 l       *ABS*	00000000 DMA1_LISR_TCIF2
00100000 l       *ABS*	00000000 DMA1_LISR_HTIF2
00080000 l       *ABS*	00000000 DMA1_LISR_TEIF2
00040000 l       *ABS*	00000000 DMA1_LISR_DMEIF2
00010000 l       *ABS*	00000000 DMA1_LISR_FEIF2
00000800 l       *ABS*	00000000 DMA1_LISR_TCIF1
00000400 l       *ABS*	00000000 DMA1_LISR_HTIF1
00000200 l       *ABS*	00000000 DMA1_LISR_TEIF1
00000100 l       *ABS*	00000000 DMA1_LISR_DMEIF1
00000040 l       *ABS*	00000000 DMA1_LISR_FEIF1
00000020 l       *ABS*	00000000 DMA1_LISR_TCIF0
00000010 l       *ABS*	00000000 DMA1_LISR_HTIF0
00000008 l       *ABS*	00000000 DMA1_LISR_TEIF0
00000004 l       *ABS*	00000000 DMA1_LISR_DMEIF0
00000001 l       *ABS*	00000000 DMA1_LISR_FEIF0
40020004 l       *ABS*	00000000 DMA1_HISR
08000000 l       *ABS*	00000000 DMA1_HISR_TCIF7
04000000 l       *ABS*	00000000 DMA1_HISR_HTIF7
02000000 l       *ABS*	00000000 DMA1_HISR_TEIF7
01000000 l       *ABS*	00000000 DMA1_HISR_DMEIF7
00400000 l       *ABS*	00000000 DMA1_HISR_FEIF7
00200000 l       *ABS*	00000000 DMA1_HISR_TCIF6
00100000 l       *ABS*	00000000 DMA1_HISR_HTIF6
00080000 l       *ABS*	00000000 DMA1_HISR_TEIF6
00040000 l       *ABS*	00000000 DMA1_HISR_DMEIF6
00010000 l       *ABS*	00000000 DMA1_HISR_FEIF6
00000800 l       *ABS*	00000000 DMA1_HISR_TCIF5
00000400 l       *ABS*	00000000 DMA1_HISR_HTIF5
00000200 l       *ABS*	00000000 DMA1_HISR_TEIF5
00000100 l       *ABS*	00000000 DMA1_HISR_DMEIF5
00000040 l       *ABS*	00000000 DMA1_HISR_FEIF5
00000020 l       *ABS*	00000000 DMA1_HISR_TCIF4
00000010 l       *ABS*	00000000 DMA1_HISR_HTIF4
00000008 l       *ABS*	00000000 DMA1_HISR_TEIF4
00000004 l       *ABS*	00000000 DMA1_HISR_DMEIF4
00000001 l       *ABS*	00000000 DMA1_HISR_FEIF4
40020008 l       *ABS*	00000000 DMA1_LIFCR
08000000 l       *ABS*	00000000 DMA1_LIFCR_CTCIF3
04000000 l       *ABS*	00000000 DMA1_LIFCR_CHTIF3
02000000 l       *ABS*	00000000 DMA1_LIFCR_CTEIF3
01000000 l       *ABS*	00000000 DMA1_LIFCR_CDMEIF3
00400000 l       *ABS*	00000000 DMA1_LIFCR_CFEIF3
00200000 l       *ABS*	00000000 DMA1_LIFCR_CTCIF2
00100000 l       *ABS*	00000000 DMA1_LIFCR_CHTIF2
00080000 l       *ABS*	00000000 DMA1_LIFCR_CTEIF2
00040000 l       *ABS*	00000000 DMA1_LIFCR_CDMEIF2
00010000 l       *ABS*	00000000 DMA1_LIFCR_CFEIF2
00000800 l       *ABS*	00000000 DMA1_LIFCR_CTCIF1
00000400 l       *ABS*	00000000 DMA1_LIFCR_CHTIF1
00000200 l       *ABS*	00000000 DMA1_LIFCR_CTEIF1
00000100 l       *ABS*	00000000 DMA1_LIFCR_CDMEIF1
00000040 l       *ABS*	00000000 DMA1_LIFCR_CFEIF1
00000020 l       *ABS*	00000000 DMA1_LIFCR_CTCIF0
00000010 l       *ABS*	00000000 DMA1_LIFCR_CHTIF0
00000008 l       *ABS*	00000000 DMA1_LIFCR_CTEIF0
00000004 l       *ABS*	00000000 DMA1_LIFCR_CDMEIF0
00000001 l       *ABS*	00000000 DMA1_LIFCR_CFEIF0
4002000c l       *ABS*	00000000 DMA1_HIFCR
08000000 l       *ABS*	00000000 DMA1_HIFCR_CTCIF7
04000000 l       *ABS*	00000000 DMA1_HIFCR_CHTIF7
02000000 l       *ABS*	00000000 DMA1_HIFCR_CTEIF7
01000000 l       *ABS*	00000000 DMA1_HIFCR_CDMEIF7
00400000 l       *ABS*	00000000 DMA1_HIFCR_CFEIF7
00200000 l       *ABS*	00000000 DMA1_HIFCR_CTCIF6
00100000 l       *ABS*	00000000 DMA1_HIFCR_CHTIF6
00080000 l       *ABS*	00000000 DMA1_HIFCR_CTEIF6
00040000 l       *ABS*	00000000 DMA1_HIFCR_CDMEIF6
00010000 l       *ABS*	00000000 DMA1_HIFCR_CFEIF6
00000800 l       *ABS*	00000000 DMA1_HIFCR_CTCIF5
00000400 l       *ABS*	00000000 DMA1_HIFCR_CHTIF5
00000200 l       *ABS*	00000000 DMA1_HIFCR_CTEIF5
00000100 l       *ABS*	00000000 DMA1_HIFCR_CDMEIF5
00000040 l       *ABS*	00000000 DMA1_HIFCR_CFEIF5
00000020 l       *ABS*	00000000 DMA1_HIFCR_CTCIF4
00000010 l       *ABS*	00000000 DMA1_HIFCR_CHTIF4
00000008 l       *ABS*	00000000 DMA1_HIFCR_CTEIF4
00000004 l       *ABS*	00000000 DMA1_HIFCR_CDMEIF4
00000001 l       *ABS*	00000000 DMA1_HIFCR_CFEIF4
40020010 l       *ABS*	00000000 DMA1_S0CR
00000017 l       *ABS*	00000000 DMA1_S0CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S0CR_PBURST_Shift
00080000 l       *ABS*	00000000 DMA1_S0CR_CT
00040000 l       *ABS*	00000000 DMA1_S0CR_DBM
00000010 l       *ABS*	00000000 DMA1_S0CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S0CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S0CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S0CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S0CR_MINC
00000200 l       *ABS*	00000000 DMA1_S0CR_PINC
00000100 l       *ABS*	00000000 DMA1_S0CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S0CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S0CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S0CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S0CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S0CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S0CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S0CR_EN
40020014 l       *ABS*	00000000 DMA1_S0NDTR
00000000 l       *ABS*	00000000 DMA1_S0NDTR_NDT_Shift
40020018 l       *ABS*	00000000 DMA1_S0PAR
00000000 l       *ABS*	00000000 DMA1_S0PAR_PA_Shift
4002001c l       *ABS*	00000000 DMA1_S0M0AR
00000000 l       *ABS*	00000000 DMA1_S0M0AR_M0A_Shift
40020020 l       *ABS*	00000000 DMA1_S0M1AR
00000000 l       *ABS*	00000000 DMA1_S0M1AR_M1A_Shift
40020024 l       *ABS*	00000000 DMA1_S0FCR
00000080 l       *ABS*	00000000 DMA1_S0FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S0FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S0FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S0FCR_FTH_Shift
40020028 l       *ABS*	00000000 DMA1_S1CR
00000017 l       *ABS*	00000000 DMA1_S1CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S1CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA1_S1CR_ACK
00080000 l       *ABS*	00000000 DMA1_S1CR_CT
00040000 l       *ABS*	00000000 DMA1_S1CR_DBM
00000010 l       *ABS*	00000000 DMA1_S1CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S1CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S1CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S1CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S1CR_MINC
00000200 l       *ABS*	00000000 DMA1_S1CR_PINC
00000100 l       *ABS*	00000000 DMA1_S1CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S1CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S1CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S1CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S1CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S1CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S1CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S1CR_EN
4002002c l       *ABS*	00000000 DMA1_S1NDTR
00000000 l       *ABS*	00000000 DMA1_S1NDTR_NDT_Shift
40020030 l       *ABS*	00000000 DMA1_S1PAR
00000000 l       *ABS*	00000000 DMA1_S1PAR_PA_Shift
40020034 l       *ABS*	00000000 DMA1_S1M0AR
00000000 l       *ABS*	00000000 DMA1_S1M0AR_M0A_Shift
40020038 l       *ABS*	00000000 DMA1_S1M1AR
00000000 l       *ABS*	00000000 DMA1_S1M1AR_M1A_Shift
4002003c l       *ABS*	00000000 DMA1_S1FCR
00000080 l       *ABS*	00000000 DMA1_S1FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S1FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S1FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S1FCR_FTH_Shift
40020040 l       *ABS*	00000000 DMA1_S2CR
00000017 l       *ABS*	00000000 DMA1_S2CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S2CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA1_S2CR_ACK
00080000 l       *ABS*	00000000 DMA1_S2CR_CT
00040000 l       *ABS*	00000000 DMA1_S2CR_DBM
00000010 l       *ABS*	00000000 DMA1_S2CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S2CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S2CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S2CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S2CR_MINC
00000200 l       *ABS*	00000000 DMA1_S2CR_PINC
00000100 l       *ABS*	00000000 DMA1_S2CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S2CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S2CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S2CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S2CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S2CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S2CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S2CR_EN
40020044 l       *ABS*	00000000 DMA1_S2NDTR
00000000 l       *ABS*	00000000 DMA1_S2NDTR_NDT_Shift
40020048 l       *ABS*	00000000 DMA1_S2PAR
00000000 l       *ABS*	00000000 DMA1_S2PAR_PA_Shift
4002004c l       *ABS*	00000000 DMA1_S2M0AR
00000000 l       *ABS*	00000000 DMA1_S2M0AR_M0A_Shift
40020050 l       *ABS*	00000000 DMA1_S2M1AR
00000000 l       *ABS*	00000000 DMA1_S2M1AR_M1A_Shift
40020054 l       *ABS*	00000000 DMA1_S2FCR
00000080 l       *ABS*	00000000 DMA1_S2FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S2FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S2FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S2FCR_FTH_Shift
40020058 l       *ABS*	00000000 DMA1_S3CR
00000017 l       *ABS*	00000000 DMA1_S3CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S3CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA1_S3CR_ACK
00080000 l       *ABS*	00000000 DMA1_S3CR_CT
00040000 l       *ABS*	00000000 DMA1_S3CR_DBM
00000010 l       *ABS*	00000000 DMA1_S3CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S3CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S3CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S3CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S3CR_MINC
00000200 l       *ABS*	00000000 DMA1_S3CR_PINC
00000100 l       *ABS*	00000000 DMA1_S3CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S3CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S3CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S3CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S3CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S3CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S3CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S3CR_EN
4002005c l       *ABS*	00000000 DMA1_S3NDTR
00000000 l       *ABS*	00000000 DMA1_S3NDTR_NDT_Shift
40020060 l       *ABS*	00000000 DMA1_S3PAR
00000000 l       *ABS*	00000000 DMA1_S3PAR_PA_Shift
40020064 l       *ABS*	00000000 DMA1_S3M0AR
00000000 l       *ABS*	00000000 DMA1_S3M0AR_M0A_Shift
40020068 l       *ABS*	00000000 DMA1_S3M1AR
00000000 l       *ABS*	00000000 DMA1_S3M1AR_M1A_Shift
4002006c l       *ABS*	00000000 DMA1_S3FCR
00000080 l       *ABS*	00000000 DMA1_S3FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S3FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S3FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S3FCR_FTH_Shift
40020070 l       *ABS*	00000000 DMA1_S4CR
00000017 l       *ABS*	00000000 DMA1_S4CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S4CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA1_S4CR_ACK
00080000 l       *ABS*	00000000 DMA1_S4CR_CT
00040000 l       *ABS*	00000000 DMA1_S4CR_DBM
00000010 l       *ABS*	00000000 DMA1_S4CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S4CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S4CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S4CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S4CR_MINC
00000200 l       *ABS*	00000000 DMA1_S4CR_PINC
00000100 l       *ABS*	00000000 DMA1_S4CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S4CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S4CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S4CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S4CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S4CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S4CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S4CR_EN
40020074 l       *ABS*	00000000 DMA1_S4NDTR
00000000 l       *ABS*	00000000 DMA1_S4NDTR_NDT_Shift
40020078 l       *ABS*	00000000 DMA1_S4PAR
00000000 l       *ABS*	00000000 DMA1_S4PAR_PA_Shift
4002007c l       *ABS*	00000000 DMA1_S4M0AR
00000000 l       *ABS*	00000000 DMA1_S4M0AR_M0A_Shift
40020080 l       *ABS*	00000000 DMA1_S4M1AR
00000000 l       *ABS*	00000000 DMA1_S4M1AR_M1A_Shift
40020084 l       *ABS*	00000000 DMA1_S4FCR
00000080 l       *ABS*	00000000 DMA1_S4FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S4FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S4FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S4FCR_FTH_Shift
40020088 l       *ABS*	00000000 DMA1_S5CR
00000017 l       *ABS*	00000000 DMA1_S5CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S5CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA1_S5CR_ACK
00080000 l       *ABS*	00000000 DMA1_S5CR_CT
00040000 l       *ABS*	00000000 DMA1_S5CR_DBM
00000010 l       *ABS*	00000000 DMA1_S5CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S5CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S5CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S5CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S5CR_MINC
00000200 l       *ABS*	00000000 DMA1_S5CR_PINC
00000100 l       *ABS*	00000000 DMA1_S5CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S5CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S5CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S5CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S5CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S5CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S5CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S5CR_EN
4002008c l       *ABS*	00000000 DMA1_S5NDTR
00000000 l       *ABS*	00000000 DMA1_S5NDTR_NDT_Shift
40020090 l       *ABS*	00000000 DMA1_S5PAR
00000000 l       *ABS*	00000000 DMA1_S5PAR_PA_Shift
40020094 l       *ABS*	00000000 DMA1_S5M0AR
00000000 l       *ABS*	00000000 DMA1_S5M0AR_M0A_Shift
40020098 l       *ABS*	00000000 DMA1_S5M1AR
00000000 l       *ABS*	00000000 DMA1_S5M1AR_M1A_Shift
4002009c l       *ABS*	00000000 DMA1_S5FCR
00000080 l       *ABS*	00000000 DMA1_S5FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S5FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S5FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S5FCR_FTH_Shift
400200a0 l       *ABS*	00000000 DMA1_S6CR
00000017 l       *ABS*	00000000 DMA1_S6CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S6CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA1_S6CR_ACK
00080000 l       *ABS*	00000000 DMA1_S6CR_CT
00040000 l       *ABS*	00000000 DMA1_S6CR_DBM
00000010 l       *ABS*	00000000 DMA1_S6CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S6CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S6CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S6CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S6CR_MINC
00000200 l       *ABS*	00000000 DMA1_S6CR_PINC
00000100 l       *ABS*	00000000 DMA1_S6CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S6CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S6CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S6CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S6CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S6CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S6CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S6CR_EN
400200a4 l       *ABS*	00000000 DMA1_S6NDTR
00000000 l       *ABS*	00000000 DMA1_S6NDTR_NDT_Shift
400200a8 l       *ABS*	00000000 DMA1_S6PAR
00000000 l       *ABS*	00000000 DMA1_S6PAR_PA_Shift
400200ac l       *ABS*	00000000 DMA1_S6M0AR
00000000 l       *ABS*	00000000 DMA1_S6M0AR_M0A_Shift
400200b0 l       *ABS*	00000000 DMA1_S6M1AR
00000000 l       *ABS*	00000000 DMA1_S6M1AR_M1A_Shift
400200b4 l       *ABS*	00000000 DMA1_S6FCR
00000080 l       *ABS*	00000000 DMA1_S6FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S6FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S6FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S6FCR_FTH_Shift
400200b8 l       *ABS*	00000000 DMA1_S7CR
00000017 l       *ABS*	00000000 DMA1_S7CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA1_S7CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA1_S7CR_ACK
00080000 l       *ABS*	00000000 DMA1_S7CR_CT
00040000 l       *ABS*	00000000 DMA1_S7CR_DBM
00000010 l       *ABS*	00000000 DMA1_S7CR_PL_Shift
00008000 l       *ABS*	00000000 DMA1_S7CR_PINCOS
0000000d l       *ABS*	00000000 DMA1_S7CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA1_S7CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA1_S7CR_MINC
00000200 l       *ABS*	00000000 DMA1_S7CR_PINC
00000100 l       *ABS*	00000000 DMA1_S7CR_CIRC
00000006 l       *ABS*	00000000 DMA1_S7CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA1_S7CR_PFCTRL
00000010 l       *ABS*	00000000 DMA1_S7CR_TCIE
00000008 l       *ABS*	00000000 DMA1_S7CR_HTIE
00000004 l       *ABS*	00000000 DMA1_S7CR_TEIE
00000002 l       *ABS*	00000000 DMA1_S7CR_DMEIE
00000001 l       *ABS*	00000000 DMA1_S7CR_EN
400200bc l       *ABS*	00000000 DMA1_S7NDTR
00000000 l       *ABS*	00000000 DMA1_S7NDTR_NDT_Shift
400200c0 l       *ABS*	00000000 DMA1_S7PAR
00000000 l       *ABS*	00000000 DMA1_S7PAR_PA_Shift
400200c4 l       *ABS*	00000000 DMA1_S7M0AR
00000000 l       *ABS*	00000000 DMA1_S7M0AR_M0A_Shift
400200c8 l       *ABS*	00000000 DMA1_S7M1AR
00000000 l       *ABS*	00000000 DMA1_S7M1AR_M1A_Shift
400200cc l       *ABS*	00000000 DMA1_S7FCR
00000080 l       *ABS*	00000000 DMA1_S7FCR_FEIE
00000003 l       *ABS*	00000000 DMA1_S7FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA1_S7FCR_DMDIS
00000000 l       *ABS*	00000000 DMA1_S7FCR_FTH_Shift
40020400 l       *ABS*	00000000 DMA2_BASE
40020400 l       *ABS*	00000000 DMA2_LISR
08000000 l       *ABS*	00000000 DMA2_LISR_TCIF3
04000000 l       *ABS*	00000000 DMA2_LISR_HTIF3
02000000 l       *ABS*	00000000 DMA2_LISR_TEIF3
01000000 l       *ABS*	00000000 DMA2_LISR_DMEIF3
00400000 l       *ABS*	00000000 DMA2_LISR_FEIF3
00200000 l       *ABS*	00000000 DMA2_LISR_TCIF2
00100000 l       *ABS*	00000000 DMA2_LISR_HTIF2
00080000 l       *ABS*	00000000 DMA2_LISR_TEIF2
00040000 l       *ABS*	00000000 DMA2_LISR_DMEIF2
00010000 l       *ABS*	00000000 DMA2_LISR_FEIF2
00000800 l       *ABS*	00000000 DMA2_LISR_TCIF1
00000400 l       *ABS*	00000000 DMA2_LISR_HTIF1
00000200 l       *ABS*	00000000 DMA2_LISR_TEIF1
00000100 l       *ABS*	00000000 DMA2_LISR_DMEIF1
00000040 l       *ABS*	00000000 DMA2_LISR_FEIF1
00000020 l       *ABS*	00000000 DMA2_LISR_TCIF0
00000010 l       *ABS*	00000000 DMA2_LISR_HTIF0
00000008 l       *ABS*	00000000 DMA2_LISR_TEIF0
00000004 l       *ABS*	00000000 DMA2_LISR_DMEIF0
00000001 l       *ABS*	00000000 DMA2_LISR_FEIF0
40020404 l       *ABS*	00000000 DMA2_HISR
08000000 l       *ABS*	00000000 DMA2_HISR_TCIF7
04000000 l       *ABS*	00000000 DMA2_HISR_HTIF7
02000000 l       *ABS*	00000000 DMA2_HISR_TEIF7
01000000 l       *ABS*	00000000 DMA2_HISR_DMEIF7
00400000 l       *ABS*	00000000 DMA2_HISR_FEIF7
00200000 l       *ABS*	00000000 DMA2_HISR_TCIF6
00100000 l       *ABS*	00000000 DMA2_HISR_HTIF6
00080000 l       *ABS*	00000000 DMA2_HISR_TEIF6
00040000 l       *ABS*	00000000 DMA2_HISR_DMEIF6
00010000 l       *ABS*	00000000 DMA2_HISR_FEIF6
00000800 l       *ABS*	00000000 DMA2_HISR_TCIF5
00000400 l       *ABS*	00000000 DMA2_HISR_HTIF5
00000200 l       *ABS*	00000000 DMA2_HISR_TEIF5
00000100 l       *ABS*	00000000 DMA2_HISR_DMEIF5
00000040 l       *ABS*	00000000 DMA2_HISR_FEIF5
00000020 l       *ABS*	00000000 DMA2_HISR_TCIF4
00000010 l       *ABS*	00000000 DMA2_HISR_HTIF4
00000008 l       *ABS*	00000000 DMA2_HISR_TEIF4
00000004 l       *ABS*	00000000 DMA2_HISR_DMEIF4
00000001 l       *ABS*	00000000 DMA2_HISR_FEIF4
40020408 l       *ABS*	00000000 DMA2_LIFCR
08000000 l       *ABS*	00000000 DMA2_LIFCR_CTCIF3
04000000 l       *ABS*	00000000 DMA2_LIFCR_CHTIF3
02000000 l       *ABS*	00000000 DMA2_LIFCR_CTEIF3
01000000 l       *ABS*	00000000 DMA2_LIFCR_CDMEIF3
00400000 l       *ABS*	00000000 DMA2_LIFCR_CFEIF3
00200000 l       *ABS*	00000000 DMA2_LIFCR_CTCIF2
00100000 l       *ABS*	00000000 DMA2_LIFCR_CHTIF2
00080000 l       *ABS*	00000000 DMA2_LIFCR_CTEIF2
00040000 l       *ABS*	00000000 DMA2_LIFCR_CDMEIF2
00010000 l       *ABS*	00000000 DMA2_LIFCR_CFEIF2
00000800 l       *ABS*	00000000 DMA2_LIFCR_CTCIF1
00000400 l       *ABS*	00000000 DMA2_LIFCR_CHTIF1
00000200 l       *ABS*	00000000 DMA2_LIFCR_CTEIF1
00000100 l       *ABS*	00000000 DMA2_LIFCR_CDMEIF1
00000040 l       *ABS*	00000000 DMA2_LIFCR_CFEIF1
00000020 l       *ABS*	00000000 DMA2_LIFCR_CTCIF0
00000010 l       *ABS*	00000000 DMA2_LIFCR_CHTIF0
00000008 l       *ABS*	00000000 DMA2_LIFCR_CTEIF0
00000004 l       *ABS*	00000000 DMA2_LIFCR_CDMEIF0
00000001 l       *ABS*	00000000 DMA2_LIFCR_CFEIF0
4002040c l       *ABS*	00000000 DMA2_HIFCR
08000000 l       *ABS*	00000000 DMA2_HIFCR_CTCIF7
04000000 l       *ABS*	00000000 DMA2_HIFCR_CHTIF7
02000000 l       *ABS*	00000000 DMA2_HIFCR_CTEIF7
01000000 l       *ABS*	00000000 DMA2_HIFCR_CDMEIF7
00400000 l       *ABS*	00000000 DMA2_HIFCR_CFEIF7
00200000 l       *ABS*	00000000 DMA2_HIFCR_CTCIF6
00100000 l       *ABS*	00000000 DMA2_HIFCR_CHTIF6
00080000 l       *ABS*	00000000 DMA2_HIFCR_CTEIF6
00040000 l       *ABS*	00000000 DMA2_HIFCR_CDMEIF6
00010000 l       *ABS*	00000000 DMA2_HIFCR_CFEIF6
00000800 l       *ABS*	00000000 DMA2_HIFCR_CTCIF5
00000400 l       *ABS*	00000000 DMA2_HIFCR_CHTIF5
00000200 l       *ABS*	00000000 DMA2_HIFCR_CTEIF5
00000100 l       *ABS*	00000000 DMA2_HIFCR_CDMEIF5
00000040 l       *ABS*	00000000 DMA2_HIFCR_CFEIF5
00000020 l       *ABS*	00000000 DMA2_HIFCR_CTCIF4
00000010 l       *ABS*	00000000 DMA2_HIFCR_CHTIF4
00000008 l       *ABS*	00000000 DMA2_HIFCR_CTEIF4
00000004 l       *ABS*	00000000 DMA2_HIFCR_CDMEIF4
00000001 l       *ABS*	00000000 DMA2_HIFCR_CFEIF4
40020410 l       *ABS*	00000000 DMA2_S0CR
00000017 l       *ABS*	00000000 DMA2_S0CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S0CR_PBURST_Shift
00080000 l       *ABS*	00000000 DMA2_S0CR_CT
00040000 l       *ABS*	00000000 DMA2_S0CR_DBM
00000010 l       *ABS*	00000000 DMA2_S0CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S0CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S0CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S0CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S0CR_MINC
00000200 l       *ABS*	00000000 DMA2_S0CR_PINC
00000100 l       *ABS*	00000000 DMA2_S0CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S0CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S0CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S0CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S0CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S0CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S0CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S0CR_EN
40020414 l       *ABS*	00000000 DMA2_S0NDTR
00000000 l       *ABS*	00000000 DMA2_S0NDTR_NDT_Shift
40020418 l       *ABS*	00000000 DMA2_S0PAR
00000000 l       *ABS*	00000000 DMA2_S0PAR_PA_Shift
4002041c l       *ABS*	00000000 DMA2_S0M0AR
00000000 l       *ABS*	00000000 DMA2_S0M0AR_M0A_Shift
40020420 l       *ABS*	00000000 DMA2_S0M1AR
00000000 l       *ABS*	00000000 DMA2_S0M1AR_M1A_Shift
40020424 l       *ABS*	00000000 DMA2_S0FCR
00000080 l       *ABS*	00000000 DMA2_S0FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S0FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S0FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S0FCR_FTH_Shift
40020428 l       *ABS*	00000000 DMA2_S1CR
00000017 l       *ABS*	00000000 DMA2_S1CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S1CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA2_S1CR_ACK
00080000 l       *ABS*	00000000 DMA2_S1CR_CT
00040000 l       *ABS*	00000000 DMA2_S1CR_DBM
00000010 l       *ABS*	00000000 DMA2_S1CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S1CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S1CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S1CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S1CR_MINC
00000200 l       *ABS*	00000000 DMA2_S1CR_PINC
00000100 l       *ABS*	00000000 DMA2_S1CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S1CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S1CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S1CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S1CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S1CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S1CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S1CR_EN
4002042c l       *ABS*	00000000 DMA2_S1NDTR
00000000 l       *ABS*	00000000 DMA2_S1NDTR_NDT_Shift
40020430 l       *ABS*	00000000 DMA2_S1PAR
00000000 l       *ABS*	00000000 DMA2_S1PAR_PA_Shift
40020434 l       *ABS*	00000000 DMA2_S1M0AR
00000000 l       *ABS*	00000000 DMA2_S1M0AR_M0A_Shift
40020438 l       *ABS*	00000000 DMA2_S1M1AR
00000000 l       *ABS*	00000000 DMA2_S1M1AR_M1A_Shift
4002043c l       *ABS*	00000000 DMA2_S1FCR
00000080 l       *ABS*	00000000 DMA2_S1FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S1FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S1FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S1FCR_FTH_Shift
40020440 l       *ABS*	00000000 DMA2_S2CR
00000017 l       *ABS*	00000000 DMA2_S2CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S2CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA2_S2CR_ACK
00080000 l       *ABS*	00000000 DMA2_S2CR_CT
00040000 l       *ABS*	00000000 DMA2_S2CR_DBM
00000010 l       *ABS*	00000000 DMA2_S2CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S2CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S2CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S2CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S2CR_MINC
00000200 l       *ABS*	00000000 DMA2_S2CR_PINC
00000100 l       *ABS*	00000000 DMA2_S2CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S2CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S2CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S2CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S2CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S2CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S2CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S2CR_EN
40020444 l       *ABS*	00000000 DMA2_S2NDTR
00000000 l       *ABS*	00000000 DMA2_S2NDTR_NDT_Shift
40020448 l       *ABS*	00000000 DMA2_S2PAR
00000000 l       *ABS*	00000000 DMA2_S2PAR_PA_Shift
4002044c l       *ABS*	00000000 DMA2_S2M0AR
00000000 l       *ABS*	00000000 DMA2_S2M0AR_M0A_Shift
40020450 l       *ABS*	00000000 DMA2_S2M1AR
00000000 l       *ABS*	00000000 DMA2_S2M1AR_M1A_Shift
40020454 l       *ABS*	00000000 DMA2_S2FCR
00000080 l       *ABS*	00000000 DMA2_S2FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S2FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S2FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S2FCR_FTH_Shift
40020458 l       *ABS*	00000000 DMA2_S3CR
00000017 l       *ABS*	00000000 DMA2_S3CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S3CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA2_S3CR_ACK
00080000 l       *ABS*	00000000 DMA2_S3CR_CT
00040000 l       *ABS*	00000000 DMA2_S3CR_DBM
00000010 l       *ABS*	00000000 DMA2_S3CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S3CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S3CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S3CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S3CR_MINC
00000200 l       *ABS*	00000000 DMA2_S3CR_PINC
00000100 l       *ABS*	00000000 DMA2_S3CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S3CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S3CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S3CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S3CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S3CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S3CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S3CR_EN
4002045c l       *ABS*	00000000 DMA2_S3NDTR
00000000 l       *ABS*	00000000 DMA2_S3NDTR_NDT_Shift
40020460 l       *ABS*	00000000 DMA2_S3PAR
00000000 l       *ABS*	00000000 DMA2_S3PAR_PA_Shift
40020464 l       *ABS*	00000000 DMA2_S3M0AR
00000000 l       *ABS*	00000000 DMA2_S3M0AR_M0A_Shift
40020468 l       *ABS*	00000000 DMA2_S3M1AR
00000000 l       *ABS*	00000000 DMA2_S3M1AR_M1A_Shift
4002046c l       *ABS*	00000000 DMA2_S3FCR
00000080 l       *ABS*	00000000 DMA2_S3FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S3FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S3FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S3FCR_FTH_Shift
40020470 l       *ABS*	00000000 DMA2_S4CR
00000017 l       *ABS*	00000000 DMA2_S4CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S4CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA2_S4CR_ACK
00080000 l       *ABS*	00000000 DMA2_S4CR_CT
00040000 l       *ABS*	00000000 DMA2_S4CR_DBM
00000010 l       *ABS*	00000000 DMA2_S4CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S4CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S4CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S4CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S4CR_MINC
00000200 l       *ABS*	00000000 DMA2_S4CR_PINC
00000100 l       *ABS*	00000000 DMA2_S4CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S4CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S4CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S4CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S4CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S4CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S4CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S4CR_EN
40020474 l       *ABS*	00000000 DMA2_S4NDTR
00000000 l       *ABS*	00000000 DMA2_S4NDTR_NDT_Shift
40020478 l       *ABS*	00000000 DMA2_S4PAR
00000000 l       *ABS*	00000000 DMA2_S4PAR_PA_Shift
4002047c l       *ABS*	00000000 DMA2_S4M0AR
00000000 l       *ABS*	00000000 DMA2_S4M0AR_M0A_Shift
40020480 l       *ABS*	00000000 DMA2_S4M1AR
00000000 l       *ABS*	00000000 DMA2_S4M1AR_M1A_Shift
40020484 l       *ABS*	00000000 DMA2_S4FCR
00000080 l       *ABS*	00000000 DMA2_S4FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S4FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S4FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S4FCR_FTH_Shift
40020488 l       *ABS*	00000000 DMA2_S5CR
00000017 l       *ABS*	00000000 DMA2_S5CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S5CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA2_S5CR_ACK
00080000 l       *ABS*	00000000 DMA2_S5CR_CT
00040000 l       *ABS*	00000000 DMA2_S5CR_DBM
00000010 l       *ABS*	00000000 DMA2_S5CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S5CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S5CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S5CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S5CR_MINC
00000200 l       *ABS*	00000000 DMA2_S5CR_PINC
00000100 l       *ABS*	00000000 DMA2_S5CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S5CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S5CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S5CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S5CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S5CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S5CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S5CR_EN
4002048c l       *ABS*	00000000 DMA2_S5NDTR
00000000 l       *ABS*	00000000 DMA2_S5NDTR_NDT_Shift
40020490 l       *ABS*	00000000 DMA2_S5PAR
00000000 l       *ABS*	00000000 DMA2_S5PAR_PA_Shift
40020494 l       *ABS*	00000000 DMA2_S5M0AR
00000000 l       *ABS*	00000000 DMA2_S5M0AR_M0A_Shift
40020498 l       *ABS*	00000000 DMA2_S5M1AR
00000000 l       *ABS*	00000000 DMA2_S5M1AR_M1A_Shift
4002049c l       *ABS*	00000000 DMA2_S5FCR
00000080 l       *ABS*	00000000 DMA2_S5FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S5FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S5FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S5FCR_FTH_Shift
400204a0 l       *ABS*	00000000 DMA2_S6CR
00000017 l       *ABS*	00000000 DMA2_S6CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S6CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA2_S6CR_ACK
00080000 l       *ABS*	00000000 DMA2_S6CR_CT
00040000 l       *ABS*	00000000 DMA2_S6CR_DBM
00000010 l       *ABS*	00000000 DMA2_S6CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S6CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S6CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S6CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S6CR_MINC
00000200 l       *ABS*	00000000 DMA2_S6CR_PINC
00000100 l       *ABS*	00000000 DMA2_S6CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S6CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S6CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S6CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S6CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S6CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S6CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S6CR_EN
400204a4 l       *ABS*	00000000 DMA2_S6NDTR
00000000 l       *ABS*	00000000 DMA2_S6NDTR_NDT_Shift
400204a8 l       *ABS*	00000000 DMA2_S6PAR
00000000 l       *ABS*	00000000 DMA2_S6PAR_PA_Shift
400204ac l       *ABS*	00000000 DMA2_S6M0AR
00000000 l       *ABS*	00000000 DMA2_S6M0AR_M0A_Shift
400204b0 l       *ABS*	00000000 DMA2_S6M1AR
00000000 l       *ABS*	00000000 DMA2_S6M1AR_M1A_Shift
400204b4 l       *ABS*	00000000 DMA2_S6FCR
00000080 l       *ABS*	00000000 DMA2_S6FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S6FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S6FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S6FCR_FTH_Shift
400204b8 l       *ABS*	00000000 DMA2_S7CR
00000017 l       *ABS*	00000000 DMA2_S7CR_MBURST_Shift
00000015 l       *ABS*	00000000 DMA2_S7CR_PBURST_Shift
00100000 l       *ABS*	00000000 DMA2_S7CR_ACK
00080000 l       *ABS*	00000000 DMA2_S7CR_CT
00040000 l       *ABS*	00000000 DMA2_S7CR_DBM
00000010 l       *ABS*	00000000 DMA2_S7CR_PL_Shift
00008000 l       *ABS*	00000000 DMA2_S7CR_PINCOS
0000000d l       *ABS*	00000000 DMA2_S7CR_MSIZE_Shift
0000000b l       *ABS*	00000000 DMA2_S7CR_PSIZE_Shift
00000400 l       *ABS*	00000000 DMA2_S7CR_MINC
00000200 l       *ABS*	00000000 DMA2_S7CR_PINC
00000100 l       *ABS*	00000000 DMA2_S7CR_CIRC
00000006 l       *ABS*	00000000 DMA2_S7CR_DIR_Shift
00000020 l       *ABS*	00000000 DMA2_S7CR_PFCTRL
00000010 l       *ABS*	00000000 DMA2_S7CR_TCIE
00000008 l       *ABS*	00000000 DMA2_S7CR_HTIE
00000004 l       *ABS*	00000000 DMA2_S7CR_TEIE
00000002 l       *ABS*	00000000 DMA2_S7CR_DMEIE
00000001 l       *ABS*	00000000 DMA2_S7CR_EN
400204bc l       *ABS*	00000000 DMA2_S7NDTR
00000000 l       *ABS*	00000000 DMA2_S7NDTR_NDT_Shift
400204c0 l       *ABS*	00000000 DMA2_S7PAR
00000000 l       *ABS*	00000000 DMA2_S7PAR_PA_Shift
400204c4 l       *ABS*	00000000 DMA2_S7M0AR
00000000 l       *ABS*	00000000 DMA2_S7M0AR_M0A_Shift
400204c8 l       *ABS*	00000000 DMA2_S7M1AR
00000000 l       *ABS*	00000000 DMA2_S7M1AR_M1A_Shift
400204cc l       *ABS*	00000000 DMA2_S7FCR
00000080 l       *ABS*	00000000 DMA2_S7FCR_FEIE
00000003 l       *ABS*	00000000 DMA2_S7FCR_FS_Shift
00000004 l       *ABS*	00000000 DMA2_S7FCR_DMDIS
00000000 l       *ABS*	00000000 DMA2_S7FCR_FTH_Shift
40017400 l       *ABS*	00000000 HRTIM_Master_BASE
40017400 l       *ABS*	00000000 HRTIM_Master_MCR
0000001e l       *ABS*	00000000 HRTIM_Master_MCR_BRSTDMA_Shift
20000000 l       *ABS*	00000000 HRTIM_Master_MCR_MREPU
08000000 l       *ABS*	00000000 HRTIM_Master_MCR_PREEN
00000019 l       *ABS*	00000000 HRTIM_Master_MCR_DACSYNC_Shift
00200000 l       *ABS*	00000000 HRTIM_Master_MCR_TECEN
00100000 l       *ABS*	00000000 HRTIM_Master_MCR_TDCEN
00080000 l       *ABS*	00000000 HRTIM_Master_MCR_TCCEN
00040000 l       *ABS*	00000000 HRTIM_Master_MCR_TBCEN
00020000 l       *ABS*	00000000 HRTIM_Master_MCR_TACEN
00010000 l       *ABS*	00000000 HRTIM_Master_MCR_MCEN
0000000e l       *ABS*	00000000 HRTIM_Master_MCR_SYNC_SRC_Shift
0000000c l       *ABS*	00000000 HRTIM_Master_MCR_SYNC_OUT_Shift
00000800 l       *ABS*	00000000 HRTIM_Master_MCR_SYNCSTRTM
00000400 l       *ABS*	00000000 HRTIM_Master_MCR_SYNCRSTM
00000008 l       *ABS*	00000000 HRTIM_Master_MCR_SYNC_IN_Shift
00000020 l       *ABS*	00000000 HRTIM_Master_MCR_HALF
00000010 l       *ABS*	00000000 HRTIM_Master_MCR_RETRIG
00000008 l       *ABS*	00000000 HRTIM_Master_MCR_CONT
00000000 l       *ABS*	00000000 HRTIM_Master_MCR_CK_PSC_Shift
40017404 l       *ABS*	00000000 HRTIM_Master_MISR
00000040 l       *ABS*	00000000 HRTIM_Master_MISR_MUPD
00000020 l       *ABS*	00000000 HRTIM_Master_MISR_SYNC
00000010 l       *ABS*	00000000 HRTIM_Master_MISR_MREP
00000008 l       *ABS*	00000000 HRTIM_Master_MISR_MCMP4
00000004 l       *ABS*	00000000 HRTIM_Master_MISR_MCMP3
00000002 l       *ABS*	00000000 HRTIM_Master_MISR_MCMP2
00000001 l       *ABS*	00000000 HRTIM_Master_MISR_MCMP1
40017408 l       *ABS*	00000000 HRTIM_Master_MICR
00000040 l       *ABS*	00000000 HRTIM_Master_MICR_MUPDC
00000020 l       *ABS*	00000000 HRTIM_Master_MICR_SYNCC
00000010 l       *ABS*	00000000 HRTIM_Master_MICR_MREPC
00000008 l       *ABS*	00000000 HRTIM_Master_MICR_MCMP4C
00000004 l       *ABS*	00000000 HRTIM_Master_MICR_MCMP3C
00000002 l       *ABS*	00000000 HRTIM_Master_MICR_MCMP2C
00000001 l       *ABS*	00000000 HRTIM_Master_MICR_MCMP1C
4001740c l       *ABS*	00000000 HRTIM_Master_MDIER4
00400000 l       *ABS*	00000000 HRTIM_Master_MDIER4_MUPDDE
00200000 l       *ABS*	00000000 HRTIM_Master_MDIER4_SYNCDE
00100000 l       *ABS*	00000000 HRTIM_Master_MDIER4_MREPDE
00080000 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP4DE
00040000 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP3DE
00020000 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP2DE
00010000 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP1DE
00000040 l       *ABS*	00000000 HRTIM_Master_MDIER4_MUPDIE
00000020 l       *ABS*	00000000 HRTIM_Master_MDIER4_SYNCIE
00000010 l       *ABS*	00000000 HRTIM_Master_MDIER4_MREPIE
00000008 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP4IE
00000004 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP3IE
00000002 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP2IE
00000001 l       *ABS*	00000000 HRTIM_Master_MDIER4_MCMP1IE
40017410 l       *ABS*	00000000 HRTIM_Master_MCNTR
00000000 l       *ABS*	00000000 HRTIM_Master_MCNTR_MCNT_Shift
40017414 l       *ABS*	00000000 HRTIM_Master_MPER
00000000 l       *ABS*	00000000 HRTIM_Master_MPER_MPER_Shift
40017418 l       *ABS*	00000000 HRTIM_Master_MREP
00000000 l       *ABS*	00000000 HRTIM_Master_MREP_MREP_Shift
4001741c l       *ABS*	00000000 HRTIM_Master_MCMP1R
00000000 l       *ABS*	00000000 HRTIM_Master_MCMP1R_MCMP1_Shift
40017424 l       *ABS*	00000000 HRTIM_Master_MCMP2R
00000000 l       *ABS*	00000000 HRTIM_Master_MCMP2R_MCMP2_Shift
40017428 l       *ABS*	00000000 HRTIM_Master_MCMP3R
00000000 l       *ABS*	00000000 HRTIM_Master_MCMP3R_MCMP3_Shift
4001742c l       *ABS*	00000000 HRTIM_Master_MCMP4R
00000000 l       *ABS*	00000000 HRTIM_Master_MCMP4R_MCMP4_Shift
40017480 l       *ABS*	00000000 HRTIM_TIMA_BASE
40017480 l       *ABS*	00000000 HRTIM_TIMA_TIMACR
0000001c l       *ABS*	00000000 HRTIM_TIMA_TIMACR_UPDGAT_Shift
08000000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_PREEN
00000019 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_DACSYNC_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_MSTU
00800000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_TEU
00400000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_TDU
00200000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_TCU
00100000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_TBU
00040000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_TxRSTU
00020000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_TxREPU
0000000e l       *ABS*	00000000 HRTIM_TIMA_TIMACR_DELCMP4_Shift
0000000c l       *ABS*	00000000 HRTIM_TIMA_TIMACR_DELCMP2_Shift
00000800 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_SYNCSTRTx
00000400 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_SYNCRSTx
00000040 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_PSHPLL
00000020 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_HALF
00000010 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_RETRIG
00000008 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_CONT
00000000 l       *ABS*	00000000 HRTIM_TIMA_TIMACR_CK_PSCx_Shift
40017484 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR
00080000 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_O2STAT
00040000 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_O1STAT
00020000 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_IPPSTAT
00010000 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_CPPSTAT
00004000 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_DLYPRT
00002000 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_RST
00001000 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_RSTx2
00000800 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_SETx2
00000400 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_RSTx1
00000200 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_SETx1
00000100 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_CPT2
00000080 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_CPT1
00000040 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_UPD
00000010 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_REP
00000008 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_CMP3
00000002 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_CMP2
00000001 l       *ABS*	00000000 HRTIM_TIMA_TIMAISR_CMP1
40017488 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR
00004000 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_DLYPRTC
00002000 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_RSTC
00001000 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_RSTx2C
00000800 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_SET2xC
00000400 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_RSTx1C
00000200 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_SET1xC
00000100 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_CPT2C
00000080 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_CPT1C
00000040 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_UPDC
00000010 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_REPC
00000008 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_CMP4C
00000004 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_CMP3C
00000002 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_CMP2C
00000001 l       *ABS*	00000000 HRTIM_TIMA_TIMAICR_CMP1C
4001748c l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5
40000000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_DLYPRTDE
20000000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_RSTDE
10000000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_RSTx2DE
08000000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_SETx2DE
04000000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_RSTx1DE
02000000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_SET1xDE
01000000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CPT2DE
00800000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CPT1DE
00400000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_UPDDE
00100000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_REPDE
00080000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP4DE
00040000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP3DE
00020000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP2DE
00010000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP1DE
00004000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_DLYPRTIE
00002000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_RSTIE
00001000 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_RSTx2IE
00000800 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_SETx2IE
00000400 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_RSTx1IE
00000200 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_SET1xIE
00000100 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CPT2IE
00000080 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CPT1IE
00000040 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_UPDIE
00000010 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_REPIE
00000008 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP4IE
00000004 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP3IE
00000002 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP2IE
00000001 l       *ABS*	00000000 HRTIM_TIMA_TIMADIER5_CMP1IE
40017490 l       *ABS*	00000000 HRTIM_TIMA_CNTAR
00000000 l       *ABS*	00000000 HRTIM_TIMA_CNTAR_CNTx_Shift
40017494 l       *ABS*	00000000 HRTIM_TIMA_PERAR
00000000 l       *ABS*	00000000 HRTIM_TIMA_PERAR_PERx_Shift
40017498 l       *ABS*	00000000 HRTIM_TIMA_REPAR
00000000 l       *ABS*	00000000 HRTIM_TIMA_REPAR_REPx_Shift
4001749c l       *ABS*	00000000 HRTIM_TIMA_CMP1AR
00000000 l       *ABS*	00000000 HRTIM_TIMA_CMP1AR_CMP1x_Shift
400174a0 l       *ABS*	00000000 HRTIM_TIMA_CMP1CAR
00000010 l       *ABS*	00000000 HRTIM_TIMA_CMP1CAR_REPx_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMA_CMP1CAR_CMP1x_Shift
400174a4 l       *ABS*	00000000 HRTIM_TIMA_CMP2AR
00000000 l       *ABS*	00000000 HRTIM_TIMA_CMP2AR_CMP2x_Shift
400174a8 l       *ABS*	00000000 HRTIM_TIMA_CMP3AR
00000000 l       *ABS*	00000000 HRTIM_TIMA_CMP3AR_CMP3x_Shift
400174ac l       *ABS*	00000000 HRTIM_TIMA_CMP4AR
00000000 l       *ABS*	00000000 HRTIM_TIMA_CMP4AR_CMP4x_Shift
400174b0 l       *ABS*	00000000 HRTIM_TIMA_CPT1AR
00000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1AR_CPT1x_Shift
400174b4 l       *ABS*	00000000 HRTIM_TIMA_CPT2AR
00000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2AR_CPT2x_Shift
400174b8 l       *ABS*	00000000 HRTIM_TIMA_DTAR
80000000 l       *ABS*	00000000 HRTIM_TIMA_DTAR_DTFLKx
40000000 l       *ABS*	00000000 HRTIM_TIMA_DTAR_DTFSLKx
02000000 l       *ABS*	00000000 HRTIM_TIMA_DTAR_SDTFx
00000010 l       *ABS*	00000000 HRTIM_TIMA_DTAR_DTFx_Shift
00008000 l       *ABS*	00000000 HRTIM_TIMA_DTAR_DTRLKx
00004000 l       *ABS*	00000000 HRTIM_TIMA_DTAR_DTRSLKx
0000000a l       *ABS*	00000000 HRTIM_TIMA_DTAR_DTPRSC_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMA_DTAR_SDTRx
00000000 l       *ABS*	00000000 HRTIM_TIMA_DTAR_DTRx_Shift
400174bc l       *ABS*	00000000 HRTIM_TIMA_SETA1R
80000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMA_SETA1R_SST
400174c0 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R
80000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMA_RSTA1R_SRT
400174c4 l       *ABS*	00000000 HRTIM_TIMA_SETA2R
80000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMA_SETA2R_SST
400174c8 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R
80000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMA_RSTA2R_SRT
400174cc l       *ABS*	00000000 HRTIM_TIMA_EEFAR1
00000019 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE5FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE5LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE4FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE4LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE3FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE3LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE2FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE2LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE1FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMA_EEFAR1_EE1LTCH
400174d0 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2
00000019 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE10FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE10LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE9FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE9LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE8FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE8LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE7FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE7LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE6FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMA_EEFAR2_EE6LTCH
400174d4 l       *ABS*	00000000 HRTIM_TIMA_RSTAR
40000000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMECMP4
20000000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMECMP2
10000000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMECMP1
08000000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMDCMP4
04000000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMDCMP2
02000000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMDCMP1
01000000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMCCMP4
00800000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMBCMP4
00100000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMBCMP2
00080000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_TIMBCMP1
00040000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT10
00020000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT9
00010000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT8
00008000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT7
00004000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT6
00002000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT5
00001000 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT4
00000800 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT3
00000400 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT2
00000200 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_EXTEVNT1
00000100 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_MSTCMP4
00000080 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_MSTCMP3
00000040 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_MSTCMP2
00000020 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_MSTCMP1
00000010 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_MSTPER
00000008 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_CMP2
00000002 l       *ABS*	00000000 HRTIM_TIMA_RSTAR_UPDT
400174d8 l       *ABS*	00000000 HRTIM_TIMA_CHPAR
00000007 l       *ABS*	00000000 HRTIM_TIMA_CHPAR_STRTPW_Shift
00000004 l       *ABS*	00000000 HRTIM_TIMA_CHPAR_CHPDTY_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMA_CHPAR_CHPFRQ_Shift
400174dc l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR
80000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TE1SET
08000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TD1SET
00800000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TC1SET
00080000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_TB1SET
00000800 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMA_CPT1ACR_SWCPT
400174e0 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR
80000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TE1SET
08000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TD1SET
00800000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TC1SET
00080000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_TB1SET
00000800 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMA_CPT2ACR_SWCPT
400174e4 l       *ABS*	00000000 HRTIM_TIMA_OUTAR
00800000 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_DIDL2
00400000 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_CHP2
00000014 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_FAULT2_Shift
00080000 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_IDLES2
00040000 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_IDLEM2
00020000 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_POL2
0000000a l       *ABS*	00000000 HRTIM_TIMA_OUTAR_DLYPRT_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_DLYPRTEN
00000100 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_DTEN
00000080 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_DIDL1
00000040 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_CHP1
00000004 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_FAULT1_Shift
00000008 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_IDLES1
00000004 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_IDLEM1
00000002 l       *ABS*	00000000 HRTIM_TIMA_OUTAR_POL1
400174e8 l       *ABS*	00000000 HRTIM_TIMA_FLTAR
80000000 l       *ABS*	00000000 HRTIM_TIMA_FLTAR_FLTLCK
00000010 l       *ABS*	00000000 HRTIM_TIMA_FLTAR_FLT5EN
00000008 l       *ABS*	00000000 HRTIM_TIMA_FLTAR_FLT4EN
00000004 l       *ABS*	00000000 HRTIM_TIMA_FLTAR_FLT3EN
00000002 l       *ABS*	00000000 HRTIM_TIMA_FLTAR_FLT2EN
00000001 l       *ABS*	00000000 HRTIM_TIMA_FLTAR_FLT1EN
40017500 l       *ABS*	00000000 HRTIM_TIMB_BASE
40017500 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR
0000001c l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_UPDGAT_Shift
08000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_PREEN
00000019 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_DACSYNC_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_MSTU
00800000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_TEU
00400000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_TDU
00200000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_TCU
00100000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_TBU
00040000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_TxRSTU
00020000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_TxREPU
0000000e l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_DELCMP4_Shift
0000000c l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_DELCMP2_Shift
00000800 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_SYNCSTRTx
00000400 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_SYNCRSTx
00000040 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_PSHPLL
00000020 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_HALF
00000010 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_RETRIG
00000008 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_CONT
00000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBCR_CK_PSCx_Shift
40017504 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR
00080000 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_O2STAT
00040000 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_O1STAT
00020000 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_IPPSTAT
00010000 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_CPPSTAT
00004000 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_DLYPRT
00002000 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_RST
00001000 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_RSTx2
00000800 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_SETx2
00000400 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_RSTx1
00000200 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_SETx1
00000100 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_CPT2
00000080 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_CPT1
00000040 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_UPD
00000010 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_REP
00000008 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_CMP3
00000002 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_CMP2
00000001 l       *ABS*	00000000 HRTIM_TIMB_TIMBISR_CMP1
40017508 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR
00004000 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_DLYPRTC
00002000 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_RSTC
00001000 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_RSTx2C
00000800 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_SET2xC
00000400 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_RSTx1C
00000200 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_SET1xC
00000100 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_CPT2C
00000080 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_CPT1C
00000040 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_UPDC
00000010 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_REPC
00000008 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_CMP4C
00000004 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_CMP3C
00000002 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_CMP2C
00000001 l       *ABS*	00000000 HRTIM_TIMB_TIMBICR_CMP1C
4001750c l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5
40000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_DLYPRTDE
20000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_RSTDE
10000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_RSTx2DE
08000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_SETx2DE
04000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_RSTx1DE
02000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_SET1xDE
01000000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CPT2DE
00800000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CPT1DE
00400000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_UPDDE
00100000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_REPDE
00080000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP4DE
00040000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP3DE
00020000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP2DE
00010000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP1DE
00004000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_DLYPRTIE
00002000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_RSTIE
00001000 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_RSTx2IE
00000800 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_SETx2IE
00000400 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_RSTx1IE
00000200 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_SET1xIE
00000100 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CPT2IE
00000080 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CPT1IE
00000040 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_UPDIE
00000010 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_REPIE
00000008 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP4IE
00000004 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP3IE
00000002 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP2IE
00000001 l       *ABS*	00000000 HRTIM_TIMB_TIMBDIER5_CMP1IE
40017510 l       *ABS*	00000000 HRTIM_TIMB_CNTR
00000000 l       *ABS*	00000000 HRTIM_TIMB_CNTR_CNTx_Shift
40017514 l       *ABS*	00000000 HRTIM_TIMB_PERBR
00000000 l       *ABS*	00000000 HRTIM_TIMB_PERBR_PERx_Shift
40017518 l       *ABS*	00000000 HRTIM_TIMB_REPBR
00000000 l       *ABS*	00000000 HRTIM_TIMB_REPBR_REPx_Shift
4001751c l       *ABS*	00000000 HRTIM_TIMB_CMP1BR
00000000 l       *ABS*	00000000 HRTIM_TIMB_CMP1BR_CMP1x_Shift
40017520 l       *ABS*	00000000 HRTIM_TIMB_CMP1CBR
00000010 l       *ABS*	00000000 HRTIM_TIMB_CMP1CBR_REPx_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMB_CMP1CBR_CMP1x_Shift
40017524 l       *ABS*	00000000 HRTIM_TIMB_CMP2BR
00000000 l       *ABS*	00000000 HRTIM_TIMB_CMP2BR_CMP2x_Shift
40017528 l       *ABS*	00000000 HRTIM_TIMB_CMP3BR
00000000 l       *ABS*	00000000 HRTIM_TIMB_CMP3BR_CMP3x_Shift
4001752c l       *ABS*	00000000 HRTIM_TIMB_CMP4BR
00000000 l       *ABS*	00000000 HRTIM_TIMB_CMP4BR_CMP4x_Shift
40017530 l       *ABS*	00000000 HRTIM_TIMB_CPT1BR
00000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BR_CPT1x_Shift
40017534 l       *ABS*	00000000 HRTIM_TIMB_CPT2BR
00000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BR_CPT2x_Shift
40017538 l       *ABS*	00000000 HRTIM_TIMB_DTBR
80000000 l       *ABS*	00000000 HRTIM_TIMB_DTBR_DTFLKx
40000000 l       *ABS*	00000000 HRTIM_TIMB_DTBR_DTFSLKx
02000000 l       *ABS*	00000000 HRTIM_TIMB_DTBR_SDTFx
00000010 l       *ABS*	00000000 HRTIM_TIMB_DTBR_DTFx_Shift
00008000 l       *ABS*	00000000 HRTIM_TIMB_DTBR_DTRLKx
00004000 l       *ABS*	00000000 HRTIM_TIMB_DTBR_DTRSLKx
0000000a l       *ABS*	00000000 HRTIM_TIMB_DTBR_DTPRSC_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMB_DTBR_SDTRx
00000000 l       *ABS*	00000000 HRTIM_TIMB_DTBR_DTRx_Shift
4001753c l       *ABS*	00000000 HRTIM_TIMB_SETB1R
80000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMB_SETB1R_SST
40017540 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R
80000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMB_RSTB1R_SRT
40017544 l       *ABS*	00000000 HRTIM_TIMB_SETB2R
80000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMB_SETB2R_SST
40017548 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R
80000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMB_RSTB2R_SRT
4001754c l       *ABS*	00000000 HRTIM_TIMB_EEFBR1
00000019 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE5FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE5LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE4FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE4LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE3FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE3LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE2FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE2LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE1FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMB_EEFBR1_EE1LTCH
40017550 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2
00000019 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE10FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE10LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE9FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE9LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE8FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE8LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE7FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE7LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE6FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMB_EEFBR2_EE6LTCH
40017554 l       *ABS*	00000000 HRTIM_TIMB_RSTBR
40000000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMECMP4
20000000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMECMP2
10000000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMECMP1
08000000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMDCMP4
04000000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMDCMP2
02000000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMDCMP1
01000000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMCCMP4
00800000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMACMP4
00100000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMACMP2
00080000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_TIMACMP1
00040000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT10
00020000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT9
00010000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT8
00008000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT7
00004000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT6
00002000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT5
00001000 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT4
00000800 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT3
00000400 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT2
00000200 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_EXTEVNT1
00000100 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_MSTCMP4
00000080 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_MSTCMP3
00000040 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_MSTCMP2
00000020 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_MSTCMP1
00000010 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_MSTPER
00000008 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_CMP2
00000002 l       *ABS*	00000000 HRTIM_TIMB_RSTBR_UPDT
40017558 l       *ABS*	00000000 HRTIM_TIMB_CHPBR
00000007 l       *ABS*	00000000 HRTIM_TIMB_CHPBR_STRTPW_Shift
00000004 l       *ABS*	00000000 HRTIM_TIMB_CHPBR_CHPDTY_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMB_CHPBR_CHPFRQ_Shift
4001755c l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR
80000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TE1SET
08000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TD1SET
00800000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TC1SET
00008000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMB_CPT1BCR_SWCPT
40017560 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR
80000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TE1SET
08000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TD1SET
00800000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TC1SET
00008000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMB_CPT2BCR_SWCPT
40017564 l       *ABS*	00000000 HRTIM_TIMB_OUTBR
00800000 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_DIDL2
00400000 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_CHP2
00000014 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_FAULT2_Shift
00080000 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_IDLES2
00040000 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_IDLEM2
00020000 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_POL2
0000000a l       *ABS*	00000000 HRTIM_TIMB_OUTBR_DLYPRT_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_DLYPRTEN
00000100 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_DTEN
00000080 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_DIDL1
00000040 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_CHP1
00000004 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_FAULT1_Shift
00000008 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_IDLES1
00000004 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_IDLEM1
00000002 l       *ABS*	00000000 HRTIM_TIMB_OUTBR_POL1
40017568 l       *ABS*	00000000 HRTIM_TIMB_FLTBR
80000000 l       *ABS*	00000000 HRTIM_TIMB_FLTBR_FLTLCK
00000010 l       *ABS*	00000000 HRTIM_TIMB_FLTBR_FLT5EN
00000008 l       *ABS*	00000000 HRTIM_TIMB_FLTBR_FLT4EN
00000004 l       *ABS*	00000000 HRTIM_TIMB_FLTBR_FLT3EN
00000002 l       *ABS*	00000000 HRTIM_TIMB_FLTBR_FLT2EN
00000001 l       *ABS*	00000000 HRTIM_TIMB_FLTBR_FLT1EN
40017580 l       *ABS*	00000000 HRTIM_TIMC_BASE
40017580 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR
0000001c l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_UPDGAT_Shift
08000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_PREEN
00000019 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_DACSYNC_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_MSTU
00800000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_TEU
00400000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_TDU
00200000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_TCU
00100000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_TBU
00040000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_TxRSTU
00020000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_TxREPU
0000000e l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_DELCMP4_Shift
0000000c l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_DELCMP2_Shift
00000800 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_SYNCSTRTx
00000400 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_SYNCRSTx
00000040 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_PSHPLL
00000020 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_HALF
00000010 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_RETRIG
00000008 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_CONT
00000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCCR_CK_PSCx_Shift
40017584 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR
00080000 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_O2STAT
00040000 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_O1STAT
00020000 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_IPPSTAT
00010000 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_CPPSTAT
00004000 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_DLYPRT
00002000 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_RST
00001000 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_RSTx2
00000800 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_SETx2
00000400 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_RSTx1
00000200 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_SETx1
00000100 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_CPT2
00000080 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_CPT1
00000040 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_UPD
00000010 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_REP
00000008 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_CMP3
00000002 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_CMP2
00000001 l       *ABS*	00000000 HRTIM_TIMC_TIMCISR_CMP1
40017588 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR
00004000 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_DLYPRTC
00002000 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_RSTC
00001000 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_RSTx2C
00000800 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_SET2xC
00000400 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_RSTx1C
00000200 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_SET1xC
00000100 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_CPT2C
00000080 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_CPT1C
00000040 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_UPDC
00000010 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_REPC
00000008 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_CMP4C
00000004 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_CMP3C
00000002 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_CMP2C
00000001 l       *ABS*	00000000 HRTIM_TIMC_TIMCICR_CMP1C
4001758c l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5
40000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_DLYPRTDE
20000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_RSTDE
10000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_RSTx2DE
08000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_SETx2DE
04000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_RSTx1DE
02000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_SET1xDE
01000000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CPT2DE
00800000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CPT1DE
00400000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_UPDDE
00100000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_REPDE
00080000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP4DE
00040000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP3DE
00020000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP2DE
00010000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP1DE
00004000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_DLYPRTIE
00002000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_RSTIE
00001000 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_RSTx2IE
00000800 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_SETx2IE
00000400 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_RSTx1IE
00000200 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_SET1xIE
00000100 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CPT2IE
00000080 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CPT1IE
00000040 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_UPDIE
00000010 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_REPIE
00000008 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP4IE
00000004 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP3IE
00000002 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP2IE
00000001 l       *ABS*	00000000 HRTIM_TIMC_TIMCDIER5_CMP1IE
40017590 l       *ABS*	00000000 HRTIM_TIMC_CNTCR
00000000 l       *ABS*	00000000 HRTIM_TIMC_CNTCR_CNTx_Shift
40017594 l       *ABS*	00000000 HRTIM_TIMC_PERCR
00000000 l       *ABS*	00000000 HRTIM_TIMC_PERCR_PERx_Shift
40017598 l       *ABS*	00000000 HRTIM_TIMC_REPCR
00000000 l       *ABS*	00000000 HRTIM_TIMC_REPCR_REPx_Shift
4001759c l       *ABS*	00000000 HRTIM_TIMC_CMP1CR
00000000 l       *ABS*	00000000 HRTIM_TIMC_CMP1CR_CMP1x_Shift
400175a0 l       *ABS*	00000000 HRTIM_TIMC_CMP1CCR
00000010 l       *ABS*	00000000 HRTIM_TIMC_CMP1CCR_REPx_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMC_CMP1CCR_CMP1x_Shift
400175a4 l       *ABS*	00000000 HRTIM_TIMC_CMP2CR
00000000 l       *ABS*	00000000 HRTIM_TIMC_CMP2CR_CMP2x_Shift
400175a8 l       *ABS*	00000000 HRTIM_TIMC_CMP3CR
00000000 l       *ABS*	00000000 HRTIM_TIMC_CMP3CR_CMP3x_Shift
400175ac l       *ABS*	00000000 HRTIM_TIMC_CMP4CR
00000000 l       *ABS*	00000000 HRTIM_TIMC_CMP4CR_CMP4x_Shift
400175b0 l       *ABS*	00000000 HRTIM_TIMC_CPT1CR
00000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CR_CPT1x_Shift
400175b4 l       *ABS*	00000000 HRTIM_TIMC_CPT2CR
00000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CR_CPT2x_Shift
400175b8 l       *ABS*	00000000 HRTIM_TIMC_DTCR
80000000 l       *ABS*	00000000 HRTIM_TIMC_DTCR_DTFLKx
40000000 l       *ABS*	00000000 HRTIM_TIMC_DTCR_DTFSLKx
02000000 l       *ABS*	00000000 HRTIM_TIMC_DTCR_SDTFx
00000010 l       *ABS*	00000000 HRTIM_TIMC_DTCR_DTFx_Shift
00008000 l       *ABS*	00000000 HRTIM_TIMC_DTCR_DTRLKx
00004000 l       *ABS*	00000000 HRTIM_TIMC_DTCR_DTRSLKx
0000000a l       *ABS*	00000000 HRTIM_TIMC_DTCR_DTPRSC_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMC_DTCR_SDTRx
00000000 l       *ABS*	00000000 HRTIM_TIMC_DTCR_DTRx_Shift
400175bc l       *ABS*	00000000 HRTIM_TIMC_SETC1R
80000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMC_SETC1R_SST
400175c0 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R
80000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMC_RSTC1R_SRT
400175c4 l       *ABS*	00000000 HRTIM_TIMC_SETC2R
80000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMC_SETC2R_SST
400175c8 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R
80000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMC_RSTC2R_SRT
400175cc l       *ABS*	00000000 HRTIM_TIMC_EEFCR1
00000019 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE5FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE5LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE4FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE4LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE3FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE3LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE2FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE2LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE1FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMC_EEFCR1_EE1LTCH
400175d0 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2
00000019 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE10FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE10LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE9FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE9LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE8FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE8LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE7FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE7LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE6FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMC_EEFCR2_EE6LTCH
400175d4 l       *ABS*	00000000 HRTIM_TIMC_RSTCR
40000000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMECMP4
20000000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMECMP2
10000000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMECMP1
08000000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMDCMP4
04000000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMDCMP2
02000000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMDCMP1
01000000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMBCMP4
00800000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMBCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMBCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMACMP4
00100000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMACMP2
00080000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_TIMACMP1
00040000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT10
00020000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT9
00010000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT8
00008000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT7
00004000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT6
00002000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT5
00001000 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT4
00000800 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT3
00000400 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT2
00000200 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_EXTEVNT1
00000100 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_MSTCMP4
00000080 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_MSTCMP3
00000040 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_MSTCMP2
00000020 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_MSTCMP1
00000010 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_MSTPER
00000008 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_CMP2
00000002 l       *ABS*	00000000 HRTIM_TIMC_RSTCR_UPDT
400175d8 l       *ABS*	00000000 HRTIM_TIMC_CHPCR
00000007 l       *ABS*	00000000 HRTIM_TIMC_CHPCR_STRTPW_Shift
00000004 l       *ABS*	00000000 HRTIM_TIMC_CHPCR_CHPDTY_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMC_CHPCR_CHPFRQ_Shift
400175dc l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR
80000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TE1SET
08000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TD1SET
00080000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TB1SET
00008000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMC_CPT1CCR_SWCPT
400175e0 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR
80000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TE1SET
08000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TD1SET
00080000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TB1SET
00008000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMC_CPT2CCR_SWCPT
400175e4 l       *ABS*	00000000 HRTIM_TIMC_OUTCR
00800000 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_DIDL2
00400000 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_CHP2
00000014 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_FAULT2_Shift
00080000 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_IDLES2
00040000 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_IDLEM2
00020000 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_POL2
0000000a l       *ABS*	00000000 HRTIM_TIMC_OUTCR_DLYPRT_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_DLYPRTEN
00000100 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_DTEN
00000080 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_DIDL1
00000040 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_CHP1
00000004 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_FAULT1_Shift
00000008 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_IDLES1
00000004 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_IDLEM1
00000002 l       *ABS*	00000000 HRTIM_TIMC_OUTCR_POL1
400175e8 l       *ABS*	00000000 HRTIM_TIMC_FLTCR
80000000 l       *ABS*	00000000 HRTIM_TIMC_FLTCR_FLTLCK
00000010 l       *ABS*	00000000 HRTIM_TIMC_FLTCR_FLT5EN
00000008 l       *ABS*	00000000 HRTIM_TIMC_FLTCR_FLT4EN
00000004 l       *ABS*	00000000 HRTIM_TIMC_FLTCR_FLT3EN
00000002 l       *ABS*	00000000 HRTIM_TIMC_FLTCR_FLT2EN
00000001 l       *ABS*	00000000 HRTIM_TIMC_FLTCR_FLT1EN
40017600 l       *ABS*	00000000 HRTIM_TIMD_BASE
40017600 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR
0000001c l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_UPDGAT_Shift
08000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_PREEN
00000019 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_DACSYNC_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_MSTU
00800000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_TEU
00400000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_TDU
00200000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_TCU
00100000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_TBU
00040000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_TxRSTU
00020000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_TxREPU
0000000e l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_DELCMP4_Shift
0000000c l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_DELCMP2_Shift
00000800 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_SYNCSTRTx
00000400 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_SYNCRSTx
00000040 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_PSHPLL
00000020 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_HALF
00000010 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_RETRIG
00000008 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_CONT
00000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDCR_CK_PSCx_Shift
40017604 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR
00080000 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_O2STAT
00040000 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_O1STAT
00020000 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_IPPSTAT
00010000 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_CPPSTAT
00004000 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_DLYPRT
00002000 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_RST
00001000 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_RSTx2
00000800 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_SETx2
00000400 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_RSTx1
00000200 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_SETx1
00000100 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_CPT2
00000080 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_CPT1
00000040 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_UPD
00000010 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_REP
00000008 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_CMP3
00000002 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_CMP2
00000001 l       *ABS*	00000000 HRTIM_TIMD_TIMDISR_CMP1
40017608 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR
00004000 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_DLYPRTC
00002000 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_RSTC
00001000 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_RSTx2C
00000800 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_SET2xC
00000400 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_RSTx1C
00000200 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_SET1xC
00000100 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_CPT2C
00000080 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_CPT1C
00000040 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_UPDC
00000010 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_REPC
00000008 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_CMP4C
00000004 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_CMP3C
00000002 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_CMP2C
00000001 l       *ABS*	00000000 HRTIM_TIMD_TIMDICR_CMP1C
4001760c l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5
40000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_DLYPRTDE
20000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_RSTDE
10000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_RSTx2DE
08000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_SETx2DE
04000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_RSTx1DE
02000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_SET1xDE
01000000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CPT2DE
00800000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CPT1DE
00400000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_UPDDE
00100000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_REPDE
00080000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP4DE
00040000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP3DE
00020000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP2DE
00010000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP1DE
00004000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_DLYPRTIE
00002000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_RSTIE
00001000 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_RSTx2IE
00000800 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_SETx2IE
00000400 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_RSTx1IE
00000200 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_SET1xIE
00000100 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CPT2IE
00000080 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CPT1IE
00000040 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_UPDIE
00000010 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_REPIE
00000008 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP4IE
00000004 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP3IE
00000002 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP2IE
00000001 l       *ABS*	00000000 HRTIM_TIMD_TIMDDIER5_CMP1IE
40017610 l       *ABS*	00000000 HRTIM_TIMD_CNTDR
00000000 l       *ABS*	00000000 HRTIM_TIMD_CNTDR_CNTx_Shift
40017614 l       *ABS*	00000000 HRTIM_TIMD_PERDR
00000000 l       *ABS*	00000000 HRTIM_TIMD_PERDR_PERx_Shift
40017618 l       *ABS*	00000000 HRTIM_TIMD_REPDR
00000000 l       *ABS*	00000000 HRTIM_TIMD_REPDR_REPx_Shift
4001761c l       *ABS*	00000000 HRTIM_TIMD_CMP1DR
00000000 l       *ABS*	00000000 HRTIM_TIMD_CMP1DR_CMP1x_Shift
40017620 l       *ABS*	00000000 HRTIM_TIMD_CMP1CDR
00000010 l       *ABS*	00000000 HRTIM_TIMD_CMP1CDR_REPx_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMD_CMP1CDR_CMP1x_Shift
40017624 l       *ABS*	00000000 HRTIM_TIMD_CMP2DR
00000000 l       *ABS*	00000000 HRTIM_TIMD_CMP2DR_CMP2x_Shift
40017628 l       *ABS*	00000000 HRTIM_TIMD_CMP3DR
00000000 l       *ABS*	00000000 HRTIM_TIMD_CMP3DR_CMP3x_Shift
4001762c l       *ABS*	00000000 HRTIM_TIMD_CMP4DR
00000000 l       *ABS*	00000000 HRTIM_TIMD_CMP4DR_CMP4x_Shift
40017630 l       *ABS*	00000000 HRTIM_TIMD_CPT1DR
00000000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DR_CPT1x_Shift
40017634 l       *ABS*	00000000 HRTIM_TIMD_CPT2DR
00000000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DR_CPT2x_Shift
40017638 l       *ABS*	00000000 HRTIM_TIMD_DTDR
80000000 l       *ABS*	00000000 HRTIM_TIMD_DTDR_DTFLKx
40000000 l       *ABS*	00000000 HRTIM_TIMD_DTDR_DTFSLKx
02000000 l       *ABS*	00000000 HRTIM_TIMD_DTDR_SDTFx
00000010 l       *ABS*	00000000 HRTIM_TIMD_DTDR_DTFx_Shift
00008000 l       *ABS*	00000000 HRTIM_TIMD_DTDR_DTRLKx
00004000 l       *ABS*	00000000 HRTIM_TIMD_DTDR_DTRSLKx
0000000a l       *ABS*	00000000 HRTIM_TIMD_DTDR_DTPRSC_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMD_DTDR_SDTRx
00000000 l       *ABS*	00000000 HRTIM_TIMD_DTDR_DTRx_Shift
4001763c l       *ABS*	00000000 HRTIM_TIMD_SETD1R
80000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMD_SETD1R_SST
40017640 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R
80000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMD_RSTD1R_SRT
40017644 l       *ABS*	00000000 HRTIM_TIMD_SETD2R
80000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMD_SETD2R_SST
40017648 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R
80000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIMD_RSTD2R_SRT
4001764c l       *ABS*	00000000 HRTIM_TIMD_EEFDR1
00000019 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE5FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE5LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE4FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE4LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE3FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE3LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE2FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE2LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE1FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMD_EEFDR1_EE1LTCH
40017650 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2
00000019 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE10FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE10LTCH
00000013 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE9FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE9LTCH
0000000d l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE8FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE8LTCH
00000007 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE7FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE7LTCH
00000001 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE6FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIMD_EEFDR2_EE6LTCH
40017654 l       *ABS*	00000000 HRTIM_TIMD_RSTDR
40000000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMECMP4
20000000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMECMP2
10000000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMECMP1
08000000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMCCMP4
04000000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMCCMP2
02000000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMCCMP1
01000000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMBCMP4
00800000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMBCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMBCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMACMP4
00100000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMACMP2
00080000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_TIMACMP1
00040000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT10
00020000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT9
00010000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT8
00008000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT7
00004000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT6
00002000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT5
00001000 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT4
00000800 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT3
00000400 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT2
00000200 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_EXTEVNT1
00000100 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_MSTCMP4
00000080 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_MSTCMP3
00000040 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_MSTCMP2
00000020 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_MSTCMP1
00000010 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_MSTPER
00000008 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_CMP2
00000002 l       *ABS*	00000000 HRTIM_TIMD_RSTDR_UPDT
40017658 l       *ABS*	00000000 HRTIM_TIMD_CHPDR
00000007 l       *ABS*	00000000 HRTIM_TIMD_CHPDR_STRTPW_Shift
00000004 l       *ABS*	00000000 HRTIM_TIMD_CHPDR_CHPDTY_Shift
00000000 l       *ABS*	00000000 HRTIM_TIMD_CHPDR_CHPFRQ_Shift
4001765c l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR
80000000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TE1SET
00800000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TC1SET
00080000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TB1SET
00008000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMD_CPT1DCR_SWCPT
40017660 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR
80000000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TECMP2
40000000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TECMP1
20000000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TE1RST
10000000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TE1SET
00800000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TC1SET
00080000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TB1SET
00008000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIMD_CPT2DCR_SWCPT
40017664 l       *ABS*	00000000 HRTIM_TIMD_OUTDR
00800000 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_DIDL2
00400000 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_CHP2
00000014 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_FAULT2_Shift
00080000 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_IDLES2
00040000 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_IDLEM2
00020000 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_POL2
0000000a l       *ABS*	00000000 HRTIM_TIMD_OUTDR_DLYPRT_Shift
00000200 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_DLYPRTEN
00000100 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_DTEN
00000080 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_DIDL1
00000040 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_CHP1
00000004 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_FAULT1_Shift
00000008 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_IDLES1
00000004 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_IDLEM1
00000002 l       *ABS*	00000000 HRTIM_TIMD_OUTDR_POL1
40017668 l       *ABS*	00000000 HRTIM_TIMD_FLTDR
80000000 l       *ABS*	00000000 HRTIM_TIMD_FLTDR_FLTLCK
00000010 l       *ABS*	00000000 HRTIM_TIMD_FLTDR_FLT5EN
00000008 l       *ABS*	00000000 HRTIM_TIMD_FLTDR_FLT4EN
00000004 l       *ABS*	00000000 HRTIM_TIMD_FLTDR_FLT3EN
00000002 l       *ABS*	00000000 HRTIM_TIMD_FLTDR_FLT2EN
00000001 l       *ABS*	00000000 HRTIM_TIMD_FLTDR_FLT1EN
40017680 l       *ABS*	00000000 HRTIM_TIME_BASE
40017680 l       *ABS*	00000000 HRTIM_TIME_TIMECR
0000001c l       *ABS*	00000000 HRTIM_TIME_TIMECR_UPDGAT_Shift
08000000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_PREEN
00000019 l       *ABS*	00000000 HRTIM_TIME_TIMECR_DACSYNC_Shift
01000000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_MSTU
00800000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_TEU
00400000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_TDU
00200000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_TCU
00100000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_TBU
00040000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_TxRSTU
00020000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_TxREPU
0000000e l       *ABS*	00000000 HRTIM_TIME_TIMECR_DELCMP4_Shift
0000000c l       *ABS*	00000000 HRTIM_TIME_TIMECR_DELCMP2_Shift
00000800 l       *ABS*	00000000 HRTIM_TIME_TIMECR_SYNCSTRTx
00000400 l       *ABS*	00000000 HRTIM_TIME_TIMECR_SYNCRSTx
00000040 l       *ABS*	00000000 HRTIM_TIME_TIMECR_PSHPLL
00000020 l       *ABS*	00000000 HRTIM_TIME_TIMECR_HALF
00000010 l       *ABS*	00000000 HRTIM_TIME_TIMECR_RETRIG
00000008 l       *ABS*	00000000 HRTIM_TIME_TIMECR_CONT
00000000 l       *ABS*	00000000 HRTIM_TIME_TIMECR_CK_PSCx_Shift
40017684 l       *ABS*	00000000 HRTIM_TIME_TIMEISR
00080000 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_O2STAT
00040000 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_O1STAT
00020000 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_IPPSTAT
00010000 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_CPPSTAT
00004000 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_DLYPRT
00002000 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_RST
00001000 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_RSTx2
00000800 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_SETx2
00000400 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_RSTx1
00000200 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_SETx1
00000100 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_CPT2
00000080 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_CPT1
00000040 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_UPD
00000010 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_REP
00000008 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_CMP3
00000002 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_CMP2
00000001 l       *ABS*	00000000 HRTIM_TIME_TIMEISR_CMP1
40017688 l       *ABS*	00000000 HRTIM_TIME_TIMEICR
00004000 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_DLYPRTC
00002000 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_RSTC
00001000 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_RSTx2C
00000800 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_SET2xC
00000400 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_RSTx1C
00000200 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_SET1xC
00000100 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_CPT2C
00000080 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_CPT1C
00000040 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_UPDC
00000010 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_REPC
00000008 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_CMP4C
00000004 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_CMP3C
00000002 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_CMP2C
00000001 l       *ABS*	00000000 HRTIM_TIME_TIMEICR_CMP1C
4001768c l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5
40000000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_DLYPRTDE
20000000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_RSTDE
10000000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_RSTx2DE
08000000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_SETx2DE
04000000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_RSTx1DE
02000000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_SET1xDE
01000000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CPT2DE
00800000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CPT1DE
00400000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_UPDDE
00100000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_REPDE
00080000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP4DE
00040000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP3DE
00020000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP2DE
00010000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP1DE
00004000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_DLYPRTIE
00002000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_RSTIE
00001000 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_RSTx2IE
00000800 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_SETx2IE
00000400 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_RSTx1IE
00000200 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_SET1xIE
00000100 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CPT2IE
00000080 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CPT1IE
00000040 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_UPDIE
00000010 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_REPIE
00000008 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP4IE
00000004 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP3IE
00000002 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP2IE
00000001 l       *ABS*	00000000 HRTIM_TIME_TIMEDIER5_CMP1IE
40017690 l       *ABS*	00000000 HRTIM_TIME_CNTER
00000000 l       *ABS*	00000000 HRTIM_TIME_CNTER_CNTx_Shift
40017694 l       *ABS*	00000000 HRTIM_TIME_PERER
00000000 l       *ABS*	00000000 HRTIM_TIME_PERER_PERx_Shift
40017698 l       *ABS*	00000000 HRTIM_TIME_REPER
00000000 l       *ABS*	00000000 HRTIM_TIME_REPER_REPx_Shift
4001769c l       *ABS*	00000000 HRTIM_TIME_CMP1ER
00000000 l       *ABS*	00000000 HRTIM_TIME_CMP1ER_CMP1x_Shift
400176a0 l       *ABS*	00000000 HRTIM_TIME_CMP1CER
00000010 l       *ABS*	00000000 HRTIM_TIME_CMP1CER_REPx_Shift
00000000 l       *ABS*	00000000 HRTIM_TIME_CMP1CER_CMP1x_Shift
400176a4 l       *ABS*	00000000 HRTIM_TIME_CMP2ER
00000000 l       *ABS*	00000000 HRTIM_TIME_CMP2ER_CMP2x_Shift
400176a8 l       *ABS*	00000000 HRTIM_TIME_CMP3ER
00000000 l       *ABS*	00000000 HRTIM_TIME_CMP3ER_CMP3x_Shift
400176ac l       *ABS*	00000000 HRTIM_TIME_CMP4ER
00000000 l       *ABS*	00000000 HRTIM_TIME_CMP4ER_CMP4x_Shift
400176b0 l       *ABS*	00000000 HRTIM_TIME_CPT1ER
00000000 l       *ABS*	00000000 HRTIM_TIME_CPT1ER_CPT1x_Shift
400176b4 l       *ABS*	00000000 HRTIM_TIME_CPT2ER
00000000 l       *ABS*	00000000 HRTIM_TIME_CPT2ER_CPT2x_Shift
400176b8 l       *ABS*	00000000 HRTIM_TIME_DTER
80000000 l       *ABS*	00000000 HRTIM_TIME_DTER_DTFLKx
40000000 l       *ABS*	00000000 HRTIM_TIME_DTER_DTFSLKx
02000000 l       *ABS*	00000000 HRTIM_TIME_DTER_SDTFx
00000010 l       *ABS*	00000000 HRTIM_TIME_DTER_DTFx_Shift
00008000 l       *ABS*	00000000 HRTIM_TIME_DTER_DTRLKx
00004000 l       *ABS*	00000000 HRTIM_TIME_DTER_DTRSLKx
0000000a l       *ABS*	00000000 HRTIM_TIME_DTER_DTPRSC_Shift
00000200 l       *ABS*	00000000 HRTIM_TIME_DTER_SDTRx
00000000 l       *ABS*	00000000 HRTIM_TIME_DTER_DTRx_Shift
400176bc l       *ABS*	00000000 HRTIM_TIME_SETE1R
80000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIME_SETE1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIME_SETE1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIME_SETE1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIME_SETE1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIME_SETE1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIME_SETE1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIME_SETE1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIME_SETE1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIME_SETE1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIME_SETE1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIME_SETE1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIME_SETE1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIME_SETE1R_SST
400176c0 l       *ABS*	00000000 HRTIM_TIME_RSTE1R
80000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_PER
00000002 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIME_RSTE1R_SRT
400176c4 l       *ABS*	00000000 HRTIM_TIME_SETE2R
80000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIME_SETE2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIME_SETE2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIME_SETE2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIME_SETE2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIME_SETE2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIME_SETE2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIME_SETE2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIME_SETE2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIME_SETE2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIME_SETE2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIME_SETE2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIME_SETE2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIME_SETE2R_SST
400176c8 l       *ABS*	00000000 HRTIM_TIME_RSTE2R
80000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_UPDATE
40000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT10
20000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT9
10000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT8
08000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT7
04000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT6
02000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT5
01000000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT4
00800000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT3
00400000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT2
00200000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_EXTEVNT1
00100000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT9
00080000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT8
00040000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT7
00020000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT6
00010000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT5
00008000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT4
00004000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT3
00002000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT2
00001000 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_TIMEVNT1
00000800 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_MSTCMP4
00000400 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_MSTCMP3
00000200 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_MSTCMP2
00000100 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_MSTCMP1
00000080 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_MSTPER
00000040 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_CMP4
00000020 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_CMP3
00000010 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_CMP2
00000008 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_CMP1
00000004 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_PER
00000002 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_RESYNC
00000001 l       *ABS*	00000000 HRTIM_TIME_RSTE2R_SRT
400176cc l       *ABS*	00000000 HRTIM_TIME_EEFER1
00000019 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE5FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE5LTCH
00000013 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE4FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE4LTCH
0000000d l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE3FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE3LTCH
00000007 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE2FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE2LTCH
00000001 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE1FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIME_EEFER1_EE1LTCH
400176d0 l       *ABS*	00000000 HRTIM_TIME_EEFER2
00000019 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE10FLTR_Shift
01000000 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE10LTCH
00000013 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE9FLTR_Shift
00040000 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE9LTCH
0000000d l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE8FLTR_Shift
00001000 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE8LTCH
00000007 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE7FLTR_Shift
00000040 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE7LTCH
00000001 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE6FLTR_Shift
00000001 l       *ABS*	00000000 HRTIM_TIME_EEFER2_EE6LTCH
400176d4 l       *ABS*	00000000 HRTIM_TIME_RSTER
40000000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMDCMP4
20000000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMDCMP2
10000000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMDCMP1
08000000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMCCMP4
04000000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMCCMP2
02000000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMCCMP1
01000000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMBCMP4
00800000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMBCMP2
00400000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMBCMP1
00200000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMACMP4
00100000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMACMP2
00080000 l       *ABS*	00000000 HRTIM_TIME_RSTER_TIMACMP1
00040000 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT10
00020000 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT9
00010000 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT8
00008000 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT7
00004000 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT6
00002000 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT5
00001000 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT4
00000800 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT3
00000400 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT2
00000200 l       *ABS*	00000000 HRTIM_TIME_RSTER_EXTEVNT1
00000100 l       *ABS*	00000000 HRTIM_TIME_RSTER_MSTCMP4
00000080 l       *ABS*	00000000 HRTIM_TIME_RSTER_MSTCMP3
00000040 l       *ABS*	00000000 HRTIM_TIME_RSTER_MSTCMP2
00000020 l       *ABS*	00000000 HRTIM_TIME_RSTER_MSTCMP1
00000010 l       *ABS*	00000000 HRTIM_TIME_RSTER_MSTPER
00000008 l       *ABS*	00000000 HRTIM_TIME_RSTER_CMP4
00000004 l       *ABS*	00000000 HRTIM_TIME_RSTER_CMP2
00000002 l       *ABS*	00000000 HRTIM_TIME_RSTER_UPDT
400176d8 l       *ABS*	00000000 HRTIM_TIME_CHPER
00000007 l       *ABS*	00000000 HRTIM_TIME_CHPER_STRTPW_Shift
00000004 l       *ABS*	00000000 HRTIM_TIME_CHPER_CHPDTY_Shift
00000000 l       *ABS*	00000000 HRTIM_TIME_CHPER_CHPFRQ_Shift
400176dc l       *ABS*	00000000 HRTIM_TIME_CPT1ECR
08000000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TD1SET
00800000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TC1SET
00080000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TB1SET
00008000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIME_CPT1ECR_SWCPT
400176e0 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR
08000000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TDCMP2
04000000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TDCMP1
02000000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TD1RST
01000000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TD1SET
00800000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TCCMP2
00400000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TCCMP1
00200000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TC1RST
00100000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TC1SET
00080000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TBCMP2
00040000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TBCMP1
00020000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TB1RST
00010000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TB1SET
00008000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TACMP2
00004000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TACMP1
00002000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TA1RST
00001000 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_TA1SET
00000800 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV10CPT
00000400 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV9CPT
00000200 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV8CPT
00000100 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV7CPT
00000080 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV6CPT
00000040 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV5CPT
00000020 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV4CPT
00000010 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV3CPT
00000008 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV2CPT
00000004 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_EXEV1CPT
00000002 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_UDPCPT
00000001 l       *ABS*	00000000 HRTIM_TIME_CPT2ECR_SWCPT
400176e4 l       *ABS*	00000000 HRTIM_TIME_OUTER
00800000 l       *ABS*	00000000 HRTIM_TIME_OUTER_DIDL2
00400000 l       *ABS*	00000000 HRTIM_TIME_OUTER_CHP2
00000014 l       *ABS*	00000000 HRTIM_TIME_OUTER_FAULT2_Shift
00080000 l       *ABS*	00000000 HRTIM_TIME_OUTER_IDLES2
00040000 l       *ABS*	00000000 HRTIM_TIME_OUTER_IDLEM2
00020000 l       *ABS*	00000000 HRTIM_TIME_OUTER_POL2
0000000a l       *ABS*	00000000 HRTIM_TIME_OUTER_DLYPRT_Shift
00000200 l       *ABS*	00000000 HRTIM_TIME_OUTER_DLYPRTEN
00000100 l       *ABS*	00000000 HRTIM_TIME_OUTER_DTEN
00000080 l       *ABS*	00000000 HRTIM_TIME_OUTER_DIDL1
00000040 l       *ABS*	00000000 HRTIM_TIME_OUTER_CHP1
00000004 l       *ABS*	00000000 HRTIM_TIME_OUTER_FAULT1_Shift
00000008 l       *ABS*	00000000 HRTIM_TIME_OUTER_IDLES1
00000004 l       *ABS*	00000000 HRTIM_TIME_OUTER_IDLEM1
00000002 l       *ABS*	00000000 HRTIM_TIME_OUTER_POL1
400176e8 l       *ABS*	00000000 HRTIM_TIME_FLTER
80000000 l       *ABS*	00000000 HRTIM_TIME_FLTER_FLTLCK
00000010 l       *ABS*	00000000 HRTIM_TIME_FLTER_FLT5EN
00000008 l       *ABS*	00000000 HRTIM_TIME_FLTER_FLT4EN
00000004 l       *ABS*	00000000 HRTIM_TIME_FLTER_FLT3EN
00000002 l       *ABS*	00000000 HRTIM_TIME_FLTER_FLT2EN
00000001 l       *ABS*	00000000 HRTIM_TIME_FLTER_FLT1EN
40017780 l       *ABS*	00000000 HRTIM_Common_BASE
40017780 l       *ABS*	00000000 HRTIM_Common_CR1
00000019 l       *ABS*	00000000 HRTIM_Common_CR1_AD4USRC_Shift
00000016 l       *ABS*	00000000 HRTIM_Common_CR1_AD3USRC_Shift
00000013 l       *ABS*	00000000 HRTIM_Common_CR1_AD2USRC_Shift
00000010 l       *ABS*	00000000 HRTIM_Common_CR1_AD1USRC_Shift
00000020 l       *ABS*	00000000 HRTIM_Common_CR1_TEUDIS
00000010 l       *ABS*	00000000 HRTIM_Common_CR1_TDUDIS
00000008 l       *ABS*	00000000 HRTIM_Common_CR1_TCUDIS
00000004 l       *ABS*	00000000 HRTIM_Common_CR1_TBUDIS
00000002 l       *ABS*	00000000 HRTIM_Common_CR1_TAUDIS
00000001 l       *ABS*	00000000 HRTIM_Common_CR1_MUDIS
40017784 l       *ABS*	00000000 HRTIM_Common_CR2
00002000 l       *ABS*	00000000 HRTIM_Common_CR2_TERST
00001000 l       *ABS*	00000000 HRTIM_Common_CR2_TDRST
00000800 l       *ABS*	00000000 HRTIM_Common_CR2_TCRST
00000400 l       *ABS*	00000000 HRTIM_Common_CR2_TBRST
00000200 l       *ABS*	00000000 HRTIM_Common_CR2_TARST
00000100 l       *ABS*	00000000 HRTIM_Common_CR2_MRST
00000020 l       *ABS*	00000000 HRTIM_Common_CR2_TESWU
00000010 l       *ABS*	00000000 HRTIM_Common_CR2_TDSWU
00000008 l       *ABS*	00000000 HRTIM_Common_CR2_TCSWU
00000004 l       *ABS*	00000000 HRTIM_Common_CR2_TBSWU
00000002 l       *ABS*	00000000 HRTIM_Common_CR2_TASWU
00000001 l       *ABS*	00000000 HRTIM_Common_CR2_MSWU
40017788 l       *ABS*	00000000 HRTIM_Common_ISR
00020000 l       *ABS*	00000000 HRTIM_Common_ISR_BMPER
00010000 l       *ABS*	00000000 HRTIM_Common_ISR_DLLRDY
00000020 l       *ABS*	00000000 HRTIM_Common_ISR_SYSFLT
00000010 l       *ABS*	00000000 HRTIM_Common_ISR_FLT5
00000008 l       *ABS*	00000000 HRTIM_Common_ISR_FLT4
00000004 l       *ABS*	00000000 HRTIM_Common_ISR_FLT3
00000002 l       *ABS*	00000000 HRTIM_Common_ISR_FLT2
00000001 l       *ABS*	00000000 HRTIM_Common_ISR_FLT1
4001778c l       *ABS*	00000000 HRTIM_Common_ICR
00020000 l       *ABS*	00000000 HRTIM_Common_ICR_BMPERC
00010000 l       *ABS*	00000000 HRTIM_Common_ICR_DLLRDYC
00000020 l       *ABS*	00000000 HRTIM_Common_ICR_SYSFLTC
00000010 l       *ABS*	00000000 HRTIM_Common_ICR_FLT5C
00000008 l       *ABS*	00000000 HRTIM_Common_ICR_FLT4C
00000004 l       *ABS*	00000000 HRTIM_Common_ICR_FLT3C
00000002 l       *ABS*	00000000 HRTIM_Common_ICR_FLT2C
00000001 l       *ABS*	00000000 HRTIM_Common_ICR_FLT1C
40017790 l       *ABS*	00000000 HRTIM_Common_IER
00020000 l       *ABS*	00000000 HRTIM_Common_IER_BMPERIE
00010000 l       *ABS*	00000000 HRTIM_Common_IER_DLLRDYIE
00000020 l       *ABS*	00000000 HRTIM_Common_IER_SYSFLTE
00000010 l       *ABS*	00000000 HRTIM_Common_IER_FLT5IE
00000008 l       *ABS*	00000000 HRTIM_Common_IER_FLT4IE
00000004 l       *ABS*	00000000 HRTIM_Common_IER_FLT3IE
00000002 l       *ABS*	00000000 HRTIM_Common_IER_FLT2IE
00000001 l       *ABS*	00000000 HRTIM_Common_IER_FLT1IE
40017794 l       *ABS*	00000000 HRTIM_Common_OENR
00000200 l       *ABS*	00000000 HRTIM_Common_OENR_TE2OEN
00000100 l       *ABS*	00000000 HRTIM_Common_OENR_TE1OEN
00000080 l       *ABS*	00000000 HRTIM_Common_OENR_TD2OEN
00000040 l       *ABS*	00000000 HRTIM_Common_OENR_TD1OEN
00000020 l       *ABS*	00000000 HRTIM_Common_OENR_TC2OEN
00000010 l       *ABS*	00000000 HRTIM_Common_OENR_TC1OEN
00000008 l       *ABS*	00000000 HRTIM_Common_OENR_TB2OEN
00000004 l       *ABS*	00000000 HRTIM_Common_OENR_TB1OEN
00000002 l       *ABS*	00000000 HRTIM_Common_OENR_TA2OEN
00000001 l       *ABS*	00000000 HRTIM_Common_OENR_TA1OEN
40017798 l       *ABS*	00000000 HRTIM_Common_DISR
00000200 l       *ABS*	00000000 HRTIM_Common_DISR_TE2ODIS
00000100 l       *ABS*	00000000 HRTIM_Common_DISR_TE1ODIS
00000080 l       *ABS*	00000000 HRTIM_Common_DISR_TD2ODIS
00000040 l       *ABS*	00000000 HRTIM_Common_DISR_TD1ODIS
00000020 l       *ABS*	00000000 HRTIM_Common_DISR_TC2ODIS
00000010 l       *ABS*	00000000 HRTIM_Common_DISR_TC1ODIS
00000008 l       *ABS*	00000000 HRTIM_Common_DISR_TB2ODIS
00000004 l       *ABS*	00000000 HRTIM_Common_DISR_TB1ODIS
00000002 l       *ABS*	00000000 HRTIM_Common_DISR_TA2ODIS
00000001 l       *ABS*	00000000 HRTIM_Common_DISR_TA1ODIS
4001779c l       *ABS*	00000000 HRTIM_Common_ODSR
00000200 l       *ABS*	00000000 HRTIM_Common_ODSR_TE2ODS
00000100 l       *ABS*	00000000 HRTIM_Common_ODSR_TE1ODS
00000080 l       *ABS*	00000000 HRTIM_Common_ODSR_TD2ODS
00000040 l       *ABS*	00000000 HRTIM_Common_ODSR_TD1ODS
00000020 l       *ABS*	00000000 HRTIM_Common_ODSR_TC2ODS
00000010 l       *ABS*	00000000 HRTIM_Common_ODSR_TC1ODS
00000008 l       *ABS*	00000000 HRTIM_Common_ODSR_TB2ODS
00000004 l       *ABS*	00000000 HRTIM_Common_ODSR_TB1ODS
00000002 l       *ABS*	00000000 HRTIM_Common_ODSR_TA2ODS
00000001 l       *ABS*	00000000 HRTIM_Common_ODSR_TA1ODS
400177a0 l       *ABS*	00000000 HRTIM_Common_BMCR
80000000 l       *ABS*	00000000 HRTIM_Common_BMCR_BMSTAT
00200000 l       *ABS*	00000000 HRTIM_Common_BMCR_TEBM
00100000 l       *ABS*	00000000 HRTIM_Common_BMCR_TDBM
00080000 l       *ABS*	00000000 HRTIM_Common_BMCR_TCBM
00040000 l       *ABS*	00000000 HRTIM_Common_BMCR_TBBM
00020000 l       *ABS*	00000000 HRTIM_Common_BMCR_TABM
00010000 l       *ABS*	00000000 HRTIM_Common_BMCR_MTBM
00000400 l       *ABS*	00000000 HRTIM_Common_BMCR_BMPREN
00000006 l       *ABS*	00000000 HRTIM_Common_BMCR_BMPRSC_Shift
00000002 l       *ABS*	00000000 HRTIM_Common_BMCR_BMCLK_Shift
00000002 l       *ABS*	00000000 HRTIM_Common_BMCR_BMOM
00000001 l       *ABS*	00000000 HRTIM_Common_BMCR_BME
400177a4 l       *ABS*	00000000 HRTIM_Common_BMTRG
80000000 l       *ABS*	00000000 HRTIM_Common_BMTRG_OCHPEV
04000000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TECMP2
02000000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TECMP1
01000000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TEREP
00800000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TERST
00400000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TDCMP2
00200000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TDCMP1
00100000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TDREP
00080000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TDRST
00040000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TCCMP2
00020000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TCCMP1
00010000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TCREP
00008000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TCRST
00004000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TBCMP2
00002000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TBCMP1
00001000 l       *ABS*	00000000 HRTIM_Common_BMTRG_TBREP
00000800 l       *ABS*	00000000 HRTIM_Common_BMTRG_TBRST
00000400 l       *ABS*	00000000 HRTIM_Common_BMTRG_TACMP2
00000200 l       *ABS*	00000000 HRTIM_Common_BMTRG_TACMP1
00000100 l       *ABS*	00000000 HRTIM_Common_BMTRG_TAREP
00000080 l       *ABS*	00000000 HRTIM_Common_BMTRG_TARST
00000040 l       *ABS*	00000000 HRTIM_Common_BMTRG_MSTCMP4
00000020 l       *ABS*	00000000 HRTIM_Common_BMTRG_MSTCMP3
00000010 l       *ABS*	00000000 HRTIM_Common_BMTRG_MSTCMP2
00000008 l       *ABS*	00000000 HRTIM_Common_BMTRG_MSTCMP1
00000004 l       *ABS*	00000000 HRTIM_Common_BMTRG_MSTREP
00000002 l       *ABS*	00000000 HRTIM_Common_BMTRG_MSTRST
00000001 l       *ABS*	00000000 HRTIM_Common_BMTRG_SW
400177a8 l       *ABS*	00000000 HRTIM_Common_BMCMPR6
00000000 l       *ABS*	00000000 HRTIM_Common_BMCMPR6_BMCMP_Shift
400177ac l       *ABS*	00000000 HRTIM_Common_BMPER
00000000 l       *ABS*	00000000 HRTIM_Common_BMPER_BMPER_Shift
400177b0 l       *ABS*	00000000 HRTIM_Common_EECR1
20000000 l       *ABS*	00000000 HRTIM_Common_EECR1_EE5FAST
0000001b l       *ABS*	00000000 HRTIM_Common_EECR1_EE5SNS_Shift
04000000 l       *ABS*	00000000 HRTIM_Common_EECR1_EE5POL
00000018 l       *ABS*	00000000 HRTIM_Common_EECR1_EE5SRC_Shift
00800000 l       *ABS*	00000000 HRTIM_Common_EECR1_EE4FAST
00000015 l       *ABS*	00000000 HRTIM_Common_EECR1_EE4SNS_Shift
00100000 l       *ABS*	00000000 HRTIM_Common_EECR1_EE4POL
00000012 l       *ABS*	00000000 HRTIM_Common_EECR1_EE4SRC_Shift
00020000 l       *ABS*	00000000 HRTIM_Common_EECR1_EE3FAST
0000000f l       *ABS*	00000000 HRTIM_Common_EECR1_EE3SNS_Shift
00004000 l       *ABS*	00000000 HRTIM_Common_EECR1_EE3POL
0000000c l       *ABS*	00000000 HRTIM_Common_EECR1_EE3SRC_Shift
00000800 l       *ABS*	00000000 HRTIM_Common_EECR1_EE2FAST
00000009 l       *ABS*	00000000 HRTIM_Common_EECR1_EE2SNS_Shift
00000100 l       *ABS*	00000000 HRTIM_Common_EECR1_EE2POL
00000006 l       *ABS*	00000000 HRTIM_Common_EECR1_EE2SRC_Shift
00000020 l       *ABS*	00000000 HRTIM_Common_EECR1_EE1FAST
00000003 l       *ABS*	00000000 HRTIM_Common_EECR1_EE1SNS_Shift
00000004 l       *ABS*	00000000 HRTIM_Common_EECR1_EE1POL
00000000 l       *ABS*	00000000 HRTIM_Common_EECR1_EE1SRC_Shift
400177b4 l       *ABS*	00000000 HRTIM_Common_EECR2
0000001b l       *ABS*	00000000 HRTIM_Common_EECR2_EE10SNS_Shift
04000000 l       *ABS*	00000000 HRTIM_Common_EECR2_EE10POL
00000018 l       *ABS*	00000000 HRTIM_Common_EECR2_EE10SRC_Shift
00000015 l       *ABS*	00000000 HRTIM_Common_EECR2_EE9SNS_Shift
00100000 l       *ABS*	00000000 HRTIM_Common_EECR2_EE9POL
00000012 l       *ABS*	00000000 HRTIM_Common_EECR2_EE9SRC_Shift
0000000f l       *ABS*	00000000 HRTIM_Common_EECR2_EE8SNS_Shift
00004000 l       *ABS*	00000000 HRTIM_Common_EECR2_EE8POL
0000000c l       *ABS*	00000000 HRTIM_Common_EECR2_EE8SRC_Shift
00000009 l       *ABS*	00000000 HRTIM_Common_EECR2_EE7SNS_Shift
00000100 l       *ABS*	00000000 HRTIM_Common_EECR2_EE7POL
00000006 l       *ABS*	00000000 HRTIM_Common_EECR2_EE7SRC_Shift
00000003 l       *ABS*	00000000 HRTIM_Common_EECR2_EE6SNS_Shift
00000004 l       *ABS*	00000000 HRTIM_Common_EECR2_EE6POL
00000000 l       *ABS*	00000000 HRTIM_Common_EECR2_EE6SRC_Shift
400177b8 l       *ABS*	00000000 HRTIM_Common_EECR3
0000001b l       *ABS*	00000000 HRTIM_Common_EECR3_EE10SNS_Shift
04000000 l       *ABS*	00000000 HRTIM_Common_EECR3_EE10POL
00000018 l       *ABS*	00000000 HRTIM_Common_EECR3_EE10SRC_Shift
00000015 l       *ABS*	00000000 HRTIM_Common_EECR3_EE9SNS_Shift
00100000 l       *ABS*	00000000 HRTIM_Common_EECR3_EE9POL
00000012 l       *ABS*	00000000 HRTIM_Common_EECR3_EE9SRC_Shift
0000000f l       *ABS*	00000000 HRTIM_Common_EECR3_EE8SNS_Shift
00004000 l       *ABS*	00000000 HRTIM_Common_EECR3_EE8POL
0000000c l       *ABS*	00000000 HRTIM_Common_EECR3_EE8SRC_Shift
00000009 l       *ABS*	00000000 HRTIM_Common_EECR3_EE7SNS_Shift
00000100 l       *ABS*	00000000 HRTIM_Common_EECR3_EE7POL
00000006 l       *ABS*	00000000 HRTIM_Common_EECR3_EE7SRC_Shift
00000003 l       *ABS*	00000000 HRTIM_Common_EECR3_EE6SNS_Shift
00000004 l       *ABS*	00000000 HRTIM_Common_EECR3_EE6POL
00000000 l       *ABS*	00000000 HRTIM_Common_EECR3_EE6SRC_Shift
400177bc l       *ABS*	00000000 HRTIM_Common_ADC1R
80000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TEPER
40000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TEC4
20000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TEC3
10000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TEC2
08000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TDPER
04000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TDC4
02000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TDC3
01000000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TDC2
00800000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TCPER
00400000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TCC4
00200000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TCC3
00100000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TCC2
00080000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TBRST
00040000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TBPER
00020000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TBC4
00010000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TBC3
00008000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TBC2
00004000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TARST
00002000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TAPER
00001000 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TAC4
00000800 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TAC3
00000400 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1TAC2
00000200 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1EEV5
00000100 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1EEV4
00000080 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1EEV3
00000040 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1EEV2
00000020 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1EEV1
00000010 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1MPER
00000008 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1MC4
00000004 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1MC3
00000002 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1MC2
00000001 l       *ABS*	00000000 HRTIM_Common_ADC1R_AD1MC1
400177c0 l       *ABS*	00000000 HRTIM_Common_ADC2R
80000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TERST
40000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TEC4
20000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TEC3
10000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TEC2
08000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TDRST
04000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TDPER
02000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TDC4
01000000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TDC3
00800000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TDC2
00400000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TCRST
00200000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TCPER
00100000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TCC4
00080000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TCC3
00040000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TCC2
00020000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TBPER
00010000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TBC4
00008000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TBC3
00004000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TBC2
00002000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TAPER
00001000 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TAC4
00000800 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TAC3
00000400 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2TAC2
00000200 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2EEV10
00000100 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2EEV9
00000080 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2EEV8
00000040 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2EEV7
00000020 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2EEV6
00000010 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2MPER
00000008 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2MC4
00000004 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2MC3
00000002 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2MC2
00000001 l       *ABS*	00000000 HRTIM_Common_ADC2R_AD2MC1
400177c4 l       *ABS*	00000000 HRTIM_Common_ADC3R
80000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TEPER
40000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TEC4
20000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TEC3
10000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TEC2
08000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TDPER
04000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TDC4
02000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TDC3
01000000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TDC2
00800000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TCPER
00400000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TCC4
00200000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TCC3
00100000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TCC2
00080000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TBRST
00040000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TBPER
00020000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TBC4
00010000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TBC3
00008000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TBC2
00004000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TARST
00002000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TAPER
00001000 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TAC4
00000800 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TAC3
00000400 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1TAC2
00000200 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1EEV5
00000100 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1EEV4
00000080 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1EEV3
00000040 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1EEV2
00000020 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1EEV1
00000010 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1MPER
00000008 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1MC4
00000004 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1MC3
00000002 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1MC2
00000001 l       *ABS*	00000000 HRTIM_Common_ADC3R_AD1MC1
400177c8 l       *ABS*	00000000 HRTIM_Common_ADC4R
80000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TERST
40000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TEC4
20000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TEC3
10000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TEC2
08000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TDRST
04000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TDPER
02000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TDC4
01000000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TDC3
00800000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TDC2
00400000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TCRST
00200000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TCPER
00100000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TCC4
00080000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TCC3
00040000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TCC2
00020000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TBPER
00010000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TBC4
00008000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TBC3
00004000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TBC2
00002000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TAPER
00001000 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TAC4
00000800 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TAC3
00000400 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2TAC2
00000200 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2EEV10
00000100 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2EEV9
00000080 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2EEV8
00000040 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2EEV7
00000020 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2EEV6
00000010 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2MPER
00000008 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2MC4
00000004 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2MC3
00000002 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2MC2
00000001 l       *ABS*	00000000 HRTIM_Common_ADC4R_AD2MC1
400177cc l       *ABS*	00000000 HRTIM_Common_DLLCR
00000002 l       *ABS*	00000000 HRTIM_Common_DLLCR_CALRTE_Shift
00000002 l       *ABS*	00000000 HRTIM_Common_DLLCR_CALEN
00000001 l       *ABS*	00000000 HRTIM_Common_DLLCR_CAL
400177d0 l       *ABS*	00000000 HRTIM_Common_FLTINR1
80000000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT4LCK
0000001b l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT4F_Shift
04000000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT4SRC
02000000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT4P
01000000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT4E
00800000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT3LCK
00000013 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT3F_Shift
00040000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT3SRC
00020000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT3P
00010000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT3E
00008000 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT2LCK
0000000b l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT2F_Shift
00000400 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT2SRC
00000200 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT2P
00000100 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT2E
00000080 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT1LCK
00000003 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT1F_Shift
00000004 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT1SRC
00000002 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT1P
00000001 l       *ABS*	00000000 HRTIM_Common_FLTINR1_FLT1E
400177d4 l       *ABS*	00000000 HRTIM_Common_FLTINR2
00000018 l       *ABS*	00000000 HRTIM_Common_FLTINR2_FLTSD_Shift
00000080 l       *ABS*	00000000 HRTIM_Common_FLTINR2_FLT5LCK
00000003 l       *ABS*	00000000 HRTIM_Common_FLTINR2_FLT5F_Shift
00000004 l       *ABS*	00000000 HRTIM_Common_FLTINR2_FLT5SRC
00000002 l       *ABS*	00000000 HRTIM_Common_FLTINR2_FLT5P
00000001 l       *ABS*	00000000 HRTIM_Common_FLTINR2_FLT5E
400177d8 l       *ABS*	00000000 HRTIM_Common_BDMUPDR
00000200 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MCMP4
00000100 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MCMP3
00000080 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MCMP2
00000040 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MCMP1
00000020 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MREP
00000010 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MPER
00000008 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MCNT
00000004 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MDIER
00000002 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MICR
00000001 l       *ABS*	00000000 HRTIM_Common_BDMUPDR_MCR
400177dc l       *ABS*	00000000 HRTIM_Common_BDTxUPR
00100000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxFLTR
00080000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxOUTR
00040000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxCHPR
00020000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxRSTR
00010000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxEEFR2
00008000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxEEFR1
00004000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxRST2R
00002000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxSET2R
00001000 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxRST1R
00000800 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxSET1R
00000400 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMx_DTxR
00000200 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxCMP4
00000100 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxCMP3
00000080 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxCMP2
00000040 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxCMP1
00000020 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxREP
00000010 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxPER
00000008 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxCNT
00000004 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxDIER
00000002 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxICR
00000001 l       *ABS*	00000000 HRTIM_Common_BDTxUPR_TIMxCR
400177e0 l       *ABS*	00000000 HRTIM_Common_BDMADR
00000000 l       *ABS*	00000000 HRTIM_Common_BDMADR_BDMADR_Shift
40017000 l       *ABS*	00000000 DFSDM_BASE
40017000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R1_DFSDMEN
40017004 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R1_DFSDMEN
40017008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R1_DFSDMEN
4001700c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R1_DFSDMEN
40017010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R1_DFSDMEN
40017014 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R1_DFSDMEN
40017018 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R1_DFSDMEN
4001701c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_SITP_Shift
00000002 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_SPICKSEL_Shift
00000020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_SCDEN
00000040 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_CKABEN
00000080 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_CHEN
00000100 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_CHINSEL
0000000c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_DATMPX_Shift
0000000e l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_DATPACK_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_CKOUTDIV_Shift
40000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_CKOUTSRC
80000000 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R1_DFSDMEN
40017020 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG0R2_OFFSET_Shift
40017024 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG1R2_OFFSET_Shift
40017028 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG2R2_OFFSET_Shift
4001702c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG3R2_OFFSET_Shift
40017030 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG4R2_OFFSET_Shift
40017034 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG5R2_OFFSET_Shift
40017038 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG6R2_OFFSET_Shift
4001703c l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R2
00000003 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R2_DTRBS_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM_CHCFG7R2_OFFSET_Shift
40017040 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD0R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD0R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD0R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD0R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD0R_AWFORD_Shift
40017044 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD1R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD1R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD1R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD1R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD1R_AWFORD_Shift
40017048 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD2R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD2R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD2R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD2R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD2R_AWFORD_Shift
4001704c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD3R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD3R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD3R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD3R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD3R_AWFORD_Shift
40017050 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD4R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD4R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD4R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD4R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD4R_AWFORD_Shift
40017054 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD5R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD5R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD5R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD5R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD5R_AWFORD_Shift
40017058 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD6R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD6R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD6R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD6R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD6R_AWFORD_Shift
4001705c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD7R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD7R_SCDT_Shift
0000000c l       *ABS*	00000000 DFSDM_DFSDM_AWSCD7R_BKSCD_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD7R_AWFOSR_Shift
00000016 l       *ABS*	00000000 DFSDM_DFSDM_AWSCD7R_AWFORD_Shift
40017060 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT0R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT0R_WDATA_Shift
40017064 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT1R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT1R_WDATA_Shift
40017068 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT2R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT2R_WDATA_Shift
4001706c l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT3R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT3R_WDATA_Shift
40017070 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT4R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT4R_WDATA_Shift
40017074 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT5R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT5R_WDATA_Shift
40017078 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT6R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT6R_WDATA_Shift
4001707c l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT7R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHWDAT7R_WDATA_Shift
40017080 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN0R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN0R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN0R_INDAT1_Shift
40017084 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN1R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN1R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN1R_INDAT1_Shift
40017088 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN2R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN2R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN2R_INDAT1_Shift
4001708c l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN3R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN3R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN3R_INDAT1_Shift
40017090 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN4R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN4R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN4R_INDAT1_Shift
40017094 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN5R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN5R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN5R_INDAT1_Shift
40017098 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN6R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN6R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN6R_INDAT1_Shift
4001709c l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN7R
00000000 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN7R_INDAT0_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM_CHDATIN7R_INDAT1_Shift
400170a0 l       *ABS*	00000000 DFSDM_DFSDM0_CR1
00000001 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_DFEN
00000002 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_JSWSTART
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_JSYNC
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_JSCAN
00000020 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_JDMAEN
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_JEXTSEL_Shift
0000000d l       *ABS*	00000000 DFSDM_DFSDM0_CR1_JEXTEN_Shift
00020000 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_RSWSTART
00040000 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_RCONT
00080000 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_RSYNC
00200000 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_RDMAEN
00000018 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_RCH_Shift
20000000 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_FAST
40000000 l       *ABS*	00000000 DFSDM_DFSDM0_CR1_AWFSEL
400170a4 l       *ABS*	00000000 DFSDM_DFSDM1_CR1
00000001 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_DFEN
00000002 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_JSWSTART
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_JSYNC
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_JSCAN
00000020 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_JDMAEN
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_JEXTSEL_Shift
0000000d l       *ABS*	00000000 DFSDM_DFSDM1_CR1_JEXTEN_Shift
00020000 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_RSWSTART
00040000 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_RCONT
00080000 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_RSYNC
00200000 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_RDMAEN
00000018 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_RCH_Shift
20000000 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_FAST
40000000 l       *ABS*	00000000 DFSDM_DFSDM1_CR1_AWFSEL
400170a8 l       *ABS*	00000000 DFSDM_DFSDM2_CR1
00000001 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_DFEN
00000002 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_JSWSTART
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_JSYNC
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_JSCAN
00000020 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_JDMAEN
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_JEXTSEL_Shift
0000000d l       *ABS*	00000000 DFSDM_DFSDM2_CR1_JEXTEN_Shift
00020000 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_RSWSTART
00040000 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_RCONT
00080000 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_RSYNC
00200000 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_RDMAEN
00000018 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_RCH_Shift
20000000 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_FAST
40000000 l       *ABS*	00000000 DFSDM_DFSDM2_CR1_AWFSEL
400170ac l       *ABS*	00000000 DFSDM_DFSDM3_CR1
00000001 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_DFEN
00000002 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_JSWSTART
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_JSYNC
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_JSCAN
00000020 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_JDMAEN
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_JEXTSEL_Shift
0000000d l       *ABS*	00000000 DFSDM_DFSDM3_CR1_JEXTEN_Shift
00020000 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_RSWSTART
00040000 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_RCONT
00080000 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_RSYNC
00200000 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_RDMAEN
00000018 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_RCH_Shift
20000000 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_FAST
40000000 l       *ABS*	00000000 DFSDM_DFSDM3_CR1_AWFSEL
400170b0 l       *ABS*	00000000 DFSDM_DFSDM0_CR2
00000001 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_JEOCIE
00000002 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_REOCIE
00000004 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_JOVRIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_ROVRIE
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_AWDIE
00000020 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_SCDIE
00000040 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_CKABIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_EXCH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_CR2_AWDCH_Shift
400170b4 l       *ABS*	00000000 DFSDM_DFSDM1_CR2
00000001 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_JEOCIE
00000002 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_REOCIE
00000004 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_JOVRIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_ROVRIE
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_AWDIE
00000020 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_SCDIE
00000040 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_CKABIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_EXCH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_CR2_AWDCH_Shift
400170b8 l       *ABS*	00000000 DFSDM_DFSDM2_CR2
00000001 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_JEOCIE
00000002 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_REOCIE
00000004 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_JOVRIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_ROVRIE
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_AWDIE
00000020 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_SCDIE
00000040 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_CKABIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_EXCH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_CR2_AWDCH_Shift
400170bc l       *ABS*	00000000 DFSDM_DFSDM3_CR2
00000001 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_JEOCIE
00000002 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_REOCIE
00000004 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_JOVRIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_ROVRIE
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_AWDIE
00000020 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_SCDIE
00000040 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_CKABIE
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_EXCH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_CR2_AWDCH_Shift
400170c0 l       *ABS*	00000000 DFSDM_DFSDM0_ISR
00000001 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_JEOCF
00000002 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_REOCF
00000004 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_JOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_ROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_AWDF
00002000 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_JCIP
00004000 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_RCIP
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_CKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM0_ISR_SCDF_Shift
400170c4 l       *ABS*	00000000 DFSDM_DFSDM1_ISR
00000001 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_JEOCF
00000002 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_REOCF
00000004 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_JOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_ROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_AWDF
00002000 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_JCIP
00004000 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_RCIP
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_CKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM1_ISR_SCDF_Shift
400170c8 l       *ABS*	00000000 DFSDM_DFSDM2_ISR
00000001 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_JEOCF
00000002 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_REOCF
00000004 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_JOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_ROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_AWDF
00002000 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_JCIP
00004000 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_RCIP
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_CKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM2_ISR_SCDF_Shift
400170cc l       *ABS*	00000000 DFSDM_DFSDM3_ISR
00000001 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_JEOCF
00000002 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_REOCF
00000004 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_JOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_ROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_AWDF
00002000 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_JCIP
00004000 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_RCIP
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_CKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM3_ISR_SCDF_Shift
400170d0 l       *ABS*	00000000 DFSDM_DFSDM0_ICR
00000004 l       *ABS*	00000000 DFSDM_DFSDM0_ICR_CLRJOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_ICR_CLRROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_ICR_CLRCKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM0_ICR_CLRSCDF_Shift
400170d4 l       *ABS*	00000000 DFSDM_DFSDM1_ICR
00000004 l       *ABS*	00000000 DFSDM_DFSDM1_ICR_CLRJOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_ICR_CLRROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_ICR_CLRCKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM1_ICR_CLRSCDF_Shift
400170d8 l       *ABS*	00000000 DFSDM_DFSDM2_ICR
00000004 l       *ABS*	00000000 DFSDM_DFSDM2_ICR_CLRJOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_ICR_CLRROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_ICR_CLRCKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM2_ICR_CLRSCDF_Shift
400170dc l       *ABS*	00000000 DFSDM_DFSDM3_ICR
00000004 l       *ABS*	00000000 DFSDM_DFSDM3_ICR_CLRJOVRF
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_ICR_CLRROVRF
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_ICR_CLRCKABF_Shift
00000018 l       *ABS*	00000000 DFSDM_DFSDM3_ICR_CLRSCDF_Shift
400170e0 l       *ABS*	00000000 DFSDM_DFSDM0_JCHGR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_JCHGR_JCHG_Shift
400170e4 l       *ABS*	00000000 DFSDM_DFSDM1_JCHGR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_JCHGR_JCHG_Shift
400170e8 l       *ABS*	00000000 DFSDM_DFSDM2_JCHGR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_JCHGR_JCHG_Shift
400170ec l       *ABS*	00000000 DFSDM_DFSDM3_JCHGR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_JCHGR_JCHG_Shift
400170f0 l       *ABS*	00000000 DFSDM_DFSDM0_FCR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_FCR_IOSR_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_FCR_FOSR_Shift
0000001d l       *ABS*	00000000 DFSDM_DFSDM0_FCR_FORD_Shift
400170f4 l       *ABS*	00000000 DFSDM_DFSDM1_FCR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_FCR_IOSR_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_FCR_FOSR_Shift
0000001d l       *ABS*	00000000 DFSDM_DFSDM1_FCR_FORD_Shift
400170f8 l       *ABS*	00000000 DFSDM_DFSDM2_FCR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_FCR_IOSR_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_FCR_FOSR_Shift
0000001d l       *ABS*	00000000 DFSDM_DFSDM2_FCR_FORD_Shift
400170fc l       *ABS*	00000000 DFSDM_DFSDM3_FCR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_FCR_IOSR_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_FCR_FOSR_Shift
0000001d l       *ABS*	00000000 DFSDM_DFSDM3_FCR_FORD_Shift
40017100 l       *ABS*	00000000 DFSDM_DFSDM0_JDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_JDATAR_JDATACH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_JDATAR_JDATA_Shift
40017104 l       *ABS*	00000000 DFSDM_DFSDM1_JDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_JDATAR_JDATACH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_JDATAR_JDATA_Shift
40017108 l       *ABS*	00000000 DFSDM_DFSDM2_JDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_JDATAR_JDATACH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_JDATAR_JDATA_Shift
4001710c l       *ABS*	00000000 DFSDM_DFSDM3_JDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_JDATAR_JDATACH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_JDATAR_JDATA_Shift
40017110 l       *ABS*	00000000 DFSDM_DFSDM0_RDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_RDATAR_RDATACH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM0_RDATAR_RPEND
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_RDATAR_RDATA_Shift
40017114 l       *ABS*	00000000 DFSDM_DFSDM1_RDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_RDATAR_RDATACH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM1_RDATAR_RPEND
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_RDATAR_RDATA_Shift
40017118 l       *ABS*	00000000 DFSDM_DFSDM2_RDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_RDATAR_RDATACH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM2_RDATAR_RPEND
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_RDATAR_RDATA_Shift
4001711c l       *ABS*	00000000 DFSDM_DFSDM3_RDATAR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_RDATAR_RDATACH_Shift
00000010 l       *ABS*	00000000 DFSDM_DFSDM3_RDATAR_RPEND
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_RDATAR_RDATA_Shift
40017120 l       *ABS*	00000000 DFSDM_DFSDM0_AWHTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_AWHTR_BKAWH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_AWHTR_AWHT_Shift
40017124 l       *ABS*	00000000 DFSDM_DFSDM1_AWHTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_AWHTR_BKAWH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_AWHTR_AWHT_Shift
40017128 l       *ABS*	00000000 DFSDM_DFSDM2_AWHTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_AWHTR_BKAWH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_AWHTR_AWHT_Shift
4001712c l       *ABS*	00000000 DFSDM_DFSDM3_AWHTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_AWHTR_BKAWH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_AWHTR_AWHT_Shift
40017130 l       *ABS*	00000000 DFSDM_DFSDM0_AWLTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_AWLTR_BKAWL_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_AWLTR_AWLT_Shift
40017134 l       *ABS*	00000000 DFSDM_DFSDM1_AWLTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_AWLTR_BKAWL_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_AWLTR_AWLT_Shift
40017138 l       *ABS*	00000000 DFSDM_DFSDM2_AWLTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_AWLTR_BKAWL_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_AWLTR_AWLT_Shift
4001713c l       *ABS*	00000000 DFSDM_DFSDM3_AWLTR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_AWLTR_BKAWL_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_AWLTR_AWLT_Shift
40017140 l       *ABS*	00000000 DFSDM_DFSDM0_AWSR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_AWSR_AWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_AWSR_AWHTF_Shift
40017144 l       *ABS*	00000000 DFSDM_DFSDM1_AWSR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_AWSR_AWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_AWSR_AWHTF_Shift
40017148 l       *ABS*	00000000 DFSDM_DFSDM2_AWSR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_AWSR_AWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_AWSR_AWHTF_Shift
4001714c l       *ABS*	00000000 DFSDM_DFSDM3_AWSR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_AWSR_AWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_AWSR_AWHTF_Shift
40017150 l       *ABS*	00000000 DFSDM_DFSDM0_AWCFR
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_AWCFR_CLRAWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_AWCFR_CLRAWHTF_Shift
40017154 l       *ABS*	00000000 DFSDM_DFSDM1_AWCFR
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_AWCFR_CLRAWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_AWCFR_CLRAWHTF_Shift
40017158 l       *ABS*	00000000 DFSDM_DFSDM2_AWCFR
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_AWCFR_CLRAWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_AWCFR_CLRAWHTF_Shift
4001715c l       *ABS*	00000000 DFSDM_DFSDM3_AWCFR
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_AWCFR_CLRAWLTF_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_AWCFR_CLRAWHTF_Shift
40017160 l       *ABS*	00000000 DFSDM_DFSDM0_EXMAX
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_EXMAX_EXMAXCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_EXMAX_EXMAX_Shift
40017164 l       *ABS*	00000000 DFSDM_DFSDM1_EXMAX
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_EXMAX_EXMAXCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_EXMAX_EXMAX_Shift
40017168 l       *ABS*	00000000 DFSDM_DFSDM2_EXMAX
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_EXMAX_EXMAXCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_EXMAX_EXMAX_Shift
4001716c l       *ABS*	00000000 DFSDM_DFSDM3_EXMAX
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_EXMAX_EXMAXCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_EXMAX_EXMAX_Shift
40017170 l       *ABS*	00000000 DFSDM_DFSDM0_EXMIN
00000000 l       *ABS*	00000000 DFSDM_DFSDM0_EXMIN_EXMINCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM0_EXMIN_EXMIN_Shift
40017174 l       *ABS*	00000000 DFSDM_DFSDM1_EXMIN
00000000 l       *ABS*	00000000 DFSDM_DFSDM1_EXMIN_EXMINCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM1_EXMIN_EXMIN_Shift
40017178 l       *ABS*	00000000 DFSDM_DFSDM2_EXMIN
00000000 l       *ABS*	00000000 DFSDM_DFSDM2_EXMIN_EXMINCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM2_EXMIN_EXMIN_Shift
4001717c l       *ABS*	00000000 DFSDM_DFSDM3_EXMIN
00000000 l       *ABS*	00000000 DFSDM_DFSDM3_EXMIN_EXMINCH_Shift
00000008 l       *ABS*	00000000 DFSDM_DFSDM3_EXMIN_EXMIN_Shift
40017180 l       *ABS*	00000000 DFSDM_DFSDM0_CNVTIMR
00000004 l       *ABS*	00000000 DFSDM_DFSDM0_CNVTIMR_CNVCNT_Shift
40017184 l       *ABS*	00000000 DFSDM_DFSDM1_CNVTIMR
00000004 l       *ABS*	00000000 DFSDM_DFSDM1_CNVTIMR_CNVCNT_Shift
40017188 l       *ABS*	00000000 DFSDM_DFSDM2_CNVTIMR
00000004 l       *ABS*	00000000 DFSDM_DFSDM2_CNVTIMR_CNVCNT_Shift
4001718c l       *ABS*	00000000 DFSDM_DFSDM3_CNVTIMR
00000004 l       *ABS*	00000000 DFSDM_DFSDM3_CNVTIMR_CNVCNT_Shift
40014400 l       *ABS*	00000000 TIM16_BASE
40014400 l       *ABS*	00000000 TIM16_CR1
00000001 l       *ABS*	00000000 TIM16_CR1_CEN
00000002 l       *ABS*	00000000 TIM16_CR1_UDIS
00000004 l       *ABS*	00000000 TIM16_CR1_URS
00000008 l       *ABS*	00000000 TIM16_CR1_OPM
00000080 l       *ABS*	00000000 TIM16_CR1_ARPE
00000008 l       *ABS*	00000000 TIM16_CR1_CKD_Shift
00000800 l       *ABS*	00000000 TIM16_CR1_UIFREMAP
40014404 l       *ABS*	00000000 TIM16_CR2
00000200 l       *ABS*	00000000 TIM16_CR2_OIS1N
00000100 l       *ABS*	00000000 TIM16_CR2_OIS1
00000008 l       *ABS*	00000000 TIM16_CR2_CCDS
00000004 l       *ABS*	00000000 TIM16_CR2_CCUS
00000001 l       *ABS*	00000000 TIM16_CR2_CCPC
4001440c l       *ABS*	00000000 TIM16_DIER
00000001 l       *ABS*	00000000 TIM16_DIER_UIE
00000002 l       *ABS*	00000000 TIM16_DIER_CC1IE
00000020 l       *ABS*	00000000 TIM16_DIER_COMIE
00000080 l       *ABS*	00000000 TIM16_DIER_BIE
00000100 l       *ABS*	00000000 TIM16_DIER_UDE
00000200 l       *ABS*	00000000 TIM16_DIER_CC1DE
00002000 l       *ABS*	00000000 TIM16_DIER_COMDE
40014410 l       *ABS*	00000000 TIM16_SR
00000200 l       *ABS*	00000000 TIM16_SR_CC1OF
00000080 l       *ABS*	00000000 TIM16_SR_BIF
00000020 l       *ABS*	00000000 TIM16_SR_COMIF
00000002 l       *ABS*	00000000 TIM16_SR_CC1IF
00000001 l       *ABS*	00000000 TIM16_SR_UIF
40014414 l       *ABS*	00000000 TIM16_EGR
00000080 l       *ABS*	00000000 TIM16_EGR_BG
00000020 l       *ABS*	00000000 TIM16_EGR_COMG
00000002 l       *ABS*	00000000 TIM16_EGR_CC1G
00000001 l       *ABS*	00000000 TIM16_EGR_UG
40014418 l       *ABS*	00000000 TIM16_CCMR1_Output
00000000 l       *ABS*	00000000 TIM16_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM16_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM16_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM16_CCMR1_Output_OC1M_Shift
00010000 l       *ABS*	00000000 TIM16_CCMR1_Output_OC1M_3
40014418 l       *ABS*	00000000 TIM16_CCMR1_Input
00000004 l       *ABS*	00000000 TIM16_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM16_CCMR1_Input_IC1PSC_Shift
00000000 l       *ABS*	00000000 TIM16_CCMR1_Input_CC1S_Shift
40014420 l       *ABS*	00000000 TIM16_CCER
00000008 l       *ABS*	00000000 TIM16_CCER_CC1NP
00000004 l       *ABS*	00000000 TIM16_CCER_CC1NE
00000002 l       *ABS*	00000000 TIM16_CCER_CC1P
00000001 l       *ABS*	00000000 TIM16_CCER_CC1E
40014424 l       *ABS*	00000000 TIM16_CNT
00000000 l       *ABS*	00000000 TIM16_CNT_CNT_Shift
80000000 l       *ABS*	00000000 TIM16_CNT_UIFCPY
40014428 l       *ABS*	00000000 TIM16_PSC
00000000 l       *ABS*	00000000 TIM16_PSC_PSC_Shift
4001442c l       *ABS*	00000000 TIM16_ARR
00000000 l       *ABS*	00000000 TIM16_ARR_ARR_Shift
40014430 l       *ABS*	00000000 TIM16_RCR
00000000 l       *ABS*	00000000 TIM16_RCR_REP_Shift
40014434 l       *ABS*	00000000 TIM16_CCR1
00000000 l       *ABS*	00000000 TIM16_CCR1_CCR1_Shift
40014444 l       *ABS*	00000000 TIM16_BDTR
00000000 l       *ABS*	00000000 TIM16_BDTR_DTG_Shift
00000008 l       *ABS*	00000000 TIM16_BDTR_LOCK_Shift
00000400 l       *ABS*	00000000 TIM16_BDTR_OSSI
00000800 l       *ABS*	00000000 TIM16_BDTR_OSSR
00001000 l       *ABS*	00000000 TIM16_BDTR_BKE
00002000 l       *ABS*	00000000 TIM16_BDTR_BKP
00004000 l       *ABS*	00000000 TIM16_BDTR_AOE
00008000 l       *ABS*	00000000 TIM16_BDTR_MOE
00000010 l       *ABS*	00000000 TIM16_BDTR_BKF_Shift
40014448 l       *ABS*	00000000 TIM16_DCR
00000008 l       *ABS*	00000000 TIM16_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM16_DCR_DBA_Shift
4001444c l       *ABS*	00000000 TIM16_DMAR
00000000 l       *ABS*	00000000 TIM16_DMAR_DMAB_Shift
40014460 l       *ABS*	00000000 TIM16_TIM16_AF1
00000001 l       *ABS*	00000000 TIM16_TIM16_AF1_BKINE
00000002 l       *ABS*	00000000 TIM16_TIM16_AF1_BKCMP1E
00000004 l       *ABS*	00000000 TIM16_TIM16_AF1_BKCMP2E
00000100 l       *ABS*	00000000 TIM16_TIM16_AF1_BKDFBK1E
00000200 l       *ABS*	00000000 TIM16_TIM16_AF1_BKINP
00000400 l       *ABS*	00000000 TIM16_TIM16_AF1_BKCMP1P
00000800 l       *ABS*	00000000 TIM16_TIM16_AF1_BKCMP2P
40014468 l       *ABS*	00000000 TIM16_TIM16_TISEL
00000000 l       *ABS*	00000000 TIM16_TIM16_TISEL_TI1SEL_Shift
40014800 l       *ABS*	00000000 TIM17_BASE
40014800 l       *ABS*	00000000 TIM17_CR1
00000001 l       *ABS*	00000000 TIM17_CR1_CEN
00000002 l       *ABS*	00000000 TIM17_CR1_UDIS
00000004 l       *ABS*	00000000 TIM17_CR1_URS
00000008 l       *ABS*	00000000 TIM17_CR1_OPM
00000080 l       *ABS*	00000000 TIM17_CR1_ARPE
00000008 l       *ABS*	00000000 TIM17_CR1_CKD_Shift
00000800 l       *ABS*	00000000 TIM17_CR1_UIFREMAP
40014804 l       *ABS*	00000000 TIM17_CR2
00000200 l       *ABS*	00000000 TIM17_CR2_OIS1N
00000100 l       *ABS*	00000000 TIM17_CR2_OIS1
00000008 l       *ABS*	00000000 TIM17_CR2_CCDS
00000004 l       *ABS*	00000000 TIM17_CR2_CCUS
00000001 l       *ABS*	00000000 TIM17_CR2_CCPC
4001480c l       *ABS*	00000000 TIM17_DIER
00000001 l       *ABS*	00000000 TIM17_DIER_UIE
00000002 l       *ABS*	00000000 TIM17_DIER_CC1IE
00000020 l       *ABS*	00000000 TIM17_DIER_COMIE
00000080 l       *ABS*	00000000 TIM17_DIER_BIE
00000100 l       *ABS*	00000000 TIM17_DIER_UDE
00000200 l       *ABS*	00000000 TIM17_DIER_CC1DE
00002000 l       *ABS*	00000000 TIM17_DIER_COMDE
40014810 l       *ABS*	00000000 TIM17_SR
00000200 l       *ABS*	00000000 TIM17_SR_CC1OF
00000080 l       *ABS*	00000000 TIM17_SR_BIF
00000020 l       *ABS*	00000000 TIM17_SR_COMIF
00000002 l       *ABS*	00000000 TIM17_SR_CC1IF
00000001 l       *ABS*	00000000 TIM17_SR_UIF
40014814 l       *ABS*	00000000 TIM17_EGR
00000080 l       *ABS*	00000000 TIM17_EGR_BG
00000020 l       *ABS*	00000000 TIM17_EGR_COMG
00000002 l       *ABS*	00000000 TIM17_EGR_CC1G
00000001 l       *ABS*	00000000 TIM17_EGR_UG
40014818 l       *ABS*	00000000 TIM17_CCMR1_Output
00000000 l       *ABS*	00000000 TIM17_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM17_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM17_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM17_CCMR1_Output_OC1M_Shift
00010000 l       *ABS*	00000000 TIM17_CCMR1_Output_OC1M_3
40014818 l       *ABS*	00000000 TIM17_CCMR1_Input
00000004 l       *ABS*	00000000 TIM17_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM17_CCMR1_Input_IC1PSC_Shift
00000000 l       *ABS*	00000000 TIM17_CCMR1_Input_CC1S_Shift
40014820 l       *ABS*	00000000 TIM17_CCER
00000008 l       *ABS*	00000000 TIM17_CCER_CC1NP
00000004 l       *ABS*	00000000 TIM17_CCER_CC1NE
00000002 l       *ABS*	00000000 TIM17_CCER_CC1P
00000001 l       *ABS*	00000000 TIM17_CCER_CC1E
40014824 l       *ABS*	00000000 TIM17_CNT
00000000 l       *ABS*	00000000 TIM17_CNT_CNT_Shift
80000000 l       *ABS*	00000000 TIM17_CNT_UIFCPY
40014828 l       *ABS*	00000000 TIM17_PSC
00000000 l       *ABS*	00000000 TIM17_PSC_PSC_Shift
4001482c l       *ABS*	00000000 TIM17_ARR
00000000 l       *ABS*	00000000 TIM17_ARR_ARR_Shift
40014830 l       *ABS*	00000000 TIM17_RCR
00000000 l       *ABS*	00000000 TIM17_RCR_REP_Shift
40014834 l       *ABS*	00000000 TIM17_CCR1
00000000 l       *ABS*	00000000 TIM17_CCR1_CCR1_Shift
40014844 l       *ABS*	00000000 TIM17_BDTR
00000000 l       *ABS*	00000000 TIM17_BDTR_DTG_Shift
00000008 l       *ABS*	00000000 TIM17_BDTR_LOCK_Shift
00000400 l       *ABS*	00000000 TIM17_BDTR_OSSI
00000800 l       *ABS*	00000000 TIM17_BDTR_OSSR
00001000 l       *ABS*	00000000 TIM17_BDTR_BKE
00002000 l       *ABS*	00000000 TIM17_BDTR_BKP
00004000 l       *ABS*	00000000 TIM17_BDTR_AOE
00008000 l       *ABS*	00000000 TIM17_BDTR_MOE
00000010 l       *ABS*	00000000 TIM17_BDTR_BKF_Shift
40014848 l       *ABS*	00000000 TIM17_DCR
00000008 l       *ABS*	00000000 TIM17_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM17_DCR_DBA_Shift
4001484c l       *ABS*	00000000 TIM17_DMAR
00000000 l       *ABS*	00000000 TIM17_DMAR_DMAB_Shift
40014860 l       *ABS*	00000000 TIM17_TIM17_AF1
00000001 l       *ABS*	00000000 TIM17_TIM17_AF1_BKINE
00000002 l       *ABS*	00000000 TIM17_TIM17_AF1_BKCMP1E
00000004 l       *ABS*	00000000 TIM17_TIM17_AF1_BKCMP2E
00000100 l       *ABS*	00000000 TIM17_TIM17_AF1_BKDFBK1E
00000200 l       *ABS*	00000000 TIM17_TIM17_AF1_BKINP
00000400 l       *ABS*	00000000 TIM17_TIM17_AF1_BKCMP1P
00000800 l       *ABS*	00000000 TIM17_TIM17_AF1_BKCMP2P
40014868 l       *ABS*	00000000 TIM17_TIM17_TISEL
00000000 l       *ABS*	00000000 TIM17_TIM17_TISEL_TI1SEL_Shift
40014000 l       *ABS*	00000000 TIM15_BASE
40014000 l       *ABS*	00000000 TIM15_CR1
00000001 l       *ABS*	00000000 TIM15_CR1_CEN
00000002 l       *ABS*	00000000 TIM15_CR1_UDIS
00000004 l       *ABS*	00000000 TIM15_CR1_URS
00000008 l       *ABS*	00000000 TIM15_CR1_OPM
00000080 l       *ABS*	00000000 TIM15_CR1_ARPE
00000008 l       *ABS*	00000000 TIM15_CR1_CKD_Shift
00000800 l       *ABS*	00000000 TIM15_CR1_UIFREMAP
40014004 l       *ABS*	00000000 TIM15_CR2
00000001 l       *ABS*	00000000 TIM15_CR2_CCPC
00000004 l       *ABS*	00000000 TIM15_CR2_CCUS
00000008 l       *ABS*	00000000 TIM15_CR2_CCDS
00000004 l       *ABS*	00000000 TIM15_CR2_MMS_Shift
00000080 l       *ABS*	00000000 TIM15_CR2_TI1S
00000100 l       *ABS*	00000000 TIM15_CR2_OIS1
00000200 l       *ABS*	00000000 TIM15_CR2_OIS1N
00000400 l       *ABS*	00000000 TIM15_CR2_OIS2
40014008 l       *ABS*	00000000 TIM15_SMCR
00000000 l       *ABS*	00000000 TIM15_SMCR_SMS_Shift
00000004 l       *ABS*	00000000 TIM15_SMCR_TS_2_0_Shift
00000080 l       *ABS*	00000000 TIM15_SMCR_MSM
00010000 l       *ABS*	00000000 TIM15_SMCR_SMS_3
00000014 l       *ABS*	00000000 TIM15_SMCR_TS_4_3_Shift
4001400c l       *ABS*	00000000 TIM15_DIER
00000001 l       *ABS*	00000000 TIM15_DIER_UIE
00000002 l       *ABS*	00000000 TIM15_DIER_CC1IE
00000004 l       *ABS*	00000000 TIM15_DIER_CC2IE
00000020 l       *ABS*	00000000 TIM15_DIER_COMIE
00000040 l       *ABS*	00000000 TIM15_DIER_TIE
00000080 l       *ABS*	00000000 TIM15_DIER_BIE
00000100 l       *ABS*	00000000 TIM15_DIER_UDE
00000200 l       *ABS*	00000000 TIM15_DIER_CC1DE
00000400 l       *ABS*	00000000 TIM15_DIER_CC2DE
00002000 l       *ABS*	00000000 TIM15_DIER_COMDE
00004000 l       *ABS*	00000000 TIM15_DIER_TDE
40014010 l       *ABS*	00000000 TIM15_SR
00000400 l       *ABS*	00000000 TIM15_SR_CC2OF
00000200 l       *ABS*	00000000 TIM15_SR_CC1OF
00000080 l       *ABS*	00000000 TIM15_SR_BIF
00000040 l       *ABS*	00000000 TIM15_SR_TIF
00000020 l       *ABS*	00000000 TIM15_SR_COMIF
00000004 l       *ABS*	00000000 TIM15_SR_CC2IF
00000002 l       *ABS*	00000000 TIM15_SR_CC1IF
00000001 l       *ABS*	00000000 TIM15_SR_UIF
40014014 l       *ABS*	00000000 TIM15_EGR
00000080 l       *ABS*	00000000 TIM15_EGR_BG
00000040 l       *ABS*	00000000 TIM15_EGR_TG
00000020 l       *ABS*	00000000 TIM15_EGR_COMG
00000004 l       *ABS*	00000000 TIM15_EGR_CC2G
00000002 l       *ABS*	00000000 TIM15_EGR_CC1G
00000001 l       *ABS*	00000000 TIM15_EGR_UG
40014018 l       *ABS*	00000000 TIM15_CCMR1_Output
00000000 l       *ABS*	00000000 TIM15_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM15_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM15_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM15_CCMR1_Output_OC1M_Shift
00000008 l       *ABS*	00000000 TIM15_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM15_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM15_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM15_CCMR1_Output_OC2M_Shift
00010000 l       *ABS*	00000000 TIM15_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM15_CCMR1_Output_OC2M_3
40014018 l       *ABS*	00000000 TIM15_CCMR1_Input
0000000c l       *ABS*	00000000 TIM15_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM15_CCMR1_Input_IC2PSC_Shift
00000008 l       *ABS*	00000000 TIM15_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM15_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM15_CCMR1_Input_IC1PSC_Shift
00000000 l       *ABS*	00000000 TIM15_CCMR1_Input_CC1S_Shift
40014020 l       *ABS*	00000000 TIM15_CCER
00000080 l       *ABS*	00000000 TIM15_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM15_CCER_CC2P
00000010 l       *ABS*	00000000 TIM15_CCER_CC2E
00000008 l       *ABS*	00000000 TIM15_CCER_CC1NP
00000004 l       *ABS*	00000000 TIM15_CCER_CC1NE
00000002 l       *ABS*	00000000 TIM15_CCER_CC1P
00000001 l       *ABS*	00000000 TIM15_CCER_CC1E
40014024 l       *ABS*	00000000 TIM15_CNT
00000000 l       *ABS*	00000000 TIM15_CNT_CNT_Shift
80000000 l       *ABS*	00000000 TIM15_CNT_UIFCPY
40014028 l       *ABS*	00000000 TIM15_PSC
00000000 l       *ABS*	00000000 TIM15_PSC_PSC_Shift
4001402c l       *ABS*	00000000 TIM15_ARR
00000000 l       *ABS*	00000000 TIM15_ARR_ARR_Shift
40014030 l       *ABS*	00000000 TIM15_RCR
00000000 l       *ABS*	00000000 TIM15_RCR_REP_Shift
40014034 l       *ABS*	00000000 TIM15_CCR1
00000000 l       *ABS*	00000000 TIM15_CCR1_CCR1_Shift
40014038 l       *ABS*	00000000 TIM15_CCR2
00000000 l       *ABS*	00000000 TIM15_CCR2_CCR2_Shift
40014044 l       *ABS*	00000000 TIM15_BDTR
00008000 l       *ABS*	00000000 TIM15_BDTR_MOE
00004000 l       *ABS*	00000000 TIM15_BDTR_AOE
00002000 l       *ABS*	00000000 TIM15_BDTR_BKP
00001000 l       *ABS*	00000000 TIM15_BDTR_BKE
00000800 l       *ABS*	00000000 TIM15_BDTR_OSSR
00000400 l       *ABS*	00000000 TIM15_BDTR_OSSI
00000008 l       *ABS*	00000000 TIM15_BDTR_LOCK_Shift
00000000 l       *ABS*	00000000 TIM15_BDTR_DTG_Shift
00000010 l       *ABS*	00000000 TIM15_BDTR_BKF_Shift
40014048 l       *ABS*	00000000 TIM15_DCR
00000008 l       *ABS*	00000000 TIM15_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM15_DCR_DBA_Shift
4001404c l       *ABS*	00000000 TIM15_DMAR
00000000 l       *ABS*	00000000 TIM15_DMAR_DMAB_Shift
40014060 l       *ABS*	00000000 TIM15_AF1
00000001 l       *ABS*	00000000 TIM15_AF1_BKINE
00000002 l       *ABS*	00000000 TIM15_AF1_BKCMP1E
00000004 l       *ABS*	00000000 TIM15_AF1_BKCMP2E
00000100 l       *ABS*	00000000 TIM15_AF1_BKDF1BK0E
00000200 l       *ABS*	00000000 TIM15_AF1_BKINP
00000400 l       *ABS*	00000000 TIM15_AF1_BKCMP1P
00000800 l       *ABS*	00000000 TIM15_AF1_BKCMP2P
40014068 l       *ABS*	00000000 TIM15_TISEL
00000000 l       *ABS*	00000000 TIM15_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM15_TISEL_TI2SEL_Shift
40011000 l       *ABS*	00000000 USART1_BASE
40011000 l       *ABS*	00000000 USART1_CR1
80000000 l       *ABS*	00000000 USART1_CR1_RXFFIE
40000000 l       *ABS*	00000000 USART1_CR1_TXFEIE
20000000 l       *ABS*	00000000 USART1_CR1_FIFOEN
10000000 l       *ABS*	00000000 USART1_CR1_M1
08000000 l       *ABS*	00000000 USART1_CR1_EOBIE
04000000 l       *ABS*	00000000 USART1_CR1_RTOIE
02000000 l       *ABS*	00000000 USART1_CR1_DEAT4
01000000 l       *ABS*	00000000 USART1_CR1_DEAT3
00800000 l       *ABS*	00000000 USART1_CR1_DEAT2
00400000 l       *ABS*	00000000 USART1_CR1_DEAT1
00200000 l       *ABS*	00000000 USART1_CR1_DEAT0
00100000 l       *ABS*	00000000 USART1_CR1_DEDT4
00080000 l       *ABS*	00000000 USART1_CR1_DEDT3
00040000 l       *ABS*	00000000 USART1_CR1_DEDT2
00020000 l       *ABS*	00000000 USART1_CR1_DEDT1
00010000 l       *ABS*	00000000 USART1_CR1_DEDT0
00008000 l       *ABS*	00000000 USART1_CR1_OVER8
00004000 l       *ABS*	00000000 USART1_CR1_CMIE
00002000 l       *ABS*	00000000 USART1_CR1_MME
00001000 l       *ABS*	00000000 USART1_CR1_M0
00000800 l       *ABS*	00000000 USART1_CR1_WAKE
00000400 l       *ABS*	00000000 USART1_CR1_PCE
00000200 l       *ABS*	00000000 USART1_CR1_PS
00000100 l       *ABS*	00000000 USART1_CR1_PEIE
00000080 l       *ABS*	00000000 USART1_CR1_TXEIE
00000040 l       *ABS*	00000000 USART1_CR1_TCIE
00000020 l       *ABS*	00000000 USART1_CR1_RXNEIE
00000010 l       *ABS*	00000000 USART1_CR1_IDLEIE
00000008 l       *ABS*	00000000 USART1_CR1_TE
00000004 l       *ABS*	00000000 USART1_CR1_RE
00000002 l       *ABS*	00000000 USART1_CR1_UESM
00000001 l       *ABS*	00000000 USART1_CR1_UE
40011004 l       *ABS*	00000000 USART1_CR2
0000001c l       *ABS*	00000000 USART1_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 USART1_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 USART1_CR2_RTOEN
00400000 l       *ABS*	00000000 USART1_CR2_ABRMOD1
00200000 l       *ABS*	00000000 USART1_CR2_ABRMOD0
00100000 l       *ABS*	00000000 USART1_CR2_ABREN
00080000 l       *ABS*	00000000 USART1_CR2_MSBFIRST
00040000 l       *ABS*	00000000 USART1_CR2_TAINV
00020000 l       *ABS*	00000000 USART1_CR2_TXINV
00010000 l       *ABS*	00000000 USART1_CR2_RXINV
00008000 l       *ABS*	00000000 USART1_CR2_SWAP
00004000 l       *ABS*	00000000 USART1_CR2_LINEN
0000000c l       *ABS*	00000000 USART1_CR2_STOP_Shift
00000800 l       *ABS*	00000000 USART1_CR2_CLKEN
00000400 l       *ABS*	00000000 USART1_CR2_CPOL
00000200 l       *ABS*	00000000 USART1_CR2_CPHA
00000100 l       *ABS*	00000000 USART1_CR2_LBCL
00000040 l       *ABS*	00000000 USART1_CR2_LBDIE
00000020 l       *ABS*	00000000 USART1_CR2_LBDL
00000010 l       *ABS*	00000000 USART1_CR2_ADDM7
00000008 l       *ABS*	00000000 USART1_CR2_DIS_NSS
00000001 l       *ABS*	00000000 USART1_CR2_SLVEN
40011008 l       *ABS*	00000000 USART1_CR3
0000001d l       *ABS*	00000000 USART1_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 USART1_CR3_RXFTIE
00000019 l       *ABS*	00000000 USART1_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 USART1_CR3_TCBGTIE
00800000 l       *ABS*	00000000 USART1_CR3_TXFTIE
00400000 l       *ABS*	00000000 USART1_CR3_WUFIE
00000014 l       *ABS*	00000000 USART1_CR3_WUS_Shift
00000011 l       *ABS*	00000000 USART1_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 USART1_CR3_DEP
00004000 l       *ABS*	00000000 USART1_CR3_DEM
00002000 l       *ABS*	00000000 USART1_CR3_DDRE
00001000 l       *ABS*	00000000 USART1_CR3_OVRDIS
00000800 l       *ABS*	00000000 USART1_CR3_ONEBIT
00000400 l       *ABS*	00000000 USART1_CR3_CTSIE
00000200 l       *ABS*	00000000 USART1_CR3_CTSE
00000100 l       *ABS*	00000000 USART1_CR3_RTSE
00000080 l       *ABS*	00000000 USART1_CR3_DMAT
00000040 l       *ABS*	00000000 USART1_CR3_DMAR
00000020 l       *ABS*	00000000 USART1_CR3_SCEN
00000010 l       *ABS*	00000000 USART1_CR3_NACK
00000008 l       *ABS*	00000000 USART1_CR3_HDSEL
00000004 l       *ABS*	00000000 USART1_CR3_IRLP
00000002 l       *ABS*	00000000 USART1_CR3_IREN
00000001 l       *ABS*	00000000 USART1_CR3_EIE
4001100c l       *ABS*	00000000 USART1_BRR
00000004 l       *ABS*	00000000 USART1_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 USART1_BRR_BRR_0_3_Shift
40011010 l       *ABS*	00000000 USART1_GTPR
00000008 l       *ABS*	00000000 USART1_GTPR_GT_Shift
00000000 l       *ABS*	00000000 USART1_GTPR_PSC_Shift
40011014 l       *ABS*	00000000 USART1_RTOR
00000018 l       *ABS*	00000000 USART1_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 USART1_RTOR_RTO_Shift
40011018 l       *ABS*	00000000 USART1_RQR
00000010 l       *ABS*	00000000 USART1_RQR_TXFRQ
00000008 l       *ABS*	00000000 USART1_RQR_RXFRQ
00000004 l       *ABS*	00000000 USART1_RQR_MMRQ
00000002 l       *ABS*	00000000 USART1_RQR_SBKRQ
00000001 l       *ABS*	00000000 USART1_RQR_ABRRQ
4001101c l       *ABS*	00000000 USART1_ISR
08000000 l       *ABS*	00000000 USART1_ISR_TXFT
04000000 l       *ABS*	00000000 USART1_ISR_RXFT
02000000 l       *ABS*	00000000 USART1_ISR_TCBGT
01000000 l       *ABS*	00000000 USART1_ISR_RXFF
00800000 l       *ABS*	00000000 USART1_ISR_TXFE
00400000 l       *ABS*	00000000 USART1_ISR_REACK
00200000 l       *ABS*	00000000 USART1_ISR_TEACK
00100000 l       *ABS*	00000000 USART1_ISR_WUF
00080000 l       *ABS*	00000000 USART1_ISR_RWU
00040000 l       *ABS*	00000000 USART1_ISR_SBKF
00020000 l       *ABS*	00000000 USART1_ISR_CMF
00010000 l       *ABS*	00000000 USART1_ISR_BUSY
00008000 l       *ABS*	00000000 USART1_ISR_ABRF
00004000 l       *ABS*	00000000 USART1_ISR_ABRE
00002000 l       *ABS*	00000000 USART1_ISR_UDR
00001000 l       *ABS*	00000000 USART1_ISR_EOBF
00000800 l       *ABS*	00000000 USART1_ISR_RTOF
00000400 l       *ABS*	00000000 USART1_ISR_CTS
00000200 l       *ABS*	00000000 USART1_ISR_CTSIF
00000100 l       *ABS*	00000000 USART1_ISR_LBDF
00000080 l       *ABS*	00000000 USART1_ISR_TXE
00000040 l       *ABS*	00000000 USART1_ISR_TC
00000020 l       *ABS*	00000000 USART1_ISR_RXNE
00000010 l       *ABS*	00000000 USART1_ISR_IDLE
00000008 l       *ABS*	00000000 USART1_ISR_ORE
00000004 l       *ABS*	00000000 USART1_ISR_NF
00000002 l       *ABS*	00000000 USART1_ISR_FE
00000001 l       *ABS*	00000000 USART1_ISR_PE
40011020 l       *ABS*	00000000 USART1_ICR
00100000 l       *ABS*	00000000 USART1_ICR_WUCF
00020000 l       *ABS*	00000000 USART1_ICR_CMCF
00002000 l       *ABS*	00000000 USART1_ICR_UDRCF
00001000 l       *ABS*	00000000 USART1_ICR_EOBCF
00000800 l       *ABS*	00000000 USART1_ICR_RTOCF
00000200 l       *ABS*	00000000 USART1_ICR_CTSCF
00000100 l       *ABS*	00000000 USART1_ICR_LBDCF
00000080 l       *ABS*	00000000 USART1_ICR_TCBGTC
00000040 l       *ABS*	00000000 USART1_ICR_TCCF
00000020 l       *ABS*	00000000 USART1_ICR_TXFECF
00000010 l       *ABS*	00000000 USART1_ICR_IDLECF
00000008 l       *ABS*	00000000 USART1_ICR_ORECF
00000004 l       *ABS*	00000000 USART1_ICR_NCF
00000002 l       *ABS*	00000000 USART1_ICR_FECF
00000001 l       *ABS*	00000000 USART1_ICR_PECF
40011024 l       *ABS*	00000000 USART1_RDR
00000000 l       *ABS*	00000000 USART1_RDR_RDR_Shift
40011028 l       *ABS*	00000000 USART1_TDR
00000000 l       *ABS*	00000000 USART1_TDR_TDR_Shift
4001102c l       *ABS*	00000000 USART1_PRESC
00000000 l       *ABS*	00000000 USART1_PRESC_PRESCALER_Shift
40004400 l       *ABS*	00000000 USART2_BASE
40004400 l       *ABS*	00000000 USART2_CR1
80000000 l       *ABS*	00000000 USART2_CR1_RXFFIE
40000000 l       *ABS*	00000000 USART2_CR1_TXFEIE
20000000 l       *ABS*	00000000 USART2_CR1_FIFOEN
10000000 l       *ABS*	00000000 USART2_CR1_M1
08000000 l       *ABS*	00000000 USART2_CR1_EOBIE
04000000 l       *ABS*	00000000 USART2_CR1_RTOIE
02000000 l       *ABS*	00000000 USART2_CR1_DEAT4
01000000 l       *ABS*	00000000 USART2_CR1_DEAT3
00800000 l       *ABS*	00000000 USART2_CR1_DEAT2
00400000 l       *ABS*	00000000 USART2_CR1_DEAT1
00200000 l       *ABS*	00000000 USART2_CR1_DEAT0
00100000 l       *ABS*	00000000 USART2_CR1_DEDT4
00080000 l       *ABS*	00000000 USART2_CR1_DEDT3
00040000 l       *ABS*	00000000 USART2_CR1_DEDT2
00020000 l       *ABS*	00000000 USART2_CR1_DEDT1
00010000 l       *ABS*	00000000 USART2_CR1_DEDT0
00008000 l       *ABS*	00000000 USART2_CR1_OVER8
00004000 l       *ABS*	00000000 USART2_CR1_CMIE
00002000 l       *ABS*	00000000 USART2_CR1_MME
00001000 l       *ABS*	00000000 USART2_CR1_M0
00000800 l       *ABS*	00000000 USART2_CR1_WAKE
00000400 l       *ABS*	00000000 USART2_CR1_PCE
00000200 l       *ABS*	00000000 USART2_CR1_PS
00000100 l       *ABS*	00000000 USART2_CR1_PEIE
00000080 l       *ABS*	00000000 USART2_CR1_TXEIE
00000040 l       *ABS*	00000000 USART2_CR1_TCIE
00000020 l       *ABS*	00000000 USART2_CR1_RXNEIE
00000010 l       *ABS*	00000000 USART2_CR1_IDLEIE
00000008 l       *ABS*	00000000 USART2_CR1_TE
00000004 l       *ABS*	00000000 USART2_CR1_RE
00000002 l       *ABS*	00000000 USART2_CR1_UESM
00000001 l       *ABS*	00000000 USART2_CR1_UE
40004404 l       *ABS*	00000000 USART2_CR2
0000001c l       *ABS*	00000000 USART2_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 USART2_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 USART2_CR2_RTOEN
00400000 l       *ABS*	00000000 USART2_CR2_ABRMOD1
00200000 l       *ABS*	00000000 USART2_CR2_ABRMOD0
00100000 l       *ABS*	00000000 USART2_CR2_ABREN
00080000 l       *ABS*	00000000 USART2_CR2_MSBFIRST
00040000 l       *ABS*	00000000 USART2_CR2_TAINV
00020000 l       *ABS*	00000000 USART2_CR2_TXINV
00010000 l       *ABS*	00000000 USART2_CR2_RXINV
00008000 l       *ABS*	00000000 USART2_CR2_SWAP
00004000 l       *ABS*	00000000 USART2_CR2_LINEN
0000000c l       *ABS*	00000000 USART2_CR2_STOP_Shift
00000800 l       *ABS*	00000000 USART2_CR2_CLKEN
00000400 l       *ABS*	00000000 USART2_CR2_CPOL
00000200 l       *ABS*	00000000 USART2_CR2_CPHA
00000100 l       *ABS*	00000000 USART2_CR2_LBCL
00000040 l       *ABS*	00000000 USART2_CR2_LBDIE
00000020 l       *ABS*	00000000 USART2_CR2_LBDL
00000010 l       *ABS*	00000000 USART2_CR2_ADDM7
00000008 l       *ABS*	00000000 USART2_CR2_DIS_NSS
00000001 l       *ABS*	00000000 USART2_CR2_SLVEN
40004408 l       *ABS*	00000000 USART2_CR3
0000001d l       *ABS*	00000000 USART2_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 USART2_CR3_RXFTIE
00000019 l       *ABS*	00000000 USART2_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 USART2_CR3_TCBGTIE
00800000 l       *ABS*	00000000 USART2_CR3_TXFTIE
00400000 l       *ABS*	00000000 USART2_CR3_WUFIE
00000014 l       *ABS*	00000000 USART2_CR3_WUS_Shift
00000011 l       *ABS*	00000000 USART2_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 USART2_CR3_DEP
00004000 l       *ABS*	00000000 USART2_CR3_DEM
00002000 l       *ABS*	00000000 USART2_CR3_DDRE
00001000 l       *ABS*	00000000 USART2_CR3_OVRDIS
00000800 l       *ABS*	00000000 USART2_CR3_ONEBIT
00000400 l       *ABS*	00000000 USART2_CR3_CTSIE
00000200 l       *ABS*	00000000 USART2_CR3_CTSE
00000100 l       *ABS*	00000000 USART2_CR3_RTSE
00000080 l       *ABS*	00000000 USART2_CR3_DMAT
00000040 l       *ABS*	00000000 USART2_CR3_DMAR
00000020 l       *ABS*	00000000 USART2_CR3_SCEN
00000010 l       *ABS*	00000000 USART2_CR3_NACK
00000008 l       *ABS*	00000000 USART2_CR3_HDSEL
00000004 l       *ABS*	00000000 USART2_CR3_IRLP
00000002 l       *ABS*	00000000 USART2_CR3_IREN
00000001 l       *ABS*	00000000 USART2_CR3_EIE
4000440c l       *ABS*	00000000 USART2_BRR
00000004 l       *ABS*	00000000 USART2_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 USART2_BRR_BRR_0_3_Shift
40004410 l       *ABS*	00000000 USART2_GTPR
00000008 l       *ABS*	00000000 USART2_GTPR_GT_Shift
00000000 l       *ABS*	00000000 USART2_GTPR_PSC_Shift
40004414 l       *ABS*	00000000 USART2_RTOR
00000018 l       *ABS*	00000000 USART2_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 USART2_RTOR_RTO_Shift
40004418 l       *ABS*	00000000 USART2_RQR
00000010 l       *ABS*	00000000 USART2_RQR_TXFRQ
00000008 l       *ABS*	00000000 USART2_RQR_RXFRQ
00000004 l       *ABS*	00000000 USART2_RQR_MMRQ
00000002 l       *ABS*	00000000 USART2_RQR_SBKRQ
00000001 l       *ABS*	00000000 USART2_RQR_ABRRQ
4000441c l       *ABS*	00000000 USART2_ISR
08000000 l       *ABS*	00000000 USART2_ISR_TXFT
04000000 l       *ABS*	00000000 USART2_ISR_RXFT
02000000 l       *ABS*	00000000 USART2_ISR_TCBGT
01000000 l       *ABS*	00000000 USART2_ISR_RXFF
00800000 l       *ABS*	00000000 USART2_ISR_TXFE
00400000 l       *ABS*	00000000 USART2_ISR_REACK
00200000 l       *ABS*	00000000 USART2_ISR_TEACK
00100000 l       *ABS*	00000000 USART2_ISR_WUF
00080000 l       *ABS*	00000000 USART2_ISR_RWU
00040000 l       *ABS*	00000000 USART2_ISR_SBKF
00020000 l       *ABS*	00000000 USART2_ISR_CMF
00010000 l       *ABS*	00000000 USART2_ISR_BUSY
00008000 l       *ABS*	00000000 USART2_ISR_ABRF
00004000 l       *ABS*	00000000 USART2_ISR_ABRE
00002000 l       *ABS*	00000000 USART2_ISR_UDR
00001000 l       *ABS*	00000000 USART2_ISR_EOBF
00000800 l       *ABS*	00000000 USART2_ISR_RTOF
00000400 l       *ABS*	00000000 USART2_ISR_CTS
00000200 l       *ABS*	00000000 USART2_ISR_CTSIF
00000100 l       *ABS*	00000000 USART2_ISR_LBDF
00000080 l       *ABS*	00000000 USART2_ISR_TXE
00000040 l       *ABS*	00000000 USART2_ISR_TC
00000020 l       *ABS*	00000000 USART2_ISR_RXNE
00000010 l       *ABS*	00000000 USART2_ISR_IDLE
00000008 l       *ABS*	00000000 USART2_ISR_ORE
00000004 l       *ABS*	00000000 USART2_ISR_NF
00000002 l       *ABS*	00000000 USART2_ISR_FE
00000001 l       *ABS*	00000000 USART2_ISR_PE
40004420 l       *ABS*	00000000 USART2_ICR
00100000 l       *ABS*	00000000 USART2_ICR_WUCF
00020000 l       *ABS*	00000000 USART2_ICR_CMCF
00002000 l       *ABS*	00000000 USART2_ICR_UDRCF
00001000 l       *ABS*	00000000 USART2_ICR_EOBCF
00000800 l       *ABS*	00000000 USART2_ICR_RTOCF
00000200 l       *ABS*	00000000 USART2_ICR_CTSCF
00000100 l       *ABS*	00000000 USART2_ICR_LBDCF
00000080 l       *ABS*	00000000 USART2_ICR_TCBGTC
00000040 l       *ABS*	00000000 USART2_ICR_TCCF
00000020 l       *ABS*	00000000 USART2_ICR_TXFECF
00000010 l       *ABS*	00000000 USART2_ICR_IDLECF
00000008 l       *ABS*	00000000 USART2_ICR_ORECF
00000004 l       *ABS*	00000000 USART2_ICR_NCF
00000002 l       *ABS*	00000000 USART2_ICR_FECF
00000001 l       *ABS*	00000000 USART2_ICR_PECF
40004424 l       *ABS*	00000000 USART2_RDR
00000000 l       *ABS*	00000000 USART2_RDR_RDR_Shift
40004428 l       *ABS*	00000000 USART2_TDR
00000000 l       *ABS*	00000000 USART2_TDR_TDR_Shift
4000442c l       *ABS*	00000000 USART2_PRESC
00000000 l       *ABS*	00000000 USART2_PRESC_PRESCALER_Shift
40004800 l       *ABS*	00000000 USART3_BASE
40004800 l       *ABS*	00000000 USART3_CR1
80000000 l       *ABS*	00000000 USART3_CR1_RXFFIE
40000000 l       *ABS*	00000000 USART3_CR1_TXFEIE
20000000 l       *ABS*	00000000 USART3_CR1_FIFOEN
10000000 l       *ABS*	00000000 USART3_CR1_M1
08000000 l       *ABS*	00000000 USART3_CR1_EOBIE
04000000 l       *ABS*	00000000 USART3_CR1_RTOIE
02000000 l       *ABS*	00000000 USART3_CR1_DEAT4
01000000 l       *ABS*	00000000 USART3_CR1_DEAT3
00800000 l       *ABS*	00000000 USART3_CR1_DEAT2
00400000 l       *ABS*	00000000 USART3_CR1_DEAT1
00200000 l       *ABS*	00000000 USART3_CR1_DEAT0
00100000 l       *ABS*	00000000 USART3_CR1_DEDT4
00080000 l       *ABS*	00000000 USART3_CR1_DEDT3
00040000 l       *ABS*	00000000 USART3_CR1_DEDT2
00020000 l       *ABS*	00000000 USART3_CR1_DEDT1
00010000 l       *ABS*	00000000 USART3_CR1_DEDT0
00008000 l       *ABS*	00000000 USART3_CR1_OVER8
00004000 l       *ABS*	00000000 USART3_CR1_CMIE
00002000 l       *ABS*	00000000 USART3_CR1_MME
00001000 l       *ABS*	00000000 USART3_CR1_M0
00000800 l       *ABS*	00000000 USART3_CR1_WAKE
00000400 l       *ABS*	00000000 USART3_CR1_PCE
00000200 l       *ABS*	00000000 USART3_CR1_PS
00000100 l       *ABS*	00000000 USART3_CR1_PEIE
00000080 l       *ABS*	00000000 USART3_CR1_TXEIE
00000040 l       *ABS*	00000000 USART3_CR1_TCIE
00000020 l       *ABS*	00000000 USART3_CR1_RXNEIE
00000010 l       *ABS*	00000000 USART3_CR1_IDLEIE
00000008 l       *ABS*	00000000 USART3_CR1_TE
00000004 l       *ABS*	00000000 USART3_CR1_RE
00000002 l       *ABS*	00000000 USART3_CR1_UESM
00000001 l       *ABS*	00000000 USART3_CR1_UE
40004804 l       *ABS*	00000000 USART3_CR2
0000001c l       *ABS*	00000000 USART3_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 USART3_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 USART3_CR2_RTOEN
00400000 l       *ABS*	00000000 USART3_CR2_ABRMOD1
00200000 l       *ABS*	00000000 USART3_CR2_ABRMOD0
00100000 l       *ABS*	00000000 USART3_CR2_ABREN
00080000 l       *ABS*	00000000 USART3_CR2_MSBFIRST
00040000 l       *ABS*	00000000 USART3_CR2_TAINV
00020000 l       *ABS*	00000000 USART3_CR2_TXINV
00010000 l       *ABS*	00000000 USART3_CR2_RXINV
00008000 l       *ABS*	00000000 USART3_CR2_SWAP
00004000 l       *ABS*	00000000 USART3_CR2_LINEN
0000000c l       *ABS*	00000000 USART3_CR2_STOP_Shift
00000800 l       *ABS*	00000000 USART3_CR2_CLKEN
00000400 l       *ABS*	00000000 USART3_CR2_CPOL
00000200 l       *ABS*	00000000 USART3_CR2_CPHA
00000100 l       *ABS*	00000000 USART3_CR2_LBCL
00000040 l       *ABS*	00000000 USART3_CR2_LBDIE
00000020 l       *ABS*	00000000 USART3_CR2_LBDL
00000010 l       *ABS*	00000000 USART3_CR2_ADDM7
00000008 l       *ABS*	00000000 USART3_CR2_DIS_NSS
00000001 l       *ABS*	00000000 USART3_CR2_SLVEN
40004808 l       *ABS*	00000000 USART3_CR3
0000001d l       *ABS*	00000000 USART3_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 USART3_CR3_RXFTIE
00000019 l       *ABS*	00000000 USART3_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 USART3_CR3_TCBGTIE
00800000 l       *ABS*	00000000 USART3_CR3_TXFTIE
00400000 l       *ABS*	00000000 USART3_CR3_WUFIE
00000014 l       *ABS*	00000000 USART3_CR3_WUS_Shift
00000011 l       *ABS*	00000000 USART3_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 USART3_CR3_DEP
00004000 l       *ABS*	00000000 USART3_CR3_DEM
00002000 l       *ABS*	00000000 USART3_CR3_DDRE
00001000 l       *ABS*	00000000 USART3_CR3_OVRDIS
00000800 l       *ABS*	00000000 USART3_CR3_ONEBIT
00000400 l       *ABS*	00000000 USART3_CR3_CTSIE
00000200 l       *ABS*	00000000 USART3_CR3_CTSE
00000100 l       *ABS*	00000000 USART3_CR3_RTSE
00000080 l       *ABS*	00000000 USART3_CR3_DMAT
00000040 l       *ABS*	00000000 USART3_CR3_DMAR
00000020 l       *ABS*	00000000 USART3_CR3_SCEN
00000010 l       *ABS*	00000000 USART3_CR3_NACK
00000008 l       *ABS*	00000000 USART3_CR3_HDSEL
00000004 l       *ABS*	00000000 USART3_CR3_IRLP
00000002 l       *ABS*	00000000 USART3_CR3_IREN
00000001 l       *ABS*	00000000 USART3_CR3_EIE
4000480c l       *ABS*	00000000 USART3_BRR
00000004 l       *ABS*	00000000 USART3_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 USART3_BRR_BRR_0_3_Shift
40004810 l       *ABS*	00000000 USART3_GTPR
00000008 l       *ABS*	00000000 USART3_GTPR_GT_Shift
00000000 l       *ABS*	00000000 USART3_GTPR_PSC_Shift
40004814 l       *ABS*	00000000 USART3_RTOR
00000018 l       *ABS*	00000000 USART3_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 USART3_RTOR_RTO_Shift
40004818 l       *ABS*	00000000 USART3_RQR
00000010 l       *ABS*	00000000 USART3_RQR_TXFRQ
00000008 l       *ABS*	00000000 USART3_RQR_RXFRQ
00000004 l       *ABS*	00000000 USART3_RQR_MMRQ
00000002 l       *ABS*	00000000 USART3_RQR_SBKRQ
00000001 l       *ABS*	00000000 USART3_RQR_ABRRQ
4000481c l       *ABS*	00000000 USART3_ISR
08000000 l       *ABS*	00000000 USART3_ISR_TXFT
04000000 l       *ABS*	00000000 USART3_ISR_RXFT
02000000 l       *ABS*	00000000 USART3_ISR_TCBGT
01000000 l       *ABS*	00000000 USART3_ISR_RXFF
00800000 l       *ABS*	00000000 USART3_ISR_TXFE
00400000 l       *ABS*	00000000 USART3_ISR_REACK
00200000 l       *ABS*	00000000 USART3_ISR_TEACK
00100000 l       *ABS*	00000000 USART3_ISR_WUF
00080000 l       *ABS*	00000000 USART3_ISR_RWU
00040000 l       *ABS*	00000000 USART3_ISR_SBKF
00020000 l       *ABS*	00000000 USART3_ISR_CMF
00010000 l       *ABS*	00000000 USART3_ISR_BUSY
00008000 l       *ABS*	00000000 USART3_ISR_ABRF
00004000 l       *ABS*	00000000 USART3_ISR_ABRE
00002000 l       *ABS*	00000000 USART3_ISR_UDR
00001000 l       *ABS*	00000000 USART3_ISR_EOBF
00000800 l       *ABS*	00000000 USART3_ISR_RTOF
00000400 l       *ABS*	00000000 USART3_ISR_CTS
00000200 l       *ABS*	00000000 USART3_ISR_CTSIF
00000100 l       *ABS*	00000000 USART3_ISR_LBDF
00000080 l       *ABS*	00000000 USART3_ISR_TXE
00000040 l       *ABS*	00000000 USART3_ISR_TC
00000020 l       *ABS*	00000000 USART3_ISR_RXNE
00000010 l       *ABS*	00000000 USART3_ISR_IDLE
00000008 l       *ABS*	00000000 USART3_ISR_ORE
00000004 l       *ABS*	00000000 USART3_ISR_NF
00000002 l       *ABS*	00000000 USART3_ISR_FE
00000001 l       *ABS*	00000000 USART3_ISR_PE
40004820 l       *ABS*	00000000 USART3_ICR
00100000 l       *ABS*	00000000 USART3_ICR_WUCF
00020000 l       *ABS*	00000000 USART3_ICR_CMCF
00002000 l       *ABS*	00000000 USART3_ICR_UDRCF
00001000 l       *ABS*	00000000 USART3_ICR_EOBCF
00000800 l       *ABS*	00000000 USART3_ICR_RTOCF
00000200 l       *ABS*	00000000 USART3_ICR_CTSCF
00000100 l       *ABS*	00000000 USART3_ICR_LBDCF
00000080 l       *ABS*	00000000 USART3_ICR_TCBGTC
00000040 l       *ABS*	00000000 USART3_ICR_TCCF
00000020 l       *ABS*	00000000 USART3_ICR_TXFECF
00000010 l       *ABS*	00000000 USART3_ICR_IDLECF
00000008 l       *ABS*	00000000 USART3_ICR_ORECF
00000004 l       *ABS*	00000000 USART3_ICR_NCF
00000002 l       *ABS*	00000000 USART3_ICR_FECF
00000001 l       *ABS*	00000000 USART3_ICR_PECF
40004824 l       *ABS*	00000000 USART3_RDR
00000000 l       *ABS*	00000000 USART3_RDR_RDR_Shift
40004828 l       *ABS*	00000000 USART3_TDR
00000000 l       *ABS*	00000000 USART3_TDR_TDR_Shift
4000482c l       *ABS*	00000000 USART3_PRESC
00000000 l       *ABS*	00000000 USART3_PRESC_PRESCALER_Shift
40004c00 l       *ABS*	00000000 UART4_BASE
40004c00 l       *ABS*	00000000 UART4_CR1
80000000 l       *ABS*	00000000 UART4_CR1_RXFFIE
40000000 l       *ABS*	00000000 UART4_CR1_TXFEIE
20000000 l       *ABS*	00000000 UART4_CR1_FIFOEN
10000000 l       *ABS*	00000000 UART4_CR1_M1
08000000 l       *ABS*	00000000 UART4_CR1_EOBIE
04000000 l       *ABS*	00000000 UART4_CR1_RTOIE
02000000 l       *ABS*	00000000 UART4_CR1_DEAT4
01000000 l       *ABS*	00000000 UART4_CR1_DEAT3
00800000 l       *ABS*	00000000 UART4_CR1_DEAT2
00400000 l       *ABS*	00000000 UART4_CR1_DEAT1
00200000 l       *ABS*	00000000 UART4_CR1_DEAT0
00100000 l       *ABS*	00000000 UART4_CR1_DEDT4
00080000 l       *ABS*	00000000 UART4_CR1_DEDT3
00040000 l       *ABS*	00000000 UART4_CR1_DEDT2
00020000 l       *ABS*	00000000 UART4_CR1_DEDT1
00010000 l       *ABS*	00000000 UART4_CR1_DEDT0
00008000 l       *ABS*	00000000 UART4_CR1_OVER8
00004000 l       *ABS*	00000000 UART4_CR1_CMIE
00002000 l       *ABS*	00000000 UART4_CR1_MME
00001000 l       *ABS*	00000000 UART4_CR1_M0
00000800 l       *ABS*	00000000 UART4_CR1_WAKE
00000400 l       *ABS*	00000000 UART4_CR1_PCE
00000200 l       *ABS*	00000000 UART4_CR1_PS
00000100 l       *ABS*	00000000 UART4_CR1_PEIE
00000080 l       *ABS*	00000000 UART4_CR1_TXEIE
00000040 l       *ABS*	00000000 UART4_CR1_TCIE
00000020 l       *ABS*	00000000 UART4_CR1_RXNEIE
00000010 l       *ABS*	00000000 UART4_CR1_IDLEIE
00000008 l       *ABS*	00000000 UART4_CR1_TE
00000004 l       *ABS*	00000000 UART4_CR1_RE
00000002 l       *ABS*	00000000 UART4_CR1_UESM
00000001 l       *ABS*	00000000 UART4_CR1_UE
40004c04 l       *ABS*	00000000 UART4_CR2
0000001c l       *ABS*	00000000 UART4_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 UART4_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 UART4_CR2_RTOEN
00400000 l       *ABS*	00000000 UART4_CR2_ABRMOD1
00200000 l       *ABS*	00000000 UART4_CR2_ABRMOD0
00100000 l       *ABS*	00000000 UART4_CR2_ABREN
00080000 l       *ABS*	00000000 UART4_CR2_MSBFIRST
00040000 l       *ABS*	00000000 UART4_CR2_TAINV
00020000 l       *ABS*	00000000 UART4_CR2_TXINV
00010000 l       *ABS*	00000000 UART4_CR2_RXINV
00008000 l       *ABS*	00000000 UART4_CR2_SWAP
00004000 l       *ABS*	00000000 UART4_CR2_LINEN
0000000c l       *ABS*	00000000 UART4_CR2_STOP_Shift
00000800 l       *ABS*	00000000 UART4_CR2_CLKEN
00000400 l       *ABS*	00000000 UART4_CR2_CPOL
00000200 l       *ABS*	00000000 UART4_CR2_CPHA
00000100 l       *ABS*	00000000 UART4_CR2_LBCL
00000040 l       *ABS*	00000000 UART4_CR2_LBDIE
00000020 l       *ABS*	00000000 UART4_CR2_LBDL
00000010 l       *ABS*	00000000 UART4_CR2_ADDM7
00000008 l       *ABS*	00000000 UART4_CR2_DIS_NSS
00000001 l       *ABS*	00000000 UART4_CR2_SLVEN
40004c08 l       *ABS*	00000000 UART4_CR3
0000001d l       *ABS*	00000000 UART4_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 UART4_CR3_RXFTIE
00000019 l       *ABS*	00000000 UART4_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 UART4_CR3_TCBGTIE
00800000 l       *ABS*	00000000 UART4_CR3_TXFTIE
00400000 l       *ABS*	00000000 UART4_CR3_WUFIE
00000014 l       *ABS*	00000000 UART4_CR3_WUS_Shift
00000011 l       *ABS*	00000000 UART4_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 UART4_CR3_DEP
00004000 l       *ABS*	00000000 UART4_CR3_DEM
00002000 l       *ABS*	00000000 UART4_CR3_DDRE
00001000 l       *ABS*	00000000 UART4_CR3_OVRDIS
00000800 l       *ABS*	00000000 UART4_CR3_ONEBIT
00000400 l       *ABS*	00000000 UART4_CR3_CTSIE
00000200 l       *ABS*	00000000 UART4_CR3_CTSE
00000100 l       *ABS*	00000000 UART4_CR3_RTSE
00000080 l       *ABS*	00000000 UART4_CR3_DMAT
00000040 l       *ABS*	00000000 UART4_CR3_DMAR
00000020 l       *ABS*	00000000 UART4_CR3_SCEN
00000010 l       *ABS*	00000000 UART4_CR3_NACK
00000008 l       *ABS*	00000000 UART4_CR3_HDSEL
00000004 l       *ABS*	00000000 UART4_CR3_IRLP
00000002 l       *ABS*	00000000 UART4_CR3_IREN
00000001 l       *ABS*	00000000 UART4_CR3_EIE
40004c0c l       *ABS*	00000000 UART4_BRR
00000004 l       *ABS*	00000000 UART4_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 UART4_BRR_BRR_0_3_Shift
40004c10 l       *ABS*	00000000 UART4_GTPR
00000008 l       *ABS*	00000000 UART4_GTPR_GT_Shift
00000000 l       *ABS*	00000000 UART4_GTPR_PSC_Shift
40004c14 l       *ABS*	00000000 UART4_RTOR
00000018 l       *ABS*	00000000 UART4_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 UART4_RTOR_RTO_Shift
40004c18 l       *ABS*	00000000 UART4_RQR
00000010 l       *ABS*	00000000 UART4_RQR_TXFRQ
00000008 l       *ABS*	00000000 UART4_RQR_RXFRQ
00000004 l       *ABS*	00000000 UART4_RQR_MMRQ
00000002 l       *ABS*	00000000 UART4_RQR_SBKRQ
00000001 l       *ABS*	00000000 UART4_RQR_ABRRQ
40004c1c l       *ABS*	00000000 UART4_ISR
08000000 l       *ABS*	00000000 UART4_ISR_TXFT
04000000 l       *ABS*	00000000 UART4_ISR_RXFT
02000000 l       *ABS*	00000000 UART4_ISR_TCBGT
01000000 l       *ABS*	00000000 UART4_ISR_RXFF
00800000 l       *ABS*	00000000 UART4_ISR_TXFE
00400000 l       *ABS*	00000000 UART4_ISR_REACK
00200000 l       *ABS*	00000000 UART4_ISR_TEACK
00100000 l       *ABS*	00000000 UART4_ISR_WUF
00080000 l       *ABS*	00000000 UART4_ISR_RWU
00040000 l       *ABS*	00000000 UART4_ISR_SBKF
00020000 l       *ABS*	00000000 UART4_ISR_CMF
00010000 l       *ABS*	00000000 UART4_ISR_BUSY
00008000 l       *ABS*	00000000 UART4_ISR_ABRF
00004000 l       *ABS*	00000000 UART4_ISR_ABRE
00002000 l       *ABS*	00000000 UART4_ISR_UDR
00001000 l       *ABS*	00000000 UART4_ISR_EOBF
00000800 l       *ABS*	00000000 UART4_ISR_RTOF
00000400 l       *ABS*	00000000 UART4_ISR_CTS
00000200 l       *ABS*	00000000 UART4_ISR_CTSIF
00000100 l       *ABS*	00000000 UART4_ISR_LBDF
00000080 l       *ABS*	00000000 UART4_ISR_TXE
00000040 l       *ABS*	00000000 UART4_ISR_TC
00000020 l       *ABS*	00000000 UART4_ISR_RXNE
00000010 l       *ABS*	00000000 UART4_ISR_IDLE
00000008 l       *ABS*	00000000 UART4_ISR_ORE
00000004 l       *ABS*	00000000 UART4_ISR_NF
00000002 l       *ABS*	00000000 UART4_ISR_FE
00000001 l       *ABS*	00000000 UART4_ISR_PE
40004c20 l       *ABS*	00000000 UART4_ICR
00100000 l       *ABS*	00000000 UART4_ICR_WUCF
00020000 l       *ABS*	00000000 UART4_ICR_CMCF
00002000 l       *ABS*	00000000 UART4_ICR_UDRCF
00001000 l       *ABS*	00000000 UART4_ICR_EOBCF
00000800 l       *ABS*	00000000 UART4_ICR_RTOCF
00000200 l       *ABS*	00000000 UART4_ICR_CTSCF
00000100 l       *ABS*	00000000 UART4_ICR_LBDCF
00000080 l       *ABS*	00000000 UART4_ICR_TCBGTC
00000040 l       *ABS*	00000000 UART4_ICR_TCCF
00000020 l       *ABS*	00000000 UART4_ICR_TXFECF
00000010 l       *ABS*	00000000 UART4_ICR_IDLECF
00000008 l       *ABS*	00000000 UART4_ICR_ORECF
00000004 l       *ABS*	00000000 UART4_ICR_NCF
00000002 l       *ABS*	00000000 UART4_ICR_FECF
00000001 l       *ABS*	00000000 UART4_ICR_PECF
40004c24 l       *ABS*	00000000 UART4_RDR
00000000 l       *ABS*	00000000 UART4_RDR_RDR_Shift
40004c28 l       *ABS*	00000000 UART4_TDR
00000000 l       *ABS*	00000000 UART4_TDR_TDR_Shift
40004c2c l       *ABS*	00000000 UART4_PRESC
00000000 l       *ABS*	00000000 UART4_PRESC_PRESCALER_Shift
40005000 l       *ABS*	00000000 UART5_BASE
40005000 l       *ABS*	00000000 UART5_CR1
80000000 l       *ABS*	00000000 UART5_CR1_RXFFIE
40000000 l       *ABS*	00000000 UART5_CR1_TXFEIE
20000000 l       *ABS*	00000000 UART5_CR1_FIFOEN
10000000 l       *ABS*	00000000 UART5_CR1_M1
08000000 l       *ABS*	00000000 UART5_CR1_EOBIE
04000000 l       *ABS*	00000000 UART5_CR1_RTOIE
02000000 l       *ABS*	00000000 UART5_CR1_DEAT4
01000000 l       *ABS*	00000000 UART5_CR1_DEAT3
00800000 l       *ABS*	00000000 UART5_CR1_DEAT2
00400000 l       *ABS*	00000000 UART5_CR1_DEAT1
00200000 l       *ABS*	00000000 UART5_CR1_DEAT0
00100000 l       *ABS*	00000000 UART5_CR1_DEDT4
00080000 l       *ABS*	00000000 UART5_CR1_DEDT3
00040000 l       *ABS*	00000000 UART5_CR1_DEDT2
00020000 l       *ABS*	00000000 UART5_CR1_DEDT1
00010000 l       *ABS*	00000000 UART5_CR1_DEDT0
00008000 l       *ABS*	00000000 UART5_CR1_OVER8
00004000 l       *ABS*	00000000 UART5_CR1_CMIE
00002000 l       *ABS*	00000000 UART5_CR1_MME
00001000 l       *ABS*	00000000 UART5_CR1_M0
00000800 l       *ABS*	00000000 UART5_CR1_WAKE
00000400 l       *ABS*	00000000 UART5_CR1_PCE
00000200 l       *ABS*	00000000 UART5_CR1_PS
00000100 l       *ABS*	00000000 UART5_CR1_PEIE
00000080 l       *ABS*	00000000 UART5_CR1_TXEIE
00000040 l       *ABS*	00000000 UART5_CR1_TCIE
00000020 l       *ABS*	00000000 UART5_CR1_RXNEIE
00000010 l       *ABS*	00000000 UART5_CR1_IDLEIE
00000008 l       *ABS*	00000000 UART5_CR1_TE
00000004 l       *ABS*	00000000 UART5_CR1_RE
00000002 l       *ABS*	00000000 UART5_CR1_UESM
00000001 l       *ABS*	00000000 UART5_CR1_UE
40005004 l       *ABS*	00000000 UART5_CR2
0000001c l       *ABS*	00000000 UART5_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 UART5_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 UART5_CR2_RTOEN
00400000 l       *ABS*	00000000 UART5_CR2_ABRMOD1
00200000 l       *ABS*	00000000 UART5_CR2_ABRMOD0
00100000 l       *ABS*	00000000 UART5_CR2_ABREN
00080000 l       *ABS*	00000000 UART5_CR2_MSBFIRST
00040000 l       *ABS*	00000000 UART5_CR2_TAINV
00020000 l       *ABS*	00000000 UART5_CR2_TXINV
00010000 l       *ABS*	00000000 UART5_CR2_RXINV
00008000 l       *ABS*	00000000 UART5_CR2_SWAP
00004000 l       *ABS*	00000000 UART5_CR2_LINEN
0000000c l       *ABS*	00000000 UART5_CR2_STOP_Shift
00000800 l       *ABS*	00000000 UART5_CR2_CLKEN
00000400 l       *ABS*	00000000 UART5_CR2_CPOL
00000200 l       *ABS*	00000000 UART5_CR2_CPHA
00000100 l       *ABS*	00000000 UART5_CR2_LBCL
00000040 l       *ABS*	00000000 UART5_CR2_LBDIE
00000020 l       *ABS*	00000000 UART5_CR2_LBDL
00000010 l       *ABS*	00000000 UART5_CR2_ADDM7
00000008 l       *ABS*	00000000 UART5_CR2_DIS_NSS
00000001 l       *ABS*	00000000 UART5_CR2_SLVEN
40005008 l       *ABS*	00000000 UART5_CR3
0000001d l       *ABS*	00000000 UART5_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 UART5_CR3_RXFTIE
00000019 l       *ABS*	00000000 UART5_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 UART5_CR3_TCBGTIE
00800000 l       *ABS*	00000000 UART5_CR3_TXFTIE
00400000 l       *ABS*	00000000 UART5_CR3_WUFIE
00000014 l       *ABS*	00000000 UART5_CR3_WUS_Shift
00000011 l       *ABS*	00000000 UART5_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 UART5_CR3_DEP
00004000 l       *ABS*	00000000 UART5_CR3_DEM
00002000 l       *ABS*	00000000 UART5_CR3_DDRE
00001000 l       *ABS*	00000000 UART5_CR3_OVRDIS
00000800 l       *ABS*	00000000 UART5_CR3_ONEBIT
00000400 l       *ABS*	00000000 UART5_CR3_CTSIE
00000200 l       *ABS*	00000000 UART5_CR3_CTSE
00000100 l       *ABS*	00000000 UART5_CR3_RTSE
00000080 l       *ABS*	00000000 UART5_CR3_DMAT
00000040 l       *ABS*	00000000 UART5_CR3_DMAR
00000020 l       *ABS*	00000000 UART5_CR3_SCEN
00000010 l       *ABS*	00000000 UART5_CR3_NACK
00000008 l       *ABS*	00000000 UART5_CR3_HDSEL
00000004 l       *ABS*	00000000 UART5_CR3_IRLP
00000002 l       *ABS*	00000000 UART5_CR3_IREN
00000001 l       *ABS*	00000000 UART5_CR3_EIE
4000500c l       *ABS*	00000000 UART5_BRR
00000004 l       *ABS*	00000000 UART5_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 UART5_BRR_BRR_0_3_Shift
40005010 l       *ABS*	00000000 UART5_GTPR
00000008 l       *ABS*	00000000 UART5_GTPR_GT_Shift
00000000 l       *ABS*	00000000 UART5_GTPR_PSC_Shift
40005014 l       *ABS*	00000000 UART5_RTOR
00000018 l       *ABS*	00000000 UART5_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 UART5_RTOR_RTO_Shift
40005018 l       *ABS*	00000000 UART5_RQR
00000010 l       *ABS*	00000000 UART5_RQR_TXFRQ
00000008 l       *ABS*	00000000 UART5_RQR_RXFRQ
00000004 l       *ABS*	00000000 UART5_RQR_MMRQ
00000002 l       *ABS*	00000000 UART5_RQR_SBKRQ
00000001 l       *ABS*	00000000 UART5_RQR_ABRRQ
4000501c l       *ABS*	00000000 UART5_ISR
08000000 l       *ABS*	00000000 UART5_ISR_TXFT
04000000 l       *ABS*	00000000 UART5_ISR_RXFT
02000000 l       *ABS*	00000000 UART5_ISR_TCBGT
01000000 l       *ABS*	00000000 UART5_ISR_RXFF
00800000 l       *ABS*	00000000 UART5_ISR_TXFE
00400000 l       *ABS*	00000000 UART5_ISR_REACK
00200000 l       *ABS*	00000000 UART5_ISR_TEACK
00100000 l       *ABS*	00000000 UART5_ISR_WUF
00080000 l       *ABS*	00000000 UART5_ISR_RWU
00040000 l       *ABS*	00000000 UART5_ISR_SBKF
00020000 l       *ABS*	00000000 UART5_ISR_CMF
00010000 l       *ABS*	00000000 UART5_ISR_BUSY
00008000 l       *ABS*	00000000 UART5_ISR_ABRF
00004000 l       *ABS*	00000000 UART5_ISR_ABRE
00002000 l       *ABS*	00000000 UART5_ISR_UDR
00001000 l       *ABS*	00000000 UART5_ISR_EOBF
00000800 l       *ABS*	00000000 UART5_ISR_RTOF
00000400 l       *ABS*	00000000 UART5_ISR_CTS
00000200 l       *ABS*	00000000 UART5_ISR_CTSIF
00000100 l       *ABS*	00000000 UART5_ISR_LBDF
00000080 l       *ABS*	00000000 UART5_ISR_TXE
00000040 l       *ABS*	00000000 UART5_ISR_TC
00000020 l       *ABS*	00000000 UART5_ISR_RXNE
00000010 l       *ABS*	00000000 UART5_ISR_IDLE
00000008 l       *ABS*	00000000 UART5_ISR_ORE
00000004 l       *ABS*	00000000 UART5_ISR_NF
00000002 l       *ABS*	00000000 UART5_ISR_FE
00000001 l       *ABS*	00000000 UART5_ISR_PE
40005020 l       *ABS*	00000000 UART5_ICR
00100000 l       *ABS*	00000000 UART5_ICR_WUCF
00020000 l       *ABS*	00000000 UART5_ICR_CMCF
00002000 l       *ABS*	00000000 UART5_ICR_UDRCF
00001000 l       *ABS*	00000000 UART5_ICR_EOBCF
00000800 l       *ABS*	00000000 UART5_ICR_RTOCF
00000200 l       *ABS*	00000000 UART5_ICR_CTSCF
00000100 l       *ABS*	00000000 UART5_ICR_LBDCF
00000080 l       *ABS*	00000000 UART5_ICR_TCBGTC
00000040 l       *ABS*	00000000 UART5_ICR_TCCF
00000020 l       *ABS*	00000000 UART5_ICR_TXFECF
00000010 l       *ABS*	00000000 UART5_ICR_IDLECF
00000008 l       *ABS*	00000000 UART5_ICR_ORECF
00000004 l       *ABS*	00000000 UART5_ICR_NCF
00000002 l       *ABS*	00000000 UART5_ICR_FECF
00000001 l       *ABS*	00000000 UART5_ICR_PECF
40005024 l       *ABS*	00000000 UART5_RDR
00000000 l       *ABS*	00000000 UART5_RDR_RDR_Shift
40005028 l       *ABS*	00000000 UART5_TDR
00000000 l       *ABS*	00000000 UART5_TDR_TDR_Shift
4000502c l       *ABS*	00000000 UART5_PRESC
00000000 l       *ABS*	00000000 UART5_PRESC_PRESCALER_Shift
40011400 l       *ABS*	00000000 USART6_BASE
40011400 l       *ABS*	00000000 USART6_CR1
80000000 l       *ABS*	00000000 USART6_CR1_RXFFIE
40000000 l       *ABS*	00000000 USART6_CR1_TXFEIE
20000000 l       *ABS*	00000000 USART6_CR1_FIFOEN
10000000 l       *ABS*	00000000 USART6_CR1_M1
08000000 l       *ABS*	00000000 USART6_CR1_EOBIE
04000000 l       *ABS*	00000000 USART6_CR1_RTOIE
02000000 l       *ABS*	00000000 USART6_CR1_DEAT4
01000000 l       *ABS*	00000000 USART6_CR1_DEAT3
00800000 l       *ABS*	00000000 USART6_CR1_DEAT2
00400000 l       *ABS*	00000000 USART6_CR1_DEAT1
00200000 l       *ABS*	00000000 USART6_CR1_DEAT0
00100000 l       *ABS*	00000000 USART6_CR1_DEDT4
00080000 l       *ABS*	00000000 USART6_CR1_DEDT3
00040000 l       *ABS*	00000000 USART6_CR1_DEDT2
00020000 l       *ABS*	00000000 USART6_CR1_DEDT1
00010000 l       *ABS*	00000000 USART6_CR1_DEDT0
00008000 l       *ABS*	00000000 USART6_CR1_OVER8
00004000 l       *ABS*	00000000 USART6_CR1_CMIE
00002000 l       *ABS*	00000000 USART6_CR1_MME
00001000 l       *ABS*	00000000 USART6_CR1_M0
00000800 l       *ABS*	00000000 USART6_CR1_WAKE
00000400 l       *ABS*	00000000 USART6_CR1_PCE
00000200 l       *ABS*	00000000 USART6_CR1_PS
00000100 l       *ABS*	00000000 USART6_CR1_PEIE
00000080 l       *ABS*	00000000 USART6_CR1_TXEIE
00000040 l       *ABS*	00000000 USART6_CR1_TCIE
00000020 l       *ABS*	00000000 USART6_CR1_RXNEIE
00000010 l       *ABS*	00000000 USART6_CR1_IDLEIE
00000008 l       *ABS*	00000000 USART6_CR1_TE
00000004 l       *ABS*	00000000 USART6_CR1_RE
00000002 l       *ABS*	00000000 USART6_CR1_UESM
00000001 l       *ABS*	00000000 USART6_CR1_UE
40011404 l       *ABS*	00000000 USART6_CR2
0000001c l       *ABS*	00000000 USART6_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 USART6_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 USART6_CR2_RTOEN
00400000 l       *ABS*	00000000 USART6_CR2_ABRMOD1
00200000 l       *ABS*	00000000 USART6_CR2_ABRMOD0
00100000 l       *ABS*	00000000 USART6_CR2_ABREN
00080000 l       *ABS*	00000000 USART6_CR2_MSBFIRST
00040000 l       *ABS*	00000000 USART6_CR2_TAINV
00020000 l       *ABS*	00000000 USART6_CR2_TXINV
00010000 l       *ABS*	00000000 USART6_CR2_RXINV
00008000 l       *ABS*	00000000 USART6_CR2_SWAP
00004000 l       *ABS*	00000000 USART6_CR2_LINEN
0000000c l       *ABS*	00000000 USART6_CR2_STOP_Shift
00000800 l       *ABS*	00000000 USART6_CR2_CLKEN
00000400 l       *ABS*	00000000 USART6_CR2_CPOL
00000200 l       *ABS*	00000000 USART6_CR2_CPHA
00000100 l       *ABS*	00000000 USART6_CR2_LBCL
00000040 l       *ABS*	00000000 USART6_CR2_LBDIE
00000020 l       *ABS*	00000000 USART6_CR2_LBDL
00000010 l       *ABS*	00000000 USART6_CR2_ADDM7
00000008 l       *ABS*	00000000 USART6_CR2_DIS_NSS
00000001 l       *ABS*	00000000 USART6_CR2_SLVEN
40011408 l       *ABS*	00000000 USART6_CR3
0000001d l       *ABS*	00000000 USART6_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 USART6_CR3_RXFTIE
00000019 l       *ABS*	00000000 USART6_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 USART6_CR3_TCBGTIE
00800000 l       *ABS*	00000000 USART6_CR3_TXFTIE
00400000 l       *ABS*	00000000 USART6_CR3_WUFIE
00000014 l       *ABS*	00000000 USART6_CR3_WUS_Shift
00000011 l       *ABS*	00000000 USART6_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 USART6_CR3_DEP
00004000 l       *ABS*	00000000 USART6_CR3_DEM
00002000 l       *ABS*	00000000 USART6_CR3_DDRE
00001000 l       *ABS*	00000000 USART6_CR3_OVRDIS
00000800 l       *ABS*	00000000 USART6_CR3_ONEBIT
00000400 l       *ABS*	00000000 USART6_CR3_CTSIE
00000200 l       *ABS*	00000000 USART6_CR3_CTSE
00000100 l       *ABS*	00000000 USART6_CR3_RTSE
00000080 l       *ABS*	00000000 USART6_CR3_DMAT
00000040 l       *ABS*	00000000 USART6_CR3_DMAR
00000020 l       *ABS*	00000000 USART6_CR3_SCEN
00000010 l       *ABS*	00000000 USART6_CR3_NACK
00000008 l       *ABS*	00000000 USART6_CR3_HDSEL
00000004 l       *ABS*	00000000 USART6_CR3_IRLP
00000002 l       *ABS*	00000000 USART6_CR3_IREN
00000001 l       *ABS*	00000000 USART6_CR3_EIE
4001140c l       *ABS*	00000000 USART6_BRR
00000004 l       *ABS*	00000000 USART6_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 USART6_BRR_BRR_0_3_Shift
40011410 l       *ABS*	00000000 USART6_GTPR
00000008 l       *ABS*	00000000 USART6_GTPR_GT_Shift
00000000 l       *ABS*	00000000 USART6_GTPR_PSC_Shift
40011414 l       *ABS*	00000000 USART6_RTOR
00000018 l       *ABS*	00000000 USART6_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 USART6_RTOR_RTO_Shift
40011418 l       *ABS*	00000000 USART6_RQR
00000010 l       *ABS*	00000000 USART6_RQR_TXFRQ
00000008 l       *ABS*	00000000 USART6_RQR_RXFRQ
00000004 l       *ABS*	00000000 USART6_RQR_MMRQ
00000002 l       *ABS*	00000000 USART6_RQR_SBKRQ
00000001 l       *ABS*	00000000 USART6_RQR_ABRRQ
4001141c l       *ABS*	00000000 USART6_ISR
08000000 l       *ABS*	00000000 USART6_ISR_TXFT
04000000 l       *ABS*	00000000 USART6_ISR_RXFT
02000000 l       *ABS*	00000000 USART6_ISR_TCBGT
01000000 l       *ABS*	00000000 USART6_ISR_RXFF
00800000 l       *ABS*	00000000 USART6_ISR_TXFE
00400000 l       *ABS*	00000000 USART6_ISR_REACK
00200000 l       *ABS*	00000000 USART6_ISR_TEACK
00100000 l       *ABS*	00000000 USART6_ISR_WUF
00080000 l       *ABS*	00000000 USART6_ISR_RWU
00040000 l       *ABS*	00000000 USART6_ISR_SBKF
00020000 l       *ABS*	00000000 USART6_ISR_CMF
00010000 l       *ABS*	00000000 USART6_ISR_BUSY
00008000 l       *ABS*	00000000 USART6_ISR_ABRF
00004000 l       *ABS*	00000000 USART6_ISR_ABRE
00002000 l       *ABS*	00000000 USART6_ISR_UDR
00001000 l       *ABS*	00000000 USART6_ISR_EOBF
00000800 l       *ABS*	00000000 USART6_ISR_RTOF
00000400 l       *ABS*	00000000 USART6_ISR_CTS
00000200 l       *ABS*	00000000 USART6_ISR_CTSIF
00000100 l       *ABS*	00000000 USART6_ISR_LBDF
00000080 l       *ABS*	00000000 USART6_ISR_TXE
00000040 l       *ABS*	00000000 USART6_ISR_TC
00000020 l       *ABS*	00000000 USART6_ISR_RXNE
00000010 l       *ABS*	00000000 USART6_ISR_IDLE
00000008 l       *ABS*	00000000 USART6_ISR_ORE
00000004 l       *ABS*	00000000 USART6_ISR_NF
00000002 l       *ABS*	00000000 USART6_ISR_FE
00000001 l       *ABS*	00000000 USART6_ISR_PE
40011420 l       *ABS*	00000000 USART6_ICR
00100000 l       *ABS*	00000000 USART6_ICR_WUCF
00020000 l       *ABS*	00000000 USART6_ICR_CMCF
00002000 l       *ABS*	00000000 USART6_ICR_UDRCF
00001000 l       *ABS*	00000000 USART6_ICR_EOBCF
00000800 l       *ABS*	00000000 USART6_ICR_RTOCF
00000200 l       *ABS*	00000000 USART6_ICR_CTSCF
00000100 l       *ABS*	00000000 USART6_ICR_LBDCF
00000080 l       *ABS*	00000000 USART6_ICR_TCBGTC
00000040 l       *ABS*	00000000 USART6_ICR_TCCF
00000020 l       *ABS*	00000000 USART6_ICR_TXFECF
00000010 l       *ABS*	00000000 USART6_ICR_IDLECF
00000008 l       *ABS*	00000000 USART6_ICR_ORECF
00000004 l       *ABS*	00000000 USART6_ICR_NCF
00000002 l       *ABS*	00000000 USART6_ICR_FECF
00000001 l       *ABS*	00000000 USART6_ICR_PECF
40011424 l       *ABS*	00000000 USART6_RDR
00000000 l       *ABS*	00000000 USART6_RDR_RDR_Shift
40011428 l       *ABS*	00000000 USART6_TDR
00000000 l       *ABS*	00000000 USART6_TDR_TDR_Shift
4001142c l       *ABS*	00000000 USART6_PRESC
00000000 l       *ABS*	00000000 USART6_PRESC_PRESCALER_Shift
40007800 l       *ABS*	00000000 UART7_BASE
40007800 l       *ABS*	00000000 UART7_CR1
80000000 l       *ABS*	00000000 UART7_CR1_RXFFIE
40000000 l       *ABS*	00000000 UART7_CR1_TXFEIE
20000000 l       *ABS*	00000000 UART7_CR1_FIFOEN
10000000 l       *ABS*	00000000 UART7_CR1_M1
08000000 l       *ABS*	00000000 UART7_CR1_EOBIE
04000000 l       *ABS*	00000000 UART7_CR1_RTOIE
02000000 l       *ABS*	00000000 UART7_CR1_DEAT4
01000000 l       *ABS*	00000000 UART7_CR1_DEAT3
00800000 l       *ABS*	00000000 UART7_CR1_DEAT2
00400000 l       *ABS*	00000000 UART7_CR1_DEAT1
00200000 l       *ABS*	00000000 UART7_CR1_DEAT0
00100000 l       *ABS*	00000000 UART7_CR1_DEDT4
00080000 l       *ABS*	00000000 UART7_CR1_DEDT3
00040000 l       *ABS*	00000000 UART7_CR1_DEDT2
00020000 l       *ABS*	00000000 UART7_CR1_DEDT1
00010000 l       *ABS*	00000000 UART7_CR1_DEDT0
00008000 l       *ABS*	00000000 UART7_CR1_OVER8
00004000 l       *ABS*	00000000 UART7_CR1_CMIE
00002000 l       *ABS*	00000000 UART7_CR1_MME
00001000 l       *ABS*	00000000 UART7_CR1_M0
00000800 l       *ABS*	00000000 UART7_CR1_WAKE
00000400 l       *ABS*	00000000 UART7_CR1_PCE
00000200 l       *ABS*	00000000 UART7_CR1_PS
00000100 l       *ABS*	00000000 UART7_CR1_PEIE
00000080 l       *ABS*	00000000 UART7_CR1_TXEIE
00000040 l       *ABS*	00000000 UART7_CR1_TCIE
00000020 l       *ABS*	00000000 UART7_CR1_RXNEIE
00000010 l       *ABS*	00000000 UART7_CR1_IDLEIE
00000008 l       *ABS*	00000000 UART7_CR1_TE
00000004 l       *ABS*	00000000 UART7_CR1_RE
00000002 l       *ABS*	00000000 UART7_CR1_UESM
00000001 l       *ABS*	00000000 UART7_CR1_UE
40007804 l       *ABS*	00000000 UART7_CR2
0000001c l       *ABS*	00000000 UART7_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 UART7_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 UART7_CR2_RTOEN
00400000 l       *ABS*	00000000 UART7_CR2_ABRMOD1
00200000 l       *ABS*	00000000 UART7_CR2_ABRMOD0
00100000 l       *ABS*	00000000 UART7_CR2_ABREN
00080000 l       *ABS*	00000000 UART7_CR2_MSBFIRST
00040000 l       *ABS*	00000000 UART7_CR2_TAINV
00020000 l       *ABS*	00000000 UART7_CR2_TXINV
00010000 l       *ABS*	00000000 UART7_CR2_RXINV
00008000 l       *ABS*	00000000 UART7_CR2_SWAP
00004000 l       *ABS*	00000000 UART7_CR2_LINEN
0000000c l       *ABS*	00000000 UART7_CR2_STOP_Shift
00000800 l       *ABS*	00000000 UART7_CR2_CLKEN
00000400 l       *ABS*	00000000 UART7_CR2_CPOL
00000200 l       *ABS*	00000000 UART7_CR2_CPHA
00000100 l       *ABS*	00000000 UART7_CR2_LBCL
00000040 l       *ABS*	00000000 UART7_CR2_LBDIE
00000020 l       *ABS*	00000000 UART7_CR2_LBDL
00000010 l       *ABS*	00000000 UART7_CR2_ADDM7
00000008 l       *ABS*	00000000 UART7_CR2_DIS_NSS
00000001 l       *ABS*	00000000 UART7_CR2_SLVEN
40007808 l       *ABS*	00000000 UART7_CR3
0000001d l       *ABS*	00000000 UART7_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 UART7_CR3_RXFTIE
00000019 l       *ABS*	00000000 UART7_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 UART7_CR3_TCBGTIE
00800000 l       *ABS*	00000000 UART7_CR3_TXFTIE
00400000 l       *ABS*	00000000 UART7_CR3_WUFIE
00000014 l       *ABS*	00000000 UART7_CR3_WUS_Shift
00000011 l       *ABS*	00000000 UART7_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 UART7_CR3_DEP
00004000 l       *ABS*	00000000 UART7_CR3_DEM
00002000 l       *ABS*	00000000 UART7_CR3_DDRE
00001000 l       *ABS*	00000000 UART7_CR3_OVRDIS
00000800 l       *ABS*	00000000 UART7_CR3_ONEBIT
00000400 l       *ABS*	00000000 UART7_CR3_CTSIE
00000200 l       *ABS*	00000000 UART7_CR3_CTSE
00000100 l       *ABS*	00000000 UART7_CR3_RTSE
00000080 l       *ABS*	00000000 UART7_CR3_DMAT
00000040 l       *ABS*	00000000 UART7_CR3_DMAR
00000020 l       *ABS*	00000000 UART7_CR3_SCEN
00000010 l       *ABS*	00000000 UART7_CR3_NACK
00000008 l       *ABS*	00000000 UART7_CR3_HDSEL
00000004 l       *ABS*	00000000 UART7_CR3_IRLP
00000002 l       *ABS*	00000000 UART7_CR3_IREN
00000001 l       *ABS*	00000000 UART7_CR3_EIE
4000780c l       *ABS*	00000000 UART7_BRR
00000004 l       *ABS*	00000000 UART7_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 UART7_BRR_BRR_0_3_Shift
40007810 l       *ABS*	00000000 UART7_GTPR
00000008 l       *ABS*	00000000 UART7_GTPR_GT_Shift
00000000 l       *ABS*	00000000 UART7_GTPR_PSC_Shift
40007814 l       *ABS*	00000000 UART7_RTOR
00000018 l       *ABS*	00000000 UART7_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 UART7_RTOR_RTO_Shift
40007818 l       *ABS*	00000000 UART7_RQR
00000010 l       *ABS*	00000000 UART7_RQR_TXFRQ
00000008 l       *ABS*	00000000 UART7_RQR_RXFRQ
00000004 l       *ABS*	00000000 UART7_RQR_MMRQ
00000002 l       *ABS*	00000000 UART7_RQR_SBKRQ
00000001 l       *ABS*	00000000 UART7_RQR_ABRRQ
4000781c l       *ABS*	00000000 UART7_ISR
08000000 l       *ABS*	00000000 UART7_ISR_TXFT
04000000 l       *ABS*	00000000 UART7_ISR_RXFT
02000000 l       *ABS*	00000000 UART7_ISR_TCBGT
01000000 l       *ABS*	00000000 UART7_ISR_RXFF
00800000 l       *ABS*	00000000 UART7_ISR_TXFE
00400000 l       *ABS*	00000000 UART7_ISR_REACK
00200000 l       *ABS*	00000000 UART7_ISR_TEACK
00100000 l       *ABS*	00000000 UART7_ISR_WUF
00080000 l       *ABS*	00000000 UART7_ISR_RWU
00040000 l       *ABS*	00000000 UART7_ISR_SBKF
00020000 l       *ABS*	00000000 UART7_ISR_CMF
00010000 l       *ABS*	00000000 UART7_ISR_BUSY
00008000 l       *ABS*	00000000 UART7_ISR_ABRF
00004000 l       *ABS*	00000000 UART7_ISR_ABRE
00002000 l       *ABS*	00000000 UART7_ISR_UDR
00001000 l       *ABS*	00000000 UART7_ISR_EOBF
00000800 l       *ABS*	00000000 UART7_ISR_RTOF
00000400 l       *ABS*	00000000 UART7_ISR_CTS
00000200 l       *ABS*	00000000 UART7_ISR_CTSIF
00000100 l       *ABS*	00000000 UART7_ISR_LBDF
00000080 l       *ABS*	00000000 UART7_ISR_TXE
00000040 l       *ABS*	00000000 UART7_ISR_TC
00000020 l       *ABS*	00000000 UART7_ISR_RXNE
00000010 l       *ABS*	00000000 UART7_ISR_IDLE
00000008 l       *ABS*	00000000 UART7_ISR_ORE
00000004 l       *ABS*	00000000 UART7_ISR_NF
00000002 l       *ABS*	00000000 UART7_ISR_FE
00000001 l       *ABS*	00000000 UART7_ISR_PE
40007820 l       *ABS*	00000000 UART7_ICR
00100000 l       *ABS*	00000000 UART7_ICR_WUCF
00020000 l       *ABS*	00000000 UART7_ICR_CMCF
00002000 l       *ABS*	00000000 UART7_ICR_UDRCF
00001000 l       *ABS*	00000000 UART7_ICR_EOBCF
00000800 l       *ABS*	00000000 UART7_ICR_RTOCF
00000200 l       *ABS*	00000000 UART7_ICR_CTSCF
00000100 l       *ABS*	00000000 UART7_ICR_LBDCF
00000080 l       *ABS*	00000000 UART7_ICR_TCBGTC
00000040 l       *ABS*	00000000 UART7_ICR_TCCF
00000020 l       *ABS*	00000000 UART7_ICR_TXFECF
00000010 l       *ABS*	00000000 UART7_ICR_IDLECF
00000008 l       *ABS*	00000000 UART7_ICR_ORECF
00000004 l       *ABS*	00000000 UART7_ICR_NCF
00000002 l       *ABS*	00000000 UART7_ICR_FECF
00000001 l       *ABS*	00000000 UART7_ICR_PECF
40007824 l       *ABS*	00000000 UART7_RDR
00000000 l       *ABS*	00000000 UART7_RDR_RDR_Shift
40007828 l       *ABS*	00000000 UART7_TDR
00000000 l       *ABS*	00000000 UART7_TDR_TDR_Shift
4000782c l       *ABS*	00000000 UART7_PRESC
00000000 l       *ABS*	00000000 UART7_PRESC_PRESCALER_Shift
40007c00 l       *ABS*	00000000 UART8_BASE
40007c00 l       *ABS*	00000000 UART8_CR1
80000000 l       *ABS*	00000000 UART8_CR1_RXFFIE
40000000 l       *ABS*	00000000 UART8_CR1_TXFEIE
20000000 l       *ABS*	00000000 UART8_CR1_FIFOEN
10000000 l       *ABS*	00000000 UART8_CR1_M1
08000000 l       *ABS*	00000000 UART8_CR1_EOBIE
04000000 l       *ABS*	00000000 UART8_CR1_RTOIE
02000000 l       *ABS*	00000000 UART8_CR1_DEAT4
01000000 l       *ABS*	00000000 UART8_CR1_DEAT3
00800000 l       *ABS*	00000000 UART8_CR1_DEAT2
00400000 l       *ABS*	00000000 UART8_CR1_DEAT1
00200000 l       *ABS*	00000000 UART8_CR1_DEAT0
00100000 l       *ABS*	00000000 UART8_CR1_DEDT4
00080000 l       *ABS*	00000000 UART8_CR1_DEDT3
00040000 l       *ABS*	00000000 UART8_CR1_DEDT2
00020000 l       *ABS*	00000000 UART8_CR1_DEDT1
00010000 l       *ABS*	00000000 UART8_CR1_DEDT0
00008000 l       *ABS*	00000000 UART8_CR1_OVER8
00004000 l       *ABS*	00000000 UART8_CR1_CMIE
00002000 l       *ABS*	00000000 UART8_CR1_MME
00001000 l       *ABS*	00000000 UART8_CR1_M0
00000800 l       *ABS*	00000000 UART8_CR1_WAKE
00000400 l       *ABS*	00000000 UART8_CR1_PCE
00000200 l       *ABS*	00000000 UART8_CR1_PS
00000100 l       *ABS*	00000000 UART8_CR1_PEIE
00000080 l       *ABS*	00000000 UART8_CR1_TXEIE
00000040 l       *ABS*	00000000 UART8_CR1_TCIE
00000020 l       *ABS*	00000000 UART8_CR1_RXNEIE
00000010 l       *ABS*	00000000 UART8_CR1_IDLEIE
00000008 l       *ABS*	00000000 UART8_CR1_TE
00000004 l       *ABS*	00000000 UART8_CR1_RE
00000002 l       *ABS*	00000000 UART8_CR1_UESM
00000001 l       *ABS*	00000000 UART8_CR1_UE
40007c04 l       *ABS*	00000000 UART8_CR2
0000001c l       *ABS*	00000000 UART8_CR2_ADD4_7_Shift
00000018 l       *ABS*	00000000 UART8_CR2_ADD0_3_Shift
00800000 l       *ABS*	00000000 UART8_CR2_RTOEN
00400000 l       *ABS*	00000000 UART8_CR2_ABRMOD1
00200000 l       *ABS*	00000000 UART8_CR2_ABRMOD0
00100000 l       *ABS*	00000000 UART8_CR2_ABREN
00080000 l       *ABS*	00000000 UART8_CR2_MSBFIRST
00040000 l       *ABS*	00000000 UART8_CR2_TAINV
00020000 l       *ABS*	00000000 UART8_CR2_TXINV
00010000 l       *ABS*	00000000 UART8_CR2_RXINV
00008000 l       *ABS*	00000000 UART8_CR2_SWAP
00004000 l       *ABS*	00000000 UART8_CR2_LINEN
0000000c l       *ABS*	00000000 UART8_CR2_STOP_Shift
00000800 l       *ABS*	00000000 UART8_CR2_CLKEN
00000400 l       *ABS*	00000000 UART8_CR2_CPOL
00000200 l       *ABS*	00000000 UART8_CR2_CPHA
00000100 l       *ABS*	00000000 UART8_CR2_LBCL
00000040 l       *ABS*	00000000 UART8_CR2_LBDIE
00000020 l       *ABS*	00000000 UART8_CR2_LBDL
00000010 l       *ABS*	00000000 UART8_CR2_ADDM7
00000008 l       *ABS*	00000000 UART8_CR2_DIS_NSS
00000001 l       *ABS*	00000000 UART8_CR2_SLVEN
40007c08 l       *ABS*	00000000 UART8_CR3
0000001d l       *ABS*	00000000 UART8_CR3_TXFTCFG_Shift
10000000 l       *ABS*	00000000 UART8_CR3_RXFTIE
00000019 l       *ABS*	00000000 UART8_CR3_RXFTCFG_Shift
01000000 l       *ABS*	00000000 UART8_CR3_TCBGTIE
00800000 l       *ABS*	00000000 UART8_CR3_TXFTIE
00400000 l       *ABS*	00000000 UART8_CR3_WUFIE
00000014 l       *ABS*	00000000 UART8_CR3_WUS_Shift
00000011 l       *ABS*	00000000 UART8_CR3_SCARCNT_Shift
00008000 l       *ABS*	00000000 UART8_CR3_DEP
00004000 l       *ABS*	00000000 UART8_CR3_DEM
00002000 l       *ABS*	00000000 UART8_CR3_DDRE
00001000 l       *ABS*	00000000 UART8_CR3_OVRDIS
00000800 l       *ABS*	00000000 UART8_CR3_ONEBIT
00000400 l       *ABS*	00000000 UART8_CR3_CTSIE
00000200 l       *ABS*	00000000 UART8_CR3_CTSE
00000100 l       *ABS*	00000000 UART8_CR3_RTSE
00000080 l       *ABS*	00000000 UART8_CR3_DMAT
00000040 l       *ABS*	00000000 UART8_CR3_DMAR
00000020 l       *ABS*	00000000 UART8_CR3_SCEN
00000010 l       *ABS*	00000000 UART8_CR3_NACK
00000008 l       *ABS*	00000000 UART8_CR3_HDSEL
00000004 l       *ABS*	00000000 UART8_CR3_IRLP
00000002 l       *ABS*	00000000 UART8_CR3_IREN
00000001 l       *ABS*	00000000 UART8_CR3_EIE
40007c0c l       *ABS*	00000000 UART8_BRR
00000004 l       *ABS*	00000000 UART8_BRR_BRR_4_15_Shift
00000000 l       *ABS*	00000000 UART8_BRR_BRR_0_3_Shift
40007c10 l       *ABS*	00000000 UART8_GTPR
00000008 l       *ABS*	00000000 UART8_GTPR_GT_Shift
00000000 l       *ABS*	00000000 UART8_GTPR_PSC_Shift
40007c14 l       *ABS*	00000000 UART8_RTOR
00000018 l       *ABS*	00000000 UART8_RTOR_BLEN_Shift
00000000 l       *ABS*	00000000 UART8_RTOR_RTO_Shift
40007c18 l       *ABS*	00000000 UART8_RQR
00000010 l       *ABS*	00000000 UART8_RQR_TXFRQ
00000008 l       *ABS*	00000000 UART8_RQR_RXFRQ
00000004 l       *ABS*	00000000 UART8_RQR_MMRQ
00000002 l       *ABS*	00000000 UART8_RQR_SBKRQ
00000001 l       *ABS*	00000000 UART8_RQR_ABRRQ
40007c1c l       *ABS*	00000000 UART8_ISR
08000000 l       *ABS*	00000000 UART8_ISR_TXFT
04000000 l       *ABS*	00000000 UART8_ISR_RXFT
02000000 l       *ABS*	00000000 UART8_ISR_TCBGT
01000000 l       *ABS*	00000000 UART8_ISR_RXFF
00800000 l       *ABS*	00000000 UART8_ISR_TXFE
00400000 l       *ABS*	00000000 UART8_ISR_REACK
00200000 l       *ABS*	00000000 UART8_ISR_TEACK
00100000 l       *ABS*	00000000 UART8_ISR_WUF
00080000 l       *ABS*	00000000 UART8_ISR_RWU
00040000 l       *ABS*	00000000 UART8_ISR_SBKF
00020000 l       *ABS*	00000000 UART8_ISR_CMF
00010000 l       *ABS*	00000000 UART8_ISR_BUSY
00008000 l       *ABS*	00000000 UART8_ISR_ABRF
00004000 l       *ABS*	00000000 UART8_ISR_ABRE
00002000 l       *ABS*	00000000 UART8_ISR_UDR
00001000 l       *ABS*	00000000 UART8_ISR_EOBF
00000800 l       *ABS*	00000000 UART8_ISR_RTOF
00000400 l       *ABS*	00000000 UART8_ISR_CTS
00000200 l       *ABS*	00000000 UART8_ISR_CTSIF
00000100 l       *ABS*	00000000 UART8_ISR_LBDF
00000080 l       *ABS*	00000000 UART8_ISR_TXE
00000040 l       *ABS*	00000000 UART8_ISR_TC
00000020 l       *ABS*	00000000 UART8_ISR_RXNE
00000010 l       *ABS*	00000000 UART8_ISR_IDLE
00000008 l       *ABS*	00000000 UART8_ISR_ORE
00000004 l       *ABS*	00000000 UART8_ISR_NF
00000002 l       *ABS*	00000000 UART8_ISR_FE
00000001 l       *ABS*	00000000 UART8_ISR_PE
40007c20 l       *ABS*	00000000 UART8_ICR
00100000 l       *ABS*	00000000 UART8_ICR_WUCF
00020000 l       *ABS*	00000000 UART8_ICR_CMCF
00002000 l       *ABS*	00000000 UART8_ICR_UDRCF
00001000 l       *ABS*	00000000 UART8_ICR_EOBCF
00000800 l       *ABS*	00000000 UART8_ICR_RTOCF
00000200 l       *ABS*	00000000 UART8_ICR_CTSCF
00000100 l       *ABS*	00000000 UART8_ICR_LBDCF
00000080 l       *ABS*	00000000 UART8_ICR_TCBGTC
00000040 l       *ABS*	00000000 UART8_ICR_TCCF
00000020 l       *ABS*	00000000 UART8_ICR_TXFECF
00000010 l       *ABS*	00000000 UART8_ICR_IDLECF
00000008 l       *ABS*	00000000 UART8_ICR_ORECF
00000004 l       *ABS*	00000000 UART8_ICR_NCF
00000002 l       *ABS*	00000000 UART8_ICR_FECF
00000001 l       *ABS*	00000000 UART8_ICR_PECF
40007c24 l       *ABS*	00000000 UART8_RDR
00000000 l       *ABS*	00000000 UART8_RDR_RDR_Shift
40007c28 l       *ABS*	00000000 UART8_TDR
00000000 l       *ABS*	00000000 UART8_TDR_TDR_Shift
40007c2c l       *ABS*	00000000 UART8_PRESC
00000000 l       *ABS*	00000000 UART8_PRESC_PRESCALER_Shift
40010000 l       *ABS*	00000000 TIM1_BASE
40010000 l       *ABS*	00000000 TIM1_CR1
00000001 l       *ABS*	00000000 TIM1_CR1_CEN
00000002 l       *ABS*	00000000 TIM1_CR1_UDIS
00000004 l       *ABS*	00000000 TIM1_CR1_URS
00000008 l       *ABS*	00000000 TIM1_CR1_OPM
00000010 l       *ABS*	00000000 TIM1_CR1_DIR
00000005 l       *ABS*	00000000 TIM1_CR1_CMS_Shift
00000080 l       *ABS*	00000000 TIM1_CR1_ARPE
00000008 l       *ABS*	00000000 TIM1_CR1_CKD_Shift
00000800 l       *ABS*	00000000 TIM1_CR1_UIFREMAP
40010004 l       *ABS*	00000000 TIM1_CR2
00000014 l       *ABS*	00000000 TIM1_CR2_MMS2_Shift
00040000 l       *ABS*	00000000 TIM1_CR2_OIS6
00010000 l       *ABS*	00000000 TIM1_CR2_OIS5
00004000 l       *ABS*	00000000 TIM1_CR2_OIS4
00002000 l       *ABS*	00000000 TIM1_CR2_OIS3N
00001000 l       *ABS*	00000000 TIM1_CR2_OIS3
00000800 l       *ABS*	00000000 TIM1_CR2_OIS2N
00000400 l       *ABS*	00000000 TIM1_CR2_OIS2
00000200 l       *ABS*	00000000 TIM1_CR2_OIS1N
00000100 l       *ABS*	00000000 TIM1_CR2_OIS1
00000080 l       *ABS*	00000000 TIM1_CR2_TI1S
00000004 l       *ABS*	00000000 TIM1_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM1_CR2_CCDS
00000004 l       *ABS*	00000000 TIM1_CR2_CCUS
00000001 l       *ABS*	00000000 TIM1_CR2_CCPC
40010008 l       *ABS*	00000000 TIM1_SMCR
00000000 l       *ABS*	00000000 TIM1_SMCR_SMS_Shift
00000004 l       *ABS*	00000000 TIM1_SMCR_TS_Shift
00000080 l       *ABS*	00000000 TIM1_SMCR_MSM
00000008 l       *ABS*	00000000 TIM1_SMCR_ETF_Shift
0000000c l       *ABS*	00000000 TIM1_SMCR_ETPS_Shift
00004000 l       *ABS*	00000000 TIM1_SMCR_ECE
00008000 l       *ABS*	00000000 TIM1_SMCR_ETP
00010000 l       *ABS*	00000000 TIM1_SMCR_SMS_3
00000014 l       *ABS*	00000000 TIM1_SMCR_TS_4_3_Shift
4001000c l       *ABS*	00000000 TIM1_DIER
00004000 l       *ABS*	00000000 TIM1_DIER_TDE
00002000 l       *ABS*	00000000 TIM1_DIER_COMDE
00001000 l       *ABS*	00000000 TIM1_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM1_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM1_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM1_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM1_DIER_UDE
00000040 l       *ABS*	00000000 TIM1_DIER_TIE
00000010 l       *ABS*	00000000 TIM1_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM1_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM1_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM1_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM1_DIER_UIE
00000080 l       *ABS*	00000000 TIM1_DIER_BIE
00000020 l       *ABS*	00000000 TIM1_DIER_COMIE
40010010 l       *ABS*	00000000 TIM1_SR
00020000 l       *ABS*	00000000 TIM1_SR_CC6IF
00010000 l       *ABS*	00000000 TIM1_SR_CC5IF
00002000 l       *ABS*	00000000 TIM1_SR_SBIF
00001000 l       *ABS*	00000000 TIM1_SR_CC4OF
00000800 l       *ABS*	00000000 TIM1_SR_CC3OF
00000400 l       *ABS*	00000000 TIM1_SR_CC2OF
00000200 l       *ABS*	00000000 TIM1_SR_CC1OF
00000100 l       *ABS*	00000000 TIM1_SR_B2IF
00000080 l       *ABS*	00000000 TIM1_SR_BIF
00000040 l       *ABS*	00000000 TIM1_SR_TIF
00000020 l       *ABS*	00000000 TIM1_SR_COMIF
00000010 l       *ABS*	00000000 TIM1_SR_CC4IF
00000008 l       *ABS*	00000000 TIM1_SR_CC3IF
00000004 l       *ABS*	00000000 TIM1_SR_CC2IF
00000002 l       *ABS*	00000000 TIM1_SR_CC1IF
00000001 l       *ABS*	00000000 TIM1_SR_UIF
40010014 l       *ABS*	00000000 TIM1_EGR
00000001 l       *ABS*	00000000 TIM1_EGR_UG
00000002 l       *ABS*	00000000 TIM1_EGR_CC1G
00000004 l       *ABS*	00000000 TIM1_EGR_CC2G
00000008 l       *ABS*	00000000 TIM1_EGR_CC3G
00000010 l       *ABS*	00000000 TIM1_EGR_CC4G
00000020 l       *ABS*	00000000 TIM1_EGR_COMG
00000040 l       *ABS*	00000000 TIM1_EGR_TG
00000080 l       *ABS*	00000000 TIM1_EGR_BG
00000100 l       *ABS*	00000000 TIM1_EGR_B2G
40010018 l       *ABS*	00000000 TIM1_CCMR1_Output
00000000 l       *ABS*	00000000 TIM1_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM1_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM1_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM1_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM1_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM1_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM1_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM1_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM1_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM1_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM1_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM1_CCMR1_Output_OC2M_3
40010018 l       *ABS*	00000000 TIM1_CCMR1_Input
0000000c l       *ABS*	00000000 TIM1_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM1_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM1_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM1_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM1_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM1_CCMR1_Input_CC1S_Shift
4001001c l       *ABS*	00000000 TIM1_CCMR2_Output
00000000 l       *ABS*	00000000 TIM1_CCMR2_Output_CC3S_Shift
00000004 l       *ABS*	00000000 TIM1_CCMR2_Output_OC3FE
00000008 l       *ABS*	00000000 TIM1_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM1_CCMR2_Output_OC3M_Shift
00000080 l       *ABS*	00000000 TIM1_CCMR2_Output_OC3CE
00000008 l       *ABS*	00000000 TIM1_CCMR2_Output_CC4S_Shift
00000400 l       *ABS*	00000000 TIM1_CCMR2_Output_OC4FE
00000800 l       *ABS*	00000000 TIM1_CCMR2_Output_OC4PE
0000000c l       *ABS*	00000000 TIM1_CCMR2_Output_OC4M_Shift
00008000 l       *ABS*	00000000 TIM1_CCMR2_Output_OC4CE
00010000 l       *ABS*	00000000 TIM1_CCMR2_Output_OC3M_3
01000000 l       *ABS*	00000000 TIM1_CCMR2_Output_OC4M_4
4001001c l       *ABS*	00000000 TIM1_CCMR2_Input
0000000c l       *ABS*	00000000 TIM1_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM1_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM1_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM1_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM1_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM1_CCMR2_Input_CC3S_Shift
40010020 l       *ABS*	00000000 TIM1_CCER
00000001 l       *ABS*	00000000 TIM1_CCER_CC1E
00000002 l       *ABS*	00000000 TIM1_CCER_CC1P
00000004 l       *ABS*	00000000 TIM1_CCER_CC1NE
00000008 l       *ABS*	00000000 TIM1_CCER_CC1NP
00000010 l       *ABS*	00000000 TIM1_CCER_CC2E
00000020 l       *ABS*	00000000 TIM1_CCER_CC2P
00000040 l       *ABS*	00000000 TIM1_CCER_CC2NE
00000080 l       *ABS*	00000000 TIM1_CCER_CC2NP
00000100 l       *ABS*	00000000 TIM1_CCER_CC3E
00000200 l       *ABS*	00000000 TIM1_CCER_CC3P
00000400 l       *ABS*	00000000 TIM1_CCER_CC3NE
00000800 l       *ABS*	00000000 TIM1_CCER_CC3NP
00001000 l       *ABS*	00000000 TIM1_CCER_CC4E
00002000 l       *ABS*	00000000 TIM1_CCER_CC4P
00008000 l       *ABS*	00000000 TIM1_CCER_CC4NP
00010000 l       *ABS*	00000000 TIM1_CCER_CC5E
00020000 l       *ABS*	00000000 TIM1_CCER_CC5P
00100000 l       *ABS*	00000000 TIM1_CCER_CC6E
00200000 l       *ABS*	00000000 TIM1_CCER_CC6P
40010024 l       *ABS*	00000000 TIM1_CNT
00000000 l       *ABS*	00000000 TIM1_CNT_CNT_Shift
80000000 l       *ABS*	00000000 TIM1_CNT_UIFCPY
40010028 l       *ABS*	00000000 TIM1_PSC
00000000 l       *ABS*	00000000 TIM1_PSC_PSC_Shift
4001002c l       *ABS*	00000000 TIM1_ARR
00000000 l       *ABS*	00000000 TIM1_ARR_ARR_Shift
40010034 l       *ABS*	00000000 TIM1_CCR1
00000000 l       *ABS*	00000000 TIM1_CCR1_CCR1_Shift
40010038 l       *ABS*	00000000 TIM1_CCR2
00000000 l       *ABS*	00000000 TIM1_CCR2_CCR2_Shift
4001003c l       *ABS*	00000000 TIM1_CCR3
00000000 l       *ABS*	00000000 TIM1_CCR3_CCR3_Shift
40010040 l       *ABS*	00000000 TIM1_CCR4
00000000 l       *ABS*	00000000 TIM1_CCR4_CCR4_Shift
40010048 l       *ABS*	00000000 TIM1_DCR
00000008 l       *ABS*	00000000 TIM1_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM1_DCR_DBA_Shift
4001004c l       *ABS*	00000000 TIM1_DMAR
00000000 l       *ABS*	00000000 TIM1_DMAR_DMAB_Shift
40010030 l       *ABS*	00000000 TIM1_RCR
00000000 l       *ABS*	00000000 TIM1_RCR_REP_Shift
40010044 l       *ABS*	00000000 TIM1_BDTR
00000000 l       *ABS*	00000000 TIM1_BDTR_DTG_Shift
00000008 l       *ABS*	00000000 TIM1_BDTR_LOCK_Shift
00000400 l       *ABS*	00000000 TIM1_BDTR_OSSI
00000800 l       *ABS*	00000000 TIM1_BDTR_OSSR
00001000 l       *ABS*	00000000 TIM1_BDTR_BKE
00002000 l       *ABS*	00000000 TIM1_BDTR_BKP
00004000 l       *ABS*	00000000 TIM1_BDTR_AOE
00008000 l       *ABS*	00000000 TIM1_BDTR_MOE
00000010 l       *ABS*	00000000 TIM1_BDTR_BKF_Shift
00000014 l       *ABS*	00000000 TIM1_BDTR_BK2F_Shift
01000000 l       *ABS*	00000000 TIM1_BDTR_BK2E
02000000 l       *ABS*	00000000 TIM1_BDTR_BK2P
40010054 l       *ABS*	00000000 TIM1_CCMR3_Output
00000004 l       *ABS*	00000000 TIM1_CCMR3_Output_OC5FE
00000008 l       *ABS*	00000000 TIM1_CCMR3_Output_OC5PE
00000004 l       *ABS*	00000000 TIM1_CCMR3_Output_OC5M_Shift
00000080 l       *ABS*	00000000 TIM1_CCMR3_Output_OC5CE
00000400 l       *ABS*	00000000 TIM1_CCMR3_Output_OC6FE
00000800 l       *ABS*	00000000 TIM1_CCMR3_Output_OC6PE
0000000c l       *ABS*	00000000 TIM1_CCMR3_Output_OC6M_Shift
00008000 l       *ABS*	00000000 TIM1_CCMR3_Output_OC6CE
00010000 l       *ABS*	00000000 TIM1_CCMR3_Output_OC5M3
01000000 l       *ABS*	00000000 TIM1_CCMR3_Output_OC6M3
40010058 l       *ABS*	00000000 TIM1_CCR5
00000000 l       *ABS*	00000000 TIM1_CCR5_CCR5_Shift
20000000 l       *ABS*	00000000 TIM1_CCR5_GC5C1
40000000 l       *ABS*	00000000 TIM1_CCR5_GC5C2
80000000 l       *ABS*	00000000 TIM1_CCR5_GC5C3
4001005c l       *ABS*	00000000 TIM1_CRR6
00000000 l       *ABS*	00000000 TIM1_CRR6_CCR6_Shift
40010060 l       *ABS*	00000000 TIM1_AF1
00000001 l       *ABS*	00000000 TIM1_AF1_BKINE
00000002 l       *ABS*	00000000 TIM1_AF1_BKCMP1E
00000004 l       *ABS*	00000000 TIM1_AF1_BKCMP2E
00000100 l       *ABS*	00000000 TIM1_AF1_BKDF1BK0E
00000200 l       *ABS*	00000000 TIM1_AF1_BKINP
00000400 l       *ABS*	00000000 TIM1_AF1_BKCMP1P
00000800 l       *ABS*	00000000 TIM1_AF1_BKCMP2P
0000000e l       *ABS*	00000000 TIM1_AF1_ETRSEL_Shift
40010064 l       *ABS*	00000000 TIM1_AF2
00000001 l       *ABS*	00000000 TIM1_AF2_BK2INE
00000002 l       *ABS*	00000000 TIM1_AF2_BK2CMP1E
00000004 l       *ABS*	00000000 TIM1_AF2_BK2CMP2E
00000100 l       *ABS*	00000000 TIM1_AF2_BK2DF1BK1E
00000200 l       *ABS*	00000000 TIM1_AF2_BK2INP
00000400 l       *ABS*	00000000 TIM1_AF2_BK2CMP1P
00000800 l       *ABS*	00000000 TIM1_AF2_BK2CMP2P
40010068 l       *ABS*	00000000 TIM1_TISEL
00000000 l       *ABS*	00000000 TIM1_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM1_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM1_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM1_TISEL_TI4SEL_Shift
40010400 l       *ABS*	00000000 TIM8_BASE
40010400 l       *ABS*	00000000 TIM8_CR1
00000001 l       *ABS*	00000000 TIM8_CR1_CEN
00000002 l       *ABS*	00000000 TIM8_CR1_UDIS
00000004 l       *ABS*	00000000 TIM8_CR1_URS
00000008 l       *ABS*	00000000 TIM8_CR1_OPM
00000010 l       *ABS*	00000000 TIM8_CR1_DIR
00000005 l       *ABS*	00000000 TIM8_CR1_CMS_Shift
00000080 l       *ABS*	00000000 TIM8_CR1_ARPE
00000008 l       *ABS*	00000000 TIM8_CR1_CKD_Shift
00000800 l       *ABS*	00000000 TIM8_CR1_UIFREMAP
40010404 l       *ABS*	00000000 TIM8_CR2
00000014 l       *ABS*	00000000 TIM8_CR2_MMS2_Shift
00040000 l       *ABS*	00000000 TIM8_CR2_OIS6
00010000 l       *ABS*	00000000 TIM8_CR2_OIS5
00004000 l       *ABS*	00000000 TIM8_CR2_OIS4
00002000 l       *ABS*	00000000 TIM8_CR2_OIS3N
00001000 l       *ABS*	00000000 TIM8_CR2_OIS3
00000800 l       *ABS*	00000000 TIM8_CR2_OIS2N
00000400 l       *ABS*	00000000 TIM8_CR2_OIS2
00000200 l       *ABS*	00000000 TIM8_CR2_OIS1N
00000100 l       *ABS*	00000000 TIM8_CR2_OIS1
00000080 l       *ABS*	00000000 TIM8_CR2_TI1S
00000004 l       *ABS*	00000000 TIM8_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM8_CR2_CCDS
00000004 l       *ABS*	00000000 TIM8_CR2_CCUS
00000001 l       *ABS*	00000000 TIM8_CR2_CCPC
40010408 l       *ABS*	00000000 TIM8_SMCR
00000000 l       *ABS*	00000000 TIM8_SMCR_SMS_Shift
00000004 l       *ABS*	00000000 TIM8_SMCR_TS_Shift
00000080 l       *ABS*	00000000 TIM8_SMCR_MSM
00000008 l       *ABS*	00000000 TIM8_SMCR_ETF_Shift
0000000c l       *ABS*	00000000 TIM8_SMCR_ETPS_Shift
00004000 l       *ABS*	00000000 TIM8_SMCR_ECE
00008000 l       *ABS*	00000000 TIM8_SMCR_ETP
00010000 l       *ABS*	00000000 TIM8_SMCR_SMS_3
00000014 l       *ABS*	00000000 TIM8_SMCR_TS_4_3_Shift
4001040c l       *ABS*	00000000 TIM8_DIER
00004000 l       *ABS*	00000000 TIM8_DIER_TDE
00002000 l       *ABS*	00000000 TIM8_DIER_COMDE
00001000 l       *ABS*	00000000 TIM8_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM8_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM8_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM8_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM8_DIER_UDE
00000040 l       *ABS*	00000000 TIM8_DIER_TIE
00000010 l       *ABS*	00000000 TIM8_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM8_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM8_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM8_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM8_DIER_UIE
00000080 l       *ABS*	00000000 TIM8_DIER_BIE
00000020 l       *ABS*	00000000 TIM8_DIER_COMIE
40010410 l       *ABS*	00000000 TIM8_SR
00020000 l       *ABS*	00000000 TIM8_SR_CC6IF
00010000 l       *ABS*	00000000 TIM8_SR_CC5IF
00002000 l       *ABS*	00000000 TIM8_SR_SBIF
00001000 l       *ABS*	00000000 TIM8_SR_CC4OF
00000800 l       *ABS*	00000000 TIM8_SR_CC3OF
00000400 l       *ABS*	00000000 TIM8_SR_CC2OF
00000200 l       *ABS*	00000000 TIM8_SR_CC1OF
00000100 l       *ABS*	00000000 TIM8_SR_B2IF
00000080 l       *ABS*	00000000 TIM8_SR_BIF
00000040 l       *ABS*	00000000 TIM8_SR_TIF
00000020 l       *ABS*	00000000 TIM8_SR_COMIF
00000010 l       *ABS*	00000000 TIM8_SR_CC4IF
00000008 l       *ABS*	00000000 TIM8_SR_CC3IF
00000004 l       *ABS*	00000000 TIM8_SR_CC2IF
00000002 l       *ABS*	00000000 TIM8_SR_CC1IF
00000001 l       *ABS*	00000000 TIM8_SR_UIF
40010414 l       *ABS*	00000000 TIM8_EGR
00000001 l       *ABS*	00000000 TIM8_EGR_UG
00000002 l       *ABS*	00000000 TIM8_EGR_CC1G
00000004 l       *ABS*	00000000 TIM8_EGR_CC2G
00000008 l       *ABS*	00000000 TIM8_EGR_CC3G
00000010 l       *ABS*	00000000 TIM8_EGR_CC4G
00000020 l       *ABS*	00000000 TIM8_EGR_COMG
00000040 l       *ABS*	00000000 TIM8_EGR_TG
00000080 l       *ABS*	00000000 TIM8_EGR_BG
00000100 l       *ABS*	00000000 TIM8_EGR_B2G
40010418 l       *ABS*	00000000 TIM8_CCMR1_Output
00000000 l       *ABS*	00000000 TIM8_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM8_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM8_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM8_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM8_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM8_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM8_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM8_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM8_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM8_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM8_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM8_CCMR1_Output_OC2M_3
40010418 l       *ABS*	00000000 TIM8_CCMR1_Input
0000000c l       *ABS*	00000000 TIM8_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM8_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM8_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM8_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM8_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM8_CCMR1_Input_CC1S_Shift
4001041c l       *ABS*	00000000 TIM8_CCMR2_Output
00000000 l       *ABS*	00000000 TIM8_CCMR2_Output_CC3S_Shift
00000004 l       *ABS*	00000000 TIM8_CCMR2_Output_OC3FE
00000008 l       *ABS*	00000000 TIM8_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM8_CCMR2_Output_OC3M_Shift
00000080 l       *ABS*	00000000 TIM8_CCMR2_Output_OC3CE
00000008 l       *ABS*	00000000 TIM8_CCMR2_Output_CC4S_Shift
00000400 l       *ABS*	00000000 TIM8_CCMR2_Output_OC4FE
00000800 l       *ABS*	00000000 TIM8_CCMR2_Output_OC4PE
0000000c l       *ABS*	00000000 TIM8_CCMR2_Output_OC4M_Shift
00008000 l       *ABS*	00000000 TIM8_CCMR2_Output_OC4CE
00010000 l       *ABS*	00000000 TIM8_CCMR2_Output_OC3M_3
01000000 l       *ABS*	00000000 TIM8_CCMR2_Output_OC4M_4
4001041c l       *ABS*	00000000 TIM8_CCMR2_Input
0000000c l       *ABS*	00000000 TIM8_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM8_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM8_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM8_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM8_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM8_CCMR2_Input_CC3S_Shift
40010420 l       *ABS*	00000000 TIM8_CCER
00000001 l       *ABS*	00000000 TIM8_CCER_CC1E
00000002 l       *ABS*	00000000 TIM8_CCER_CC1P
00000004 l       *ABS*	00000000 TIM8_CCER_CC1NE
00000008 l       *ABS*	00000000 TIM8_CCER_CC1NP
00000010 l       *ABS*	00000000 TIM8_CCER_CC2E
00000020 l       *ABS*	00000000 TIM8_CCER_CC2P
00000040 l       *ABS*	00000000 TIM8_CCER_CC2NE
00000080 l       *ABS*	00000000 TIM8_CCER_CC2NP
00000100 l       *ABS*	00000000 TIM8_CCER_CC3E
00000200 l       *ABS*	00000000 TIM8_CCER_CC3P
00000400 l       *ABS*	00000000 TIM8_CCER_CC3NE
00000800 l       *ABS*	00000000 TIM8_CCER_CC3NP
00001000 l       *ABS*	00000000 TIM8_CCER_CC4E
00002000 l       *ABS*	00000000 TIM8_CCER_CC4P
00008000 l       *ABS*	00000000 TIM8_CCER_CC4NP
00010000 l       *ABS*	00000000 TIM8_CCER_CC5E
00020000 l       *ABS*	00000000 TIM8_CCER_CC5P
00100000 l       *ABS*	00000000 TIM8_CCER_CC6E
00200000 l       *ABS*	00000000 TIM8_CCER_CC6P
40010424 l       *ABS*	00000000 TIM8_CNT
00000000 l       *ABS*	00000000 TIM8_CNT_CNT_Shift
80000000 l       *ABS*	00000000 TIM8_CNT_UIFCPY
40010428 l       *ABS*	00000000 TIM8_PSC
00000000 l       *ABS*	00000000 TIM8_PSC_PSC_Shift
4001042c l       *ABS*	00000000 TIM8_ARR
00000000 l       *ABS*	00000000 TIM8_ARR_ARR_Shift
40010434 l       *ABS*	00000000 TIM8_CCR1
00000000 l       *ABS*	00000000 TIM8_CCR1_CCR1_Shift
40010438 l       *ABS*	00000000 TIM8_CCR2
00000000 l       *ABS*	00000000 TIM8_CCR2_CCR2_Shift
4001043c l       *ABS*	00000000 TIM8_CCR3
00000000 l       *ABS*	00000000 TIM8_CCR3_CCR3_Shift
40010440 l       *ABS*	00000000 TIM8_CCR4
00000000 l       *ABS*	00000000 TIM8_CCR4_CCR4_Shift
40010448 l       *ABS*	00000000 TIM8_DCR
00000008 l       *ABS*	00000000 TIM8_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM8_DCR_DBA_Shift
4001044c l       *ABS*	00000000 TIM8_DMAR
00000000 l       *ABS*	00000000 TIM8_DMAR_DMAB_Shift
40010430 l       *ABS*	00000000 TIM8_RCR
00000000 l       *ABS*	00000000 TIM8_RCR_REP_Shift
40010444 l       *ABS*	00000000 TIM8_BDTR
00000000 l       *ABS*	00000000 TIM8_BDTR_DTG_Shift
00000008 l       *ABS*	00000000 TIM8_BDTR_LOCK_Shift
00000400 l       *ABS*	00000000 TIM8_BDTR_OSSI
00000800 l       *ABS*	00000000 TIM8_BDTR_OSSR
00001000 l       *ABS*	00000000 TIM8_BDTR_BKE
00002000 l       *ABS*	00000000 TIM8_BDTR_BKP
00004000 l       *ABS*	00000000 TIM8_BDTR_AOE
00008000 l       *ABS*	00000000 TIM8_BDTR_MOE
00000010 l       *ABS*	00000000 TIM8_BDTR_BKF_Shift
00000014 l       *ABS*	00000000 TIM8_BDTR_BK2F_Shift
01000000 l       *ABS*	00000000 TIM8_BDTR_BK2E
02000000 l       *ABS*	00000000 TIM8_BDTR_BK2P
40010454 l       *ABS*	00000000 TIM8_CCMR3_Output
00000004 l       *ABS*	00000000 TIM8_CCMR3_Output_OC5FE
00000008 l       *ABS*	00000000 TIM8_CCMR3_Output_OC5PE
00000004 l       *ABS*	00000000 TIM8_CCMR3_Output_OC5M_Shift
00000080 l       *ABS*	00000000 TIM8_CCMR3_Output_OC5CE
00000400 l       *ABS*	00000000 TIM8_CCMR3_Output_OC6FE
00000800 l       *ABS*	00000000 TIM8_CCMR3_Output_OC6PE
0000000c l       *ABS*	00000000 TIM8_CCMR3_Output_OC6M_Shift
00008000 l       *ABS*	00000000 TIM8_CCMR3_Output_OC6CE
00010000 l       *ABS*	00000000 TIM8_CCMR3_Output_OC5M3
01000000 l       *ABS*	00000000 TIM8_CCMR3_Output_OC6M3
40010458 l       *ABS*	00000000 TIM8_CCR5
00000000 l       *ABS*	00000000 TIM8_CCR5_CCR5_Shift
20000000 l       *ABS*	00000000 TIM8_CCR5_GC5C1
40000000 l       *ABS*	00000000 TIM8_CCR5_GC5C2
80000000 l       *ABS*	00000000 TIM8_CCR5_GC5C3
4001045c l       *ABS*	00000000 TIM8_CRR6
00000000 l       *ABS*	00000000 TIM8_CRR6_CCR6_Shift
40010460 l       *ABS*	00000000 TIM8_AF1
00000001 l       *ABS*	00000000 TIM8_AF1_BKINE
00000002 l       *ABS*	00000000 TIM8_AF1_BKCMP1E
00000004 l       *ABS*	00000000 TIM8_AF1_BKCMP2E
00000100 l       *ABS*	00000000 TIM8_AF1_BKDF1BK0E
00000200 l       *ABS*	00000000 TIM8_AF1_BKINP
00000400 l       *ABS*	00000000 TIM8_AF1_BKCMP1P
00000800 l       *ABS*	00000000 TIM8_AF1_BKCMP2P
0000000e l       *ABS*	00000000 TIM8_AF1_ETRSEL_Shift
40010464 l       *ABS*	00000000 TIM8_AF2
00000001 l       *ABS*	00000000 TIM8_AF2_BK2INE
00000002 l       *ABS*	00000000 TIM8_AF2_BK2CMP1E
00000004 l       *ABS*	00000000 TIM8_AF2_BK2CMP2E
00000100 l       *ABS*	00000000 TIM8_AF2_BK2DF1BK1E
00000200 l       *ABS*	00000000 TIM8_AF2_BK2INP
00000400 l       *ABS*	00000000 TIM8_AF2_BK2CMP1P
00000800 l       *ABS*	00000000 TIM8_AF2_BK2CMP2P
40010468 l       *ABS*	00000000 TIM8_TISEL
00000000 l       *ABS*	00000000 TIM8_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM8_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM8_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM8_TISEL_TI4SEL_Shift
4000a000 l       *ABS*	00000000 FDCAN1_BASE
4000a000 l       *ABS*	00000000 FDCAN1_FDCAN_CREL
0000001c l       *ABS*	00000000 FDCAN1_FDCAN_CREL_REL_Shift
00000018 l       *ABS*	00000000 FDCAN1_FDCAN_CREL_STEP_Shift
00000014 l       *ABS*	00000000 FDCAN1_FDCAN_CREL_SUBSTEP_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_CREL_YEAR_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_CREL_MON_Shift
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_CREL_DAY_Shift
4000a004 l       *ABS*	00000000 FDCAN1_FDCAN_ENDN
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_ENDN_ETV_Shift
4000a00c l       *ABS*	00000000 FDCAN1_FDCAN_DBTP
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_DBTP_DSJW_Shift
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_DBTP_DTSEG2_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_DBTP_DTSEG1_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_DBTP_DBRP_Shift
00800000 l       *ABS*	00000000 FDCAN1_FDCAN_DBTP_TDC
4000a010 l       *ABS*	00000000 FDCAN1_FDCAN_TEST
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TEST_LBCK
00000005 l       *ABS*	00000000 FDCAN1_FDCAN_TEST_TX_Shift
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_TEST_RX
4000a014 l       *ABS*	00000000 FDCAN1_FDCAN_RWD
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_RWD_WDV_Shift
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_RWD_WDC_Shift
4000a018 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_INIT
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_CCE
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_ASM
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_CSA
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_CSR
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_MON
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_DAR
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_TEST
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_FDOE
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_BSE
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_PXHD
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_EFBI
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_TXP
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_CCCR_NISO
4000a01c l       *ABS*	00000000 FDCAN1_FDCAN_NBTP
00000019 l       *ABS*	00000000 FDCAN1_FDCAN_NBTP_NSJW_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_NBTP_NBRP_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_NBTP_NTSEG1_Shift
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_NBTP_TSEG2_Shift
4000a020 l       *ABS*	00000000 FDCAN1_FDCAN_TSCC
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TSCC_TCP_Shift
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TSCC_TSS_Shift
4000a024 l       *ABS*	00000000 FDCAN1_FDCAN_TSCV
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TSCV_TSC_Shift
4000a028 l       *ABS*	00000000 FDCAN1_FDCAN_TOCC
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_TOCC_ETOC
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_TOCC_TOS_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TOCC_TOP_Shift
4000a02c l       *ABS*	00000000 FDCAN1_FDCAN_TOCV
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TOCV_TOC_Shift
4000a040 l       *ABS*	00000000 FDCAN1_FDCAN_ECR
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_ECR_CEL_Shift
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_ECR_RP
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_ECR_TREC_Shift
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_ECR_TEC_Shift
4000a044 l       *ABS*	00000000 FDCAN1_FDCAN_PSR
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_LEC_Shift
00000003 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_ACT_Shift
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_EP
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_EW
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_BO
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_DLEC_Shift
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_RESI
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_RBRS
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_REDL
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_PXE
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_PSR_TDCV_Shift
4000a048 l       *ABS*	00000000 FDCAN1_FDCAN_TDCR
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TDCR_TDCF_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TDCR_TDCO_Shift
4000a050 l       *ABS*	00000000 FDCAN1_FDCAN_IR
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF0N
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF0W
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF0F
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF0L
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF1N
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF1W
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF1F
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_IR_RF1L
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_IR_HPM
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TC
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TCF
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TEF
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TEFN
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TEFW
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TEFF
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TEFL
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TSW
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_MRAF
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_TOO
00080000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_DRX
00400000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_ELO
00800000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_EP
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_EW
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_BO
04000000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_WDI
08000000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_PEA
10000000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_PED
20000000 l       *ABS*	00000000 FDCAN1_FDCAN_IR_ARA
4000a054 l       *ABS*	00000000 FDCAN1_FDCAN_IE
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF0NE
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF0WE
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF0FE
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF0LE
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF1NE
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF1WE
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF1FE
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_IE_RF1LE
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_IE_HPME
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TCE
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TCFE
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TEFE
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TEFNE
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TEFWE
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TEFFE
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TEFLE
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TSWE
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_MRAFE
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_TOOE
00080000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_DRXE
00100000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_BECE
00200000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_BEUE
00400000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_ELOE
00800000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_EPE
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_EWE
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_BOE
04000000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_WDIE
08000000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_PEAE
10000000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_PEDE
20000000 l       *ABS*	00000000 FDCAN1_FDCAN_IE_ARAE
4000a058 l       *ABS*	00000000 FDCAN1_FDCAN_ILS
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF0NL
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF0WL
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF0FL
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF0LL
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF1NL
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF1WL
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF1FL
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_RF1LL
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_HPML
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TCL
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TCFL
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TEFL
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TEFNL
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TEFWL
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TEFFL
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TEFLL
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TSWL
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_MRAFL
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_TOOL
00080000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_DRXL
00100000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_BECL
00200000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_BEUL
00400000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_ELOL
00800000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_EPL
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_EWL
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_BOL
04000000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_WDIL
08000000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_PEAL
10000000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_PEDL
20000000 l       *ABS*	00000000 FDCAN1_FDCAN_ILS_ARAL
4000a05c l       *ABS*	00000000 FDCAN1_FDCAN_ILE
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_ILE_EINT0
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_ILE_EINT1
4000a080 l       *ABS*	00000000 FDCAN1_FDCAN_GFC
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_GFC_RRFE
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_GFC_RRFS
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_GFC_ANFE_Shift
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_GFC_ANFS_Shift
4000a084 l       *ABS*	00000000 FDCAN1_FDCAN_SIDFC
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_SIDFC_FLSSA_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_SIDFC_LSS_Shift
4000a088 l       *ABS*	00000000 FDCAN1_FDCAN_XIDFC
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_XIDFC_FLESA_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_XIDFC_LSE_Shift
4000a090 l       *ABS*	00000000 FDCAN1_FDCAN_XIDAM
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_XIDAM_EIDM_Shift
4000a094 l       *ABS*	00000000 FDCAN1_FDCAN_HPMS
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_HPMS_BIDX_Shift
00000006 l       *ABS*	00000000 FDCAN1_FDCAN_HPMS_MSI_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_HPMS_FIDX_Shift
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_HPMS_FLST
4000a098 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND0
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND1
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND2
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND3
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND4
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND5
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND6
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND7
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND8
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND9
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND10
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND11
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND12
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND13
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND14
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND15
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND16
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND17
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND18
00080000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND19
00100000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND20
00200000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND21
00400000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND22
00800000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND23
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND24
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND25
04000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND26
08000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND27
10000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND28
20000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND29
40000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND30
80000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT1_ND31
4000a09c l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND32
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND33
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND34
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND35
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND36
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND37
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND38
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND39
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND40
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND41
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND42
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND43
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND44
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND45
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND46
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND47
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND48
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND49
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND50
00080000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND51
00100000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND52
00200000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND53
00400000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND54
00800000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND55
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND56
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND57
04000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND58
08000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND59
10000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND60
20000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND61
40000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND62
80000000 l       *ABS*	00000000 FDCAN1_FDCAN_NDAT2_ND63
4000a0a0 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0C
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0C_F0SA_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0C_F0S_Shift
00000018 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0C_F0WM_Shift
4000a0a4 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0S
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0S_F0FL_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0S_F0G_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0S_F0P_Shift
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0S_F0F
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0S_RF0L
4000a0a8 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0A
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF0A_FA01_Shift
4000a0ac l       *ABS*	00000000 FDCAN1_FDCAN_RXBC
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_RXBC_RBSA_Shift
4000a0b0 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1C
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1C_F1SA_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1C_F1S_Shift
00000018 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1C_F1WM_Shift
4000a0b4 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1S
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1S_F1FL_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1S_F1GI_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1S_F1PI_Shift
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1S_F1F
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1S_RF1L
0000001e l       *ABS*	00000000 FDCAN1_FDCAN_RXF1S_DMS_Shift
4000a0b8 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1A
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXF1A_F1AI_Shift
4000a0bc l       *ABS*	00000000 FDCAN1_FDCAN_RXESC
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_RXESC_F0DS_Shift
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_RXESC_F1DS_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_RXESC_RBDS_Shift
4000a0c0 l       *ABS*	00000000 FDCAN1_FDCAN_TXBC
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TXBC_TBSA_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TXBC_NDTB_Shift
00000018 l       *ABS*	00000000 FDCAN1_FDCAN_TXBC_TFQS_Shift
40000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBC_TFQM
4000a0c4 l       *ABS*	00000000 FDCAN1_FDCAN_TXFQS
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXFQS_TFFL_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TXFQS_TFGI_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TXFQS_TFQPI_Shift
00200000 l       *ABS*	00000000 FDCAN1_FDCAN_TXFQS_TFQF
4000a0c8 l       *ABS*	00000000 FDCAN1_FDCAN_TXESC
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXESC_TBDS_Shift
4000a0cc l       *ABS*	00000000 FDCAN1_FDCAN_TXBRP
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBRP_TRP_Shift
4000a0d0 l       *ABS*	00000000 FDCAN1_FDCAN_TXBAR
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBAR_AR_Shift
4000a0d4 l       *ABS*	00000000 FDCAN1_FDCAN_TXBCR
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBCR_CR_Shift
4000a0d8 l       *ABS*	00000000 FDCAN1_FDCAN_TXBTO
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBTO_TO_Shift
4000a0dc l       *ABS*	00000000 FDCAN1_FDCAN_TXBCF
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBCF_CF_Shift
4000a0e0 l       *ABS*	00000000 FDCAN1_FDCAN_TXBTIE
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBTIE_TIE_Shift
4000a0e4 l       *ABS*	00000000 FDCAN1_FDCAN_TXBCIE
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXBCIE_CF_Shift
4000a0f0 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFC
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFC_EFSA_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFC_EFS_Shift
00000018 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFC_EFWM_Shift
4000a0f4 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFS
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFS_EFFL_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFS_EFGI_Shift
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFS_EFF
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFS_TEFL
4000a0f8 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFA
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TXEFA_EFAI_Shift
4000a100 l       *ABS*	00000000 FDCAN1_FDCAN_TTTMC
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TTTMC_TMSA_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTTMC_TME_Shift
4000a104 l       *ABS*	00000000 FDCAN1_FDCAN_TTRMC
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTRMC_RID_Shift
40000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTRMC_XTD
80000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTRMC_RMPS
4000a108 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_OM_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_GEN
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_TM
00000005 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_LDSDL_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_IRTO_Shift
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_EECS
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_AWL_Shift
01000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_EGTF
02000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_ECC
04000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCF_EVTP
4000a10c l       *ABS*	00000000 FDCAN1_FDCAN_TTMLM
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTMLM_CCM_Shift
00000006 l       *ABS*	00000000 FDCAN1_FDCAN_TTMLM_CSS_Shift
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TTMLM_TXEW_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTMLM_ENTT_Shift
4000a110 l       *ABS*	00000000 FDCAN1_FDCAN_TURCF
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TURCF_NCL_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TURCF_DC_Shift
80000000 l       *ABS*	00000000 FDCAN1_FDCAN_TURCF_ELT
4000a114 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_SGT
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_ECS
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_SWP
00000003 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_SWS_Shift
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_RTIE
00000006 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_TMC_Shift
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_TTIE
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_GCS
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_FGP
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_TMG
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_NIG
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_ESCN
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOCN_LCKC
4000a118 l       *ABS*	00000000 FDCAN1_CAN_TTGTP
00000000 l       *ABS*	00000000 FDCAN1_CAN_TTGTP_NCL_Shift
00000010 l       *ABS*	00000000 FDCAN1_CAN_TTGTP_CTP_Shift
4000a11c l       *ABS*	00000000 FDCAN1_FDCAN_TTTMK
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTTMK_TM_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTTMK_TICC_Shift
80000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTTMK_LCKM
4000a120 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_SBC
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_SMC
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_CSM
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_SOG
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_RTMI
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_TTMI
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_SWE
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_GTW
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_GTD
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_GTE
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_TXU
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_TXO
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_SE1
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_SE2
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_ELC
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_IWTG
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_WT
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_AW
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIR_CER
4000a124 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_SBCE
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_SMCE
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_CSME
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_SOGE
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_RTMIE
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_TTMIE
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_SWEE
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_GTWE
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_GTDE
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_GTEE
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_TXUE
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_TXOE
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_SE1E
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_SE2E
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_ELCE
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_IWTGE
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_WTE
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_AWE
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_TTIE_CERE
4000a128 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS
00000001 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_SBCL
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_SMCL
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_CSML
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_SOGL
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_RTMIL
00000020 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_TTMIL
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_SWEL
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_GTWL
00000100 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_GTDL
00000200 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_GTEL
00000400 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_TXUL
00000800 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_TXOL
00001000 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_SE1L
00002000 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_SE2L
00004000 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_ELCL
00008000 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_IWTGL
00010000 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_WTL
00020000 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_AWL
00040000 l       *ABS*	00000000 FDCAN1_FDCAN_TTILS_CERL
4000a12c l       *ABS*	00000000 FDCAN1_FDCAN_TTOST
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_EL_Shift
00000002 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_MS_Shift
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_SYS_Shift
00000040 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_GTP
00000080 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_QCS
00000008 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_RTO_Shift
00400000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_WGTD
00800000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_GFI
00000018 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_TMP_Shift
08000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_GSI
10000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_WFE
20000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_AWE
40000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_WECS
80000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTOST_SPL
4000a130 l       *ABS*	00000000 FDCAN1_FDCAN_TURNA
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TURNA_NAV_Shift
4000a134 l       *ABS*	00000000 FDCAN1_FDCAN_TTLGT
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTLGT_LT_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTLGT_GT_Shift
4000a138 l       *ABS*	00000000 FDCAN1_FDCAN_TTCTC
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTCTC_CT_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTCTC_CC_Shift
4000a13c l       *ABS*	00000000 FDCAN1_FDCAN_TTCPT
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTCPT_CT_Shift
00000010 l       *ABS*	00000000 FDCAN1_FDCAN_TTCPT_SWV_Shift
4000a140 l       *ABS*	00000000 FDCAN1_FDCAN_TTCSM
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTCSM_CSM_Shift
4000a300 l       *ABS*	00000000 FDCAN1_FDCAN_TTTS
00000000 l       *ABS*	00000000 FDCAN1_FDCAN_TTTS_SWTDEL_Shift
00000004 l       *ABS*	00000000 FDCAN1_FDCAN_TTTS_EVTSEL_Shift
4000a400 l       *ABS*	00000000 FDCAN2_BASE
4000a400 l       *ABS*	00000000 FDCAN2_FDCAN_CREL
0000001c l       *ABS*	00000000 FDCAN2_FDCAN_CREL_REL_Shift
00000018 l       *ABS*	00000000 FDCAN2_FDCAN_CREL_STEP_Shift
00000014 l       *ABS*	00000000 FDCAN2_FDCAN_CREL_SUBSTEP_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_CREL_YEAR_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_CREL_MON_Shift
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_CREL_DAY_Shift
4000a404 l       *ABS*	00000000 FDCAN2_FDCAN_ENDN
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_ENDN_ETV_Shift
4000a40c l       *ABS*	00000000 FDCAN2_FDCAN_DBTP
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_DBTP_DSJW_Shift
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_DBTP_DTSEG2_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_DBTP_DTSEG1_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_DBTP_DBRP_Shift
00800000 l       *ABS*	00000000 FDCAN2_FDCAN_DBTP_TDC
4000a410 l       *ABS*	00000000 FDCAN2_FDCAN_TEST
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TEST_LBCK
00000005 l       *ABS*	00000000 FDCAN2_FDCAN_TEST_TX_Shift
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_TEST_RX
4000a414 l       *ABS*	00000000 FDCAN2_FDCAN_RWD
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_RWD_WDV_Shift
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_RWD_WDC_Shift
4000a418 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_INIT
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_CCE
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_ASM
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_CSA
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_CSR
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_MON
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_DAR
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_TEST
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_FDOE
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_BSE
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_PXHD
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_EFBI
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_TXP
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_CCCR_NISO
4000a41c l       *ABS*	00000000 FDCAN2_FDCAN_NBTP
00000019 l       *ABS*	00000000 FDCAN2_FDCAN_NBTP_NSJW_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_NBTP_NBRP_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_NBTP_NTSEG1_Shift
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_NBTP_TSEG2_Shift
4000a420 l       *ABS*	00000000 FDCAN2_FDCAN_TSCC
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TSCC_TCP_Shift
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TSCC_TSS_Shift
4000a424 l       *ABS*	00000000 FDCAN2_FDCAN_TSCV
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TSCV_TSC_Shift
4000a428 l       *ABS*	00000000 FDCAN2_FDCAN_TOCC
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_TOCC_ETOC
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_TOCC_TOS_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TOCC_TOP_Shift
4000a42c l       *ABS*	00000000 FDCAN2_FDCAN_TOCV
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TOCV_TOC_Shift
4000a440 l       *ABS*	00000000 FDCAN2_FDCAN_ECR
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_ECR_CEL_Shift
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_ECR_RP
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_ECR_TREC_Shift
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_ECR_TEC_Shift
4000a444 l       *ABS*	00000000 FDCAN2_FDCAN_PSR
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_LEC_Shift
00000003 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_ACT_Shift
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_EP
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_EW
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_BO
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_DLEC_Shift
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_RESI
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_RBRS
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_REDL
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_PXE
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_PSR_TDCV_Shift
4000a448 l       *ABS*	00000000 FDCAN2_FDCAN_TDCR
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TDCR_TDCF_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TDCR_TDCO_Shift
4000a450 l       *ABS*	00000000 FDCAN2_FDCAN_IR
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF0N
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF0W
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF0F
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF0L
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF1N
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF1W
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF1F
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_IR_RF1L
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_IR_HPM
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TC
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TCF
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TEF
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TEFN
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TEFW
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TEFF
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TEFL
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TSW
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_MRAF
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_TOO
00080000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_DRX
00400000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_ELO
00800000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_EP
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_EW
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_BO
04000000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_WDI
08000000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_PEA
10000000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_PED
20000000 l       *ABS*	00000000 FDCAN2_FDCAN_IR_ARA
4000a454 l       *ABS*	00000000 FDCAN2_FDCAN_IE
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF0NE
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF0WE
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF0FE
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF0LE
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF1NE
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF1WE
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF1FE
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_IE_RF1LE
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_IE_HPME
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TCE
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TCFE
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TEFE
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TEFNE
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TEFWE
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TEFFE
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TEFLE
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TSWE
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_MRAFE
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_TOOE
00080000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_DRXE
00100000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_BECE
00200000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_BEUE
00400000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_ELOE
00800000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_EPE
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_EWE
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_BOE
04000000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_WDIE
08000000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_PEAE
10000000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_PEDE
20000000 l       *ABS*	00000000 FDCAN2_FDCAN_IE_ARAE
4000a458 l       *ABS*	00000000 FDCAN2_FDCAN_ILS
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF0NL
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF0WL
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF0FL
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF0LL
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF1NL
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF1WL
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF1FL
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_RF1LL
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_HPML
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TCL
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TCFL
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TEFL
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TEFNL
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TEFWL
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TEFFL
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TEFLL
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TSWL
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_MRAFL
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_TOOL
00080000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_DRXL
00100000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_BECL
00200000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_BEUL
00400000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_ELOL
00800000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_EPL
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_EWL
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_BOL
04000000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_WDIL
08000000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_PEAL
10000000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_PEDL
20000000 l       *ABS*	00000000 FDCAN2_FDCAN_ILS_ARAL
4000a45c l       *ABS*	00000000 FDCAN2_FDCAN_ILE
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_ILE_EINT0
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_ILE_EINT1
4000a480 l       *ABS*	00000000 FDCAN2_FDCAN_GFC
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_GFC_RRFE
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_GFC_RRFS
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_GFC_ANFE_Shift
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_GFC_ANFS_Shift
4000a484 l       *ABS*	00000000 FDCAN2_FDCAN_SIDFC
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_SIDFC_FLSSA_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_SIDFC_LSS_Shift
4000a488 l       *ABS*	00000000 FDCAN2_FDCAN_XIDFC
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_XIDFC_FLESA_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_XIDFC_LSE_Shift
4000a490 l       *ABS*	00000000 FDCAN2_FDCAN_XIDAM
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_XIDAM_EIDM_Shift
4000a494 l       *ABS*	00000000 FDCAN2_FDCAN_HPMS
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_HPMS_BIDX_Shift
00000006 l       *ABS*	00000000 FDCAN2_FDCAN_HPMS_MSI_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_HPMS_FIDX_Shift
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_HPMS_FLST
4000a498 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND0
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND1
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND2
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND3
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND4
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND5
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND6
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND7
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND8
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND9
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND10
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND11
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND12
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND13
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND14
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND15
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND16
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND17
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND18
00080000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND19
00100000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND20
00200000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND21
00400000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND22
00800000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND23
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND24
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND25
04000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND26
08000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND27
10000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND28
20000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND29
40000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND30
80000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT1_ND31
4000a49c l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND32
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND33
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND34
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND35
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND36
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND37
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND38
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND39
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND40
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND41
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND42
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND43
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND44
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND45
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND46
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND47
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND48
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND49
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND50
00080000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND51
00100000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND52
00200000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND53
00400000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND54
00800000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND55
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND56
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND57
04000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND58
08000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND59
10000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND60
20000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND61
40000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND62
80000000 l       *ABS*	00000000 FDCAN2_FDCAN_NDAT2_ND63
4000a4a0 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0C
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0C_F0SA_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0C_F0S_Shift
00000018 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0C_F0WM_Shift
4000a4a4 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0S
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0S_F0FL_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0S_F0G_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0S_F0P_Shift
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0S_F0F
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0S_RF0L
4000a4a8 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0A
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF0A_FA01_Shift
4000a4ac l       *ABS*	00000000 FDCAN2_FDCAN_RXBC
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_RXBC_RBSA_Shift
4000a4b0 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1C
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1C_F1SA_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1C_F1S_Shift
00000018 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1C_F1WM_Shift
4000a4b4 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1S
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1S_F1FL_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1S_F1GI_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1S_F1PI_Shift
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1S_F1F
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1S_RF1L
0000001e l       *ABS*	00000000 FDCAN2_FDCAN_RXF1S_DMS_Shift
4000a4b8 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1A
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXF1A_F1AI_Shift
4000a4bc l       *ABS*	00000000 FDCAN2_FDCAN_RXESC
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_RXESC_F0DS_Shift
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_RXESC_F1DS_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_RXESC_RBDS_Shift
4000a4c0 l       *ABS*	00000000 FDCAN2_FDCAN_TXBC
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TXBC_TBSA_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TXBC_NDTB_Shift
00000018 l       *ABS*	00000000 FDCAN2_FDCAN_TXBC_TFQS_Shift
40000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBC_TFQM
4000a4c4 l       *ABS*	00000000 FDCAN2_FDCAN_TXFQS
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXFQS_TFFL_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TXFQS_TFGI_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TXFQS_TFQPI_Shift
00200000 l       *ABS*	00000000 FDCAN2_FDCAN_TXFQS_TFQF
4000a4c8 l       *ABS*	00000000 FDCAN2_FDCAN_TXESC
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXESC_TBDS_Shift
4000a4cc l       *ABS*	00000000 FDCAN2_FDCAN_TXBRP
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBRP_TRP_Shift
4000a4d0 l       *ABS*	00000000 FDCAN2_FDCAN_TXBAR
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBAR_AR_Shift
4000a4d4 l       *ABS*	00000000 FDCAN2_FDCAN_TXBCR
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBCR_CR_Shift
4000a4d8 l       *ABS*	00000000 FDCAN2_FDCAN_TXBTO
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBTO_TO_Shift
4000a4dc l       *ABS*	00000000 FDCAN2_FDCAN_TXBCF
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBCF_CF_Shift
4000a4e0 l       *ABS*	00000000 FDCAN2_FDCAN_TXBTIE
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBTIE_TIE_Shift
4000a4e4 l       *ABS*	00000000 FDCAN2_FDCAN_TXBCIE
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXBCIE_CF_Shift
4000a4f0 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFC
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFC_EFSA_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFC_EFS_Shift
00000018 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFC_EFWM_Shift
4000a4f4 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFS
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFS_EFFL_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFS_EFGI_Shift
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFS_EFF
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFS_TEFL
4000a4f8 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFA
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TXEFA_EFAI_Shift
4000a500 l       *ABS*	00000000 FDCAN2_FDCAN_TTTMC
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TTTMC_TMSA_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTTMC_TME_Shift
4000a504 l       *ABS*	00000000 FDCAN2_FDCAN_TTRMC
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTRMC_RID_Shift
40000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTRMC_XTD
80000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTRMC_RMPS
4000a508 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_OM_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_GEN
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_TM
00000005 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_LDSDL_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_IRTO_Shift
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_EECS
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_AWL_Shift
01000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_EGTF
02000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_ECC
04000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCF_EVTP
4000a50c l       *ABS*	00000000 FDCAN2_FDCAN_TTMLM
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTMLM_CCM_Shift
00000006 l       *ABS*	00000000 FDCAN2_FDCAN_TTMLM_CSS_Shift
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TTMLM_TXEW_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTMLM_ENTT_Shift
4000a510 l       *ABS*	00000000 FDCAN2_FDCAN_TURCF
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TURCF_NCL_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TURCF_DC_Shift
80000000 l       *ABS*	00000000 FDCAN2_FDCAN_TURCF_ELT
4000a514 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_SGT
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_ECS
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_SWP
00000003 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_SWS_Shift
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_RTIE
00000006 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_TMC_Shift
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_TTIE
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_GCS
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_FGP
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_TMG
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_NIG
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_ESCN
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOCN_LCKC
4000a518 l       *ABS*	00000000 FDCAN2_CAN_TTGTP
00000000 l       *ABS*	00000000 FDCAN2_CAN_TTGTP_NCL_Shift
00000010 l       *ABS*	00000000 FDCAN2_CAN_TTGTP_CTP_Shift
4000a51c l       *ABS*	00000000 FDCAN2_FDCAN_TTTMK
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTTMK_TM_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTTMK_TICC_Shift
80000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTTMK_LCKM
4000a520 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_SBC
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_SMC
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_CSM
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_SOG
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_RTMI
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_TTMI
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_SWE
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_GTW
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_GTD
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_GTE
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_TXU
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_TXO
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_SE1
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_SE2
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_ELC
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_IWTG
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_WT
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_AW
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIR_CER
4000a524 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_SBCE
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_SMCE
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_CSME
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_SOGE
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_RTMIE
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_TTMIE
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_SWEE
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_GTWE
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_GTDE
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_GTEE
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_TXUE
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_TXOE
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_SE1E
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_SE2E
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_ELCE
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_IWTGE
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_WTE
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_AWE
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_TTIE_CERE
4000a528 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS
00000001 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_SBCL
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_SMCL
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_CSML
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_SOGL
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_RTMIL
00000020 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_TTMIL
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_SWEL
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_GTWL
00000100 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_GTDL
00000200 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_GTEL
00000400 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_TXUL
00000800 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_TXOL
00001000 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_SE1L
00002000 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_SE2L
00004000 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_ELCL
00008000 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_IWTGL
00010000 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_WTL
00020000 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_AWL
00040000 l       *ABS*	00000000 FDCAN2_FDCAN_TTILS_CERL
4000a52c l       *ABS*	00000000 FDCAN2_FDCAN_TTOST
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_EL_Shift
00000002 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_MS_Shift
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_SYS_Shift
00000040 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_GTP
00000080 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_QCS
00000008 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_RTO_Shift
00400000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_WGTD
00800000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_GFI
00000018 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_TMP_Shift
08000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_GSI
10000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_WFE
20000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_AWE
40000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_WECS
80000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTOST_SPL
4000a530 l       *ABS*	00000000 FDCAN2_FDCAN_TURNA
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TURNA_NAV_Shift
4000a534 l       *ABS*	00000000 FDCAN2_FDCAN_TTLGT
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTLGT_LT_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTLGT_GT_Shift
4000a538 l       *ABS*	00000000 FDCAN2_FDCAN_TTCTC
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTCTC_CT_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTCTC_CC_Shift
4000a53c l       *ABS*	00000000 FDCAN2_FDCAN_TTCPT
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTCPT_CT_Shift
00000010 l       *ABS*	00000000 FDCAN2_FDCAN_TTCPT_SWV_Shift
4000a540 l       *ABS*	00000000 FDCAN2_FDCAN_TTCSM
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTCSM_CSM_Shift
4000a700 l       *ABS*	00000000 FDCAN2_FDCAN_TTTS
00000000 l       *ABS*	00000000 FDCAN2_FDCAN_TTTS_SWTDEL_Shift
00000004 l       *ABS*	00000000 FDCAN2_FDCAN_TTTS_EVTSEL_Shift
4000a800 l       *ABS*	00000000 CAN_CCU_BASE
4000a800 l       *ABS*	00000000 CAN_CCU_CREL
00000000 l       *ABS*	00000000 CAN_CCU_CREL_DAY_Shift
00000008 l       *ABS*	00000000 CAN_CCU_CREL_MON_Shift
00000010 l       *ABS*	00000000 CAN_CCU_CREL_YEAR_Shift
00000014 l       *ABS*	00000000 CAN_CCU_CREL_SUBSTEP_Shift
00000018 l       *ABS*	00000000 CAN_CCU_CREL_STEP_Shift
0000001c l       *ABS*	00000000 CAN_CCU_CREL_REL_Shift
4000a804 l       *ABS*	00000000 CAN_CCU_CCFG
00000000 l       *ABS*	00000000 CAN_CCU_CCFG_TQBT_Shift
00000040 l       *ABS*	00000000 CAN_CCU_CCFG_BCC
00000080 l       *ABS*	00000000 CAN_CCU_CCFG_CFL
00000008 l       *ABS*	00000000 CAN_CCU_CCFG_OCPM_Shift
00000010 l       *ABS*	00000000 CAN_CCU_CCFG_CDIV_Shift
80000000 l       *ABS*	00000000 CAN_CCU_CCFG_SWR
4000a808 l       *ABS*	00000000 CAN_CCU_CSTAT
00000000 l       *ABS*	00000000 CAN_CCU_CSTAT_OCPC_Shift
00000012 l       *ABS*	00000000 CAN_CCU_CSTAT_TQC_Shift
0000001e l       *ABS*	00000000 CAN_CCU_CSTAT_CALS_Shift
4000a80c l       *ABS*	00000000 CAN_CCU_CWD
00000000 l       *ABS*	00000000 CAN_CCU_CWD_WDC_Shift
00000010 l       *ABS*	00000000 CAN_CCU_CWD_WDV_Shift
4000a810 l       *ABS*	00000000 CAN_CCU_IR
00000001 l       *ABS*	00000000 CAN_CCU_IR_CWE
00000002 l       *ABS*	00000000 CAN_CCU_IR_CSC
4000a814 l       *ABS*	00000000 CAN_CCU_IE
00000001 l       *ABS*	00000000 CAN_CCU_IE_CWEE
00000002 l       *ABS*	00000000 CAN_CCU_IE_CSCE
40009400 l       *ABS*	00000000 MDIOS_BASE
40009400 l       *ABS*	00000000 MDIOS_CR
00000001 l       *ABS*	00000000 MDIOS_CR_EN
00000002 l       *ABS*	00000000 MDIOS_CR_WRIE
00000004 l       *ABS*	00000000 MDIOS_CR_RDIE
00000008 l       *ABS*	00000000 MDIOS_CR_EIE
00000080 l       *ABS*	00000000 MDIOS_CR_DPC
00000008 l       *ABS*	00000000 MDIOS_CR_PORT_ADDRESS_Shift
40009404 l       *ABS*	00000000 MDIOS_WRFR
00000000 l       *ABS*	00000000 MDIOS_WRFR_WRF_Shift
40009408 l       *ABS*	00000000 MDIOS_CWRFR
00000000 l       *ABS*	00000000 MDIOS_CWRFR_CWRF_Shift
4000940c l       *ABS*	00000000 MDIOS_RDFR
00000000 l       *ABS*	00000000 MDIOS_RDFR_RDF_Shift
40009410 l       *ABS*	00000000 MDIOS_CRDFR
00000000 l       *ABS*	00000000 MDIOS_CRDFR_CRDF_Shift
40009414 l       *ABS*	00000000 MDIOS_SR
00000001 l       *ABS*	00000000 MDIOS_SR_PERF
00000002 l       *ABS*	00000000 MDIOS_SR_SERF
00000004 l       *ABS*	00000000 MDIOS_SR_TERF
40009418 l       *ABS*	00000000 MDIOS_CLRFR
00000001 l       *ABS*	00000000 MDIOS_CLRFR_CPERF
00000002 l       *ABS*	00000000 MDIOS_CLRFR_CSERF
00000004 l       *ABS*	00000000 MDIOS_CLRFR_CTERF
4000941c l       *ABS*	00000000 MDIOS_DINR0
00000000 l       *ABS*	00000000 MDIOS_DINR0_DIN0_Shift
40009420 l       *ABS*	00000000 MDIOS_DINR1
00000000 l       *ABS*	00000000 MDIOS_DINR1_DIN1_Shift
40009424 l       *ABS*	00000000 MDIOS_DINR2
00000000 l       *ABS*	00000000 MDIOS_DINR2_DIN2_Shift
40009428 l       *ABS*	00000000 MDIOS_DINR3
00000000 l       *ABS*	00000000 MDIOS_DINR3_DIN3_Shift
4000942c l       *ABS*	00000000 MDIOS_DINR4
00000000 l       *ABS*	00000000 MDIOS_DINR4_DIN4_Shift
40009430 l       *ABS*	00000000 MDIOS_DINR5
00000000 l       *ABS*	00000000 MDIOS_DINR5_DIN5_Shift
40009434 l       *ABS*	00000000 MDIOS_DINR6
00000000 l       *ABS*	00000000 MDIOS_DINR6_DIN6_Shift
40009438 l       *ABS*	00000000 MDIOS_DINR7
00000000 l       *ABS*	00000000 MDIOS_DINR7_DIN7_Shift
4000943c l       *ABS*	00000000 MDIOS_DINR8
00000000 l       *ABS*	00000000 MDIOS_DINR8_DIN8_Shift
40009440 l       *ABS*	00000000 MDIOS_DINR9
00000000 l       *ABS*	00000000 MDIOS_DINR9_DIN9_Shift
40009444 l       *ABS*	00000000 MDIOS_DINR10
00000000 l       *ABS*	00000000 MDIOS_DINR10_DIN10_Shift
40009448 l       *ABS*	00000000 MDIOS_DINR11
00000000 l       *ABS*	00000000 MDIOS_DINR11_DIN11_Shift
4000944c l       *ABS*	00000000 MDIOS_DINR12
00000000 l       *ABS*	00000000 MDIOS_DINR12_DIN12_Shift
40009450 l       *ABS*	00000000 MDIOS_DINR13
00000000 l       *ABS*	00000000 MDIOS_DINR13_DIN13_Shift
40009454 l       *ABS*	00000000 MDIOS_DINR14
00000000 l       *ABS*	00000000 MDIOS_DINR14_DIN14_Shift
40009458 l       *ABS*	00000000 MDIOS_DINR15
00000000 l       *ABS*	00000000 MDIOS_DINR15_DIN15_Shift
4000945c l       *ABS*	00000000 MDIOS_DINR16
00000000 l       *ABS*	00000000 MDIOS_DINR16_DIN16_Shift
40009460 l       *ABS*	00000000 MDIOS_DINR17
00000000 l       *ABS*	00000000 MDIOS_DINR17_DIN17_Shift
40009464 l       *ABS*	00000000 MDIOS_DINR18
00000000 l       *ABS*	00000000 MDIOS_DINR18_DIN18_Shift
40009468 l       *ABS*	00000000 MDIOS_DINR19
00000000 l       *ABS*	00000000 MDIOS_DINR19_DIN19_Shift
4000946c l       *ABS*	00000000 MDIOS_DINR20
00000000 l       *ABS*	00000000 MDIOS_DINR20_DIN20_Shift
40009470 l       *ABS*	00000000 MDIOS_DINR21
00000000 l       *ABS*	00000000 MDIOS_DINR21_DIN21_Shift
40009474 l       *ABS*	00000000 MDIOS_DINR22
00000000 l       *ABS*	00000000 MDIOS_DINR22_DIN22_Shift
40009478 l       *ABS*	00000000 MDIOS_DINR23
00000000 l       *ABS*	00000000 MDIOS_DINR23_DIN23_Shift
4000947c l       *ABS*	00000000 MDIOS_DINR24
00000000 l       *ABS*	00000000 MDIOS_DINR24_DIN24_Shift
40009480 l       *ABS*	00000000 MDIOS_DINR25
00000000 l       *ABS*	00000000 MDIOS_DINR25_DIN25_Shift
40009484 l       *ABS*	00000000 MDIOS_DINR26
00000000 l       *ABS*	00000000 MDIOS_DINR26_DIN26_Shift
40009488 l       *ABS*	00000000 MDIOS_DINR27
00000000 l       *ABS*	00000000 MDIOS_DINR27_DIN27_Shift
4000948c l       *ABS*	00000000 MDIOS_DINR28
00000000 l       *ABS*	00000000 MDIOS_DINR28_DIN28_Shift
40009490 l       *ABS*	00000000 MDIOS_DINR29
00000000 l       *ABS*	00000000 MDIOS_DINR29_DIN29_Shift
40009494 l       *ABS*	00000000 MDIOS_DINR30
00000000 l       *ABS*	00000000 MDIOS_DINR30_DIN30_Shift
40009498 l       *ABS*	00000000 MDIOS_DINR31
00000000 l       *ABS*	00000000 MDIOS_DINR31_DIN31_Shift
4000949c l       *ABS*	00000000 MDIOS_DOUTR0
00000000 l       *ABS*	00000000 MDIOS_DOUTR0_DOUT0_Shift
400094a0 l       *ABS*	00000000 MDIOS_DOUTR1
00000000 l       *ABS*	00000000 MDIOS_DOUTR1_DOUT1_Shift
400094a4 l       *ABS*	00000000 MDIOS_DOUTR2
00000000 l       *ABS*	00000000 MDIOS_DOUTR2_DOUT2_Shift
400094a8 l       *ABS*	00000000 MDIOS_DOUTR3
00000000 l       *ABS*	00000000 MDIOS_DOUTR3_DOUT3_Shift
400094ac l       *ABS*	00000000 MDIOS_DOUTR4
00000000 l       *ABS*	00000000 MDIOS_DOUTR4_DOUT4_Shift
400094b0 l       *ABS*	00000000 MDIOS_DOUTR5
00000000 l       *ABS*	00000000 MDIOS_DOUTR5_DOUT5_Shift
400094b4 l       *ABS*	00000000 MDIOS_DOUTR6
00000000 l       *ABS*	00000000 MDIOS_DOUTR6_DOUT6_Shift
400094b8 l       *ABS*	00000000 MDIOS_DOUTR7
00000000 l       *ABS*	00000000 MDIOS_DOUTR7_DOUT7_Shift
400094bc l       *ABS*	00000000 MDIOS_DOUTR8
00000000 l       *ABS*	00000000 MDIOS_DOUTR8_DOUT8_Shift
400094c0 l       *ABS*	00000000 MDIOS_DOUTR9
00000000 l       *ABS*	00000000 MDIOS_DOUTR9_DOUT9_Shift
400094c4 l       *ABS*	00000000 MDIOS_DOUTR10
00000000 l       *ABS*	00000000 MDIOS_DOUTR10_DOUT10_Shift
400094c8 l       *ABS*	00000000 MDIOS_DOUTR11
00000000 l       *ABS*	00000000 MDIOS_DOUTR11_DOUT11_Shift
400094cc l       *ABS*	00000000 MDIOS_DOUTR12
00000000 l       *ABS*	00000000 MDIOS_DOUTR12_DOUT12_Shift
400094d0 l       *ABS*	00000000 MDIOS_DOUTR13
00000000 l       *ABS*	00000000 MDIOS_DOUTR13_DOUT13_Shift
400094d4 l       *ABS*	00000000 MDIOS_DOUTR14
00000000 l       *ABS*	00000000 MDIOS_DOUTR14_DOUT14_Shift
400094d8 l       *ABS*	00000000 MDIOS_DOUTR15
00000000 l       *ABS*	00000000 MDIOS_DOUTR15_DOUT15_Shift
400094dc l       *ABS*	00000000 MDIOS_DOUTR16
00000000 l       *ABS*	00000000 MDIOS_DOUTR16_DOUT16_Shift
400094e0 l       *ABS*	00000000 MDIOS_DOUTR17
00000000 l       *ABS*	00000000 MDIOS_DOUTR17_DOUT17_Shift
400094e4 l       *ABS*	00000000 MDIOS_DOUTR18
00000000 l       *ABS*	00000000 MDIOS_DOUTR18_DOUT18_Shift
400094e8 l       *ABS*	00000000 MDIOS_DOUTR19
00000000 l       *ABS*	00000000 MDIOS_DOUTR19_DOUT19_Shift
400094ec l       *ABS*	00000000 MDIOS_DOUTR20
00000000 l       *ABS*	00000000 MDIOS_DOUTR20_DOUT20_Shift
400094f0 l       *ABS*	00000000 MDIOS_DOUTR21
00000000 l       *ABS*	00000000 MDIOS_DOUTR21_DOUT21_Shift
400094f4 l       *ABS*	00000000 MDIOS_DOUTR22
00000000 l       *ABS*	00000000 MDIOS_DOUTR22_DOUT22_Shift
400094f8 l       *ABS*	00000000 MDIOS_DOUTR23
00000000 l       *ABS*	00000000 MDIOS_DOUTR23_DOUT23_Shift
400094fc l       *ABS*	00000000 MDIOS_DOUTR24
00000000 l       *ABS*	00000000 MDIOS_DOUTR24_DOUT24_Shift
40009500 l       *ABS*	00000000 MDIOS_DOUTR25
00000000 l       *ABS*	00000000 MDIOS_DOUTR25_DOUT25_Shift
40009504 l       *ABS*	00000000 MDIOS_DOUTR26
00000000 l       *ABS*	00000000 MDIOS_DOUTR26_DOUT26_Shift
40009508 l       *ABS*	00000000 MDIOS_DOUTR27
00000000 l       *ABS*	00000000 MDIOS_DOUTR27_DOUT27_Shift
4000950c l       *ABS*	00000000 MDIOS_DOUTR28
00000000 l       *ABS*	00000000 MDIOS_DOUTR28_DOUT28_Shift
40009510 l       *ABS*	00000000 MDIOS_DOUTR29
00000000 l       *ABS*	00000000 MDIOS_DOUTR29_DOUT29_Shift
40009514 l       *ABS*	00000000 MDIOS_DOUTR30
00000000 l       *ABS*	00000000 MDIOS_DOUTR30_DOUT30_Shift
40009518 l       *ABS*	00000000 MDIOS_DOUTR31
00000000 l       *ABS*	00000000 MDIOS_DOUTR31_DOUT31_Shift
40009000 l       *ABS*	00000000 OPAMP_BASE
40009000 l       *ABS*	00000000 OPAMP_OPAMP1_CSR
00000001 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_OPAEN
00000002 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_FORCE_VP
00000002 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_VP_SEL_Shift
00000005 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_VM_SEL_Shift
00000100 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_OPAHSM
00000800 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_CALON
0000000c l       *ABS*	00000000 OPAMP_OPAMP1_CSR_CALSEL_Shift
0000000e l       *ABS*	00000000 OPAMP_OPAMP1_CSR_PGA_GAIN_Shift
00040000 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_USERTRIM
20000000 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_TSTREF
40000000 l       *ABS*	00000000 OPAMP_OPAMP1_CSR_CALOUT
40009004 l       *ABS*	00000000 OPAMP_OPAMP1_OTR
00000000 l       *ABS*	00000000 OPAMP_OPAMP1_OTR_TRIMOFFSETN_Shift
00000008 l       *ABS*	00000000 OPAMP_OPAMP1_OTR_TRIMOFFSETP_Shift
40009008 l       *ABS*	00000000 OPAMP_OPAMP1_HSOTR
00000000 l       *ABS*	00000000 OPAMP_OPAMP1_HSOTR_TRIMLPOFFSETN_Shift
00000008 l       *ABS*	00000000 OPAMP_OPAMP1_HSOTR_TRIMLPOFFSETP_Shift
40009010 l       *ABS*	00000000 OPAMP_OPAMP2_CSR
00000001 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_OPAEN
00000002 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_FORCE_VP
00000005 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_VM_SEL_Shift
00000100 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_OPAHSM
00000800 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_CALON
0000000c l       *ABS*	00000000 OPAMP_OPAMP2_CSR_CALSEL_Shift
0000000e l       *ABS*	00000000 OPAMP_OPAMP2_CSR_PGA_GAIN_Shift
00040000 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_USERTRIM
20000000 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_TSTREF
40000000 l       *ABS*	00000000 OPAMP_OPAMP2_CSR_CALOUT
40009014 l       *ABS*	00000000 OPAMP_OPAMP2_OTR
00000000 l       *ABS*	00000000 OPAMP_OPAMP2_OTR_TRIMOFFSETN_Shift
00000008 l       *ABS*	00000000 OPAMP_OPAMP2_OTR_TRIMOFFSETP_Shift
40009018 l       *ABS*	00000000 OPAMP_OPAMP2_HSOTR
00000000 l       *ABS*	00000000 OPAMP_OPAMP2_HSOTR_TRIMLPOFFSETN_Shift
00000008 l       *ABS*	00000000 OPAMP_OPAMP2_HSOTR_TRIMLPOFFSETP_Shift
40008800 l       *ABS*	00000000 SWPMI_BASE
40008800 l       *ABS*	00000000 SWPMI_CR
00000001 l       *ABS*	00000000 SWPMI_CR_RXDMA
00000002 l       *ABS*	00000000 SWPMI_CR_TXDMA
00000004 l       *ABS*	00000000 SWPMI_CR_RXMODE
00000008 l       *ABS*	00000000 SWPMI_CR_TXMODE
00000010 l       *ABS*	00000000 SWPMI_CR_LPBK
00000020 l       *ABS*	00000000 SWPMI_CR_SWPACT
00000400 l       *ABS*	00000000 SWPMI_CR_DEACT
00000800 l       *ABS*	00000000 SWPMI_CR_SWPTEN
40008804 l       *ABS*	00000000 SWPMI_BRR
00000000 l       *ABS*	00000000 SWPMI_BRR_BR_Shift
4000880c l       *ABS*	00000000 SWPMI_ISR
00000001 l       *ABS*	00000000 SWPMI_ISR_RXBFF
00000002 l       *ABS*	00000000 SWPMI_ISR_TXBEF
00000004 l       *ABS*	00000000 SWPMI_ISR_RXBERF
00000008 l       *ABS*	00000000 SWPMI_ISR_RXOVRF
00000010 l       *ABS*	00000000 SWPMI_ISR_TXUNRF
00000020 l       *ABS*	00000000 SWPMI_ISR_RXNE
00000040 l       *ABS*	00000000 SWPMI_ISR_TXE
00000080 l       *ABS*	00000000 SWPMI_ISR_TCF
00000100 l       *ABS*	00000000 SWPMI_ISR_SRF
00000200 l       *ABS*	00000000 SWPMI_ISR_SUSP
00000400 l       *ABS*	00000000 SWPMI_ISR_DEACTF
00000800 l       *ABS*	00000000 SWPMI_ISR_RDYF
40008810 l       *ABS*	00000000 SWPMI_ICR
00000001 l       *ABS*	00000000 SWPMI_ICR_CRXBFF
00000002 l       *ABS*	00000000 SWPMI_ICR_CTXBEF
00000004 l       *ABS*	00000000 SWPMI_ICR_CRXBERF
00000008 l       *ABS*	00000000 SWPMI_ICR_CRXOVRF
00000010 l       *ABS*	00000000 SWPMI_ICR_CTXUNRF
00000080 l       *ABS*	00000000 SWPMI_ICR_CTCF
00000100 l       *ABS*	00000000 SWPMI_ICR_CSRF
00000800 l       *ABS*	00000000 SWPMI_ICR_CRDYF
40008814 l       *ABS*	00000000 SWPMI_IER
00000001 l       *ABS*	00000000 SWPMI_IER_RXBFIE
00000002 l       *ABS*	00000000 SWPMI_IER_TXBEIE
00000004 l       *ABS*	00000000 SWPMI_IER_RXBERIE
00000008 l       *ABS*	00000000 SWPMI_IER_RXOVRIE
00000010 l       *ABS*	00000000 SWPMI_IER_TXUNRIE
00000020 l       *ABS*	00000000 SWPMI_IER_RIE
00000040 l       *ABS*	00000000 SWPMI_IER_TIE
00000080 l       *ABS*	00000000 SWPMI_IER_TCIE
00000100 l       *ABS*	00000000 SWPMI_IER_SRIE
00000800 l       *ABS*	00000000 SWPMI_IER_RDYIE
40008818 l       *ABS*	00000000 SWPMI_RFL
00000000 l       *ABS*	00000000 SWPMI_RFL_RFL_Shift
4000881c l       *ABS*	00000000 SWPMI_TDR
00000000 l       *ABS*	00000000 SWPMI_TDR_TD_Shift
40008820 l       *ABS*	00000000 SWPMI_RDR
00000000 l       *ABS*	00000000 SWPMI_RDR_RD_Shift
40008824 l       *ABS*	00000000 SWPMI_OR
00000001 l       *ABS*	00000000 SWPMI_OR_SWP_TBYP
00000002 l       *ABS*	00000000 SWPMI_OR_SWP_CLASS
40000000 l       *ABS*	00000000 TIM2_BASE
40000000 l       *ABS*	00000000 TIM2_CR1
00000800 l       *ABS*	00000000 TIM2_CR1_UIFREMAP
00000008 l       *ABS*	00000000 TIM2_CR1_CKD_Shift
00000080 l       *ABS*	00000000 TIM2_CR1_ARPE
00000005 l       *ABS*	00000000 TIM2_CR1_CMS_Shift
00000010 l       *ABS*	00000000 TIM2_CR1_DIR
00000008 l       *ABS*	00000000 TIM2_CR1_OPM
00000004 l       *ABS*	00000000 TIM2_CR1_URS
00000002 l       *ABS*	00000000 TIM2_CR1_UDIS
00000001 l       *ABS*	00000000 TIM2_CR1_CEN
40000004 l       *ABS*	00000000 TIM2_CR2
00000080 l       *ABS*	00000000 TIM2_CR2_TI1S
00000004 l       *ABS*	00000000 TIM2_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM2_CR2_CCDS
40000008 l       *ABS*	00000000 TIM2_SMCR
00000014 l       *ABS*	00000000 TIM2_SMCR_TS_4_3_Shift
00010000 l       *ABS*	00000000 TIM2_SMCR_SMS_3
00008000 l       *ABS*	00000000 TIM2_SMCR_ETP
00004000 l       *ABS*	00000000 TIM2_SMCR_ECE
0000000c l       *ABS*	00000000 TIM2_SMCR_ETPS_Shift
00000008 l       *ABS*	00000000 TIM2_SMCR_ETF_Shift
00000080 l       *ABS*	00000000 TIM2_SMCR_MSM
00000004 l       *ABS*	00000000 TIM2_SMCR_TS_Shift
00000000 l       *ABS*	00000000 TIM2_SMCR_SMS_Shift
4000000c l       *ABS*	00000000 TIM2_DIER
00004000 l       *ABS*	00000000 TIM2_DIER_TDE
00001000 l       *ABS*	00000000 TIM2_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM2_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM2_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM2_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM2_DIER_UDE
00000040 l       *ABS*	00000000 TIM2_DIER_TIE
00000010 l       *ABS*	00000000 TIM2_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM2_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM2_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM2_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM2_DIER_UIE
40000010 l       *ABS*	00000000 TIM2_SR
00001000 l       *ABS*	00000000 TIM2_SR_CC4OF
00000800 l       *ABS*	00000000 TIM2_SR_CC3OF
00000400 l       *ABS*	00000000 TIM2_SR_CC2OF
00000200 l       *ABS*	00000000 TIM2_SR_CC1OF
00000040 l       *ABS*	00000000 TIM2_SR_TIF
00000010 l       *ABS*	00000000 TIM2_SR_CC4IF
00000008 l       *ABS*	00000000 TIM2_SR_CC3IF
00000004 l       *ABS*	00000000 TIM2_SR_CC2IF
00000002 l       *ABS*	00000000 TIM2_SR_CC1IF
00000001 l       *ABS*	00000000 TIM2_SR_UIF
40000014 l       *ABS*	00000000 TIM2_EGR
00000040 l       *ABS*	00000000 TIM2_EGR_TG
00000010 l       *ABS*	00000000 TIM2_EGR_CC4G
00000008 l       *ABS*	00000000 TIM2_EGR_CC3G
00000004 l       *ABS*	00000000 TIM2_EGR_CC2G
00000002 l       *ABS*	00000000 TIM2_EGR_CC1G
00000001 l       *ABS*	00000000 TIM2_EGR_UG
40000018 l       *ABS*	00000000 TIM2_CCMR1_Output
00000000 l       *ABS*	00000000 TIM2_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM2_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM2_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM2_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM2_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM2_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM2_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM2_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM2_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM2_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM2_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM2_CCMR1_Output_OC2M_3
40000018 l       *ABS*	00000000 TIM2_CCMR1_Input
0000000c l       *ABS*	00000000 TIM2_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM2_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM2_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM2_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM2_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM2_CCMR1_Input_CC1S_Shift
4000001c l       *ABS*	00000000 TIM2_CCMR2_Output
01000000 l       *ABS*	00000000 TIM2_CCMR2_Output_OC4M_3
00010000 l       *ABS*	00000000 TIM2_CCMR2_Output_OC3M_3
00008000 l       *ABS*	00000000 TIM2_CCMR2_Output_O24CE
0000000c l       *ABS*	00000000 TIM2_CCMR2_Output_OC4M_Shift
00000800 l       *ABS*	00000000 TIM2_CCMR2_Output_OC4PE
00000400 l       *ABS*	00000000 TIM2_CCMR2_Output_OC4FE
00000008 l       *ABS*	00000000 TIM2_CCMR2_Output_CC4S_Shift
00000080 l       *ABS*	00000000 TIM2_CCMR2_Output_OC3CE
00000004 l       *ABS*	00000000 TIM2_CCMR2_Output_OC3M_Shift
00000008 l       *ABS*	00000000 TIM2_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM2_CCMR2_Output_OC3FE
00000000 l       *ABS*	00000000 TIM2_CCMR2_Output_CC3S_Shift
4000001c l       *ABS*	00000000 TIM2_CCMR2_Input
0000000c l       *ABS*	00000000 TIM2_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM2_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM2_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM2_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM2_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM2_CCMR2_Input_CC3S_Shift
40000020 l       *ABS*	00000000 TIM2_CCER
00008000 l       *ABS*	00000000 TIM2_CCER_CC4NP
00002000 l       *ABS*	00000000 TIM2_CCER_CC4P
00001000 l       *ABS*	00000000 TIM2_CCER_CC4E
00000800 l       *ABS*	00000000 TIM2_CCER_CC3NP
00000200 l       *ABS*	00000000 TIM2_CCER_CC3P
00000100 l       *ABS*	00000000 TIM2_CCER_CC3E
00000080 l       *ABS*	00000000 TIM2_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM2_CCER_CC2P
00000010 l       *ABS*	00000000 TIM2_CCER_CC2E
00000008 l       *ABS*	00000000 TIM2_CCER_CC1NP
00000002 l       *ABS*	00000000 TIM2_CCER_CC1P
00000001 l       *ABS*	00000000 TIM2_CCER_CC1E
40000024 l       *ABS*	00000000 TIM2_CNT
00000000 l       *ABS*	00000000 TIM2_CNT_CNT_L_Shift
00000010 l       *ABS*	00000000 TIM2_CNT_CNT_H_Shift
40000028 l       *ABS*	00000000 TIM2_PSC
00000000 l       *ABS*	00000000 TIM2_PSC_PSC_Shift
4000002c l       *ABS*	00000000 TIM2_ARR
00000010 l       *ABS*	00000000 TIM2_ARR_ARR_H_Shift
00000000 l       *ABS*	00000000 TIM2_ARR_ARR_L_Shift
40000034 l       *ABS*	00000000 TIM2_CCR1
00000010 l       *ABS*	00000000 TIM2_CCR1_CCR1_H_Shift
00000000 l       *ABS*	00000000 TIM2_CCR1_CCR1_L_Shift
40000038 l       *ABS*	00000000 TIM2_CCR2
00000010 l       *ABS*	00000000 TIM2_CCR2_CCR2_H_Shift
00000000 l       *ABS*	00000000 TIM2_CCR2_CCR2_L_Shift
4000003c l       *ABS*	00000000 TIM2_CCR3
00000010 l       *ABS*	00000000 TIM2_CCR3_CCR3_H_Shift
00000000 l       *ABS*	00000000 TIM2_CCR3_CCR3_L_Shift
40000040 l       *ABS*	00000000 TIM2_CCR4
00000010 l       *ABS*	00000000 TIM2_CCR4_CCR4_H_Shift
00000000 l       *ABS*	00000000 TIM2_CCR4_CCR4_L_Shift
40000048 l       *ABS*	00000000 TIM2_DCR
00000008 l       *ABS*	00000000 TIM2_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM2_DCR_DBA_Shift
4000004c l       *ABS*	00000000 TIM2_DMAR
00000000 l       *ABS*	00000000 TIM2_DMAR_DMAB_Shift
40000060 l       *ABS*	00000000 TIM2_AF1
0000000e l       *ABS*	00000000 TIM2_AF1_ETRSEL_Shift
40000068 l       *ABS*	00000000 TIM2_TISEL
00000000 l       *ABS*	00000000 TIM2_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM2_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM2_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM2_TISEL_TI4SEL_Shift
40000400 l       *ABS*	00000000 TIM3_BASE
40000400 l       *ABS*	00000000 TIM3_CR1
00000800 l       *ABS*	00000000 TIM3_CR1_UIFREMAP
00000008 l       *ABS*	00000000 TIM3_CR1_CKD_Shift
00000080 l       *ABS*	00000000 TIM3_CR1_ARPE
00000005 l       *ABS*	00000000 TIM3_CR1_CMS_Shift
00000010 l       *ABS*	00000000 TIM3_CR1_DIR
00000008 l       *ABS*	00000000 TIM3_CR1_OPM
00000004 l       *ABS*	00000000 TIM3_CR1_URS
00000002 l       *ABS*	00000000 TIM3_CR1_UDIS
00000001 l       *ABS*	00000000 TIM3_CR1_CEN
40000404 l       *ABS*	00000000 TIM3_CR2
00000080 l       *ABS*	00000000 TIM3_CR2_TI1S
00000004 l       *ABS*	00000000 TIM3_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM3_CR2_CCDS
40000408 l       *ABS*	00000000 TIM3_SMCR
00000014 l       *ABS*	00000000 TIM3_SMCR_TS_4_3_Shift
00010000 l       *ABS*	00000000 TIM3_SMCR_SMS_3
00008000 l       *ABS*	00000000 TIM3_SMCR_ETP
00004000 l       *ABS*	00000000 TIM3_SMCR_ECE
0000000c l       *ABS*	00000000 TIM3_SMCR_ETPS_Shift
00000008 l       *ABS*	00000000 TIM3_SMCR_ETF_Shift
00000080 l       *ABS*	00000000 TIM3_SMCR_MSM
00000004 l       *ABS*	00000000 TIM3_SMCR_TS_Shift
00000000 l       *ABS*	00000000 TIM3_SMCR_SMS_Shift
4000040c l       *ABS*	00000000 TIM3_DIER
00004000 l       *ABS*	00000000 TIM3_DIER_TDE
00001000 l       *ABS*	00000000 TIM3_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM3_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM3_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM3_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM3_DIER_UDE
00000040 l       *ABS*	00000000 TIM3_DIER_TIE
00000010 l       *ABS*	00000000 TIM3_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM3_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM3_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM3_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM3_DIER_UIE
40000410 l       *ABS*	00000000 TIM3_SR
00001000 l       *ABS*	00000000 TIM3_SR_CC4OF
00000800 l       *ABS*	00000000 TIM3_SR_CC3OF
00000400 l       *ABS*	00000000 TIM3_SR_CC2OF
00000200 l       *ABS*	00000000 TIM3_SR_CC1OF
00000040 l       *ABS*	00000000 TIM3_SR_TIF
00000010 l       *ABS*	00000000 TIM3_SR_CC4IF
00000008 l       *ABS*	00000000 TIM3_SR_CC3IF
00000004 l       *ABS*	00000000 TIM3_SR_CC2IF
00000002 l       *ABS*	00000000 TIM3_SR_CC1IF
00000001 l       *ABS*	00000000 TIM3_SR_UIF
40000414 l       *ABS*	00000000 TIM3_EGR
00000040 l       *ABS*	00000000 TIM3_EGR_TG
00000010 l       *ABS*	00000000 TIM3_EGR_CC4G
00000008 l       *ABS*	00000000 TIM3_EGR_CC3G
00000004 l       *ABS*	00000000 TIM3_EGR_CC2G
00000002 l       *ABS*	00000000 TIM3_EGR_CC1G
00000001 l       *ABS*	00000000 TIM3_EGR_UG
40000418 l       *ABS*	00000000 TIM3_CCMR1_Output
00000000 l       *ABS*	00000000 TIM3_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM3_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM3_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM3_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM3_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM3_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM3_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM3_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM3_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM3_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM3_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM3_CCMR1_Output_OC2M_3
40000418 l       *ABS*	00000000 TIM3_CCMR1_Input
0000000c l       *ABS*	00000000 TIM3_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM3_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM3_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM3_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM3_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM3_CCMR1_Input_CC1S_Shift
4000041c l       *ABS*	00000000 TIM3_CCMR2_Output
01000000 l       *ABS*	00000000 TIM3_CCMR2_Output_OC4M_3
00010000 l       *ABS*	00000000 TIM3_CCMR2_Output_OC3M_3
00008000 l       *ABS*	00000000 TIM3_CCMR2_Output_O24CE
0000000c l       *ABS*	00000000 TIM3_CCMR2_Output_OC4M_Shift
00000800 l       *ABS*	00000000 TIM3_CCMR2_Output_OC4PE
00000400 l       *ABS*	00000000 TIM3_CCMR2_Output_OC4FE
00000008 l       *ABS*	00000000 TIM3_CCMR2_Output_CC4S_Shift
00000080 l       *ABS*	00000000 TIM3_CCMR2_Output_OC3CE
00000004 l       *ABS*	00000000 TIM3_CCMR2_Output_OC3M_Shift
00000008 l       *ABS*	00000000 TIM3_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM3_CCMR2_Output_OC3FE
00000000 l       *ABS*	00000000 TIM3_CCMR2_Output_CC3S_Shift
4000041c l       *ABS*	00000000 TIM3_CCMR2_Input
0000000c l       *ABS*	00000000 TIM3_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM3_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM3_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM3_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM3_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM3_CCMR2_Input_CC3S_Shift
40000420 l       *ABS*	00000000 TIM3_CCER
00008000 l       *ABS*	00000000 TIM3_CCER_CC4NP
00002000 l       *ABS*	00000000 TIM3_CCER_CC4P
00001000 l       *ABS*	00000000 TIM3_CCER_CC4E
00000800 l       *ABS*	00000000 TIM3_CCER_CC3NP
00000200 l       *ABS*	00000000 TIM3_CCER_CC3P
00000100 l       *ABS*	00000000 TIM3_CCER_CC3E
00000080 l       *ABS*	00000000 TIM3_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM3_CCER_CC2P
00000010 l       *ABS*	00000000 TIM3_CCER_CC2E
00000008 l       *ABS*	00000000 TIM3_CCER_CC1NP
00000002 l       *ABS*	00000000 TIM3_CCER_CC1P
00000001 l       *ABS*	00000000 TIM3_CCER_CC1E
40000424 l       *ABS*	00000000 TIM3_CNT
00000000 l       *ABS*	00000000 TIM3_CNT_CNT_L_Shift
00000010 l       *ABS*	00000000 TIM3_CNT_CNT_H_Shift
40000428 l       *ABS*	00000000 TIM3_PSC
00000000 l       *ABS*	00000000 TIM3_PSC_PSC_Shift
4000042c l       *ABS*	00000000 TIM3_ARR
00000010 l       *ABS*	00000000 TIM3_ARR_ARR_H_Shift
00000000 l       *ABS*	00000000 TIM3_ARR_ARR_L_Shift
40000434 l       *ABS*	00000000 TIM3_CCR1
00000010 l       *ABS*	00000000 TIM3_CCR1_CCR1_H_Shift
00000000 l       *ABS*	00000000 TIM3_CCR1_CCR1_L_Shift
40000438 l       *ABS*	00000000 TIM3_CCR2
00000010 l       *ABS*	00000000 TIM3_CCR2_CCR2_H_Shift
00000000 l       *ABS*	00000000 TIM3_CCR2_CCR2_L_Shift
4000043c l       *ABS*	00000000 TIM3_CCR3
00000010 l       *ABS*	00000000 TIM3_CCR3_CCR3_H_Shift
00000000 l       *ABS*	00000000 TIM3_CCR3_CCR3_L_Shift
40000440 l       *ABS*	00000000 TIM3_CCR4
00000010 l       *ABS*	00000000 TIM3_CCR4_CCR4_H_Shift
00000000 l       *ABS*	00000000 TIM3_CCR4_CCR4_L_Shift
40000448 l       *ABS*	00000000 TIM3_DCR
00000008 l       *ABS*	00000000 TIM3_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM3_DCR_DBA_Shift
4000044c l       *ABS*	00000000 TIM3_DMAR
00000000 l       *ABS*	00000000 TIM3_DMAR_DMAB_Shift
40000460 l       *ABS*	00000000 TIM3_AF1
0000000e l       *ABS*	00000000 TIM3_AF1_ETRSEL_Shift
40000468 l       *ABS*	00000000 TIM3_TISEL
00000000 l       *ABS*	00000000 TIM3_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM3_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM3_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM3_TISEL_TI4SEL_Shift
40000800 l       *ABS*	00000000 TIM4_BASE
40000800 l       *ABS*	00000000 TIM4_CR1
00000800 l       *ABS*	00000000 TIM4_CR1_UIFREMAP
00000008 l       *ABS*	00000000 TIM4_CR1_CKD_Shift
00000080 l       *ABS*	00000000 TIM4_CR1_ARPE
00000005 l       *ABS*	00000000 TIM4_CR1_CMS_Shift
00000010 l       *ABS*	00000000 TIM4_CR1_DIR
00000008 l       *ABS*	00000000 TIM4_CR1_OPM
00000004 l       *ABS*	00000000 TIM4_CR1_URS
00000002 l       *ABS*	00000000 TIM4_CR1_UDIS
00000001 l       *ABS*	00000000 TIM4_CR1_CEN
40000804 l       *ABS*	00000000 TIM4_CR2
00000080 l       *ABS*	00000000 TIM4_CR2_TI1S
00000004 l       *ABS*	00000000 TIM4_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM4_CR2_CCDS
40000808 l       *ABS*	00000000 TIM4_SMCR
00000014 l       *ABS*	00000000 TIM4_SMCR_TS_4_3_Shift
00010000 l       *ABS*	00000000 TIM4_SMCR_SMS_3
00008000 l       *ABS*	00000000 TIM4_SMCR_ETP
00004000 l       *ABS*	00000000 TIM4_SMCR_ECE
0000000c l       *ABS*	00000000 TIM4_SMCR_ETPS_Shift
00000008 l       *ABS*	00000000 TIM4_SMCR_ETF_Shift
00000080 l       *ABS*	00000000 TIM4_SMCR_MSM
00000004 l       *ABS*	00000000 TIM4_SMCR_TS_Shift
00000000 l       *ABS*	00000000 TIM4_SMCR_SMS_Shift
4000080c l       *ABS*	00000000 TIM4_DIER
00004000 l       *ABS*	00000000 TIM4_DIER_TDE
00001000 l       *ABS*	00000000 TIM4_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM4_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM4_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM4_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM4_DIER_UDE
00000040 l       *ABS*	00000000 TIM4_DIER_TIE
00000010 l       *ABS*	00000000 TIM4_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM4_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM4_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM4_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM4_DIER_UIE
40000810 l       *ABS*	00000000 TIM4_SR
00001000 l       *ABS*	00000000 TIM4_SR_CC4OF
00000800 l       *ABS*	00000000 TIM4_SR_CC3OF
00000400 l       *ABS*	00000000 TIM4_SR_CC2OF
00000200 l       *ABS*	00000000 TIM4_SR_CC1OF
00000040 l       *ABS*	00000000 TIM4_SR_TIF
00000010 l       *ABS*	00000000 TIM4_SR_CC4IF
00000008 l       *ABS*	00000000 TIM4_SR_CC3IF
00000004 l       *ABS*	00000000 TIM4_SR_CC2IF
00000002 l       *ABS*	00000000 TIM4_SR_CC1IF
00000001 l       *ABS*	00000000 TIM4_SR_UIF
40000814 l       *ABS*	00000000 TIM4_EGR
00000040 l       *ABS*	00000000 TIM4_EGR_TG
00000010 l       *ABS*	00000000 TIM4_EGR_CC4G
00000008 l       *ABS*	00000000 TIM4_EGR_CC3G
00000004 l       *ABS*	00000000 TIM4_EGR_CC2G
00000002 l       *ABS*	00000000 TIM4_EGR_CC1G
00000001 l       *ABS*	00000000 TIM4_EGR_UG
40000818 l       *ABS*	00000000 TIM4_CCMR1_Output
00000000 l       *ABS*	00000000 TIM4_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM4_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM4_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM4_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM4_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM4_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM4_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM4_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM4_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM4_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM4_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM4_CCMR1_Output_OC2M_3
40000818 l       *ABS*	00000000 TIM4_CCMR1_Input
0000000c l       *ABS*	00000000 TIM4_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM4_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM4_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM4_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM4_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM4_CCMR1_Input_CC1S_Shift
4000081c l       *ABS*	00000000 TIM4_CCMR2_Output
01000000 l       *ABS*	00000000 TIM4_CCMR2_Output_OC4M_3
00010000 l       *ABS*	00000000 TIM4_CCMR2_Output_OC3M_3
00008000 l       *ABS*	00000000 TIM4_CCMR2_Output_O24CE
0000000c l       *ABS*	00000000 TIM4_CCMR2_Output_OC4M_Shift
00000800 l       *ABS*	00000000 TIM4_CCMR2_Output_OC4PE
00000400 l       *ABS*	00000000 TIM4_CCMR2_Output_OC4FE
00000008 l       *ABS*	00000000 TIM4_CCMR2_Output_CC4S_Shift
00000080 l       *ABS*	00000000 TIM4_CCMR2_Output_OC3CE
00000004 l       *ABS*	00000000 TIM4_CCMR2_Output_OC3M_Shift
00000008 l       *ABS*	00000000 TIM4_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM4_CCMR2_Output_OC3FE
00000000 l       *ABS*	00000000 TIM4_CCMR2_Output_CC3S_Shift
4000081c l       *ABS*	00000000 TIM4_CCMR2_Input
0000000c l       *ABS*	00000000 TIM4_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM4_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM4_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM4_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM4_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM4_CCMR2_Input_CC3S_Shift
40000820 l       *ABS*	00000000 TIM4_CCER
00008000 l       *ABS*	00000000 TIM4_CCER_CC4NP
00002000 l       *ABS*	00000000 TIM4_CCER_CC4P
00001000 l       *ABS*	00000000 TIM4_CCER_CC4E
00000800 l       *ABS*	00000000 TIM4_CCER_CC3NP
00000200 l       *ABS*	00000000 TIM4_CCER_CC3P
00000100 l       *ABS*	00000000 TIM4_CCER_CC3E
00000080 l       *ABS*	00000000 TIM4_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM4_CCER_CC2P
00000010 l       *ABS*	00000000 TIM4_CCER_CC2E
00000008 l       *ABS*	00000000 TIM4_CCER_CC1NP
00000002 l       *ABS*	00000000 TIM4_CCER_CC1P
00000001 l       *ABS*	00000000 TIM4_CCER_CC1E
40000824 l       *ABS*	00000000 TIM4_CNT
00000000 l       *ABS*	00000000 TIM4_CNT_CNT_L_Shift
00000010 l       *ABS*	00000000 TIM4_CNT_CNT_H_Shift
40000828 l       *ABS*	00000000 TIM4_PSC
00000000 l       *ABS*	00000000 TIM4_PSC_PSC_Shift
4000082c l       *ABS*	00000000 TIM4_ARR
00000010 l       *ABS*	00000000 TIM4_ARR_ARR_H_Shift
00000000 l       *ABS*	00000000 TIM4_ARR_ARR_L_Shift
40000834 l       *ABS*	00000000 TIM4_CCR1
00000010 l       *ABS*	00000000 TIM4_CCR1_CCR1_H_Shift
00000000 l       *ABS*	00000000 TIM4_CCR1_CCR1_L_Shift
40000838 l       *ABS*	00000000 TIM4_CCR2
00000010 l       *ABS*	00000000 TIM4_CCR2_CCR2_H_Shift
00000000 l       *ABS*	00000000 TIM4_CCR2_CCR2_L_Shift
4000083c l       *ABS*	00000000 TIM4_CCR3
00000010 l       *ABS*	00000000 TIM4_CCR3_CCR3_H_Shift
00000000 l       *ABS*	00000000 TIM4_CCR3_CCR3_L_Shift
40000840 l       *ABS*	00000000 TIM4_CCR4
00000010 l       *ABS*	00000000 TIM4_CCR4_CCR4_H_Shift
00000000 l       *ABS*	00000000 TIM4_CCR4_CCR4_L_Shift
40000848 l       *ABS*	00000000 TIM4_DCR
00000008 l       *ABS*	00000000 TIM4_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM4_DCR_DBA_Shift
4000084c l       *ABS*	00000000 TIM4_DMAR
00000000 l       *ABS*	00000000 TIM4_DMAR_DMAB_Shift
40000860 l       *ABS*	00000000 TIM4_AF1
0000000e l       *ABS*	00000000 TIM4_AF1_ETRSEL_Shift
40000868 l       *ABS*	00000000 TIM4_TISEL
00000000 l       *ABS*	00000000 TIM4_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM4_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM4_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM4_TISEL_TI4SEL_Shift
40000c00 l       *ABS*	00000000 TIM5_BASE
40000c00 l       *ABS*	00000000 TIM5_CR1
00000800 l       *ABS*	00000000 TIM5_CR1_UIFREMAP
00000008 l       *ABS*	00000000 TIM5_CR1_CKD_Shift
00000080 l       *ABS*	00000000 TIM5_CR1_ARPE
00000005 l       *ABS*	00000000 TIM5_CR1_CMS_Shift
00000010 l       *ABS*	00000000 TIM5_CR1_DIR
00000008 l       *ABS*	00000000 TIM5_CR1_OPM
00000004 l       *ABS*	00000000 TIM5_CR1_URS
00000002 l       *ABS*	00000000 TIM5_CR1_UDIS
00000001 l       *ABS*	00000000 TIM5_CR1_CEN
40000c04 l       *ABS*	00000000 TIM5_CR2
00000080 l       *ABS*	00000000 TIM5_CR2_TI1S
00000004 l       *ABS*	00000000 TIM5_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM5_CR2_CCDS
40000c08 l       *ABS*	00000000 TIM5_SMCR
00000014 l       *ABS*	00000000 TIM5_SMCR_TS_4_3_Shift
00010000 l       *ABS*	00000000 TIM5_SMCR_SMS_3
00008000 l       *ABS*	00000000 TIM5_SMCR_ETP
00004000 l       *ABS*	00000000 TIM5_SMCR_ECE
0000000c l       *ABS*	00000000 TIM5_SMCR_ETPS_Shift
00000008 l       *ABS*	00000000 TIM5_SMCR_ETF_Shift
00000080 l       *ABS*	00000000 TIM5_SMCR_MSM
00000004 l       *ABS*	00000000 TIM5_SMCR_TS_Shift
00000000 l       *ABS*	00000000 TIM5_SMCR_SMS_Shift
40000c0c l       *ABS*	00000000 TIM5_DIER
00004000 l       *ABS*	00000000 TIM5_DIER_TDE
00001000 l       *ABS*	00000000 TIM5_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM5_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM5_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM5_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM5_DIER_UDE
00000040 l       *ABS*	00000000 TIM5_DIER_TIE
00000010 l       *ABS*	00000000 TIM5_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM5_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM5_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM5_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM5_DIER_UIE
40000c10 l       *ABS*	00000000 TIM5_SR
00001000 l       *ABS*	00000000 TIM5_SR_CC4OF
00000800 l       *ABS*	00000000 TIM5_SR_CC3OF
00000400 l       *ABS*	00000000 TIM5_SR_CC2OF
00000200 l       *ABS*	00000000 TIM5_SR_CC1OF
00000040 l       *ABS*	00000000 TIM5_SR_TIF
00000010 l       *ABS*	00000000 TIM5_SR_CC4IF
00000008 l       *ABS*	00000000 TIM5_SR_CC3IF
00000004 l       *ABS*	00000000 TIM5_SR_CC2IF
00000002 l       *ABS*	00000000 TIM5_SR_CC1IF
00000001 l       *ABS*	00000000 TIM5_SR_UIF
40000c14 l       *ABS*	00000000 TIM5_EGR
00000040 l       *ABS*	00000000 TIM5_EGR_TG
00000010 l       *ABS*	00000000 TIM5_EGR_CC4G
00000008 l       *ABS*	00000000 TIM5_EGR_CC3G
00000004 l       *ABS*	00000000 TIM5_EGR_CC2G
00000002 l       *ABS*	00000000 TIM5_EGR_CC1G
00000001 l       *ABS*	00000000 TIM5_EGR_UG
40000c18 l       *ABS*	00000000 TIM5_CCMR1_Output
00000000 l       *ABS*	00000000 TIM5_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM5_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM5_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM5_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM5_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM5_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM5_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM5_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM5_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM5_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM5_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM5_CCMR1_Output_OC2M_3
40000c18 l       *ABS*	00000000 TIM5_CCMR1_Input
0000000c l       *ABS*	00000000 TIM5_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM5_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM5_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM5_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM5_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM5_CCMR1_Input_CC1S_Shift
40000c1c l       *ABS*	00000000 TIM5_CCMR2_Output
01000000 l       *ABS*	00000000 TIM5_CCMR2_Output_OC4M_3
00010000 l       *ABS*	00000000 TIM5_CCMR2_Output_OC3M_3
00008000 l       *ABS*	00000000 TIM5_CCMR2_Output_O24CE
0000000c l       *ABS*	00000000 TIM5_CCMR2_Output_OC4M_Shift
00000800 l       *ABS*	00000000 TIM5_CCMR2_Output_OC4PE
00000400 l       *ABS*	00000000 TIM5_CCMR2_Output_OC4FE
00000008 l       *ABS*	00000000 TIM5_CCMR2_Output_CC4S_Shift
00000080 l       *ABS*	00000000 TIM5_CCMR2_Output_OC3CE
00000004 l       *ABS*	00000000 TIM5_CCMR2_Output_OC3M_Shift
00000008 l       *ABS*	00000000 TIM5_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM5_CCMR2_Output_OC3FE
00000000 l       *ABS*	00000000 TIM5_CCMR2_Output_CC3S_Shift
40000c1c l       *ABS*	00000000 TIM5_CCMR2_Input
0000000c l       *ABS*	00000000 TIM5_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM5_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM5_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM5_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM5_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM5_CCMR2_Input_CC3S_Shift
40000c20 l       *ABS*	00000000 TIM5_CCER
00008000 l       *ABS*	00000000 TIM5_CCER_CC4NP
00002000 l       *ABS*	00000000 TIM5_CCER_CC4P
00001000 l       *ABS*	00000000 TIM5_CCER_CC4E
00000800 l       *ABS*	00000000 TIM5_CCER_CC3NP
00000200 l       *ABS*	00000000 TIM5_CCER_CC3P
00000100 l       *ABS*	00000000 TIM5_CCER_CC3E
00000080 l       *ABS*	00000000 TIM5_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM5_CCER_CC2P
00000010 l       *ABS*	00000000 TIM5_CCER_CC2E
00000008 l       *ABS*	00000000 TIM5_CCER_CC1NP
00000002 l       *ABS*	00000000 TIM5_CCER_CC1P
00000001 l       *ABS*	00000000 TIM5_CCER_CC1E
40000c24 l       *ABS*	00000000 TIM5_CNT
00000000 l       *ABS*	00000000 TIM5_CNT_CNT_L_Shift
00000010 l       *ABS*	00000000 TIM5_CNT_CNT_H_Shift
40000c28 l       *ABS*	00000000 TIM5_PSC
00000000 l       *ABS*	00000000 TIM5_PSC_PSC_Shift
40000c2c l       *ABS*	00000000 TIM5_ARR
00000010 l       *ABS*	00000000 TIM5_ARR_ARR_H_Shift
00000000 l       *ABS*	00000000 TIM5_ARR_ARR_L_Shift
40000c34 l       *ABS*	00000000 TIM5_CCR1
00000010 l       *ABS*	00000000 TIM5_CCR1_CCR1_H_Shift
00000000 l       *ABS*	00000000 TIM5_CCR1_CCR1_L_Shift
40000c38 l       *ABS*	00000000 TIM5_CCR2
00000010 l       *ABS*	00000000 TIM5_CCR2_CCR2_H_Shift
00000000 l       *ABS*	00000000 TIM5_CCR2_CCR2_L_Shift
40000c3c l       *ABS*	00000000 TIM5_CCR3
00000010 l       *ABS*	00000000 TIM5_CCR3_CCR3_H_Shift
00000000 l       *ABS*	00000000 TIM5_CCR3_CCR3_L_Shift
40000c40 l       *ABS*	00000000 TIM5_CCR4
00000010 l       *ABS*	00000000 TIM5_CCR4_CCR4_H_Shift
00000000 l       *ABS*	00000000 TIM5_CCR4_CCR4_L_Shift
40000c48 l       *ABS*	00000000 TIM5_DCR
00000008 l       *ABS*	00000000 TIM5_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM5_DCR_DBA_Shift
40000c4c l       *ABS*	00000000 TIM5_DMAR
00000000 l       *ABS*	00000000 TIM5_DMAR_DMAB_Shift
40000c60 l       *ABS*	00000000 TIM5_AF1
0000000e l       *ABS*	00000000 TIM5_AF1_ETRSEL_Shift
40000c68 l       *ABS*	00000000 TIM5_TISEL
00000000 l       *ABS*	00000000 TIM5_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM5_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM5_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM5_TISEL_TI4SEL_Shift
40001800 l       *ABS*	00000000 TIM12_BASE
40001800 l       *ABS*	00000000 TIM12_CR1
00000800 l       *ABS*	00000000 TIM12_CR1_UIFREMAP
00000008 l       *ABS*	00000000 TIM12_CR1_CKD_Shift
00000080 l       *ABS*	00000000 TIM12_CR1_ARPE
00000005 l       *ABS*	00000000 TIM12_CR1_CMS_Shift
00000010 l       *ABS*	00000000 TIM12_CR1_DIR
00000008 l       *ABS*	00000000 TIM12_CR1_OPM
00000004 l       *ABS*	00000000 TIM12_CR1_URS
00000002 l       *ABS*	00000000 TIM12_CR1_UDIS
00000001 l       *ABS*	00000000 TIM12_CR1_CEN
40001804 l       *ABS*	00000000 TIM12_CR2
00000080 l       *ABS*	00000000 TIM12_CR2_TI1S
00000004 l       *ABS*	00000000 TIM12_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM12_CR2_CCDS
40001808 l       *ABS*	00000000 TIM12_SMCR
00000014 l       *ABS*	00000000 TIM12_SMCR_TS_4_3_Shift
00010000 l       *ABS*	00000000 TIM12_SMCR_SMS_3
00008000 l       *ABS*	00000000 TIM12_SMCR_ETP
00004000 l       *ABS*	00000000 TIM12_SMCR_ECE
0000000c l       *ABS*	00000000 TIM12_SMCR_ETPS_Shift
00000008 l       *ABS*	00000000 TIM12_SMCR_ETF_Shift
00000080 l       *ABS*	00000000 TIM12_SMCR_MSM
00000004 l       *ABS*	00000000 TIM12_SMCR_TS_Shift
00000000 l       *ABS*	00000000 TIM12_SMCR_SMS_Shift
4000180c l       *ABS*	00000000 TIM12_DIER
00004000 l       *ABS*	00000000 TIM12_DIER_TDE
00001000 l       *ABS*	00000000 TIM12_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM12_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM12_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM12_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM12_DIER_UDE
00000040 l       *ABS*	00000000 TIM12_DIER_TIE
00000010 l       *ABS*	00000000 TIM12_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM12_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM12_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM12_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM12_DIER_UIE
40001810 l       *ABS*	00000000 TIM12_SR
00001000 l       *ABS*	00000000 TIM12_SR_CC4OF
00000800 l       *ABS*	00000000 TIM12_SR_CC3OF
00000400 l       *ABS*	00000000 TIM12_SR_CC2OF
00000200 l       *ABS*	00000000 TIM12_SR_CC1OF
00000040 l       *ABS*	00000000 TIM12_SR_TIF
00000010 l       *ABS*	00000000 TIM12_SR_CC4IF
00000008 l       *ABS*	00000000 TIM12_SR_CC3IF
00000004 l       *ABS*	00000000 TIM12_SR_CC2IF
00000002 l       *ABS*	00000000 TIM12_SR_CC1IF
00000001 l       *ABS*	00000000 TIM12_SR_UIF
40001814 l       *ABS*	00000000 TIM12_EGR
00000040 l       *ABS*	00000000 TIM12_EGR_TG
00000010 l       *ABS*	00000000 TIM12_EGR_CC4G
00000008 l       *ABS*	00000000 TIM12_EGR_CC3G
00000004 l       *ABS*	00000000 TIM12_EGR_CC2G
00000002 l       *ABS*	00000000 TIM12_EGR_CC1G
00000001 l       *ABS*	00000000 TIM12_EGR_UG
40001818 l       *ABS*	00000000 TIM12_CCMR1_Output
00000000 l       *ABS*	00000000 TIM12_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM12_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM12_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM12_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM12_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM12_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM12_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM12_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM12_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM12_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM12_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM12_CCMR1_Output_OC2M_3
40001818 l       *ABS*	00000000 TIM12_CCMR1_Input
0000000c l       *ABS*	00000000 TIM12_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM12_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM12_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM12_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM12_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM12_CCMR1_Input_CC1S_Shift
4000181c l       *ABS*	00000000 TIM12_CCMR2_Output
01000000 l       *ABS*	00000000 TIM12_CCMR2_Output_OC4M_3
00010000 l       *ABS*	00000000 TIM12_CCMR2_Output_OC3M_3
00008000 l       *ABS*	00000000 TIM12_CCMR2_Output_O24CE
0000000c l       *ABS*	00000000 TIM12_CCMR2_Output_OC4M_Shift
00000800 l       *ABS*	00000000 TIM12_CCMR2_Output_OC4PE
00000400 l       *ABS*	00000000 TIM12_CCMR2_Output_OC4FE
00000008 l       *ABS*	00000000 TIM12_CCMR2_Output_CC4S_Shift
00000080 l       *ABS*	00000000 TIM12_CCMR2_Output_OC3CE
00000004 l       *ABS*	00000000 TIM12_CCMR2_Output_OC3M_Shift
00000008 l       *ABS*	00000000 TIM12_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM12_CCMR2_Output_OC3FE
00000000 l       *ABS*	00000000 TIM12_CCMR2_Output_CC3S_Shift
4000181c l       *ABS*	00000000 TIM12_CCMR2_Input
0000000c l       *ABS*	00000000 TIM12_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM12_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM12_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM12_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM12_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM12_CCMR2_Input_CC3S_Shift
40001820 l       *ABS*	00000000 TIM12_CCER
00008000 l       *ABS*	00000000 TIM12_CCER_CC4NP
00002000 l       *ABS*	00000000 TIM12_CCER_CC4P
00001000 l       *ABS*	00000000 TIM12_CCER_CC4E
00000800 l       *ABS*	00000000 TIM12_CCER_CC3NP
00000200 l       *ABS*	00000000 TIM12_CCER_CC3P
00000100 l       *ABS*	00000000 TIM12_CCER_CC3E
00000080 l       *ABS*	00000000 TIM12_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM12_CCER_CC2P
00000010 l       *ABS*	00000000 TIM12_CCER_CC2E
00000008 l       *ABS*	00000000 TIM12_CCER_CC1NP
00000002 l       *ABS*	00000000 TIM12_CCER_CC1P
00000001 l       *ABS*	00000000 TIM12_CCER_CC1E
40001824 l       *ABS*	00000000 TIM12_CNT
00000000 l       *ABS*	00000000 TIM12_CNT_CNT_L_Shift
00000010 l       *ABS*	00000000 TIM12_CNT_CNT_H_Shift
40001828 l       *ABS*	00000000 TIM12_PSC
00000000 l       *ABS*	00000000 TIM12_PSC_PSC_Shift
4000182c l       *ABS*	00000000 TIM12_ARR
00000010 l       *ABS*	00000000 TIM12_ARR_ARR_H_Shift
00000000 l       *ABS*	00000000 TIM12_ARR_ARR_L_Shift
40001834 l       *ABS*	00000000 TIM12_CCR1
00000010 l       *ABS*	00000000 TIM12_CCR1_CCR1_H_Shift
00000000 l       *ABS*	00000000 TIM12_CCR1_CCR1_L_Shift
40001838 l       *ABS*	00000000 TIM12_CCR2
00000010 l       *ABS*	00000000 TIM12_CCR2_CCR2_H_Shift
00000000 l       *ABS*	00000000 TIM12_CCR2_CCR2_L_Shift
4000183c l       *ABS*	00000000 TIM12_CCR3
00000010 l       *ABS*	00000000 TIM12_CCR3_CCR3_H_Shift
00000000 l       *ABS*	00000000 TIM12_CCR3_CCR3_L_Shift
40001840 l       *ABS*	00000000 TIM12_CCR4
00000010 l       *ABS*	00000000 TIM12_CCR4_CCR4_H_Shift
00000000 l       *ABS*	00000000 TIM12_CCR4_CCR4_L_Shift
40001848 l       *ABS*	00000000 TIM12_DCR
00000008 l       *ABS*	00000000 TIM12_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM12_DCR_DBA_Shift
4000184c l       *ABS*	00000000 TIM12_DMAR
00000000 l       *ABS*	00000000 TIM12_DMAR_DMAB_Shift
40001860 l       *ABS*	00000000 TIM12_AF1
0000000e l       *ABS*	00000000 TIM12_AF1_ETRSEL_Shift
40001868 l       *ABS*	00000000 TIM12_TISEL
00000000 l       *ABS*	00000000 TIM12_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM12_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM12_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM12_TISEL_TI4SEL_Shift
40001c00 l       *ABS*	00000000 TIM13_BASE
40001c00 l       *ABS*	00000000 TIM13_CR1
00000800 l       *ABS*	00000000 TIM13_CR1_UIFREMAP
00000008 l       *ABS*	00000000 TIM13_CR1_CKD_Shift
00000080 l       *ABS*	00000000 TIM13_CR1_ARPE
00000005 l       *ABS*	00000000 TIM13_CR1_CMS_Shift
00000010 l       *ABS*	00000000 TIM13_CR1_DIR
00000008 l       *ABS*	00000000 TIM13_CR1_OPM
00000004 l       *ABS*	00000000 TIM13_CR1_URS
00000002 l       *ABS*	00000000 TIM13_CR1_UDIS
00000001 l       *ABS*	00000000 TIM13_CR1_CEN
40001c04 l       *ABS*	00000000 TIM13_CR2
00000080 l       *ABS*	00000000 TIM13_CR2_TI1S
00000004 l       *ABS*	00000000 TIM13_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM13_CR2_CCDS
40001c08 l       *ABS*	00000000 TIM13_SMCR
00000014 l       *ABS*	00000000 TIM13_SMCR_TS_4_3_Shift
00010000 l       *ABS*	00000000 TIM13_SMCR_SMS_3
00008000 l       *ABS*	00000000 TIM13_SMCR_ETP
00004000 l       *ABS*	00000000 TIM13_SMCR_ECE
0000000c l       *ABS*	00000000 TIM13_SMCR_ETPS_Shift
00000008 l       *ABS*	00000000 TIM13_SMCR_ETF_Shift
00000080 l       *ABS*	00000000 TIM13_SMCR_MSM
00000004 l       *ABS*	00000000 TIM13_SMCR_TS_Shift
00000000 l       *ABS*	00000000 TIM13_SMCR_SMS_Shift
40001c0c l       *ABS*	00000000 TIM13_DIER
00004000 l       *ABS*	00000000 TIM13_DIER_TDE
00001000 l       *ABS*	00000000 TIM13_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM13_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM13_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM13_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM13_DIER_UDE
00000040 l       *ABS*	00000000 TIM13_DIER_TIE
00000010 l       *ABS*	00000000 TIM13_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM13_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM13_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM13_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM13_DIER_UIE
40001c10 l       *ABS*	00000000 TIM13_SR
00001000 l       *ABS*	00000000 TIM13_SR_CC4OF
00000800 l       *ABS*	00000000 TIM13_SR_CC3OF
00000400 l       *ABS*	00000000 TIM13_SR_CC2OF
00000200 l       *ABS*	00000000 TIM13_SR_CC1OF
00000040 l       *ABS*	00000000 TIM13_SR_TIF
00000010 l       *ABS*	00000000 TIM13_SR_CC4IF
00000008 l       *ABS*	00000000 TIM13_SR_CC3IF
00000004 l       *ABS*	00000000 TIM13_SR_CC2IF
00000002 l       *ABS*	00000000 TIM13_SR_CC1IF
00000001 l       *ABS*	00000000 TIM13_SR_UIF
40001c14 l       *ABS*	00000000 TIM13_EGR
00000040 l       *ABS*	00000000 TIM13_EGR_TG
00000010 l       *ABS*	00000000 TIM13_EGR_CC4G
00000008 l       *ABS*	00000000 TIM13_EGR_CC3G
00000004 l       *ABS*	00000000 TIM13_EGR_CC2G
00000002 l       *ABS*	00000000 TIM13_EGR_CC1G
00000001 l       *ABS*	00000000 TIM13_EGR_UG
40001c18 l       *ABS*	00000000 TIM13_CCMR1_Output
00000000 l       *ABS*	00000000 TIM13_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM13_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM13_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM13_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM13_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM13_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM13_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM13_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM13_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM13_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM13_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM13_CCMR1_Output_OC2M_3
40001c18 l       *ABS*	00000000 TIM13_CCMR1_Input
0000000c l       *ABS*	00000000 TIM13_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM13_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM13_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM13_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM13_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM13_CCMR1_Input_CC1S_Shift
40001c1c l       *ABS*	00000000 TIM13_CCMR2_Output
01000000 l       *ABS*	00000000 TIM13_CCMR2_Output_OC4M_3
00010000 l       *ABS*	00000000 TIM13_CCMR2_Output_OC3M_3
00008000 l       *ABS*	00000000 TIM13_CCMR2_Output_O24CE
0000000c l       *ABS*	00000000 TIM13_CCMR2_Output_OC4M_Shift
00000800 l       *ABS*	00000000 TIM13_CCMR2_Output_OC4PE
00000400 l       *ABS*	00000000 TIM13_CCMR2_Output_OC4FE
00000008 l       *ABS*	00000000 TIM13_CCMR2_Output_CC4S_Shift
00000080 l       *ABS*	00000000 TIM13_CCMR2_Output_OC3CE
00000004 l       *ABS*	00000000 TIM13_CCMR2_Output_OC3M_Shift
00000008 l       *ABS*	00000000 TIM13_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM13_CCMR2_Output_OC3FE
00000000 l       *ABS*	00000000 TIM13_CCMR2_Output_CC3S_Shift
40001c1c l       *ABS*	00000000 TIM13_CCMR2_Input
0000000c l       *ABS*	00000000 TIM13_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM13_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM13_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM13_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM13_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM13_CCMR2_Input_CC3S_Shift
40001c20 l       *ABS*	00000000 TIM13_CCER
00008000 l       *ABS*	00000000 TIM13_CCER_CC4NP
00002000 l       *ABS*	00000000 TIM13_CCER_CC4P
00001000 l       *ABS*	00000000 TIM13_CCER_CC4E
00000800 l       *ABS*	00000000 TIM13_CCER_CC3NP
00000200 l       *ABS*	00000000 TIM13_CCER_CC3P
00000100 l       *ABS*	00000000 TIM13_CCER_CC3E
00000080 l       *ABS*	00000000 TIM13_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM13_CCER_CC2P
00000010 l       *ABS*	00000000 TIM13_CCER_CC2E
00000008 l       *ABS*	00000000 TIM13_CCER_CC1NP
00000002 l       *ABS*	00000000 TIM13_CCER_CC1P
00000001 l       *ABS*	00000000 TIM13_CCER_CC1E
40001c24 l       *ABS*	00000000 TIM13_CNT
00000000 l       *ABS*	00000000 TIM13_CNT_CNT_L_Shift
00000010 l       *ABS*	00000000 TIM13_CNT_CNT_H_Shift
40001c28 l       *ABS*	00000000 TIM13_PSC
00000000 l       *ABS*	00000000 TIM13_PSC_PSC_Shift
40001c2c l       *ABS*	00000000 TIM13_ARR
00000010 l       *ABS*	00000000 TIM13_ARR_ARR_H_Shift
00000000 l       *ABS*	00000000 TIM13_ARR_ARR_L_Shift
40001c34 l       *ABS*	00000000 TIM13_CCR1
00000010 l       *ABS*	00000000 TIM13_CCR1_CCR1_H_Shift
00000000 l       *ABS*	00000000 TIM13_CCR1_CCR1_L_Shift
40001c38 l       *ABS*	00000000 TIM13_CCR2
00000010 l       *ABS*	00000000 TIM13_CCR2_CCR2_H_Shift
00000000 l       *ABS*	00000000 TIM13_CCR2_CCR2_L_Shift
40001c3c l       *ABS*	00000000 TIM13_CCR3
00000010 l       *ABS*	00000000 TIM13_CCR3_CCR3_H_Shift
00000000 l       *ABS*	00000000 TIM13_CCR3_CCR3_L_Shift
40001c40 l       *ABS*	00000000 TIM13_CCR4
00000010 l       *ABS*	00000000 TIM13_CCR4_CCR4_H_Shift
00000000 l       *ABS*	00000000 TIM13_CCR4_CCR4_L_Shift
40001c48 l       *ABS*	00000000 TIM13_DCR
00000008 l       *ABS*	00000000 TIM13_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM13_DCR_DBA_Shift
40001c4c l       *ABS*	00000000 TIM13_DMAR
00000000 l       *ABS*	00000000 TIM13_DMAR_DMAB_Shift
40001c60 l       *ABS*	00000000 TIM13_AF1
0000000e l       *ABS*	00000000 TIM13_AF1_ETRSEL_Shift
40001c68 l       *ABS*	00000000 TIM13_TISEL
00000000 l       *ABS*	00000000 TIM13_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM13_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM13_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM13_TISEL_TI4SEL_Shift
40002000 l       *ABS*	00000000 TIM14_BASE
40002000 l       *ABS*	00000000 TIM14_CR1
00000800 l       *ABS*	00000000 TIM14_CR1_UIFREMAP
00000008 l       *ABS*	00000000 TIM14_CR1_CKD_Shift
00000080 l       *ABS*	00000000 TIM14_CR1_ARPE
00000005 l       *ABS*	00000000 TIM14_CR1_CMS_Shift
00000010 l       *ABS*	00000000 TIM14_CR1_DIR
00000008 l       *ABS*	00000000 TIM14_CR1_OPM
00000004 l       *ABS*	00000000 TIM14_CR1_URS
00000002 l       *ABS*	00000000 TIM14_CR1_UDIS
00000001 l       *ABS*	00000000 TIM14_CR1_CEN
40002004 l       *ABS*	00000000 TIM14_CR2
00000080 l       *ABS*	00000000 TIM14_CR2_TI1S
00000004 l       *ABS*	00000000 TIM14_CR2_MMS_Shift
00000008 l       *ABS*	00000000 TIM14_CR2_CCDS
40002008 l       *ABS*	00000000 TIM14_SMCR
00000014 l       *ABS*	00000000 TIM14_SMCR_TS_4_3_Shift
00010000 l       *ABS*	00000000 TIM14_SMCR_SMS_3
00008000 l       *ABS*	00000000 TIM14_SMCR_ETP
00004000 l       *ABS*	00000000 TIM14_SMCR_ECE
0000000c l       *ABS*	00000000 TIM14_SMCR_ETPS_Shift
00000008 l       *ABS*	00000000 TIM14_SMCR_ETF_Shift
00000080 l       *ABS*	00000000 TIM14_SMCR_MSM
00000004 l       *ABS*	00000000 TIM14_SMCR_TS_Shift
00000000 l       *ABS*	00000000 TIM14_SMCR_SMS_Shift
4000200c l       *ABS*	00000000 TIM14_DIER
00004000 l       *ABS*	00000000 TIM14_DIER_TDE
00001000 l       *ABS*	00000000 TIM14_DIER_CC4DE
00000800 l       *ABS*	00000000 TIM14_DIER_CC3DE
00000400 l       *ABS*	00000000 TIM14_DIER_CC2DE
00000200 l       *ABS*	00000000 TIM14_DIER_CC1DE
00000100 l       *ABS*	00000000 TIM14_DIER_UDE
00000040 l       *ABS*	00000000 TIM14_DIER_TIE
00000010 l       *ABS*	00000000 TIM14_DIER_CC4IE
00000008 l       *ABS*	00000000 TIM14_DIER_CC3IE
00000004 l       *ABS*	00000000 TIM14_DIER_CC2IE
00000002 l       *ABS*	00000000 TIM14_DIER_CC1IE
00000001 l       *ABS*	00000000 TIM14_DIER_UIE
40002010 l       *ABS*	00000000 TIM14_SR
00001000 l       *ABS*	00000000 TIM14_SR_CC4OF
00000800 l       *ABS*	00000000 TIM14_SR_CC3OF
00000400 l       *ABS*	00000000 TIM14_SR_CC2OF
00000200 l       *ABS*	00000000 TIM14_SR_CC1OF
00000040 l       *ABS*	00000000 TIM14_SR_TIF
00000010 l       *ABS*	00000000 TIM14_SR_CC4IF
00000008 l       *ABS*	00000000 TIM14_SR_CC3IF
00000004 l       *ABS*	00000000 TIM14_SR_CC2IF
00000002 l       *ABS*	00000000 TIM14_SR_CC1IF
00000001 l       *ABS*	00000000 TIM14_SR_UIF
40002014 l       *ABS*	00000000 TIM14_EGR
00000040 l       *ABS*	00000000 TIM14_EGR_TG
00000010 l       *ABS*	00000000 TIM14_EGR_CC4G
00000008 l       *ABS*	00000000 TIM14_EGR_CC3G
00000004 l       *ABS*	00000000 TIM14_EGR_CC2G
00000002 l       *ABS*	00000000 TIM14_EGR_CC1G
00000001 l       *ABS*	00000000 TIM14_EGR_UG
40002018 l       *ABS*	00000000 TIM14_CCMR1_Output
00000000 l       *ABS*	00000000 TIM14_CCMR1_Output_CC1S_Shift
00000004 l       *ABS*	00000000 TIM14_CCMR1_Output_OC1FE
00000008 l       *ABS*	00000000 TIM14_CCMR1_Output_OC1PE
00000004 l       *ABS*	00000000 TIM14_CCMR1_Output_OC1M_Shift
00000080 l       *ABS*	00000000 TIM14_CCMR1_Output_OC1CE
00000008 l       *ABS*	00000000 TIM14_CCMR1_Output_CC2S_Shift
00000400 l       *ABS*	00000000 TIM14_CCMR1_Output_OC2FE
00000800 l       *ABS*	00000000 TIM14_CCMR1_Output_OC2PE
0000000c l       *ABS*	00000000 TIM14_CCMR1_Output_OC2M_Shift
00008000 l       *ABS*	00000000 TIM14_CCMR1_Output_OC2CE
00010000 l       *ABS*	00000000 TIM14_CCMR1_Output_OC1M_3
01000000 l       *ABS*	00000000 TIM14_CCMR1_Output_OC2M_3
40002018 l       *ABS*	00000000 TIM14_CCMR1_Input
0000000c l       *ABS*	00000000 TIM14_CCMR1_Input_IC2F_Shift
0000000a l       *ABS*	00000000 TIM14_CCMR1_Input_IC2PCS_Shift
00000008 l       *ABS*	00000000 TIM14_CCMR1_Input_CC2S_Shift
00000004 l       *ABS*	00000000 TIM14_CCMR1_Input_IC1F_Shift
00000002 l       *ABS*	00000000 TIM14_CCMR1_Input_ICPCS_Shift
00000000 l       *ABS*	00000000 TIM14_CCMR1_Input_CC1S_Shift
4000201c l       *ABS*	00000000 TIM14_CCMR2_Output
01000000 l       *ABS*	00000000 TIM14_CCMR2_Output_OC4M_3
00010000 l       *ABS*	00000000 TIM14_CCMR2_Output_OC3M_3
00008000 l       *ABS*	00000000 TIM14_CCMR2_Output_O24CE
0000000c l       *ABS*	00000000 TIM14_CCMR2_Output_OC4M_Shift
00000800 l       *ABS*	00000000 TIM14_CCMR2_Output_OC4PE
00000400 l       *ABS*	00000000 TIM14_CCMR2_Output_OC4FE
00000008 l       *ABS*	00000000 TIM14_CCMR2_Output_CC4S_Shift
00000080 l       *ABS*	00000000 TIM14_CCMR2_Output_OC3CE
00000004 l       *ABS*	00000000 TIM14_CCMR2_Output_OC3M_Shift
00000008 l       *ABS*	00000000 TIM14_CCMR2_Output_OC3PE
00000004 l       *ABS*	00000000 TIM14_CCMR2_Output_OC3FE
00000000 l       *ABS*	00000000 TIM14_CCMR2_Output_CC3S_Shift
4000201c l       *ABS*	00000000 TIM14_CCMR2_Input
0000000c l       *ABS*	00000000 TIM14_CCMR2_Input_IC4F_Shift
0000000a l       *ABS*	00000000 TIM14_CCMR2_Input_IC4PSC_Shift
00000008 l       *ABS*	00000000 TIM14_CCMR2_Input_CC4S_Shift
00000004 l       *ABS*	00000000 TIM14_CCMR2_Input_IC3F_Shift
00000002 l       *ABS*	00000000 TIM14_CCMR2_Input_IC3PSC_Shift
00000000 l       *ABS*	00000000 TIM14_CCMR2_Input_CC3S_Shift
40002020 l       *ABS*	00000000 TIM14_CCER
00008000 l       *ABS*	00000000 TIM14_CCER_CC4NP
00002000 l       *ABS*	00000000 TIM14_CCER_CC4P
00001000 l       *ABS*	00000000 TIM14_CCER_CC4E
00000800 l       *ABS*	00000000 TIM14_CCER_CC3NP
00000200 l       *ABS*	00000000 TIM14_CCER_CC3P
00000100 l       *ABS*	00000000 TIM14_CCER_CC3E
00000080 l       *ABS*	00000000 TIM14_CCER_CC2NP
00000020 l       *ABS*	00000000 TIM14_CCER_CC2P
00000010 l       *ABS*	00000000 TIM14_CCER_CC2E
00000008 l       *ABS*	00000000 TIM14_CCER_CC1NP
00000002 l       *ABS*	00000000 TIM14_CCER_CC1P
00000001 l       *ABS*	00000000 TIM14_CCER_CC1E
40002024 l       *ABS*	00000000 TIM14_CNT
00000000 l       *ABS*	00000000 TIM14_CNT_CNT_L_Shift
00000010 l       *ABS*	00000000 TIM14_CNT_CNT_H_Shift
40002028 l       *ABS*	00000000 TIM14_PSC
00000000 l       *ABS*	00000000 TIM14_PSC_PSC_Shift
4000202c l       *ABS*	00000000 TIM14_ARR
00000010 l       *ABS*	00000000 TIM14_ARR_ARR_H_Shift
00000000 l       *ABS*	00000000 TIM14_ARR_ARR_L_Shift
40002034 l       *ABS*	00000000 TIM14_CCR1
00000010 l       *ABS*	00000000 TIM14_CCR1_CCR1_H_Shift
00000000 l       *ABS*	00000000 TIM14_CCR1_CCR1_L_Shift
40002038 l       *ABS*	00000000 TIM14_CCR2
00000010 l       *ABS*	00000000 TIM14_CCR2_CCR2_H_Shift
00000000 l       *ABS*	00000000 TIM14_CCR2_CCR2_L_Shift
4000203c l       *ABS*	00000000 TIM14_CCR3
00000010 l       *ABS*	00000000 TIM14_CCR3_CCR3_H_Shift
00000000 l       *ABS*	00000000 TIM14_CCR3_CCR3_L_Shift
40002040 l       *ABS*	00000000 TIM14_CCR4
00000010 l       *ABS*	00000000 TIM14_CCR4_CCR4_H_Shift
00000000 l       *ABS*	00000000 TIM14_CCR4_CCR4_L_Shift
40002048 l       *ABS*	00000000 TIM14_DCR
00000008 l       *ABS*	00000000 TIM14_DCR_DBL_Shift
00000000 l       *ABS*	00000000 TIM14_DCR_DBA_Shift
4000204c l       *ABS*	00000000 TIM14_DMAR
00000000 l       *ABS*	00000000 TIM14_DMAR_DMAB_Shift
40002060 l       *ABS*	00000000 TIM14_AF1
0000000e l       *ABS*	00000000 TIM14_AF1_ETRSEL_Shift
40002068 l       *ABS*	00000000 TIM14_TISEL
00000000 l       *ABS*	00000000 TIM14_TISEL_TI1SEL_Shift
00000008 l       *ABS*	00000000 TIM14_TISEL_TI2SEL_Shift
00000010 l       *ABS*	00000000 TIM14_TISEL_TI3SEL_Shift
00000018 l       *ABS*	00000000 TIM14_TISEL_TI4SEL_Shift
40001000 l       *ABS*	00000000 TIM6_BASE
40001000 l       *ABS*	00000000 TIM6_CR1
00000800 l       *ABS*	00000000 TIM6_CR1_UIFREMAP
00000080 l       *ABS*	00000000 TIM6_CR1_ARPE
00000008 l       *ABS*	00000000 TIM6_CR1_OPM
00000004 l       *ABS*	00000000 TIM6_CR1_URS
00000002 l       *ABS*	00000000 TIM6_CR1_UDIS
00000001 l       *ABS*	00000000 TIM6_CR1_CEN
40001004 l       *ABS*	00000000 TIM6_CR2
00000004 l       *ABS*	00000000 TIM6_CR2_MMS_Shift
4000100c l       *ABS*	00000000 TIM6_DIER
00000100 l       *ABS*	00000000 TIM6_DIER_UDE
00000001 l       *ABS*	00000000 TIM6_DIER_UIE
40001010 l       *ABS*	00000000 TIM6_SR
00000001 l       *ABS*	00000000 TIM6_SR_UIF
40001014 l       *ABS*	00000000 TIM6_EGR
00000001 l       *ABS*	00000000 TIM6_EGR_UG
40001024 l       *ABS*	00000000 TIM6_CNT
00000000 l       *ABS*	00000000 TIM6_CNT_CNT_Shift
80000000 l       *ABS*	00000000 TIM6_CNT_UIFCPY
40001028 l       *ABS*	00000000 TIM6_PSC
00000000 l       *ABS*	00000000 TIM6_PSC_PSC_Shift
4000102c l       *ABS*	00000000 TIM6_ARR
00000000 l       *ABS*	00000000 TIM6_ARR_ARR_Shift
40001400 l       *ABS*	00000000 TIM7_BASE
40001400 l       *ABS*	00000000 TIM7_CR1
00000800 l       *ABS*	00000000 TIM7_CR1_UIFREMAP
00000080 l       *ABS*	00000000 TIM7_CR1_ARPE
00000008 l       *ABS*	00000000 TIM7_CR1_OPM
00000004 l       *ABS*	00000000 TIM7_CR1_URS
00000002 l       *ABS*	00000000 TIM7_CR1_UDIS
00000001 l       *ABS*	00000000 TIM7_CR1_CEN
40001404 l       *ABS*	00000000 TIM7_CR2
00000004 l       *ABS*	00000000 TIM7_CR2_MMS_Shift
4000140c l       *ABS*	00000000 TIM7_DIER
00000100 l       *ABS*	00000000 TIM7_DIER_UDE
00000001 l       *ABS*	00000000 TIM7_DIER_UIE
40001410 l       *ABS*	00000000 TIM7_SR
00000001 l       *ABS*	00000000 TIM7_SR_UIF
40001414 l       *ABS*	00000000 TIM7_EGR
00000001 l       *ABS*	00000000 TIM7_EGR_UG
40001424 l       *ABS*	00000000 TIM7_CNT
00000000 l       *ABS*	00000000 TIM7_CNT_CNT_Shift
80000000 l       *ABS*	00000000 TIM7_CNT_UIFCPY
40001428 l       *ABS*	00000000 TIM7_PSC
00000000 l       *ABS*	00000000 TIM7_PSC_PSC_Shift
4000142c l       *ABS*	00000000 TIM7_ARR
00000000 l       *ABS*	00000000 TIM7_ARR_ARR_Shift
e000e100 l       *ABS*	00000000 NVIC_BASE
e000e100 l       *ABS*	00000000 NVIC_ISER0
00000000 l       *ABS*	00000000 NVIC_ISER0_SETENA_Shift
e000e104 l       *ABS*	00000000 NVIC_ISER1
00000000 l       *ABS*	00000000 NVIC_ISER1_SETENA_Shift
e000e108 l       *ABS*	00000000 NVIC_ISER2
00000000 l       *ABS*	00000000 NVIC_ISER2_SETENA_Shift
e000e180 l       *ABS*	00000000 NVIC_ICER0
00000000 l       *ABS*	00000000 NVIC_ICER0_CLRENA_Shift
e000e184 l       *ABS*	00000000 NVIC_ICER1
00000000 l       *ABS*	00000000 NVIC_ICER1_CLRENA_Shift
e000e188 l       *ABS*	00000000 NVIC_ICER2
00000000 l       *ABS*	00000000 NVIC_ICER2_CLRENA_Shift
e000e200 l       *ABS*	00000000 NVIC_ISPR0
00000000 l       *ABS*	00000000 NVIC_ISPR0_SETPEND_Shift
e000e204 l       *ABS*	00000000 NVIC_ISPR1
00000000 l       *ABS*	00000000 NVIC_ISPR1_SETPEND_Shift
e000e208 l       *ABS*	00000000 NVIC_ISPR2
00000000 l       *ABS*	00000000 NVIC_ISPR2_SETPEND_Shift
e000e280 l       *ABS*	00000000 NVIC_ICPR0
00000000 l       *ABS*	00000000 NVIC_ICPR0_CLRPEND_Shift
e000e284 l       *ABS*	00000000 NVIC_ICPR1
00000000 l       *ABS*	00000000 NVIC_ICPR1_CLRPEND_Shift
e000e288 l       *ABS*	00000000 NVIC_ICPR2
00000000 l       *ABS*	00000000 NVIC_ICPR2_CLRPEND_Shift
e000e300 l       *ABS*	00000000 NVIC_IABR0
00000000 l       *ABS*	00000000 NVIC_IABR0_ACTIVE_Shift
e000e304 l       *ABS*	00000000 NVIC_IABR1
00000000 l       *ABS*	00000000 NVIC_IABR1_ACTIVE_Shift
e000e308 l       *ABS*	00000000 NVIC_IABR2
00000000 l       *ABS*	00000000 NVIC_IABR2_ACTIVE_Shift
e000e400 l       *ABS*	00000000 NVIC_IPR0
00000000 l       *ABS*	00000000 NVIC_IPR0_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR0_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR0_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR0_IPR_N3_Shift
e000e404 l       *ABS*	00000000 NVIC_IPR1
00000000 l       *ABS*	00000000 NVIC_IPR1_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR1_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR1_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR1_IPR_N3_Shift
e000e408 l       *ABS*	00000000 NVIC_IPR2
00000000 l       *ABS*	00000000 NVIC_IPR2_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR2_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR2_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR2_IPR_N3_Shift
e000e40c l       *ABS*	00000000 NVIC_IPR3
00000000 l       *ABS*	00000000 NVIC_IPR3_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR3_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR3_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR3_IPR_N3_Shift
e000e410 l       *ABS*	00000000 NVIC_IPR4
00000000 l       *ABS*	00000000 NVIC_IPR4_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR4_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR4_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR4_IPR_N3_Shift
e000e414 l       *ABS*	00000000 NVIC_IPR5
00000000 l       *ABS*	00000000 NVIC_IPR5_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR5_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR5_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR5_IPR_N3_Shift
e000e418 l       *ABS*	00000000 NVIC_IPR6
00000000 l       *ABS*	00000000 NVIC_IPR6_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR6_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR6_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR6_IPR_N3_Shift
e000e41c l       *ABS*	00000000 NVIC_IPR7
00000000 l       *ABS*	00000000 NVIC_IPR7_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR7_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR7_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR7_IPR_N3_Shift
e000e420 l       *ABS*	00000000 NVIC_IPR8
00000000 l       *ABS*	00000000 NVIC_IPR8_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR8_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR8_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR8_IPR_N3_Shift
e000e424 l       *ABS*	00000000 NVIC_IPR9
00000000 l       *ABS*	00000000 NVIC_IPR9_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR9_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR9_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR9_IPR_N3_Shift
e000e428 l       *ABS*	00000000 NVIC_IPR10
00000000 l       *ABS*	00000000 NVIC_IPR10_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR10_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR10_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR10_IPR_N3_Shift
e000e42c l       *ABS*	00000000 NVIC_IPR11
00000000 l       *ABS*	00000000 NVIC_IPR11_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR11_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR11_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR11_IPR_N3_Shift
e000e430 l       *ABS*	00000000 NVIC_IPR12
00000000 l       *ABS*	00000000 NVIC_IPR12_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR12_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR12_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR12_IPR_N3_Shift
e000e434 l       *ABS*	00000000 NVIC_IPR13
00000000 l       *ABS*	00000000 NVIC_IPR13_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR13_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR13_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR13_IPR_N3_Shift
e000e438 l       *ABS*	00000000 NVIC_IPR14
00000000 l       *ABS*	00000000 NVIC_IPR14_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR14_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR14_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR14_IPR_N3_Shift
e000e43c l       *ABS*	00000000 NVIC_IPR15
00000000 l       *ABS*	00000000 NVIC_IPR15_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR15_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR15_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR15_IPR_N3_Shift
e000e440 l       *ABS*	00000000 NVIC_IPR16
00000000 l       *ABS*	00000000 NVIC_IPR16_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR16_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR16_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR16_IPR_N3_Shift
e000e444 l       *ABS*	00000000 NVIC_IPR17
00000000 l       *ABS*	00000000 NVIC_IPR17_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR17_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR17_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR17_IPR_N3_Shift
e000e448 l       *ABS*	00000000 NVIC_IPR18
00000000 l       *ABS*	00000000 NVIC_IPR18_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR18_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR18_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR18_IPR_N3_Shift
e000e44c l       *ABS*	00000000 NVIC_IPR19
00000000 l       *ABS*	00000000 NVIC_IPR19_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR19_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR19_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR19_IPR_N3_Shift
e000e450 l       *ABS*	00000000 NVIC_IPR20
00000000 l       *ABS*	00000000 NVIC_IPR20_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR20_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR20_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR20_IPR_N3_Shift
e000e454 l       *ABS*	00000000 NVIC_IPR21
00000000 l       *ABS*	00000000 NVIC_IPR21_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR21_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR21_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR21_IPR_N3_Shift
e000e458 l       *ABS*	00000000 NVIC_IPR22
00000000 l       *ABS*	00000000 NVIC_IPR22_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR22_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR22_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR22_IPR_N3_Shift
e000e45c l       *ABS*	00000000 NVIC_IPR23
00000000 l       *ABS*	00000000 NVIC_IPR23_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR23_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR23_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR23_IPR_N3_Shift
e000e460 l       *ABS*	00000000 NVIC_IPR24
00000000 l       *ABS*	00000000 NVIC_IPR24_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR24_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR24_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR24_IPR_N3_Shift
e000e464 l       *ABS*	00000000 NVIC_IPR25
00000000 l       *ABS*	00000000 NVIC_IPR25_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR25_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR25_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR25_IPR_N3_Shift
e000e468 l       *ABS*	00000000 NVIC_IPR26
00000000 l       *ABS*	00000000 NVIC_IPR26_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR26_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR26_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR26_IPR_N3_Shift
e000e46c l       *ABS*	00000000 NVIC_IPR27
00000000 l       *ABS*	00000000 NVIC_IPR27_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR27_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR27_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR27_IPR_N3_Shift
e000e470 l       *ABS*	00000000 NVIC_IPR28
00000000 l       *ABS*	00000000 NVIC_IPR28_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR28_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR28_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR28_IPR_N3_Shift
e000e474 l       *ABS*	00000000 NVIC_IPR29
00000000 l       *ABS*	00000000 NVIC_IPR29_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR29_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR29_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR29_IPR_N3_Shift
e000e478 l       *ABS*	00000000 NVIC_IPR30
00000000 l       *ABS*	00000000 NVIC_IPR30_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR30_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR30_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR30_IPR_N3_Shift
e000e47c l       *ABS*	00000000 NVIC_IPR31
00000000 l       *ABS*	00000000 NVIC_IPR31_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR31_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR31_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR31_IPR_N3_Shift
e000e480 l       *ABS*	00000000 NVIC_IPR32
00000000 l       *ABS*	00000000 NVIC_IPR32_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR32_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR32_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR32_IPR_N3_Shift
e000e484 l       *ABS*	00000000 NVIC_IPR33
00000000 l       *ABS*	00000000 NVIC_IPR33_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR33_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR33_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR33_IPR_N3_Shift
e000e488 l       *ABS*	00000000 NVIC_IPR34
00000000 l       *ABS*	00000000 NVIC_IPR34_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR34_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR34_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR34_IPR_N3_Shift
e000e48c l       *ABS*	00000000 NVIC_IPR35
00000000 l       *ABS*	00000000 NVIC_IPR35_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR35_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR35_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR35_IPR_N3_Shift
e000e490 l       *ABS*	00000000 NVIC_IPR36
00000000 l       *ABS*	00000000 NVIC_IPR36_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR36_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR36_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR36_IPR_N3_Shift
e000e494 l       *ABS*	00000000 NVIC_IPR37
00000000 l       *ABS*	00000000 NVIC_IPR37_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR37_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR37_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR37_IPR_N3_Shift
e000e498 l       *ABS*	00000000 NVIC_IPR38
00000000 l       *ABS*	00000000 NVIC_IPR38_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR38_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR38_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR38_IPR_N3_Shift
e000e49c l       *ABS*	00000000 NVIC_IPR39
00000000 l       *ABS*	00000000 NVIC_IPR39_IPR_N0_Shift
00000008 l       *ABS*	00000000 NVIC_IPR39_IPR_N1_Shift
00000010 l       *ABS*	00000000 NVIC_IPR39_IPR_N2_Shift
00000018 l       *ABS*	00000000 NVIC_IPR39_IPR_N3_Shift
e000e10c l       *ABS*	00000000 NVIC_ISER3
e000e110 l       *ABS*	00000000 NVIC_ISER4
e000e18c l       *ABS*	00000000 NVIC_ICER3
e000e190 l       *ABS*	00000000 NVIC_ICER4
e000e20c l       *ABS*	00000000 NVIC_ISPR3
e000e210 l       *ABS*	00000000 NVIC_ISPR4
e000e2c0 l       *ABS*	00000000 NVIC_ICPR3
e000e2c4 l       *ABS*	00000000 NVIC_ICPR4
e000e30c l       *ABS*	00000000 NVIC_IABR3
e000e310 l       *ABS*	00000000 NVIC_IABR4
e000ed90 l       *ABS*	00000000 MPU_BASE
e000ed90 l       *ABS*	00000000 MPU_MPU_TYPER
00000001 l       *ABS*	00000000 MPU_MPU_TYPER_SEPARATE
00000008 l       *ABS*	00000000 MPU_MPU_TYPER_DREGION_Shift
00000010 l       *ABS*	00000000 MPU_MPU_TYPER_IREGION_Shift
e000ed94 l       *ABS*	00000000 MPU_MPU_CTRL
00000001 l       *ABS*	00000000 MPU_MPU_CTRL_ENABLE
00000002 l       *ABS*	00000000 MPU_MPU_CTRL_HFNMIENA
00000004 l       *ABS*	00000000 MPU_MPU_CTRL_PRIVDEFENA
e000ed98 l       *ABS*	00000000 MPU_MPU_RNR
00000000 l       *ABS*	00000000 MPU_MPU_RNR_REGION_Shift
e000ed9c l       *ABS*	00000000 MPU_MPU_RBAR
00000000 l       *ABS*	00000000 MPU_MPU_RBAR_REGION_Shift
00000010 l       *ABS*	00000000 MPU_MPU_RBAR_VALID
00000005 l       *ABS*	00000000 MPU_MPU_RBAR_ADDR_Shift
e000eda0 l       *ABS*	00000000 MPU_MPU_RASR
00000001 l       *ABS*	00000000 MPU_MPU_RASR_ENABLE
00000001 l       *ABS*	00000000 MPU_MPU_RASR_SIZE_Shift
00000008 l       *ABS*	00000000 MPU_MPU_RASR_SRD_Shift
00010000 l       *ABS*	00000000 MPU_MPU_RASR_B
00020000 l       *ABS*	00000000 MPU_MPU_RASR_C
00040000 l       *ABS*	00000000 MPU_MPU_RASR_S
00000013 l       *ABS*	00000000 MPU_MPU_RASR_TEX_Shift
00000018 l       *ABS*	00000000 MPU_MPU_RASR_AP_Shift
10000000 l       *ABS*	00000000 MPU_MPU_RASR_XN
e000e010 l       *ABS*	00000000 STK_BASE
e000e010 l       *ABS*	00000000 STK_CSR
00000001 l       *ABS*	00000000 STK_CSR_ENABLE
00000002 l       *ABS*	00000000 STK_CSR_TICKINT
00000004 l       *ABS*	00000000 STK_CSR_CLKSOURCE
00010000 l       *ABS*	00000000 STK_CSR_COUNTFLAG
e000e014 l       *ABS*	00000000 STK_RVR
00000000 l       *ABS*	00000000 STK_RVR_RELOAD_Shift
e000e018 l       *ABS*	00000000 STK_CVR
00000000 l       *ABS*	00000000 STK_CVR_CURRENT_Shift
e000e01c l       *ABS*	00000000 STK_CALIB
00000000 l       *ABS*	00000000 STK_CALIB_TENMS_Shift
40000000 l       *ABS*	00000000 STK_CALIB_SKEW
80000000 l       *ABS*	00000000 STK_CALIB_NOREF
e000ef00 l       *ABS*	00000000 NVIC_STIR_BASE
e000ef00 l       *ABS*	00000000 NVIC_STIR_STIR
00000000 l       *ABS*	00000000 NVIC_STIR_STIR_INTID_Shift
e000ed88 l       *ABS*	00000000 FPU_CPACR_BASE
e000ed88 l       *ABS*	00000000 FPU_CPACR_CPACR
00000014 l       *ABS*	00000000 FPU_CPACR_CPACR_CP_Shift
e000e008 l       *ABS*	00000000 SCB_ACTRL_BASE
e000e008 l       *ABS*	00000000 SCB_ACTRL_ACTRL
00000004 l       *ABS*	00000000 SCB_ACTRL_ACTRL_DISFOLD
00000400 l       *ABS*	00000000 SCB_ACTRL_ACTRL_FPEXCODIS
00000800 l       *ABS*	00000000 SCB_ACTRL_ACTRL_DISRAMODE
00001000 l       *ABS*	00000000 SCB_ACTRL_ACTRL_DISITMATBFLUSH
e000ef34 l       *ABS*	00000000 FPU_BASE
e000ef34 l       *ABS*	00000000 FPU_FPCCR
00000001 l       *ABS*	00000000 FPU_FPCCR_LSPACT
00000002 l       *ABS*	00000000 FPU_FPCCR_USER
00000008 l       *ABS*	00000000 FPU_FPCCR_THREAD
00000010 l       *ABS*	00000000 FPU_FPCCR_HFRDY
00000020 l       *ABS*	00000000 FPU_FPCCR_MMRDY
00000040 l       *ABS*	00000000 FPU_FPCCR_BFRDY
00000100 l       *ABS*	00000000 FPU_FPCCR_MONRDY
40000000 l       *ABS*	00000000 FPU_FPCCR_LSPEN
80000000 l       *ABS*	00000000 FPU_FPCCR_ASPEN
e000ef38 l       *ABS*	00000000 FPU_FPCAR
00000003 l       *ABS*	00000000 FPU_FPCAR_ADDRESS_Shift
e000ef3c l       *ABS*	00000000 FPU_FPSCR
00000001 l       *ABS*	00000000 FPU_FPSCR_IOC
00000002 l       *ABS*	00000000 FPU_FPSCR_DZC
00000004 l       *ABS*	00000000 FPU_FPSCR_OFC
00000008 l       *ABS*	00000000 FPU_FPSCR_UFC
00000010 l       *ABS*	00000000 FPU_FPSCR_IXC
00000080 l       *ABS*	00000000 FPU_FPSCR_IDC
00000016 l       *ABS*	00000000 FPU_FPSCR_RMode_Shift
01000000 l       *ABS*	00000000 FPU_FPSCR_FZ
02000000 l       *ABS*	00000000 FPU_FPSCR_DN
04000000 l       *ABS*	00000000 FPU_FPSCR_AHP
10000000 l       *ABS*	00000000 FPU_FPSCR_V
20000000 l       *ABS*	00000000 FPU_FPSCR_C
40000000 l       *ABS*	00000000 FPU_FPSCR_Z
80000000 l       *ABS*	00000000 FPU_FPSCR_N
e000ed00 l       *ABS*	00000000 SCB_BASE
e000ed00 l       *ABS*	00000000 SCB_CPUID
00000000 l       *ABS*	00000000 SCB_CPUID_Revision_Shift
00000004 l       *ABS*	00000000 SCB_CPUID_PartNo_Shift
00000010 l       *ABS*	00000000 SCB_CPUID_Constant_Shift
00000014 l       *ABS*	00000000 SCB_CPUID_Variant_Shift
00000018 l       *ABS*	00000000 SCB_CPUID_Implementer_Shift
e000ed04 l       *ABS*	00000000 SCB_ICSR
00000000 l       *ABS*	00000000 SCB_ICSR_VECTACTIVE_Shift
00000800 l       *ABS*	00000000 SCB_ICSR_RETTOBASE
0000000c l       *ABS*	00000000 SCB_ICSR_VECTPENDING_Shift
00400000 l       *ABS*	00000000 SCB_ICSR_ISRPENDING
02000000 l       *ABS*	00000000 SCB_ICSR_PENDSTCLR
04000000 l       *ABS*	00000000 SCB_ICSR_PENDSTSET
08000000 l       *ABS*	00000000 SCB_ICSR_PENDSVCLR
10000000 l       *ABS*	00000000 SCB_ICSR_PENDSVSET
80000000 l       *ABS*	00000000 SCB_ICSR_NMIPENDSET
e000ed08 l       *ABS*	00000000 SCB_VTOR
00000009 l       *ABS*	00000000 SCB_VTOR_TBLOFF_Shift
e000ed0c l       *ABS*	00000000 SCB_AIRCR
00000001 l       *ABS*	00000000 SCB_AIRCR_VECTRESET
00000002 l       *ABS*	00000000 SCB_AIRCR_VECTCLRACTIVE
00000004 l       *ABS*	00000000 SCB_AIRCR_SYSRESETREQ
00000008 l       *ABS*	00000000 SCB_AIRCR_PRIGROUP_Shift
00008000 l       *ABS*	00000000 SCB_AIRCR_ENDIANESS
00000010 l       *ABS*	00000000 SCB_AIRCR_VECTKEYSTAT_Shift
e000ed10 l       *ABS*	00000000 SCB_SCR
00000002 l       *ABS*	00000000 SCB_SCR_SLEEPONEXIT
00000004 l       *ABS*	00000000 SCB_SCR_SLEEPDEEP
00000010 l       *ABS*	00000000 SCB_SCR_SEVEONPEND
e000ed14 l       *ABS*	00000000 SCB_CCR
00000001 l       *ABS*	00000000 SCB_CCR_NONBASETHRDENA
00000002 l       *ABS*	00000000 SCB_CCR_USERSETMPEND
00000008 l       *ABS*	00000000 SCB_CCR_UNALIGN__TRP
00000010 l       *ABS*	00000000 SCB_CCR_DIV_0_TRP
00000100 l       *ABS*	00000000 SCB_CCR_BFHFNMIGN
00000200 l       *ABS*	00000000 SCB_CCR_STKALIGN
00010000 l       *ABS*	00000000 SCB_CCR_DC
00020000 l       *ABS*	00000000 SCB_CCR_IC
00040000 l       *ABS*	00000000 SCB_CCR_BP
e000ed18 l       *ABS*	00000000 SCB_SHPR1
00000000 l       *ABS*	00000000 SCB_SHPR1_PRI_4_Shift
00000008 l       *ABS*	00000000 SCB_SHPR1_PRI_5_Shift
00000010 l       *ABS*	00000000 SCB_SHPR1_PRI_6_Shift
e000ed1c l       *ABS*	00000000 SCB_SHPR2
00000018 l       *ABS*	00000000 SCB_SHPR2_PRI_11_Shift
e000ed20 l       *ABS*	00000000 SCB_SHPR3
00000010 l       *ABS*	00000000 SCB_SHPR3_PRI_14_Shift
00000018 l       *ABS*	00000000 SCB_SHPR3_PRI_15_Shift
e000ed24 l       *ABS*	00000000 SCB_SHCRS
00000001 l       *ABS*	00000000 SCB_SHCRS_MEMFAULTACT
00000002 l       *ABS*	00000000 SCB_SHCRS_BUSFAULTACT
00000008 l       *ABS*	00000000 SCB_SHCRS_USGFAULTACT
00000080 l       *ABS*	00000000 SCB_SHCRS_SVCALLACT
00000100 l       *ABS*	00000000 SCB_SHCRS_MONITORACT
00000400 l       *ABS*	00000000 SCB_SHCRS_PENDSVACT
00000800 l       *ABS*	00000000 SCB_SHCRS_SYSTICKACT
00001000 l       *ABS*	00000000 SCB_SHCRS_USGFAULTPENDED
00002000 l       *ABS*	00000000 SCB_SHCRS_MEMFAULTPENDED
00004000 l       *ABS*	00000000 SCB_SHCRS_BUSFAULTPENDED
00008000 l       *ABS*	00000000 SCB_SHCRS_SVCALLPENDED
00010000 l       *ABS*	00000000 SCB_SHCRS_MEMFAULTENA
00020000 l       *ABS*	00000000 SCB_SHCRS_BUSFAULTENA
00040000 l       *ABS*	00000000 SCB_SHCRS_USGFAULTENA
e000ed28 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR
00000001 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_IACCVIOL
00000002 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_DACCVIOL
00000008 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_MUNSTKERR
00000010 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_MSTKERR
00000020 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_MLSPERR
00000080 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_MMARVALID
00000100 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_IBUSERR
00000200 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_PRECISERR
00000400 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_IMPRECISERR
00000800 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_UNSTKERR
00001000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_STKERR
00002000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_LSPERR
00008000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_BFARVALID
00010000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_UNDEFINSTR
00020000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_INVSTATE
00040000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_INVPC
00080000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_NOCP
01000000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_UNALIGNED
02000000 l       *ABS*	00000000 SCB_CFSR_UFSR_BFSR_MMFSR_DIVBYZERO
e000ed2c l       *ABS*	00000000 SCB_HFSR
00000002 l       *ABS*	00000000 SCB_HFSR_VECTTBL
40000000 l       *ABS*	00000000 SCB_HFSR_FORCED
80000000 l       *ABS*	00000000 SCB_HFSR_DEBUG_VT
e000ed34 l       *ABS*	00000000 SCB_MMFAR
00000000 l       *ABS*	00000000 SCB_MMFAR_ADDRESS_Shift
e000ed38 l       *ABS*	00000000 SCB_BFAR
00000000 l       *ABS*	00000000 SCB_BFAR_ADDRESS_Shift
e000ed78 l       *ABS*	00000000 PF_BASE
e000ed78 l       *ABS*	00000000 PF_CLIDR
00000000 l       *ABS*	00000000 PF_CLIDR_CL1_Shift
00000003 l       *ABS*	00000000 PF_CLIDR_CL2_Shift
00000006 l       *ABS*	00000000 PF_CLIDR_CL3_Shift
00000009 l       *ABS*	00000000 PF_CLIDR_CL4_Shift
0000000c l       *ABS*	00000000 PF_CLIDR_CL5_Shift
0000000f l       *ABS*	00000000 PF_CLIDR_CL6_Shift
00000012 l       *ABS*	00000000 PF_CLIDR_CL7_Shift
00000015 l       *ABS*	00000000 PF_CLIDR_LoUIS_Shift
00000018 l       *ABS*	00000000 PF_CLIDR_LoC_Shift
0000001b l       *ABS*	00000000 PF_CLIDR_LoU_Shift
e000ed7c l       *ABS*	00000000 PF_CTR
00000000 l       *ABS*	00000000 PF_CTR__IminLine_Shift
00000010 l       *ABS*	00000000 PF_CTR_DMinLine_Shift
00000014 l       *ABS*	00000000 PF_CTR_ERG_Shift
00000018 l       *ABS*	00000000 PF_CTR_CWG_Shift
0000001d l       *ABS*	00000000 PF_CTR_Format_Shift
e000ed80 l       *ABS*	00000000 PF_CCSIDR
00000000 l       *ABS*	00000000 PF_CCSIDR_LineSize_Shift
00000003 l       *ABS*	00000000 PF_CCSIDR_Associativity_Shift
0000000d l       *ABS*	00000000 PF_CCSIDR_NumSets_Shift
10000000 l       *ABS*	00000000 PF_CCSIDR_WA
20000000 l       *ABS*	00000000 PF_CCSIDR_RA
40000000 l       *ABS*	00000000 PF_CCSIDR_WB
80000000 l       *ABS*	00000000 PF_CCSIDR_WT
e000ef90 l       *ABS*	00000000 AC_BASE
e000ef90 l       *ABS*	00000000 AC_ITCMCR
00000001 l       *ABS*	00000000 AC_ITCMCR_EN
00000002 l       *ABS*	00000000 AC_ITCMCR_RMW
00000004 l       *ABS*	00000000 AC_ITCMCR_RETEN
00000003 l       *ABS*	00000000 AC_ITCMCR_SZ_Shift
e000ef94 l       *ABS*	00000000 AC_DTCMCR
00000001 l       *ABS*	00000000 AC_DTCMCR_EN
00000002 l       *ABS*	00000000 AC_DTCMCR_RMW
00000004 l       *ABS*	00000000 AC_DTCMCR_RETEN
00000003 l       *ABS*	00000000 AC_DTCMCR_SZ_Shift
e000ef98 l       *ABS*	00000000 AC_AHBPCR
00000001 l       *ABS*	00000000 AC_AHBPCR_EN
00000001 l       *ABS*	00000000 AC_AHBPCR_SZ_Shift
e000ef9c l       *ABS*	00000000 AC_CACR
00000001 l       *ABS*	00000000 AC_CACR_SIWT
00000002 l       *ABS*	00000000 AC_CACR_ECCEN
00000004 l       *ABS*	00000000 AC_CACR_FORCEWT
e000efa0 l       *ABS*	00000000 AC_AHBSCR
00000000 l       *ABS*	00000000 AC_AHBSCR_CTL_Shift
00000002 l       *ABS*	00000000 AC_AHBSCR_TPRI_Shift
0000000b l       *ABS*	00000000 AC_AHBSCR_INITCOUNT_Shift
e000efa8 l       *ABS*	00000000 AC_ABFSR
00000001 l       *ABS*	00000000 AC_ABFSR_ITCM
00000002 l       *ABS*	00000000 AC_ABFSR_DTCM
00000004 l       *ABS*	00000000 AC_ABFSR_AHBP
00000008 l       *ABS*	00000000 AC_ABFSR_AXIM
00000010 l       *ABS*	00000000 AC_ABFSR_EPPB
00000008 l       *ABS*	00000000 AC_ABFSR_AXIMTYPE_Shift
00000001 l       *ABS*	00000000 registerallocator
00000001 l       *ABS*	00000000 charkommaavailable
00000000 l       *ABS*	00000000 does_above_64kb
00000001 l       *ABS*	00000000 color
00000001 l       *ABS*	00000000 above_ram
00000001 l       *ABS*	00000000 BIT0
00000002 l       *ABS*	00000000 BIT1
00000004 l       *ABS*	00000000 BIT2
00000008 l       *ABS*	00000000 BIT3
00000010 l       *ABS*	00000000 BIT4
00000020 l       *ABS*	00000000 BIT5
00000040 l       *ABS*	00000000 BIT6
00000080 l       *ABS*	00000000 BIT7
00000100 l       *ABS*	00000000 BIT8
00000200 l       *ABS*	00000000 BIT9
00000400 l       *ABS*	00000000 BIT10
00000800 l       *ABS*	00000000 BIT11
00001000 l       *ABS*	00000000 BIT12
00002000 l       *ABS*	00000000 BIT13
00004000 l       *ABS*	00000000 BIT14
00008000 l       *ABS*	00000000 BIT15
00010000 l       *ABS*	00000000 BIT16
00020000 l       *ABS*	00000000 BIT17
00040000 l       *ABS*	00000000 BIT18
00080000 l       *ABS*	00000000 BIT19
00100000 l       *ABS*	00000000 BIT20
00200000 l       *ABS*	00000000 BIT21
00400000 l       *ABS*	00000000 BIT22
00800000 l       *ABS*	00000000 BIT23
01000000 l       *ABS*	00000000 BIT24
02000000 l       *ABS*	00000000 BIT25
04000000 l       *ABS*	00000000 BIT26
08000000 l       *ABS*	00000000 BIT27
10000000 l       *ABS*	00000000 BIT28
20000000 l       *ABS*	00000000 BIT29
40000000 l       *ABS*	00000000 BIT30
80000000 l       *ABS*	00000000 BIT31
000000ff l       *ABS*	00000000 erasedbyte
0000ffff l       *ABS*	00000000 erasedhalfword
ffffffff l       *ABS*	00000000 erasedword
00000000 l       *ABS*	00000000 writtenbyte
00000000 l       *ABS*	00000000 writtenhalfword
0000ffff l       *ABS*	00000000 Flag_invisible
00000000 l       *ABS*	00000000 Flag_visible
00000010 l       *ABS*	00000000 Flag_immediate
00000020 l       *ABS*	00000000 Flag_inline
00000030 l       *ABS*	00000000 Flag_immediate_compileonly
00000080 l       *ABS*	00000000 Flag_ramallot
00000081 l       *ABS*	00000000 Flag_variable
00000082 l       *ABS*	00000000 Flag_2variable
00000040 l       *ABS*	00000000 Flag_foldable
00000040 l       *ABS*	00000000 Flag_foldable_0
00000041 l       *ABS*	00000000 Flag_foldable_1
00000042 l       *ABS*	00000000 Flag_foldable_2
00000043 l       *ABS*	00000000 Flag_foldable_3
00000044 l       *ABS*	00000000 Flag_foldable_4
00000045 l       *ABS*	00000000 Flag_foldable_5
00000046 l       *ABS*	00000000 Flag_foldable_6
00000047 l       *ABS*	00000000 Flag_foldable_7
00000100 l       *ABS*	00000000 Flag_buffer
00000140 l       *ABS*	00000000 Flag_buffer_foldable
00000200 l       *ABS*	00000000 Flag_allocator
00000400 l       *ABS*	00000000 Flag_Sprungschlucker
00000800 l       *ABS*	00000000 Flag_bxlr
00001000 l       *ABS*	00000000 Flag_inlinecache
00002000 l       *ABS*	00000000 Flag_Literator
20000000 l       *ABS*	00000000 RamAnfang
20020000 l       *ABS*	00000000 RamEnde
00000000 l       *ABS*	00000000 ITCMAnfang
00010000 l       *ABS*	00000000 ITCMEnde
24000000 l       *ABS*	00000000 AXIRAMAnfang
24080000 l       *ABS*	00000000 AXIRAMEnde
08000000 l       *ABS*	00000000 FlashAnfang
08020000 l       *ABS*	00000000 FlashEnde
24000000 l       *ABS*	00000000 KernelHash
24000000 l       *ABS*	00000000 FlashDictionaryAnfang
24080000 l       *ABS*	00000000 FlashDictionaryEnde
24000000 l       *ABS*	00000000 Backlinkgrenze
00000000 l       .text	00000000 KernelAnfang
20000388 l       *ABS*	00000000 returnstackanfang
08005296 l       *ABS*	00000000 Reset
000050d6 l       .text	00000000 faulthandler
00005104 l       .text	00000000 nullhandler
000050ae l       .text	00000000 irq_vektor_systick
0000512c l       .text	00000000 irq_vektor_exti0
00005154 l       .text	00000000 irq_vektor_exti1
0000517c l       .text	00000000 irq_vektor_exti2
000051a4 l       .text	00000000 irq_vektor_exti3
000051cc l       .text	00000000 irq_vektor_exti4
000051f2 l       .text	00000000 irq_vektor_adc
0000521a l       .text	00000000 irq_vektor_tim2
00005242 l       .text	00000000 irq_vektor_tim3
0000526a l       .text	00000000 irq_vektor_tim4
20000388 l       *ABS*	00000000 rampointer
20000000 l       *ABS*	00000000 konstantenfaltungszeiger
20000004 l       *ABS*	00000000 leavepointer
20000008 l       *ABS*	00000000 Datenstacksicherung
2000000c l       *ABS*	00000000 Einsprungpunkt
20000010 l       *ABS*	00000000 ZweitDictionaryPointer
20000014 l       *ABS*	00000000 ZweitFadenende
20000018 l       *ABS*	00000000 FlashFlags
2000001c l       *ABS*	00000000 VariablenPointer
20000020 l       *ABS*	00000000 state_tos
20000024 l       *ABS*	00000000 constant_tos
20000028 l       *ABS*	00000000 state_nos
2000002c l       *ABS*	00000000 constant_nos
20000030 l       *ABS*	00000000 state_3os
20000034 l       *ABS*	00000000 constant_3os
20000038 l       *ABS*	00000000 state_4os
2000003c l       *ABS*	00000000 constant_4os
20000040 l       *ABS*	00000000 state_5os
20000044 l       *ABS*	00000000 constant_5os
20000048 l       *ABS*	00000000 sprungtrampolin
2000004c l       *ABS*	00000000 state_r0
20000050 l       *ABS*	00000000 constant_r0
20000054 l       *ABS*	00000000 inline_cache_count
20000020 l       *ABS*	00000000 allocator_base
00000000 l       *ABS*	00000000 offset_state_tos
00000004 l       *ABS*	00000000 offset_constant_tos
00000008 l       *ABS*	00000000 offset_state_nos
0000000c l       *ABS*	00000000 offset_constant_nos
00000010 l       *ABS*	00000000 offset_state_3os
00000014 l       *ABS*	00000000 offset_constant_3os
00000018 l       *ABS*	00000000 offset_state_4os
0000001c l       *ABS*	00000000 offset_constant_4os
00000020 l       *ABS*	00000000 offset_state_5os
00000024 l       *ABS*	00000000 offset_constant_5os
00000028 l       *ABS*	00000000 offset_sprungtrampolin
0000002c l       *ABS*	00000000 offset_state_r0
00000030 l       *ABS*	00000000 offset_constant_r0
00000034 l       *ABS*	00000000 offset_inline_cache_count
0000000a l       *ABS*	00000000 rawinlinelength
00000006 l       *ABS*	00000000 inline_cache_length
20000058 l       *ABS*	00000000 inline_cache
00000043 l       *ABS*	00000000 Zahlenpufferlaenge
2000007c l       *ABS*	00000000 Zahlenpuffer
000000c8 l       *ABS*	00000000 Maximaleeingabe
200000c0 l       *ABS*	00000000 Eingabepuffer
04121985 l       *ABS*	00000000 stack_canary
20000188 l       *ABS*	00000000 datenstackende
20000288 l       *ABS*	00000000 datenstackanfang
20000288 l       *ABS*	00000000 returnstackende
20000388 l       *ABS*	00000000 RamDictionaryAnfang
20020000 l       *ABS*	00000000 RamDictionaryEnde
000001e4 l       .text	00000000 CoreDictionaryAnfang
2001ff98 l       *ABS*	00000000 CoreVariablenPointer
000001e4 l       .text	00000000 Dictionary_30
0000020e l       .text	00000000 Code_30
00000000 l       *ABS*	00000000 reg0
00000001 l       *ABS*	00000000 reg1
00000002 l       *ABS*	00000000 reg2
00000003 l       *ABS*	00000000 reg3
00000006 l       *ABS*	00000000 reg6
0000001e l       *ABS*	00000000 unknown
00000028 l       *ABS*	00000000 constant
0000020e l       .text	00000000 nflush_faltkonstanten
00000294 l       .text	00000000 free_5os_element
000002a4 l       .text	00000000 elemente_einen_weiterrutschen_lassen
00000272 l       .text	00000000 nget_faltkonstante
0000022c l       .text	00000000 nfaltkonstanten_aufschwimmen
00000246 l       .text	00000000 npush_faltkonstante
000002de l       .text	00000000 eliminiere_tos
00001198 l       .text	00000000 minusroll
00000f20 l       .text	00000000 drop_einsprung
00004cd4 l       .text	00000000 add_to_inline_cache
0000116c l       .text	00000000 roll
0000030a l       .text	00000000 element_to_stack
000002ca l       .text	00000000 befreie_tos
000002ea l       .text	00000000 eliminiere_nos
000003da l       .text	00000000 generiere_konstante
00003a00 l       .text	00000000 reversekomma
00000334 l       .text	00000000 tidyup_register_allocator
0000034c l       .text	00000000 tidyup_register_allocator_5os
00000356 l       .text	00000000 tidyup_register_allocator_4os
00000360 l       .text	00000000 tidyup_register_allocator_3os
0000036a l       .text	00000000 tidyup_register_allocator_nos
00000374 l       .text	00000000 tidyup_register_allocator_tos
000039a0 l       .text	00000000 hkomma
000003bc l       .text	00000000 tidyup_finish
000032c4 l       .text	00000000 registerliteralkomma
000003c2 l       .text	00000000 init_register_allocator
000003da l       .text	00000000 generiere_veraenderliche_konstante
00000470 l       .text	00000000 get_free_register
000003f2 l       .text	00000000 generiere_adresskonstante
0000043c l       .text	00000000 r0_unfrei
000004a0 l       .text	00000000 get_free_register_intern
000004ba l       .text	00000000 erstes_element_belegen
000004c2 l       .text	00000000 element_belegen
000004d8 l       .text	00000000 expect_one_element
000004ec l       .text	00000000 expect_two_elements
00000506 l       .text	00000000 expect_three_elements
00000526 l       .text	00000000 expect_four_elements
00000550 l       .text	00000000 expect_tos_in_register
00000564 l       .text	00000000 expect_nos_in_register
00000578 l       .text	00000000 expect_3os_in_register
0000058c l       .text	00000000 nos_change_tos_away_later
000005ba l       .text	00000000 make_tos_changeable
000005ec l       .text	00000000 tos_registerwechsel
000005fe l       .text	00000000 push_lr_nachholen
2001ffd8 l       *ABS*	00000000 state
00000620 l       .text	00000000 Dictionary_67
0000062c l       .text	00000000 Code_67
00000fc4 l       .text	00000000 over_allocator
00000644 l       .text	00000000 Dictionary_69
00000650 l       .text	00000000 Code_69
00000650 l       .text	00000000 ddrop_vektor
00000f24 l       .text	00000000 drop_allocator
00000662 l       .text	00000000 Dictionary_71
0000066e l       .text	00000000 Code_71
0000066e l       .text	00000000 dswap
00000680 l       .text	00000000 dswap_allocator
000006a8 l       .text	00000000 Dictionary_73
000006b4 l       .text	00000000 Code_73
000006b4 l       .text	00000000 dnip
000006d0 l       .text	00000000 Dictionary_74
000006dc l       .text	00000000 Code_74
000006ea l       .text	00000000 Dictionary_76
000006f6 l       .text	00000000 Code_76
0000070e l       .text	00000000 Dictionary_78
0000071a l       .text	00000000 Code_78
00000730 l       .text	00000000 Dictionary_79
0000073c l       .text	00000000 Code_79
00000752 l       .text	00000000 Dictionary_80
0000075c l       .text	00000000 Code_80
00000f6a l       .text	00000000 swap_allocator
000010ae l       .text	00000000 allocator_to_r
0000077a l       .text	00000000 Dictionary_81
00000784 l       .text	00000000 Code_81
000010e6 l       .text	00000000 allocator_r_from
000007a6 l       .text	00000000 Dictionary_83
000007b0 l       .text	00000000 Code_83
0000444a l       .text	00000000 loop_j_allocator
00004442 l       .text	00000000 rfetch_allocator
000007d6 l       .text	00000000 Dictionary_88
000007e4 l       .text	00000000 Code_88
000007fc l       .text	00000000 Dictionary_91
00000806 l       .text	00000000 Code_91
00000814 l       .text	00000000 Dictionary_92
0000081e l       .text	00000000 Code_92
0000082a l       .text	00000000 Dictionary_93
00000836 l       .text	00000000 Code_93
00000844 l       .text	00000000 Dictionary_94
00000850 l       .text	00000000 Code_94
000025b4 l       .text	00000000 smalltworegisters
00000890 l       .text	00000000 Dictionary_99
0000089c l       .text	00000000 Code_99
0000089c l       .text	00000000 dabs
000008b0 l       .text	00000000 dnegate
000008a2 l       .text	00000000 Dictionary_100
000008b0 l       .text	00000000 Code_100
000008c0 l       .text	00000000 Dictionary_101
000008ca l       .text	00000000 Code_101
00001014 l       .text	00000000 rot_allocator
00002488 l       .text	00000000 minus_allocator
0000104c l       .text	00000000 minusrot_allocator
000013aa l       .text	00000000 alloc_unkommutativ
00000910 l       .text	00000000 Dictionary_104
0000091a l       .text	00000000 Code_104
00002452 l       .text	00000000 plus_allocator
000013b2 l       .text	00000000 alloc_kommutativ
0000095e l       .text	00000000 Dictionary_107
00000968 l       .text	00000000 Code_107
00000f00 l       .text	00000000 dup_allocator
00000988 l       .text	00000000 Dictionary_111
00000992 l       .text	00000000 Code_111
00000992 l       .text	00000000 um_star
000009a4 l       .text	00000000 alloc_multiplikation_m3
000009e6 l       .text	00000000 Dictionary_113
000009f0 l       .text	00000000 Code_113
000009f0 l       .text	00000000 m_star
00000a04 l       .text	00000000 Dictionary_115
00000a0e l       .text	00000000 Code_115
00000a0e l       .text	00000000 ud_star
00000a10 l       .text	00000000 ud_star_registers
00000a16 l       .text	00000000 ud_star_late_entry
00000a42 l       .text	00000000 Dictionary_116
00000a4e l       .text	00000000 Code_116
00000a4e l       .text	00000000 udm_star
00000ad4 l       .text	00000000 Dictionary_133
00000ade l       .text	00000000 Code_133
00000b8a l       .text	00000000 m_slash_mod
00000af6 l       .text	00000000 Dictionary_138
00000b02 l       .text	00000000 Code_138
00000b18 l       .text	00000000 Dictionary_142
00000b22 l       .text	00000000 Code_142
00000b6c l       .text	00000000 um_slash_mod
00000b3a l       .text	00000000 Dictionary_147
00000b48 l       .text	00000000 Code_147
00000b5e l       .text	00000000 Dictionary_151
00000b6c l       .text	00000000 Code_151
00000baa l       .text	00000000 ud_slash_mod
00000b7e l       .text	00000000 Dictionary_156
00000b8a l       .text	00000000 Code_156
00000bfa l       .text	00000000 d_slash_mod
00000b9c l       .text	00000000 Dictionary_160
00000baa l       .text	00000000 Code_160
00000bb4 l       .text	00000000 ud_slash_mod_internal
00000be2 l       .text	00000000 uf_slash_mod
00000bee l       .text	00000000 Dictionary_162
00000bfa l       .text	00000000 Code_162
00000c64 l       .text	00000000 Dictionary_163
00000c6e l       .text	00000000 Code_163
00000c7a l       .text	00000000 Dictionary_164
00000c84 l       .text	00000000 Code_164
00000c84 l       .text	00000000 f_star
00000cc2 l       .text	00000000 Dictionary_167
00000ccc l       .text	00000000 Code_167
00000d0e l       .text	00000000 Dictionary_168
00000d18 l       .text	00000000 Code_168
0000194a l       .text	00000000 allocator_4store
00001952 l       .text	00000000 allocator_4store_anderer_opcode
00000d56 l       .text	00000000 Dictionary_172
00000d60 l       .text	00000000 Code_172
0000190c l       .text	00000000 allocator_4fetch_anderer_opcode
00001904 l       .text	00000000 allocator_4fetch
00000da0 l       .text	00000000 Dictionary_175
00000daa l       .text	00000000 Code_175
00000db4 l       .text	00000000 Dictionary_176
00000dbe l       .text	00000000 Code_176
00000dc8 l       .text	00000000 Dictionary_177
00000dd2 l       .text	00000000 Code_177
00000dde l       .text	00000000 Dictionary_178
00000de8 l       .text	00000000 Code_178
00000dfa l       .text	00000000 Dictionary_179
00000e04 l       .text	00000000 Code_179
00000f90 l       .text	00000000 nip_allocator
000014c4 l       .text	00000000 alloc_nullkleiner
00000e16 l       .text	00000000 Dictionary_180
00000e20 l       .text	00000000 Code_180
00001478 l       .text	00000000 allocator_equal_zero
00000e3e l       .text	00000000 Dictionary_183
00000e48 l       .text	00000000 Code_183
00000e88 l       .text	00000000 dgleichungleich_common
000014a0 l       .text	00000000 allocator_unequal_zero
00000e64 l       .text	00000000 Dictionary_184
00000e6e l       .text	00000000 Code_184
0000121c l       .text	00000000 xor_allocator
00001202 l       .text	00000000 or_allocator
00000eac l       .text	00000000 Dictionary_185
00000eb6 l       .text	00000000 Code_185
00000ebe l       .text	00000000 Dictionary_187
00000ec8 l       .text	00000000 Code_187
00000ece l       .text	00000000 Dictionary_188
00000ed8 l       .text	00000000 Code_188
00000ee0 l       .text	00000000 Dictionary_190
00000eea l       .text	00000000 Code_190
00000ef0 l       .text	00000000 Dictionary_191
00000efa l       .text	00000000 Code_191
00000f14 l       .text	00000000 Dictionary_194
00000f20 l       .text	00000000 Code_194
00000f40 l       .text	00000000 Dictionary_198
00000f4c l       .text	00000000 Code_198
00000f56 l       .text	00000000 Dictionary_200
00000f62 l       .text	00000000 Code_200
00000f82 l       .text	00000000 Dictionary_201
00000f8c l       .text	00000000 Code_201
00000fb0 l       .text	00000000 Dictionary_205
00000fbc l       .text	00000000 Code_205
00000fd8 l       .text	00000000 Dictionary_207
00000fe4 l       .text	00000000 Code_207
00000fe4 l       .text	00000000 tuck
00000ffe l       .text	00000000 Dictionary_208
00001008 l       .text	00000000 Code_208
00001008 l       .text	00000000 rot
00001034 l       .text	00000000 Dictionary_209
00001040 l       .text	00000000 Code_209
00001040 l       .text	00000000 minusrot
00001058 l       .text	00000000 Dictionary_210
00001064 l       .text	00000000 Code_210
0000106a l       .text	00000000 Dictionary_211
00001076 l       .text	00000000 Code_211
00001082 l       .text	00000000 Dictionary_213
00001090 l       .text	00000000 Code_213
0000109e l       .text	00000000 Dictionary_215
000010a8 l       .text	00000000 Code_215
000010d4 l       .text	00000000 Dictionary_218
000010de l       .text	00000000 Code_218
0000110a l       .text	00000000 Dictionary_222
00001114 l       .text	00000000 Code_222
00001128 l       .text	00000000 Dictionary_224
00001134 l       .text	00000000 Code_224
0000114c l       .text	00000000 Dictionary_227
00001158 l       .text	00000000 Code_227
00001160 l       .text	00000000 Dictionary_228
0000116c l       .text	00000000 Code_228
0000118c l       .text	00000000 Dictionary_230
00001198 l       .text	00000000 Code_230
000011bc l       .text	00000000 Dictionary_233
000011c6 l       .text	00000000 Code_233
000011d6 l       .text	00000000 Dictionary_236
000011e0 l       .text	00000000 Code_236
000011f2 l       .text	00000000 Dictionary_239
000011fc l       .text	00000000 Code_239
0000120c l       .text	00000000 Dictionary_242
00001216 l       .text	00000000 Code_242
00001226 l       .text	00000000 Dictionary_245
0000122e l       .text	00000000 Code_245
0000123e l       .text	00000000 Dictionary_248
00001248 l       .text	00000000 Code_248
00001272 l       .text	00000000 Dictionary_250
0000127c l       .text	00000000 Code_250
000012bc l       .text	00000000 rrotate
00001290 l       .text	00000000 Dictionary_251
0000129a l       .text	00000000 Code_251
000012ae l       .text	00000000 Dictionary_252
000012bc l       .text	00000000 Code_252
000012ce l       .text	00000000 Dictionary_255
000012dc l       .text	00000000 Code_255
00001306 l       .text	00000000 Dictionary_260
00001314 l       .text	00000000 Code_260
00001330 l       .text	00000000 Dictionary_265
0000133e l       .text	00000000 Code_265
000013ac l       .text	00000000 alloc_unkommutativ_ohneregister
000013cc l       .text	00000000 alloc_logic_gemeinsam
000013b4 l       .text	00000000 alloc_kommutativ_ohneregister
0000315c l       .text	00000000 twelvebitencoding
00001430 l       .text	00000000 m3_opcodieren
0000142e l       .text	00000000 m3_opcodieren_anderswo
00001468 l       .text	00000000 Dictionary_278
00001472 l       .text	00000000 Code_278
00001674 l       .text	00000000 prepare_single_compare
0000252e l       .text	00000000 allocator_one_minus
0000148e l       .text	00000000 Dictionary_279
00001498 l       .text	00000000 Code_279
000014b6 l       .text	00000000 Dictionary_280
000014c0 l       .text	00000000 Code_280
000014de l       .text	00000000 Dictionary_283
000014ea l       .text	00000000 Code_283
000014ee l       .text	00000000 generate_true
000014f4 l       .text	00000000 Dictionary_285
00001500 l       .text	00000000 Code_285
00001508 l       .text	00000000 Dictionary_287
00001512 l       .text	00000000 Code_287
0000168c l       .text	00000000 prepare_compare
0000152e l       .text	00000000 Dictionary_292
00001538 l       .text	00000000 Code_292
00001554 l       .text	00000000 Dictionary_297
0000155c l       .text	00000000 Code_297
00001578 l       .text	00000000 Dictionary_302
00001580 l       .text	00000000 Code_302
0000159c l       .text	00000000 Dictionary_307
000015a6 l       .text	00000000 Code_307
000015c2 l       .text	00000000 Dictionary_312
000015cc l       .text	00000000 Code_312
000015e8 l       .text	00000000 Dictionary_317
000015f2 l       .text	00000000 Code_317
0000160c l       .text	00000000 Dictionary_322
00001616 l       .text	00000000 Code_322
00001630 l       .text	00000000 Dictionary_327
0000163a l       .text	00000000 Code_327
00001654 l       .text	00000000 Dictionary_332
0000165c l       .text	00000000 Code_332
00001718 l       .text	00000000 sprungschreiber_flaggenerator
000025da l       .text	00000000 allocator_not
00001790 l       .text	00000000 smallplusminus
000017a6 l       .text	00000000 eliminiere_tos_wenn_bmi
000017b6 l       .text	00000000 Dictionary_355
000017c0 l       .text	00000000 Code_355
00001830 l       .text	00000000 alloc_minmax
000017d4 l       .text	00000000 Dictionary_358
000017de l       .text	00000000 Code_358
000017f2 l       .text	00000000 Dictionary_361
000017fe l       .text	00000000 Code_361
00001812 l       .text	00000000 Dictionary_364
0000181e l       .text	00000000 Code_364
00001898 l       .text	00000000 Dictionary_372
000018a4 l       .text	00000000 Code_372
000018a4 l       .text	00000000 move
000018d6 l       .text	00000000 Dictionary_376
000018e2 l       .text	00000000 Code_376
000018f8 l       .text	00000000 Dictionary_380
00001900 l       .text	00000000 Code_380
0000193a l       .text	00000000 Dictionary_383
00001942 l       .text	00000000 Code_383
00001992 l       .text	00000000 Dictionary_386
0000199c l       .text	00000000 Code_386
000019c8 l       .text	00000000 Dictionary_387
000019d2 l       .text	00000000 Code_387
000019d6 l       .text	00000000 allocator_2fetch
00001a0c l       .text	00000000 Dictionary_390
00001a16 l       .text	00000000 Code_390
00001a16 l       .text	00000000 hstore
00001a1e l       .text	00000000 allocator_2store
00001a66 l       .text	00000000 Dictionary_393
00001a70 l       .text	00000000 Code_393
00001a9c l       .text	00000000 Dictionary_394
00001aa6 l       .text	00000000 Code_394
00001aaa l       .text	00000000 allocator_1fetch
00001ae0 l       .text	00000000 Dictionary_397
00001aea l       .text	00000000 Code_397
00001aea l       .text	00000000 cstore
00001af2 l       .text	00000000 allocator_1store
00001b3a l       .text	00000000 Dictionary_400
00001b44 l       .text	00000000 Code_400
00001b70 l       .text	00000000 Dictionary_401
00001b7c l       .text	00000000 Code_401
00001bf6 l       .text	00000000 allocator_xorstore_intern
00001b94 l       .text	00000000 Dictionary_404
00001ba0 l       .text	00000000 Code_404
00001bd4 l       .text	00000000 Dictionary_407
00001be0 l       .text	00000000 Code_407
00001c14 l       .text	00000000 Dictionary_410
00001c20 l       .text	00000000 Code_410
00001c38 l       .text	00000000 allocator_bitfetch_intern
00001c4a l       .text	00000000 Dictionary_413
00001c56 l       .text	00000000 Code_413
00001cd0 l       .text	00000000 allocator_hxorstore_intern
00001c6e l       .text	00000000 Dictionary_416
00001c7a l       .text	00000000 Code_416
00001cae l       .text	00000000 Dictionary_419
00001cba l       .text	00000000 Code_419
00001cee l       .text	00000000 Dictionary_422
00001cfa l       .text	00000000 Code_422
00001d14 l       .text	00000000 Dictionary_423
00001d20 l       .text	00000000 Code_423
00001d9a l       .text	00000000 allocator_cxorstore_intern
00001d38 l       .text	00000000 Dictionary_426
00001d44 l       .text	00000000 Code_426
00001d78 l       .text	00000000 Dictionary_429
00001d84 l       .text	00000000 Code_429
00001db8 l       .text	00000000 Dictionary_432
00001dc4 l       .text	00000000 Code_432
00000022 l       *ABS*	00000000 FLASH_ACR_2WS
00001dde l       .text	00000000 Dictionary_433
00001df2 l       .text	00000000 Code_433
00001df2 l       .text	00000000 flash_400mhz
00000005 l       *ABS*	00000000 SPI_READ_SR1
00000035 l       *ABS*	00000000 SPI_READ_SR2
00000015 l       *ABS*	00000000 SPI_READ_SR3
00001dfc l       .text	00000000 Dictionary_434
00001e10 l       .text	00000000 Code_434
00001e10 l       .text	00000000 spi_read_reg1
00001e1a l       .text	00000000 Dictionary_435
00001e2e l       .text	00000000 Code_435
00001e2e l       .text	00000000 spi_read_reg2
00001e38 l       .text	00000000 Dictionary_436
00001e4c l       .text	00000000 Code_436
00001e4c l       .text	00000000 spi_read_reg3
00001e56 l       .text	00000000 Dictionary_437
00001e66 l       .text	00000000 Code_437
00001e66 l       .text	00000000 init_spi
00000020 l       *ABS*	00000000 AFRL
00000008 l       *ABS*	00000000 OSPEEDR
00000000 l       *ABS*	00000000 MODER
00000014 l       *ABS*	00000000 ODR
00001f1c l       .text	00000000 Dictionary_438
00001f2c l       .text	00000000 Code_438
00001f2c l       .text	00000000 jedec_id
00001f82 l       .text	00000000 Dictionary_441
00001f94 l       .text	00000000 Code_441
00001f94 l       .text	00000000 to_jedec_size
00001fa0 l       .text	00000000 Dictionary_442
00001fb2 l       .text	00000000 Code_442
00001fb2 l       .text	00000000 spi_status_read
00002000 l       .text	00000000 Dictionary_445
0000200e l       .text	00000000 Code_445
0000206a l       .text	00000000 Dictionary_448
00002076 l       .text	00000000 Code_448
000020ce l       .text	00000000 Dictionary_451
000020de l       .text	00000000 Code_451
000020de l       .text	00000000 spi_read
00002154 l       .text	00000000 Dictionary_454
00002164 l       .text	00000000 Code_454
00002164 l       .text	00000000 spi_move
0000219e l       .text	00000000 Dictionary_455
000021ac l       .text	00000000 Code_455
000021ac l       .text	00000000 h_flashkomma
000022b8 l       .text	00000000 write_enable
e000ef64 l       *ABS*	00000000 DCCMVAU
e000ef58 l       *ABS*	00000000 ICIMVAU
00002310 l       .text	00000000 spi_wait
00002220 l       .text	00000000 Dictionary_458
0000222e l       .text	00000000 Code_458
0000222e l       .text	00000000 c_flashkomma
000022a4 l       .text	00000000 Dictionary_461
000022b8 l       .text	00000000 Code_461
00002300 l       .text	00000000 Dictionary_464
00002310 l       .text	00000000 Code_464
00002320 l       .text	00000000 Dictionary_465
00002330 l       .text	00000000 Code_465
00002360 l       .text	00000000 erase
00002336 l       .text	00000000 Dictionary_466
00002346 l       .text	00000000 Code_466
0000234c l       .text	00000000 Dictionary_467
0000235c l       .text	00000000 Code_467
000023b6 l       .text	00000000 Dictionary_470
000023c8 l       .text	00000000 Code_470
000023c8 l       .text	00000000 erase_chip
00002444 l       .text	00000000 Dictionary_473
0000244c l       .text	00000000 Code_473
0000247a l       .text	00000000 Dictionary_479
00002482 l       .text	00000000 Code_479
00002520 l       .text	00000000 Dictionary_494
0000252a l       .text	00000000 Code_494
00002538 l       .text	00000000 Dictionary_497
00002542 l       .text	00000000 Code_497
00002550 l       .text	00000000 Dictionary_500
0000255a l       .text	00000000 Code_500
00002568 l       .text	00000000 Dictionary_503
00002572 l       .text	00000000 Code_503
00002580 l       .text	00000000 Dictionary_506
0000258c l       .text	00000000 Code_506
0000259a l       .text	00000000 Dictionary_509
000025a8 l       .text	00000000 Code_509
000025ac l       .text	00000000 allocator_negate
000025cc l       .text	00000000 Dictionary_512
000025d6 l       .text	00000000 Code_512
000025e4 l       .text	00000000 Dictionary_515
000025ee l       .text	00000000 Code_515
000025fc l       .text	00000000 Dictionary_518
00002606 l       .text	00000000 Code_518
0000260c l       .text	00000000 Dictionary_519
00002616 l       .text	00000000 Code_519
00002622 l       .text	00000000 Dictionary_522
0000262e l       .text	00000000 Code_522
0000263a l       .text	00000000 Dictionary_525
00002644 l       .text	00000000 Code_525
00002652 l       .text	00000000 Dictionary_528
0000265c l       .text	00000000 Code_528
00002692 l       .text	00000000 Dictionary_533
0000269e l       .text	00000000 Code_533
0000269e l       .text	00000000 u_divmod
000026b0 l       .text	00000000 Dictionary_534
000026bc l       .text	00000000 Code_534
000026bc l       .text	00000000 divmod
000026ce l       .text	00000000 Dictionary_535
000026d8 l       .text	00000000 Code_535
000026e2 l       .text	00000000 Dictionary_537
000026ea l       .text	00000000 Code_537
00002722 l       .text	00000000 Dictionary_539
0000272e l       .text	00000000 Code_539
00002736 l       .text	00000000 Dictionary_540
00002742 l       .text	00000000 Code_540
2001fffc l       *ABS*	00000000 base
0000274e l       .text	00000000 Dictionary_543
0000275c l       .text	00000000 Code_543
00002764 l       .text	00000000 Dictionary_544
00002772 l       .text	00000000 Code_544
0000277a l       .text	00000000 Dictionary_545
00002784 l       .text	00000000 Code_545
e000ed14 l       *ABS*	00000000 CCR
00020000 l       *ABS*	00000000 CCR_IC
00010000 l       *ABS*	00000000 CCR_DC
e000ed78 l       *ABS*	00000000 CLIDR
e000ed7c l       *ABS*	00000000 CTR
e000ed80 l       *ABS*	00000000 CCSIDR
e000ed84 l       *ABS*	00000000 CSSELR
e000ef50 l       *ABS*	00000000 ICIALLU
e000ef5c l       *ABS*	00000000 DCIMVAC
e000ef60 l       *ABS*	00000000 DCISW
e000ef68 l       *ABS*	00000000 DCCMVAC
e000ef6c l       *ABS*	00000000 DCCSW
e000ef70 l       *ABS*	00000000 DCCIMVAC
e000ef74 l       *ABS*	00000000 DCCISW
0000279c l       .text	00000000 enable_caches
000027f6 l       .text	00000000 Dictionary_546
0000280a l       .text	00000000 Code_546
0000280a l       .text	00000000 dcache_clean
00002816 l       .text	00000000 Dictionary_548
0000282e l       .text	00000000 Code_548
0000282e l       .text	00000000 dcache_invalidate
00000004 l       *ABS*	00000000 OTYPER
0000000c l       *ABS*	00000000 PUPDR
00000010 l       *ABS*	00000000 IDR
00000018 l       *ABS*	00000000 BSRR
0000001c l       *ABS*	00000000 LCKR
00000024 l       *ABS*	00000000 AFRH
0000283a l       .text	00000000 Dictionary_550
00002848 l       .text	00000000 Code_550
00002848 l       .text	00000000 ldo_on
00002858 l       .text	00000000 Dictionary_551
00002864 l       .text	00000000 Code_551
00002864 l       .text	00000000 vos1
00002878 l       .text	00000000 Dictionary_552
00002886 l       .text	00000000 Code_552
00002886 l       .text	00000000 hse_on
00000002 l       *ABS*	00000000 RCC_PLLCKSELR_PLLSRC_Width
00000002 l       *ABS*	00000000 RCC_PLLCKSELR_PLLSRC_HSE
00000006 l       *ABS*	00000000 RCC_PLLCKSELR_DIVM1_Width
00000005 l       *ABS*	00000000 RCC_PLLCKSELR_DIVM1_Div5
01000000 l       *ABS*	00000000 RCC_PLL1DIVR_DIVR1_Div2
00030000 l       *ABS*	00000000 RCC_PLL1DIVR_DIVQ1_Div4
00000200 l       *ABS*	00000000 RCC_PLL1DIVR_DIVP1_Div2
0000009f l       *ABS*	00000000 RCC_PLL1DIVR_DIVN1_Mul160
0103029f l       *ABS*	00000000 RCC_PLL1DIVR_Value
0000289a l       .text	00000000 Dictionary_553
000028ac l       .text	00000000 Code_553
000028ac l       .text	00000000 pll_400mhz
000028f4 l       .text	00000000 Dictionary_554
00002904 l       .text	00000000 Code_554
00002904 l       .text	00000000 init_crc
00002920 l       .text	00000000 reset_crc
00002910 l       .text	00000000 Dictionary_555
00002920 l       .text	00000000 Code_555
00002928 l       .text	00000000 Dictionary_556
00002934 l       .text	00000000 Code_556
00002934 l       .text	00000000 to_crc
00002946 l       .text	00000000 Dictionary_557
00002952 l       .text	00000000 Code_557
00002952 l       .text	00000000 crc_at
00002988 l       .text	00000000 Dictionary_558
00002998 l       .text	00000000 Code_558
00002998 l       .text	00000000 init_hash
000029a4 l       .text	00000000 Dictionary_559
000029b2 l       .text	00000000 Code_559
000029c4 l       .text	00000000 Dictionary_562
000029ce l       .text	00000000 Code_562
000029ce l       .text	00000000 swd_addr
000029d8 l       .text	00000000 Dictionary_565
000029e8 l       .text	00000000 Code_565
000029e8 l       .text	00000000 uart_init
2001ffd0 l       *ABS*	00000000 Dictionarypointer
00003a7c l       .text	00000000 allot
00002a08 l       .text	00000000 Dictionary_570
00002a18 l       .text	00000000 Code_570
00002a18 l       .text	00000000 serial_qkey
00002b9a l       .text	00000000 pause
00002a32 l       .text	00000000 Dictionary_573
00002a42 l       .text	00000000 Code_573
00002a42 l       .text	00000000 serial_qemit
00002a60 l       .text	00000000 Dictionary_576
00002a6e l       .text	00000000 Code_576
00002a6e l       .text	00000000 serial_key
00002a86 l       .text	00000000 Dictionary_579
00002a96 l       .text	00000000 Code_579
00002a96 l       .text	00000000 serial_emit
00002ab0 l       .text	00000000 Dictionary_581
00002ac0 l       .text	00000000 Code_581
2001fff8 l       *ABS*	00000000 hook_emit
00002acc l       .text	00000000 Dictionary_584
00002adc l       .text	00000000 Code_584
2001fff4 l       *ABS*	00000000 hook_key
00002ae8 l       .text	00000000 Dictionary_587
00002afa l       .text	00000000 Code_587
2001fff0 l       *ABS*	00000000 hook_qemit
00002b06 l       .text	00000000 Dictionary_590
00002b16 l       .text	00000000 Code_590
2001ffec l       *ABS*	00000000 hook_qkey
00002b22 l       .text	00000000 Dictionary_593
00002b34 l       .text	00000000 Code_593
2001ffe8 l       *ABS*	00000000 hook_pause
0000503a l       .text	00000000 nop_vektor
00002b40 l       .text	00000000 Dictionary_596
00002b4c l       .text	00000000 Code_596
00002b4c l       .text	00000000 emit
00002ba0 l       .text	00000000 hook_intern
00002b56 l       .text	00000000 Dictionary_597
00002b60 l       .text	00000000 Code_597
00002b60 l       .text	00000000 key
00002b6a l       .text	00000000 Dictionary_598
00002b76 l       .text	00000000 Code_598
00002b7c l       .text	00000000 Dictionary_599
00002b88 l       .text	00000000 Code_599
00002b8e l       .text	00000000 Dictionary_600
00002b9a l       .text	00000000 Code_600
00002bbc l       .text	00000000 Dictionary_601
00002bce l       .text	00000000 Code_601
00002bce l       .text	00000000 backup_base
00002bd8 l       .text	00000000 Dictionary_604
00002be8 l       .text	00000000 Code_604
00002c1c l       .text	00000000 Dictionary_605
00002c2a l       .text	00000000 Code_605
00002c4e l       .text	00000000 accept
00002c40 l       .text	00000000 Dictionary_607
00002c4e l       .text	00000000 Code_607
00002e94 l       .text	00000000 dotgaensefuesschen
00002df2 l       .text	00000000 space
00002cb6 l       .text	00000000 Dictionary_611
00002cc0 l       .text	00000000 Code_611
00002cc0 l       .text	00000000 tib
00002cc8 l       .text	00000000 Dictionary_613
00002cd2 l       .text	00000000 Code_613
2001ffe4 l       *ABS*	00000000 Pufferstand
00002cde l       .text	00000000 Dictionary_616
00002cf4 l       .text	00000000 Code_616
2001ffdc l       *ABS*	00000000 current_source
00002d04 l       .text	00000000 Dictionary_619
00002d14 l       .text	00000000 Code_619
00002d14 l       .text	00000000 setsource
00002d20 l       .text	00000000 Dictionary_621
00002d2e l       .text	00000000 Code_621
00002d2e l       .text	00000000 source
00002d3e l       .text	00000000 Dictionary_623
00002d4a l       .text	00000000 Code_623
00002d4a l       .text	00000000 query
00002d78 l       .text	00000000 Dictionary_628
00002d86 l       .text	00000000 Code_628
00002d86 l       .text	00000000 compare
00002dc0 l       .text	00000000 Dictionary_632
00002dca l       .text	00000000 Code_632
00002dd4 l       .text	00000000 Dictionary_634
00002dde l       .text	00000000 Code_634
00002de6 l       .text	00000000 Dictionary_637
00002df2 l       .text	00000000 Code_637
00002dfa l       .text	00000000 Dictionary_640
00002e08 l       .text	00000000 Code_640
00002e1a l       .text	00000000 Dictionary_642
00002e28 l       .text	00000000 Code_642
00002e36 l       .text	00000000 holechar
00002e2a l       .text	00000000 Dictionary_643
00002e36 l       .text	00000000 Code_643
00004804 l       .text	00000000 token
00002e42 l       .text	00000000 Dictionary_645
00002e4a l       .text	00000000 Code_645
00002e52 l       .text	00000000 Dictionary_648
00002e5a l       .text	00000000 Code_648
00004818 l       .text	00000000 parse
00002e6c l       .text	00000000 Dictionary_653
00002e76 l       .text	00000000 Code_653
0000337e l       .text	00000000 callkomma
00003a16 l       .text	00000000 stringkomma
00002f24 l       .text	00000000 type
00002eb0 l       .text	00000000 Dictionary_659
00002eba l       .text	00000000 Code_659
00002ebe l       .text	00000000 dotcfuesschen
00002ed6 l       .text	00000000 Dictionary_661
00002ee0 l       .text	00000000 Code_661
00002ee4 l       .text	00000000 dotsfuesschen
00002f00 l       .text	00000000 Dictionary_665
00002f0c l       .text	00000000 Code_665
00002f0c l       .text	00000000 count
00002f18 l       .text	00000000 Dictionary_668
00002f24 l       .text	00000000 Code_668
00002f3c l       .text	00000000 stype
00002f30 l       .text	00000000 Dictionary_669
00002f3c l       .text	00000000 Code_669
00002f58 l       .text	00000000 Dictionary_672
00002f64 l       .text	00000000 Code_672
00002f64 l       .text	00000000 hexdot
00002f92 l       .text	00000000 Dictionary_675
00002f9c l       .text	00000000 Code_675
00002f9c l       .text	00000000 hexdots
00002fa2 l       .text	00000000 Dictionary_676
00002fac l       .text	00000000 Code_676
00002fac l       .text	00000000 udots
00004ba2 l       .text	00000000 udot
00002fb2 l       .text	00000000 Dictionary_677
00002fbc l       .text	00000000 Code_677
00002fbc l       .text	00000000 dots
00004bb2 l       .text	00000000 dot
00003056 l       .text	00000000 Dictionary_688
00003062 l       .text	00000000 Code_688
00003062 l       .text	00000000 words
00003ef2 l       .text	00000000 dictionarystart
00003f8c l       .text	00000000 skipstring
00003f22 l       .text	00000000 dictionarynext
000030f6 l       .text	00000000 Dictionary_708
00003104 l       .text	00000000 Code_708
00003104 l       .text	00000000 unused
00004140 l       .text	00000000 flashvarhere
00003118 l       .text	00000000 unused_ram
00003148 l       .text	00000000 Dictionary_709
0000315c l       .text	00000000 Code_709
00003238 l       .text	00000000 movwkomma
00003270 l       .text	00000000 movtkomma
000032ac l       .text	00000000 Dictionary_718
000032c4 l       .text	00000000 Code_718
0000332a l       .text	00000000 movwmovt_register_r3
00003312 l       .text	00000000 Dictionary_722
00003322 l       .text	00000000 Code_722
00003342 l       .text	00000000 callkommalang
00003364 l       .text	00000000 callkommakurz_intern
00003356 l       .text	00000000 callkommakurz
00003372 l       .text	00000000 Dictionary_730
0000337e l       .text	00000000 Code_730
00004122 l       .text	00000000 here
000033d8 l       .text	00000000 Dictionary_735
000033e8 l       .text	00000000 Code_735
000033e8 l       .text	00000000 literalkomma
0000340e l       .text	00000000 Dictionary_742
0000341c l       .text	00000000 Code_742
0000348c l       .text	00000000 builds
00003456 l       .text	00000000 dodoes
00003436 l       .text	00000000 Dictionary_744
00003442 l       .text	00000000 Code_744
00003442 l       .text	00000000 does
0000384e l       .text	00000000 smudge
0000347e l       .text	00000000 Dictionary_747
0000348c l       .text	00000000 Code_747
00003c7c l       .text	00000000 create
00003984 l       .text	00000000 nop_hkomma
000034ba l       .text	00000000 Dictionary_753
000034c4 l       .text	00000000 Code_753
000034ce l       .text	00000000 tick
000034c6 l       .text	00000000 Dictionary_754
000034ce l       .text	00000000 Code_754
00004052 l       .text	00000000 find_not_found
000034de l       .text	00000000 Dictionary_756
000034ee l       .text	00000000 Code_756
00004bfa l       .text	00000000 kompilator
00003514 l       .text	00000000 Dictionary_761
00003522 l       .text	00000000 Code_761
00003522 l       .text	00000000 inlinekomma
00003550 l       .text	00000000 suchedefinitionsende
0000356a l       .text	00000000 Dictionary_765
00003576 l       .text	00000000 Code_765
00003576 l       .text	00000000 retkomma
00003580 l       .text	00000000 Dictionary_768
0000358c l       .text	00000000 Code_768
0000358e l       .text	00000000 Dictionary_769
0000359c l       .text	00000000 Code_769
000035a6 l       .text	00000000 Dictionary_771
000035b2 l       .text	00000000 Code_771
000035be l       .text	00000000 Dictionary_774
000035c6 l       .text	00000000 Code_774
000035c6 l       .text	00000000 compile_state
000035d0 l       .text	00000000 Dictionary_775
000035d8 l       .text	00000000 Code_775
000035d8 l       .text	00000000 execute_state
000035e0 l       .text	00000000 Dictionary_776
000035e8 l       .text	00000000 Code_776
00003600 l       .text	00000000 Dictionary_777
00003608 l       .text	00000000 Code_777
00004f28 l       .text	00000000 quit
000038b4 l       .text	00000000 setflags
00004d00 l       .text	00000000 inline_cache_schreiben
00003686 l       .text	00000000 Dictionary_785
00003694 l       .text	00000000 Code_785
00003694 l       .text	00000000 execute
0000369a l       .text	00000000 Dictionary_787
000036aa l       .text	00000000 Code_787
000036b2 l       .text	00000000 Dictionary_790
000036c0 l       .text	00000000 Code_790
000036c0 l       .text	00000000 setze_inlineflag
000036c8 l       .text	00000000 Dictionary_793
000036da l       .text	00000000 Code_793
000036e2 l       .text	00000000 Dictionary_796
000036f4 l       .text	00000000 Code_796
000036f4 l       .text	00000000 setze_faltbarflag
000036fc l       .text	00000000 Dictionary_799
0000370e l       .text	00000000 Code_799
00003716 l       .text	00000000 Dictionary_802
00003728 l       .text	00000000 Code_802
00003730 l       .text	00000000 Dictionary_805
00003742 l       .text	00000000 Code_805
0000374a l       .text	00000000 Dictionary_808
0000375c l       .text	00000000 Code_808
00003764 l       .text	00000000 Dictionary_811
00003776 l       .text	00000000 Code_811
0000377e l       .text	00000000 Dictionary_814
00003790 l       .text	00000000 Code_814
00003798 l       .text	00000000 Dictionary_817
000037aa l       .text	00000000 Code_817
000037b2 l       .text	00000000 Dictionary_820
000037c2 l       .text	00000000 Code_820
000037e2 l       .text	00000000 Dictionary_823
000037f2 l       .text	00000000 Code_823
00003840 l       .text	00000000 Dictionary_825
0000384e l       .text	00000000 Code_825
00003896 l       .text	00000000 smudge_ram
00003930 l       .text	00000000 align4komma
2001ffd4 l       *ABS*	00000000 Fadenende
000038b6 l       .text	00000000 setflags_intern
000038a4 l       .text	00000000 Dictionary_830
000038b4 l       .text	00000000 Code_830
000038ce l       .text	00000000 setflags_ram
000038ec l       .text	00000000 Dictionary_833
000038fa l       .text	00000000 Code_833
00003902 l       .text	00000000 Dictionary_834
00003910 l       .text	00000000 Code_834
00003910 l       .text	00000000 alignkomma
00003958 l       .text	00000000 ckomma
00003924 l       .text	00000000 Dictionary_837
00003930 l       .text	00000000 Code_837
0000394e l       .text	00000000 Dictionary_839
00003958 l       .text	00000000 Code_839
00003972 l       .text	00000000 ckomma_ram
00003978 l       .text	00000000 ckomma_fertig
0000398c l       .text	00000000 drop_hkomma
00003996 l       .text	00000000 Dictionary_849
000039a0 l       .text	00000000 Code_849
000039ca l       .text	00000000 hkomma_ram
000039d0 l       .text	00000000 hkomma_fertig
000039dc l       .text	00000000 Dictionary_855
000039e4 l       .text	00000000 Code_855
000039e4 l       .text	00000000 komma
000039f6 l       .text	00000000 Dictionary_858
00003a00 l       .text	00000000 Code_858
00003a08 l       .text	00000000 Dictionary_859
00003a16 l       .text	00000000 Code_859
00003a70 l       .text	00000000 Dictionary_867
00003a7c l       .text	00000000 Code_867
00003ab2 l       .text	00000000 allot_ram
00003adc l       .text	00000000 allot_ok
00003ae0 l       .text	00000000 Dictionary_872
00003af0 l       .text	00000000 Code_872
00003afc l       .text	00000000 Dictionary_875
00003b08 l       .text	00000000 Code_875
00003b14 l       .text	00000000 Dictionary_878
00003b24 l       .text	00000000 Code_878
00003b72 l       .text	00000000 compiletoram
00003b38 l       .text	00000000 Dictionary_879
00003b4c l       .text	00000000 Code_879
00003b5e l       .text	00000000 Dictionary_881
00003b72 l       .text	00000000 Code_881
00003ba4 l       .text	00000000 Zweitpointertausch
00003b80 l       .text	00000000 Dictionary_882
00003b96 l       .text	00000000 Code_882
00003b96 l       .text	00000000 compiletoflash
00003bf6 l       .text	00000000 Dictionary_884
00003c0a l       .text	00000000 Code_884
00003c10 l       .text	00000000 Dictionary_885
00003c22 l       .text	00000000 Code_885
00003c6c l       .text	00000000 Dictionary_886
00003c7c l       .text	00000000 Code_886
00003faa l       .text	00000000 find
00003d44 l       .text	00000000 create_ram
00003d6c l       .text	00000000 create_ende
00003d76 l       .text	00000000 Dictionary_904
00003d86 l       .text	00000000 Code_904
00003db6 l       .text	00000000 nvariable
00003d8e l       .text	00000000 Dictionary_907
00003d9e l       .text	00000000 Code_907
00003da6 l       .text	00000000 Dictionary_910
00003db6 l       .text	00000000 Code_910
00003dfa l       .text	00000000 variable_ram
00003e6a l       .text	00000000 prepare_var_buf_flash
00003ea8 l       .text	00000000 prepare_var_buf_ram
00003e0e l       .text	00000000 finish_var_buf_ram
00003e18 l       .text	00000000 Dictionary_915
00003e26 l       .text	00000000 Code_915
00003e60 l       .text	00000000 rambuffer_ram
00003ece l       .text	00000000 bx_lr_komma
00003edc l       .text	00000000 Dictionary_926
00003ef2 l       .text	00000000 Code_926
00003f0c l       .text	00000000 Dictionary_928
00003f22 l       .text	00000000 Code_928
00003f6c l       .text	00000000 Dictionary_932
00003f7e l       .text	00000000 Code_932
00003f9e l       .text	00000000 Dictionary_933
00003faa l       .text	00000000 Code_933
2001ffcc l       *ABS*	00000000 hook_find
00003fb0 l       .text	00000000 Dictionary_934
00003fc0 l       .text	00000000 Code_934
00003fda l       .text	00000000 core_find
00003fcc l       .text	00000000 Dictionary_937
00003fda l       .text	00000000 Code_937
00004e70 l       .text	00000000 not_found_addr_r0_len_r1
00004074 l       .text	00000000 Dictionary_944
00004082 l       .text	00000000 Code_944
00004082 l       .text	00000000 cjumpgenerator
000040a0 l       .text	00000000 jump_too_far
000040cc l       .text	00000000 sprungbefehl_einfuegen
000040dc l       .text	00000000 Dictionary_948
000040e8 l       .text	00000000 Code_948
000040e8 l       .text	00000000 jumpgenerator
00004116 l       .text	00000000 Dictionary_953
00004122 l       .text	00000000 Code_953
0000412c l       .text	00000000 Dictionary_955
00004140 l       .text	00000000 Code_955
0000414a l       .text	00000000 nullprobekomma
0000415e l       .text	00000000 branch_r
00004160 l       .text	00000000 r_branch_jne
000041da l       .text	00000000 branch_v
0000417a l       .text	00000000 r_branch_jvc
00004194 l       .text	00000000 r_nullbranch
000041b2 l       .text	00000000 r_branch
000041c4 l       .text	00000000 nullbranch_v
000041ec l       .text	00000000 v_branch
000041f8 l       .text	00000000 v_nullbranch
0000420c l       .text	00000000 v_casebranch
00004220 l       .text	00000000 allocator_nullsprungprobe
0000425a l       .text	00000000 Dictionary_979
00004266 l       .text	00000000 Code_979
00004266 l       .text	00000000 struktur_then
00004350 l       .text	00000000 strukturen_passen_nicht
00004286 l       .text	00000000 Dictionary_982
00004292 l       .text	00000000 Code_982
00004304 l       .text	00000000 struktur_ahead
000042a2 l       .text	00000000 Dictionary_983
000042ac l       .text	00000000 Code_983
000042ac l       .text	00000000 struktur_if
000042bc l       .text	00000000 struktur_if_allokator
000042f8 l       .text	00000000 Dictionary_991
00004304 l       .text	00000000 Code_991
00004312 l       .text	00000000 Dictionary_994
00004320 l       .text	00000000 Code_994
000043e6 l       .text	00000000 struktur_again
0000432c l       .text	00000000 Dictionary_995
00004338 l       .text	00000000 Code_995
0000437a l       .text	00000000 Dictionary_997
00004386 l       .text	00000000 Code_997
000043da l       .text	00000000 Dictionary_1005
000043e6 l       .text	00000000 Code_1005
000043ee l       .text	00000000 Dictionary_1007
000043fa l       .text	00000000 Code_1007
00004418 l       .text	00000000 Dictionary_1010
00004420 l       .text	00000000 Code_1010
00004432 l       .text	00000000 Dictionary_1014
0000443a l       .text	00000000 Code_1014
00004460 l       .text	00000000 Dictionary_1018
00004468 l       .text	00000000 Code_1018
0000448c l       .text	00000000 Dictionary_1023
00004498 l       .text	00000000 Code_1023
000044ca l       .text	00000000 Dictionary_1025
000044d8 l       .text	00000000 Code_1025
000044d8 l       .text	00000000 unloop
000044dc l       .text	00000000 Dictionary_1026
000044e8 l       .text	00000000 Code_1026
00004502 l       .text	00000000 struktur_plusloop
00004538 l       .text	00000000 loop_intern
00004514 l       .text	00000000 Dictionary_1030
00004520 l       .text	00000000 Code_1030
00004550 l       .text	00000000 struktur_loop
000047d0 l       .text	00000000 spruenge_einpflegen
00004556 l       .text	00000000 Dictionary_1035
00004560 l       .text	00000000 Code_1035
00004592 l       .text	00000000 struktur_do
0000456c l       .text	00000000 do_rest_der_schleifenstruktur
000045ee l       .text	00000000 gemeinsame_schleifenoptimierung
0000459e l       .text	00000000 Dictionary_1045
000045a8 l       .text	00000000 Code_1045
000045b4 l       .text	00000000 qdo_rest_der_schleifenstruktur
00004684 l       .text	00000000 Dictionary_1067
00004690 l       .text	00000000 Code_1067
00004690 l       .text	00000000 case
000046a4 l       .text	00000000 Dictionary_1072
000046ae l       .text	00000000 Code_1072
000046b2 l       .text	00000000 struktur_qof
000046c6 l       .text	00000000 of_inneneinsprung
000046ba l       .text	00000000 Dictionary_1074
000046c4 l       .text	00000000 Code_1074
00004770 l       .text	00000000 struktur_of
000046da l       .text	00000000 of_opcodiereinsprung
00004778 l       .text	00000000 Dictionary_1090
00004784 l       .text	00000000 Code_1090
00004784 l       .text	00000000 strukturendof
000047ae l       .text	00000000 Dictionary_1098
000047bc l       .text	00000000 Code_1098
000047bc l       .text	00000000 strukturendcase
000047f8 l       .text	00000000 Dictionary_1101
00004804 l       .text	00000000 Code_1101
0000480c l       .text	00000000 Dictionary_1103
00004818 l       .text	00000000 Code_1103
00004870 l       .text	00000000 Dictionary_1104
0000487c l       .text	00000000 Code_1104
0000487c l       .text	00000000 digit
00004880 l       .text	00000000 digit_base_r3
000048ae l       .text	00000000 Dictionary_1106
000048bc l       .text	00000000 Code_1106
000048bc l       .text	00000000 number
0000497c l       .text	00000000 number_nachkommastellen
000049b8 l       .text	00000000 Dictionary_1133
000049c6 l       .text	00000000 Code_1133
000049c6 l       .text	00000000 digitausgeben
000049da l       .text	00000000 Dictionary_1134
000049e6 l       .text	00000000 Code_1134
000049e6 l       .text	00000000 hold
00004a10 l       .text	00000000 Dictionary_1136
00004a1c l       .text	00000000 Code_1136
00004a1c l       .text	00000000 zahlanhaengen
00004a30 l       .text	00000000 Dictionary_1138
00004a3c l       .text	00000000 Code_1138
00004a3c l       .text	00000000 vorzeichen
00004a48 l       .text	00000000 Dictionary_1140
00004a52 l       .text	00000000 Code_1140
00004a52 l       .text	00000000 zifferstringende
00004a5c l       .text	00000000 Dictionary_1141
00004a66 l       .text	00000000 Code_1141
00004a66 l       .text	00000000 falleziffern
00004a7e l       .text	00000000 fziffer
00004a74 l       .text	00000000 Dictionary_1142
00004a7e l       .text	00000000 Code_1142
00004a96 l       .text	00000000 Dictionary_1144
00004aa0 l       .text	00000000 Code_1144
00004aa0 l       .text	00000000 alleziffern
00004aba l       .text	00000000 ziffer
00004ab2 l       .text	00000000 Dictionary_1145
00004aba l       .text	00000000 Code_1145
00004ade l       .text	00000000 Dictionary_1150
00004ae8 l       .text	00000000 Code_1150
00004ae8 l       .text	00000000 zifferstringanfang
00004af0 l       .text	00000000 Dictionary_1151
00004afa l       .text	00000000 Code_1151
00004b0c l       .text	00000000 fdotn
00004b02 l       .text	00000000 Dictionary_1154
00004b0c l       .text	00000000 Code_1154
00004b8a l       .text	00000000 abschluss_zahlenausgabe
00004b50 l       .text	00000000 Dictionary_1162
00004b5a l       .text	00000000 Code_1162
00004b5a l       .text	00000000 uddot
00004b66 l       .text	00000000 Dictionary_1163
00004b70 l       .text	00000000 Code_1163
00004b70 l       .text	00000000 ddot
00004b98 l       .text	00000000 Dictionary_1164
00004ba2 l       .text	00000000 Code_1164
00004baa l       .text	00000000 Dictionary_1167
00004bb2 l       .text	00000000 Code_1167
00004bc4 l       .text	00000000 konstantenfaltungszeiger_setzen
00004bd6 l       .text	00000000 konstantenfaltungszeiger_neusetzen
00004be2 l       .text	00000000 konstantenfaltungszeiger_loeschen
00004bee l       .text	00000000 wievielefaltkonstanten
00004d58 l       .text	00000000 inline_cache_parser
00004c4a l       .text	00000000 .interpret_faltoptimierung
00004c56 l       .text	00000000 .interpret_allocator
00004c42 l       .text	00000000 .interpret_genugkonstanten
00004c88 l       .text	00000000 .interpret_allocator_finished
00004cb0 l       .text	00000000 .prepared_for_classic
00004d88 l       .text	00000000 Dictionary_1199
00004d98 l       .text	00000000 Code_1199
00004de0 l       .text	00000000 interpret
00004dd0 l       .text	00000000 Dictionary_1201
00004de0 l       .text	00000000 Code_1201
00004e9e l       .text	00000000 .interpret_token_found
00004eda l       .text	00000000 .ausfuehren
00004f00 l       .text	00000000 Dictionary_1227
00004f10 l       .text	00000000 Code_1227
2001ffc8 l       *ABS*	00000000 hook_quit
00004f56 l       .text	00000000 quit_innenschleife
00004f1c l       .text	00000000 Dictionary_1230
00004f28 l       .text	00000000 Code_1230
00004f50 l       .text	00000000 quit_intern
00004fe0 l       .text	00000000 Dictionary_1235
00004fec l       .text	00000000 Code_1235
00004ffa l       .text	00000000 Dictionary_1237
00005006 l       .text	00000000 Code_1237
0000500a l       .text	00000000 Dictionary_1238
00005016 l       .text	00000000 Code_1238
0000501a l       .text	00000000 Dictionary_1239
00005026 l       .text	00000000 Code_1239
00005030 l       .text	00000000 Dictionary_1241
0000503a l       .text	00000000 Code_1241
0000503c l       .text	00000000 Dictionary_1242
0000504c l       .text	00000000 Code_1242
0000504c l       .text	00000000 unhandled
0000507e l       .text	00000000 Dictionary_1246
0000508a l       .text	00000000 Code_1246
0000508a l       .text	00000000 Restart
00005090 l       .text	00000000 Dictionary_1248
000050a2 l       .text	00000000 Code_1248
2001ffc4 l       *ABS*	00000000 irq_hook_systick
000050ba l       .text	00000000 Dictionary_1252
000050ca l       .text	00000000 Code_1252
2001ffc0 l       *ABS*	00000000 irq_hook_fault
000050e2 l       .text	00000000 Dictionary_1256
000050f8 l       .text	00000000 Code_1256
2001ffbc l       *ABS*	00000000 irq_hook_collection
00005110 l       .text	00000000 Dictionary_1260
00005120 l       .text	00000000 Code_1260
2001ffb8 l       *ABS*	00000000 irq_hook_exti0
00005138 l       .text	00000000 Dictionary_1264
00005148 l       .text	00000000 Code_1264
2001ffb4 l       *ABS*	00000000 irq_hook_exti1
00005160 l       .text	00000000 Dictionary_1268
00005170 l       .text	00000000 Code_1268
2001ffb0 l       *ABS*	00000000 irq_hook_exti2
00005188 l       .text	00000000 Dictionary_1272
00005198 l       .text	00000000 Code_1272
2001ffac l       *ABS*	00000000 irq_hook_exti3
000051b0 l       .text	00000000 Dictionary_1276
000051c0 l       .text	00000000 Code_1276
2001ffa8 l       *ABS*	00000000 irq_hook_exti4
000051d8 l       .text	00000000 Dictionary_1280
000051e6 l       .text	00000000 Code_1280
2001ffa4 l       *ABS*	00000000 irq_hook_adc
000051fe l       .text	00000000 Dictionary_1284
0000520e l       .text	00000000 Code_1284
2001ffa0 l       *ABS*	00000000 irq_hook_tim2
00005226 l       .text	00000000 Dictionary_1288
00005236 l       .text	00000000 Code_1288
2001ff9c l       *ABS*	00000000 irq_hook_tim3
0000524e l       .text	00000000 Dictionary_1292
0000525e l       .text	00000000 Code_1292
2001ff98 l       *ABS*	00000000 irq_hook_tim4
00005276 l       .text	00000000 Dictionary_1295
00005296 l       .text	00000000 Code_1295
00005296 l       .text	00000000 Reset_ITCM
000054c0 l       .text	00000000 KernelEnde
00005300 l       .text	00000000 Handover
0000535a l       .text	00000000 SucheFlashPointer_Hangelschleife
000053b0 l       .text	00000000 Sucheflashpointer_Speicherbelegung_fertig
00005492 l       .text	00000000 init_name



Disassembly of section .text:

00000000 <KernelAnfang>:
KernelAnfang():
       0:	20000388 	.word	0x20000388
       4:	08005297 	.word	0x08005297
       8:	000050d7 	.word	0x000050d7
       c:	000050d7 	.word	0x000050d7
      10:	000050d7 	.word	0x000050d7
      14:	000050d7 	.word	0x000050d7
      18:	000050d7 	.word	0x000050d7
	...
      2c:	00005105 	.word	0x00005105
      30:	00005105 	.word	0x00005105
      34:	00000000 	.word	0x00000000
      38:	00005105 	.word	0x00005105
      3c:	000050af 	.word	0x000050af
      40:	00005105 	.word	0x00005105
      44:	00005105 	.word	0x00005105
      48:	00005105 	.word	0x00005105
      4c:	00005105 	.word	0x00005105
      50:	00005105 	.word	0x00005105
      54:	00005105 	.word	0x00005105
      58:	0000512d 	.word	0x0000512d
      5c:	00005155 	.word	0x00005155
      60:	0000517d 	.word	0x0000517d
      64:	000051a5 	.word	0x000051a5
      68:	000051cd 	.word	0x000051cd
      6c:	00005105 	.word	0x00005105
      70:	00005105 	.word	0x00005105
      74:	00005105 	.word	0x00005105
      78:	00005105 	.word	0x00005105
      7c:	00005105 	.word	0x00005105
      80:	00005105 	.word	0x00005105
      84:	00005105 	.word	0x00005105
      88:	000051f3 	.word	0x000051f3
      8c:	00005105 	.word	0x00005105
      90:	00005105 	.word	0x00005105
      94:	00005105 	.word	0x00005105
      98:	00005105 	.word	0x00005105
      9c:	00005105 	.word	0x00005105
      a0:	00005105 	.word	0x00005105
      a4:	00005105 	.word	0x00005105
      a8:	00005105 	.word	0x00005105
      ac:	00005105 	.word	0x00005105
      b0:	0000521b 	.word	0x0000521b
      b4:	00005243 	.word	0x00005243
      b8:	0000526b 	.word	0x0000526b
      bc:	00005105 	.word	0x00005105
      c0:	00005105 	.word	0x00005105
      c4:	00005105 	.word	0x00005105
      c8:	00005105 	.word	0x00005105
      cc:	00005105 	.word	0x00005105
      d0:	00005105 	.word	0x00005105
      d4:	00005105 	.word	0x00005105
      d8:	00005105 	.word	0x00005105
      dc:	00005105 	.word	0x00005105
      e0:	00005105 	.word	0x00005105
      e4:	00005105 	.word	0x00005105
      e8:	00005105 	.word	0x00005105
      ec:	00005105 	.word	0x00005105
      f0:	00005105 	.word	0x00005105
      f4:	00005105 	.word	0x00005105
      f8:	00005105 	.word	0x00005105
      fc:	00005105 	.word	0x00005105
     100:	00005105 	.word	0x00005105
     104:	00005105 	.word	0x00005105
     108:	00005105 	.word	0x00005105
     10c:	00005105 	.word	0x00005105
     110:	00005105 	.word	0x00005105
     114:	00005105 	.word	0x00005105
     118:	00005105 	.word	0x00005105
     11c:	00005105 	.word	0x00005105
     120:	00005105 	.word	0x00005105
     124:	00005105 	.word	0x00005105
     128:	00005105 	.word	0x00005105
     12c:	00005105 	.word	0x00005105
     130:	00005105 	.word	0x00005105
     134:	00005105 	.word	0x00005105
     138:	00005105 	.word	0x00005105
     13c:	00005105 	.word	0x00005105
     140:	00005105 	.word	0x00005105
     144:	00005105 	.word	0x00005105
     148:	00005105 	.word	0x00005105
     14c:	00005105 	.word	0x00005105
     150:	00005105 	.word	0x00005105
     154:	00005105 	.word	0x00005105
     158:	00005105 	.word	0x00005105
     15c:	00005105 	.word	0x00005105
     160:	00005105 	.word	0x00005105
     164:	00005105 	.word	0x00005105
     168:	00005105 	.word	0x00005105
     16c:	00005105 	.word	0x00005105
     170:	00005105 	.word	0x00005105
     174:	00005105 	.word	0x00005105
     178:	00005105 	.word	0x00005105
     17c:	00005105 	.word	0x00005105
     180:	00005105 	.word	0x00005105
     184:	00005105 	.word	0x00005105
     188:	00005105 	.word	0x00005105
     18c:	00005105 	.word	0x00005105
     190:	00005105 	.word	0x00005105
     194:	00005105 	.word	0x00005105
     198:	00005105 	.word	0x00005105
     19c:	00005105 	.word	0x00005105
     1a0:	00005105 	.word	0x00005105
     1a4:	00005105 	.word	0x00005105
     1a8:	00005105 	.word	0x00005105
     1ac:	00005105 	.word	0x00005105
     1b0:	00005105 	.word	0x00005105
     1b4:	00005105 	.word	0x00005105
     1b8:	00005105 	.word	0x00005105
     1bc:	00005105 	.word	0x00005105
     1c0:	00005105 	.word	0x00005105
     1c4:	00005105 	.word	0x00005105
     1c8:	00005105 	.word	0x00005105
     1cc:	00005105 	.word	0x00005105
     1d0:	00005105 	.word	0x00005105
     1d4:	00005105 	.word	0x00005105
     1d8:	00005105 	.word	0x00005105
     1dc:	00005105 	.word	0x00005105
     1e0:	00005105 	.word	0x00005105

000001e4 <CoreDictionaryAnfang>:
CoreDictionaryAnfang():
     1e4:	00000620 	.word	0x00000620
     1e8:	2d22ffff 	.word	0x2d22ffff
     1ec:	4d202d2d 	.word	0x4d202d2d
     1f0:	69726365 	.word	0x69726365
     1f4:	532d7073 	.word	0x532d7073
     1f8:	6c6c6574 	.word	0x6c6c6574
     1fc:	73697261 	.word	0x73697261
     200:	20415220 	.word	0x20415220
     204:	2e362e32 	.word	0x2e362e32
     208:	2d2d2035 	.word	0x2d2d2035
     20c:	2d          	.byte	0x2d
	...

0000020e <Code_30>:
Code_30():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:44


@ -----------------------------------------------------------------------------
nflush_faltkonstanten: @ Schiebe alle vorhandenen Faltkonstanten in den RA-Cache.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, lr}
     20e:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:45
  ldr r0, =allocator_base
     210:	4890      	ldr	r0, [pc, #576]	; (454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:48

  @ Frage Nummer eins: Haben wir noch Faltkonstanten ? Die müssen unbedingt zwischengeschoben werden.
1:cmp r3, #0
     212:	2b00      	cmp	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:49
  beq 2f
     214:	d009      	beq.n	22a <Code_30+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:54
    @ writeln "Flush Konstante in RA-Cache"
    @ Ja, es ist noch mindestens eine Faltkonstante da.
    @ Die wird nun in den Stack eingefügt:

    bl free_5os_element @ Als erstes hinten Platz schaffen.
     216:	f000 f83d 	bl	294 <free_5os_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:55
    bl elemente_einen_weiterrutschen_lassen
     21a:	f000 f843 	bl	2a4 <elemente_einen_weiterrutschen_lassen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:56
    bl nget_faltkonstante @ Gibt diese in r2 zurück, erniedrigt r3 von selbst
     21e:	f000 f828 	bl	272 <nget_faltkonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:58

    str r2, [r0, #offset_constant_tos]
     222:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:59
    movs r1, #constant
     224:	2128      	movs	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:60
    str r1, [r0, #offset_state_tos]
     226:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:61
    b 1b
     228:	e7f3      	b.n	212 <Code_30+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:64

2:@ Alle Faltkonstanten sind abgearbeitet.
  pop {r0, r1, r2, pc}
     22a:	bd07      	pop	{r0, r1, r2, pc}

0000022c <nfaltkonstanten_aufschwimmen>:
nfaltkonstanten_aufschwimmen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:72
@ -----------------------------------------------------------------------------
nfaltkonstanten_aufschwimmen: @ Sollten an der Oberfläche des RA-Cache Konstanten aufschwimmen
                             @ werden diese am Ende wieder als Faltkonstanten zur Verfügung gestellt.
@ -----------------------------------------------------------------------------

  push {lr}
     22c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:73
  ldr r0, =allocator_base
     22e:	4889      	ldr	r0, [pc, #548]	; (454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:74
  movs r3, #0 @ Momentan haben wir gar keine Faltkonstanten ! Schließlich wird alles in den Allokator geschoben...
     230:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:76

1:ldr r1, [r0, #offset_state_tos]
     232:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:77
  cmp r1, #constant
     234:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:78
  bne 2f
     236:	d105      	bne.n	244 <nfaltkonstanten_aufschwimmen+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:81
    @ writeln "Eine Konstante schwimmt auf"
    @ Es ist eine Faltkonstante da, lasse sie aufschwimmen !
    ldr r2, [r0, #offset_constant_tos]
     238:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:82
    bl npush_faltkonstante
     23a:	f000 f804 	bl	246 <npush_faltkonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:83
    bl eliminiere_tos
     23e:	f000 f84e 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:84
    b 1b
     242:	e7f6      	b.n	232 <nfaltkonstanten_aufschwimmen+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:87

2:@ Fertig, oben auf dem RA-Cache sind keine Konstanten mehr.
  pop {pc}
     244:	bd00      	pop	{pc}

00000246 <npush_faltkonstante>:
npush_faltkonstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:95
@ -----------------------------------------------------------------------------
npush_faltkonstante: @ Füge von unten (!) eine Faltkonstante ein !
                    @ Dies ist nötig, falls Stackjongleure eine Konstante wieder an die Oberfläche strudeln lassen.
                    @ Annahme in r2.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
     246:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:97

  pushda r2
     248:	f847 6d04 	str.w	r6, [r7, #-4]!
     24c:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:98
  pushda r3
     24e:	f847 6d04 	str.w	r6, [r7, #-4]!
     252:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:99
  push {r3}
     254:	b408      	push	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:100
  bl minusroll
     256:	f000 ff9f 	bl	1198 <Code_230>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:101
  pop {r3}
     25a:	bc08      	pop	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:102
  adds r3, #1
     25c:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:106

  @ writeln "Eine Konstante schwimmt auf --> drop in den Inline-Cache !"

  pushdatos
     25e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:107
  ldr tos, =drop_einsprung
     262:	4e7d      	ldr	r6, [pc, #500]	; (458 <r0_unfrei+0x1c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:109

  pushdatos
     264:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:110
  ldr tos, =Flag_foldable_1|Flag_inline|Flag_allocator
     268:	f240 2661 	movw	r6, #609	; 0x261
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:111
  bl add_to_inline_cache 
     26c:	f004 fd32 	bl	4cd4 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:113
  
  pop {r0, r1, pc}
     270:	bd03      	pop	{r0, r1, pc}

00000272 <nget_faltkonstante>:
nget_faltkonstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:121
@ -----------------------------------------------------------------------------
nget_faltkonstante: @ Hole von unten (!) eine Faltkonstante ab !
                   @ Anzahl der vorhandenen Konstanten (noch) in r3.
                   @ Rückgabe in r2.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
     272:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:123

  subs r3, #1
     274:	3b01      	subs	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:124
  pushda r3
     276:	f847 6d04 	str.w	r6, [r7, #-4]!
     27a:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:125
  push {r3}
     27c:	b408      	push	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:126
  bl roll
     27e:	f000 ff75 	bl	116c <Code_228>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:127
  pop {r3}
     282:	bc08      	pop	{r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:129
  @ popda r2
  movs r2, tos
     284:	0032      	movs	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:132

  @ Für den Cache !
  pushdatos
     286:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:133
  ldr tos, =Flag_Literator
     28a:	f44f 5600 	mov.w	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:134
  bl add_to_inline_cache  
     28e:	f004 fd21 	bl	4cd4 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:136

  pop {r0, r1, pc}
     292:	bd03      	pop	{r0, r1, pc}

00000294 <free_5os_element>:
free_5os_element():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:141

@ -----------------------------------------------------------------------------
free_5os_element: @ Sorgt dafür, dass zumindest 3OS geleert ist.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
     294:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:142
  ldr r0, =state_5os
     296:	4871      	ldr	r0, [pc, #452]	; (45c <r0_unfrei+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:144

  ldr r1, [r0]
     298:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:145
  cmp r1, #unknown
     29a:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:146
  beq 1f @ Wenn das 5OS-RA-Element gerade leer ist, brauche ich nichts mehr zu tun.
     29c:	d001      	beq.n	2a2 <free_5os_element+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:147
    bl element_to_stack
     29e:	f000 f834 	bl	30a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:149

1:pop {r0, r1, pc}
     2a2:	bd03      	pop	{r0, r1, pc}

000002a4 <elemente_einen_weiterrutschen_lassen>:
elemente_einen_weiterrutschen_lassen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:161
    @ 3OS --> 4OS
    @ NOS --> 3OS
    @ TOS --> NOS
    @ TOS "leeren"

    ldr r1, [r0, #offset_state_4os]
     2a4:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:162
    str r1, [r0, #offset_state_5os]
     2a6:	6201      	str	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:163
    ldr r1, [r0, #offset_state_3os]
     2a8:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:164
    str r1, [r0, #offset_state_4os]
     2aa:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:165
    ldr r1, [r0, #offset_state_nos]
     2ac:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:166
    str r1, [r0, #offset_state_3os]
     2ae:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:167
    ldr r1, [r0, #offset_state_tos]
     2b0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:168
    str r1, [r0, #offset_state_nos]
     2b2:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:171


    ldr r1, [r0, #offset_constant_4os]
     2b4:	69c1      	ldr	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:172
    str r1, [r0, #offset_constant_5os]
     2b6:	6241      	str	r1, [r0, #36]	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:173
    ldr r1, [r0, #offset_constant_3os]
     2b8:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:174
    str r1, [r0, #offset_constant_4os]
     2ba:	61c1      	str	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:175
    ldr r1, [r0, #offset_constant_nos]
     2bc:	68c1      	ldr	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:176
    str r1, [r0, #offset_constant_3os]
     2be:	6141      	str	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:177
    ldr r1, [r0, #offset_constant_tos]
     2c0:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:178
    str r1, [r0, #offset_constant_nos]
     2c2:	60c1      	str	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:180

    movs r1, #unknown
     2c4:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:181
    str r1, [r0, #offset_state_tos]
     2c6:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:183

  bx lr
     2c8:	4770      	bx	lr

000002ca <befreie_tos>:
befreie_tos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:188

@ -----------------------------------------------------------------------------
befreie_tos: @ Sorgt dafür, dass zumindest TOS frei wird zum Neubelegen.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
     2ca:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:191

  @ Jetzt frage ich mich: Ist TOS gerade leer und unbelegt ?
  ldr r0, =allocator_base
     2cc:	4861      	ldr	r0, [pc, #388]	; (454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:192
  ldr r1, [r0, #offset_state_tos]
     2ce:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:193
  cmp r1, #unknown
     2d0:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:194
  beq 3f @ Wenn das TOS-RA-Element gerade leer ist, brauche ich nichts mehr zu tun.
     2d2:	d003      	beq.n	2dc <befreie_tos+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:197

    @ Ansonsten muss ich nochmal dafür sorgen, dass TOS frei wird.
    bl free_5os_element @ Als erstes hinten Platz schaffen.
     2d4:	f7ff ffde 	bl	294 <free_5os_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:198
    bl elemente_einen_weiterrutschen_lassen
     2d8:	f7ff ffe4 	bl	2a4 <elemente_einen_weiterrutschen_lassen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:201

3:@ Fertig. TOS ist bereit für neue Taten.
  pop {r0, r1, r2, r3, pc}
     2dc:	bd0f      	pop	{r0, r1, r2, r3, pc}

000002de <eliminiere_tos>:
eliminiere_tos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:206

@ -----------------------------------------------------------------------------
eliminiere_tos: @ Wert ist verbraucht, kann weg !
@ -----------------------------------------------------------------------------
  push {r1, lr}
     2de:	b502      	push	{r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:208

  ldr r1, [r0, #offset_state_nos]
     2e0:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:209
  str r1, [r0, #offset_state_tos]
     2e2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:210
  ldr r1, [r0, #offset_constant_nos]
     2e4:	68c1      	ldr	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:211
  str r1, [r0, #offset_constant_tos]
     2e6:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:212
  b 1f
     2e8:	e000      	b.n	2ec <eliminiere_nos+0x2>

000002ea <eliminiere_nos>:
eliminiere_nos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:217

@ -----------------------------------------------------------------------------
eliminiere_nos: @ Wert ist verbraucht, kann weg !
@ -----------------------------------------------------------------------------
  push {r1, lr}
     2ea:	b502      	push	{r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:219

1:ldr r1, [r0, #offset_state_3os]
     2ec:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:220
  str r1, [r0, #offset_state_nos]
     2ee:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:221
  ldr r1, [r0, #offset_constant_3os]
     2f0:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:222
  str r1, [r0, #offset_constant_nos]
     2f2:	60c1      	str	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:224

  ldr r1, [r0, #offset_state_4os]
     2f4:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:225
  str r1, [r0, #offset_state_3os]
     2f6:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:226
  ldr r1, [r0, #offset_constant_4os]
     2f8:	69c1      	ldr	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:227
  str r1, [r0, #offset_constant_3os]
     2fa:	6141      	str	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:229

  ldr r1, [r0, #offset_state_5os]
     2fc:	6a01      	ldr	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:230
  str r1, [r0, #offset_state_4os]
     2fe:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:231
  ldr r1, [r0, #offset_constant_5os]
     300:	6a41      	ldr	r1, [r0, #36]	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:232
  str r1, [r0, #offset_constant_4os]
     302:	61c1      	str	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:234

  movs r1, #unknown
     304:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:235
  str r1, [r0, #offset_state_5os]
     306:	6201      	str	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:237

  pop {r1, pc}
     308:	bd02      	pop	{r1, pc}

0000030a <element_to_stack>:
element_to_stack():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:242

@ -----------------------------------------------------------------------------
element_to_stack: @ Erwartet Zustandsvariable in r0
@ -----------------------------------------------------------------------------
  push {r3, lr} @ r3 muss für flush_faltkonstanten gesichert werden
     30a:	b508      	push	{r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:244

  ldr r1, [r0] @ Zustand des Elementes holen
     30c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:247

  @ Elementbelegung löschen, es wird hier ja restlos abgearbeitet
  movs r2, #unknown
     30e:	221e      	movs	r2, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:248
  str  r2, [r0]
     310:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:251

  @ Register in den Speicher schreiben:
  cmp r1, #8 @ Register 0-7 lassen sich direkt opcodieren.
     312:	2908      	cmp	r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:252
  bhs 1f
     314:	d201      	bcs.n	31a <element_to_stack+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:254

    movs r3, r1  @ Register in r3 bereitlegen zum Opcodieren.
     316:	000b      	movs	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:255
    b.n 2f
     318:	e004      	b.n	324 <element_to_stack+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:258

1:@ Element = Konstante --> Konstante in Speicher
  cmp r1, #constant
     31a:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:259
  bne 1f @ Für den Fall eines unbekannten Elementes nichts tun
     31c:	d109      	bne.n	332 <element_to_stack+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:262

    @ Hole die Konstante, und prüfe, ob sie zur Laufzeit bereits in r0 oder r1 sein wird.
    ldr r3, [r0, #4] @ Konstante holen, stets 4 Bytes nach dem Zustand
     31e:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:263
    bl generiere_konstante
     320:	f000 f85b 	bl	3da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:279
      orrs tos, r3 @ Passenden Register hinzuverodern
      bl hkomma

    .else

      pushdatos
     324:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:280
      ldr tos, =0xF8470D04 @ str r0, [r7, #-4]!
     328:	4e4d      	ldr	r6, [pc, #308]	; (460 <r0_unfrei+0x24>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:281
      orrs tos, tos, r3, lsl #12
     32a:	ea56 3603 	orrs.w	r6, r6, r3, lsl #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:282
      bl reversekomma
     32e:	f003 fb67 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:286

    .endif

1: pop {r3, pc}
     332:	bd08      	pop	{r3, pc}

00000334 <tidyup_register_allocator>:
tidyup_register_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:293

@ -----------------------------------------------------------------------------
@ Wortbirne Flag_visible, "tidyup-ra"
tidyup_register_allocator: @ Generiert all die Opcodes, um den Stack wieder in Ordnung zu bringen
@ -----------------------------------------------------------------------------
  push {lr}
     334:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:294
  bl tidyup_register_allocator_5os
     336:	f000 f809 	bl	34c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:295
  bl tidyup_register_allocator_4os
     33a:	f000 f80c 	bl	356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:296
  bl tidyup_register_allocator_3os
     33e:	f000 f80f 	bl	360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:297
  bl tidyup_register_allocator_nos
     342:	f000 f812 	bl	36a <tidyup_register_allocator_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:298
  bl tidyup_register_allocator_tos
     346:	f000 f815 	bl	374 <tidyup_register_allocator_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:299
  pop {pc}
     34a:	bd00      	pop	{pc}

0000034c <tidyup_register_allocator_5os>:
tidyup_register_allocator_5os():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:304

@ -----------------------------------------------------------------------------
tidyup_register_allocator_5os:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
     34c:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:305
  ldr r0, =state_5os
     34e:	4843      	ldr	r0, [pc, #268]	; (45c <r0_unfrei+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:306
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
     350:	f7ff ffdb 	bl	30a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:307
  pop {r0, r1, r2, r3, pc}
     354:	bd0f      	pop	{r0, r1, r2, r3, pc}

00000356 <tidyup_register_allocator_4os>:
tidyup_register_allocator_4os():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:312

@ -----------------------------------------------------------------------------
tidyup_register_allocator_4os:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
     356:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:313
  ldr r0, =state_4os
     358:	4842      	ldr	r0, [pc, #264]	; (464 <r0_unfrei+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:314
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
     35a:	f7ff ffd6 	bl	30a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:315
  pop {r0, r1, r2, r3, pc}
     35e:	bd0f      	pop	{r0, r1, r2, r3, pc}

00000360 <tidyup_register_allocator_3os>:
tidyup_register_allocator_3os():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:320

@ -----------------------------------------------------------------------------
tidyup_register_allocator_3os:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
     360:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:321
  ldr r0, =state_3os
     362:	4841      	ldr	r0, [pc, #260]	; (468 <r0_unfrei+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:322
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
     364:	f7ff ffd1 	bl	30a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:323
  pop {r0, r1, r2, r3, pc}
     368:	bd0f      	pop	{r0, r1, r2, r3, pc}

0000036a <tidyup_register_allocator_nos>:
tidyup_register_allocator_nos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:328

@ -----------------------------------------------------------------------------
tidyup_register_allocator_nos:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
     36a:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:329
  ldr r0, =state_nos
     36c:	483f      	ldr	r0, [pc, #252]	; (46c <r0_unfrei+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:330
  bl element_to_stack @ Idee: Hier gleich zwei Stackplätze reservieren, denn schließlich ist NOS auch belegt, wenn 3OS belegt ist.
     36e:	f7ff ffcc 	bl	30a <element_to_stack>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:331
  pop {r0, r1, r2, r3, pc}
     372:	bd0f      	pop	{r0, r1, r2, r3, pc}

00000374 <tidyup_register_allocator_tos>:
tidyup_register_allocator_tos():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:337


@ -----------------------------------------------------------------------------
tidyup_register_allocator_tos:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
     374:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:343
  @ -----------------------------------------------------------------------------
  @ Schließe mit TOS ab:
@  writeln "Tidyup TOS"
  @ Nachher die Sintflut ! Nichts mehr sichern oder schön bereitlegen. Nur noch TOS in Ordnung bringen.

  ldr r0, =allocator_base
     376:	4837      	ldr	r0, [pc, #220]	; (454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:344
  ldr r1, [r0, #offset_state_tos]
     378:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:346

  movs r2, #6 @ Das ist der Endzustand, der hier auf jeden Fall erreicht wird !
     37a:	2206      	movs	r2, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:347
  str r2, [r0, #offset_state_tos]
     37c:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:355
  @ r0, r1, r2 und r3: mov Opcode generieren (Erhält die Flags)
  @ r6: Nichts tun (Erhält die Flags)
  @ Konstante: registerliteral direkt in r6 (Zerstört die Flags, falls die Konstante neu generiert wird)
  @ unknown: Nachladen (Erhält die Flags)

  cmp r1, #unknown
     37e:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:356
  bne 1f
     380:	d106      	bne.n	390 <tidyup_register_allocator_tos+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:358
    @ TOS = unknown    --> Register vom Stack nachladen
    pushdaconstw 0xCF00 | 1 << 6 @ ldm r7!, {r6}
     382:	f847 6d04 	str.w	r6, [r7, #-4]!
     386:	f64c 7640 	movw	r6, #53056	; 0xcf40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:359
    bl hkomma
     38a:	f003 fb09 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:360
    b.n tidyup_finish
     38e:	e015      	b.n	3bc <tidyup_finish>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:363
1:

  cmp r1, #constant
     390:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:364
  bne 2f
     392:	d109      	bne.n	3a8 <tidyup_register_allocator_tos+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:368
@    writeln "Tidyup TOS Konstante"
    @ TOS = Konstante --> Entweder Konstantenregister benutzen oder direkt laden.
    @ Hier mal vereinfachen, später mit r0/r1-Berücksichtigung:
    ldr r3, [r0, #offset_constant_tos]
     394:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:371

    @ Die Konstantenregister helfen gerade auch nicht weiter, muss den Wert direkt generieren.
    pushda r3
     396:	f847 6d04 	str.w	r6, [r7, #-4]!
     39a:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:372
    pushdaconst 6
     39c:	f847 6d04 	str.w	r6, [r7, #-4]!
     3a0:	2606      	movs	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:373
    bl registerliteralkomma @ Dies ist der Fall, in dem die Flags immer noch zerstört werden. ACHTUNG.
     3a2:	f002 ff8f 	bl	32c4 <Code_718>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:374
    b.n tidyup_finish
     3a6:	e009      	b.n	3bc <tidyup_finish>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:378
2:

  @ Jetzt bleiben nur noch die Register übrig.
  cmp r1, #6  @ r6 ist wunderbar, dann ist nichts mehr zu tun.
     3a8:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:379
  beq 3f
     3aa:	d007      	beq.n	3bc <tidyup_finish>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:381
@    writeln "Tidyup TOS anderer Register"
    pushdaconstw 0x4600|0 << 3|6  @ mov r6, r0
     3ac:	f847 6d04 	str.w	r6, [r7, #-4]!
     3b0:	f244 6606 	movw	r6, #17926	; 0x4606
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:382
    lsls r1, #3
     3b4:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:383
    orrs tos, r1 @ Quellregister hinzuverodern
     3b6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:384
    bl hkomma
     3b8:	f003 faf2 	bl	39a0 <Code_849>

000003bc <tidyup_finish>:
tidyup_finish():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:390

3:


tidyup_finish:
  bl init_register_allocator
     3bc:	f000 f801 	bl	3c2 <init_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:391
  pop {r0, r1, r2, r3, pc}
     3c0:	bd0f      	pop	{r0, r1, r2, r3, pc}

000003c2 <init_register_allocator>:
init_register_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:399
@ -----------------------------------------------------------------------------
@ Wortbirne Flag_visible, "initregisterallocator"
init_register_allocator:
@ -----------------------------------------------------------------------------

  ldr r0, =allocator_base
     3c2:	4824      	ldr	r0, [pc, #144]	; (454 <r0_unfrei+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:401

  movs r1, #unknown
     3c4:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:402
  str r1, [r0, #offset_state_5os]
     3c6:	6201      	str	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:403
  str r1, [r0, #offset_state_4os]
     3c8:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:404
  str r1, [r0, #offset_state_3os]
     3ca:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:405
  str r1, [r0, #offset_state_nos]
     3cc:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:407

  str r1, [r0, #offset_state_r0]
     3ce:	62c1      	str	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:409
  
  movs r1, #6
     3d0:	2106      	movs	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:410
  str r1, [r0, #offset_state_tos]
     3d2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:412

  movs r1, #0
     3d4:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:413
  str r1, [r0, #offset_sprungtrampolin]
     3d6:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:415

  bx lr
     3d8:	4770      	bx	lr

000003da <generiere_konstante>:
generiere_konstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:26
@ -----------------------------------------------------------------------------
generiere_veraenderliche_konstante:
generiere_konstante:       @ Nimmt Konstante in r3 entgegen, generiert wenn nötig passende Opcodes
                           @ und gibt den Register in r3 zurück, in der sie daraufhin enthalten ist.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, lr}
     3da:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:27
  pushda r3 @ Die Konstante
     3dc:	f847 6d04 	str.w	r6, [r7, #-4]!
     3e0:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:28
  bl get_free_register @ Einen Register nehmen, der gerade nicht im RA angemeldet ist.
     3e2:	f000 f845 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:29
  pushda r3 @ Das ist jetzt der Register, wo sie hinein soll
     3e6:	f847 6d04 	str.w	r6, [r7, #-4]!
     3ea:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:30
  bl registerliteralkomma
     3ec:	f002 ff6a 	bl	32c4 <Code_718>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:31
  pop {r0, r1, r2, pc}
     3f0:	bd07      	pop	{r0, r1, r2, pc}

000003f2 <generiere_adresskonstante>:
generiere_adresskonstante():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:37

@ -----------------------------------------------------------------------------
generiere_adresskonstante: @ Gleiche Schnittstelle, doch bevorzugt in r0.
@ -----------------------------------------------------------------------------

  push {r0, r1, r2, lr}
     3f2:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:40

  @ Probe, ob die Konstante in r0 bereitliegt
  ldr r1, [r0, #offset_state_r0]
     3f4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:41
  cmp r1, #constant
     3f6:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:42
  bne 1f
     3f8:	d104      	bne.n	404 <ADC12_Common_CSR_JQOVF_MST+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:43
    ldr r1, [r0, #offset_constant_r0]
     3fa:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:44
    cmp r1, r3
     3fc:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:45
    bne 1f
     3fe:	d101      	bne.n	404 <ADC12_Common_CSR_JQOVF_MST+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:46
      movs r3, #0 @ Wenn ja, fein ! Register melden, Rücksprung.
     400:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:47
      pop {r0, r1, r2, pc}
     402:	bd07      	pop	{r0, r1, r2, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:52
1:

  @ Ist r0 frei ?

  ldr r1, [r0, #offset_state_tos]
     404:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:53
  cmp r1, #0
     406:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:54
  beq r0_unfrei
     408:	d018      	beq.n	43c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:56
  
  ldr r1, [r0, #offset_state_nos]
     40a:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:57
  cmp r1, #0
     40c:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:58
  beq r0_unfrei
     40e:	d015      	beq.n	43c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:60

  ldr r1, [r0, #offset_state_3os]
     410:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:61
  cmp r1, #0
     412:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:62
  beq r0_unfrei
     414:	d012      	beq.n	43c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:64

  ldr r1, [r0, #offset_state_4os]
     416:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:65
  cmp r1, #0
     418:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:66
  beq r0_unfrei
     41a:	d00f      	beq.n	43c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:68

  ldr r1, [r0, #offset_state_5os]
     41c:	6a01      	ldr	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:69
  cmp r1, #0
     41e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:70
  beq r0_unfrei
     420:	d00c      	beq.n	43c <r0_unfrei>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:74

  @ r0 ist frei.

    str r3, [r0, #offset_constant_r0]
     422:	6303      	str	r3, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:75
    pushda r3 @ Die Konstante
     424:	f847 6d04 	str.w	r6, [r7, #-4]!
     428:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:76
    pushdaconst 0 @ Das ist jetzt der Register, wo sie hinein soll
     42a:	f847 6d04 	str.w	r6, [r7, #-4]!
     42e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:77
    bl registerliteralkomma
     430:	f002 ff48 	bl	32c4 <Code_718>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:78
    movs r1, #constant
     434:	2128      	movs	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:79
    str r1, [r0, #offset_state_r0]
     436:	62c1      	str	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:80
    movs r3, #0
     438:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:81
    pop {r0, r1, r2, pc}
     43a:	bd07      	pop	{r0, r1, r2, pc}

0000043c <r0_unfrei>:
r0_unfrei():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:84

r0_unfrei:
  pushda r3 @ Die Konstante
     43c:	f847 6d04 	str.w	r6, [r7, #-4]!
     440:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:85
  bl get_free_register @ Einen Register nehmen, der gerade nicht im RA angemeldet ist.
     442:	f000 f815 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:86
  pushda r3 @ Das ist jetzt der Register, wo sie hinein soll
     446:	f847 6d04 	str.w	r6, [r7, #-4]!
     44a:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:87
  bl registerliteralkomma
     44c:	f002 ff3a 	bl	32c4 <Code_718>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:88
  pop {r0, r1, r2, pc}
     450:	bd07      	pop	{r0, r1, r2, pc}
     452:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:45
  ldr r0, =allocator_base
     454:	20000020 	.word	0x20000020
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:107
  ldr tos, =drop_einsprung
     458:	00000f20 	.word	0x00000f20
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:142
  ldr r0, =state_5os
     45c:	20000040 	.word	0x20000040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:280
      ldr tos, =0xF8470D04 @ str r0, [r7, #-4]!
     460:	f8470d04 	.word	0xf8470d04
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:313
  ldr r0, =state_4os
     464:	20000038 	.word	0x20000038
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:321
  ldr r0, =state_3os
     468:	20000030 	.word	0x20000030
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-infrastructure.s:329
  ldr r0, =state_nos
     46c:	20000028 	.word	0x20000028

00000470 <get_free_register>:
get_free_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:95
  .ltorg

@ -----------------------------------------------------------------------------
get_free_register: @ Gibt den Register in r3 zurück. Setzt noch keinen Zustand.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r4, r5, lr}
     470:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:97

  ldr r0, =allocator_base
     472:	4836      	ldr	r0, [pc, #216]	; (54c <expect_four_elements+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:98
  ldr r1, [r0, #offset_state_tos]
     474:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:99
  ldr r2, [r0, #offset_state_nos]
     476:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:100
  ldr r3, [r0, #offset_state_3os]
     478:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:101
  ldr r4, [r0, #offset_state_4os]
     47a:	6984      	ldr	r4, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:102
  ldr r5, [r0, #offset_state_5os]
     47c:	6a05      	ldr	r5, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:104

  movs r0, #6 @ Prüfe zunächst r6 auf Freiheit:
     47e:	2006      	movs	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:105
  bl get_free_register_intern
     480:	f000 f80e 	bl	4a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:107

  movs r0, #3 @ Anschließend die ganzen anderen Register:
     484:	2003      	movs	r0, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:108
  bl get_free_register_intern
     486:	f000 f80b 	bl	4a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:110

  movs r0, #2 @ Anschließend die ganzen anderen Register:
     48a:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:111
  bl get_free_register_intern
     48c:	f000 f808 	bl	4a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:113

  movs r0, #1 @ Anschließend die ganzen anderen Register:
     490:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:114
  bl get_free_register_intern
     492:	f000 f805 	bl	4a0 <get_free_register_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:116

  movs r3, #0 @ Nur noch r0 ist übrig geblieben
     496:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:118

  ldr r0, =allocator_base
     498:	482c      	ldr	r0, [pc, #176]	; (54c <expect_four_elements+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:119
  movs r1, #unknown @ Muss die Adresskonstantenspeicherstelle wieder freigeben...
     49a:	211e      	movs	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:120
  str r1, [r0, #offset_state_r0]
     49c:	62c1      	str	r1, [r0, #44]	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:122

  pop {r0, r1, r2, r4, r5, pc}
     49e:	bd37      	pop	{r0, r1, r2, r4, r5, pc}

000004a0 <get_free_register_intern>:
get_free_register_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:125

get_free_register_intern: @ Welcher Register geprüft werden soll, steht in r0. Rückgabe in r3.
  cmp r1, r0
     4a0:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:126
  beq 1f
     4a2:	d009      	beq.n	4b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:127
  cmp r2, r0
     4a4:	4282      	cmp	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:128
  beq 1f
     4a6:	d007      	beq.n	4b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:129
  cmp r3, r0
     4a8:	4283      	cmp	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:130
  beq 1f
     4aa:	d005      	beq.n	4b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:131
  cmp r4, r0
     4ac:	4284      	cmp	r4, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:132
  beq 1f
     4ae:	d003      	beq.n	4b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:133
  cmp r5, r0
     4b0:	4285      	cmp	r5, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:134
  beq 1f   
     4b2:	d001      	beq.n	4b8 <get_free_register_intern+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:135
    movs r3, r0
     4b4:	0003      	movs	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:136
    pop {r0, r1, r2, r4, r5, pc}
     4b6:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:137
1:bx lr
     4b8:	4770      	bx	lr

000004ba <erstes_element_belegen>:
erstes_element_belegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:141

@ -----------------------------------------------------------------------------
erstes_element_belegen:
  pushdaconstw 0xCF00 @ ldm r7!, { ... }
     4ba:	f847 6d04 	str.w	r6, [r7, #-4]!
     4be:	f64c 7600 	movw	r6, #52992	; 0xcf00

000004c2 <element_belegen>:
element_belegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:143
element_belegen: @ Nimmt das zu belegende Element aus r2.
  push {lr}
     4c2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:144
  ldr r1, [r0, r2]
     4c4:	5881      	ldr	r1, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:145
  cmp r1, #unknown
     4c6:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:146
  bne 1f @ Wenn es bereits belegt ist, muss ich hier nichts unternehmen.
     4c8:	d105      	bne.n	4d6 <element_belegen+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:149

    @ Lade es nach !
    bl get_free_register
     4ca:	f7ff ffd1 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:150
    str r3, [r0, r2]
     4ce:	5083      	str	r3, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:152

    movs r1, #1
     4d0:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:153
    lsls r1, r3
     4d2:	4099      	lsls	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:154
    orrs tos, r1
     4d4:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:156

1:pop {pc}
     4d6:	bd00      	pop	{pc}

000004d8 <expect_one_element>:
expect_one_element():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:161

@ -----------------------------------------------------------------------------
expect_one_element: @ Sorgt dafür, dass mindestens ein Element bereitliegt.
@ -----------------------------------------------------------------------------
  push {lr}
     4d8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:166

  @ Kernfrage besteht darin: Ist TOS belegt oder nicht ?
  @ Wenn ja, fertig. Wenn nein, sind auch NOS und 3OS leer, also TOS direkt vom Stack nachfüllen.

  ldr r1, [r0, #offset_state_tos]
     4da:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:167
  cmp r1, #unknown
     4dc:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:168
  bne 1f @ Wenn schon etwas in TOS enthalten ist, bin ich fertig.
     4de:	d104      	bne.n	4ea <expect_one_element+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:170

    movs r2, #offset_state_tos
     4e0:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:171
    bl erstes_element_belegen
     4e2:	f7ff ffea 	bl	4ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:173
  
    bl hkomma
     4e6:	f003 fa5b 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:174
1:pop {pc}
     4ea:	bd00      	pop	{pc}

000004ec <expect_two_elements>:
expect_two_elements():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:179

@ -----------------------------------------------------------------------------
expect_two_elements: @ Sorgt dafür, dass mindestens zwei Elemente bereitliegen.
@ -----------------------------------------------------------------------------
  push {lr}
     4ec:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:183

  @ Es könnten kein Element, ein Element oder zwei Elemente geholt werden müssen.

  ldr r1, [r0, #offset_state_nos]
     4ee:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:184
  cmp r1, #unknown
     4f0:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:185
  bne 1f @ Wenn schon etwas in NOS enthalten ist, bin ich fertig.
     4f2:	d107      	bne.n	504 <expect_two_elements+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:187

    movs r2, #offset_state_nos   @ Der größere Register, der zuletzt geladen wird, muss diesmal NOS werden.
     4f4:	2208      	movs	r2, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:188
    bl erstes_element_belegen
     4f6:	f7ff ffe0 	bl	4ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:190

    movs r2, #offset_state_tos   @ Der kleinere Register, der danach geladen wird, muss TOS werden.
     4fa:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:191
    bl element_belegen
     4fc:	f7ff ffe1 	bl	4c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:193
  
    bl hkomma
     500:	f003 fa4e 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:194
1:pop {pc}
     504:	bd00      	pop	{pc}

00000506 <expect_three_elements>:
expect_three_elements():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:199

@ -----------------------------------------------------------------------------
expect_three_elements: @ Sorgt dafür, dass mindestens drei Elemente bereitliegen.
@ -----------------------------------------------------------------------------
  push {lr}
     506:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:203

  @ Es könnten kein Element, ein Element, zwei oder drei Elemente geholt werden müssen.

  ldr r1, [r0, #offset_state_3os]
     508:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:204
  cmp r1, #unknown
     50a:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:205
  bne 1f @ Wenn schon etwas in 3OS enthalten ist, bin ich fertig.
     50c:	d10a      	bne.n	524 <expect_three_elements+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:207

    movs r2, #offset_state_3os   @ Der größere Register, der zuletzt geladen wird, muss diesmal 3OS werden.
     50e:	2210      	movs	r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:208
    bl erstes_element_belegen
     510:	f7ff ffd3 	bl	4ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:210

    movs r2, #offset_state_nos   @ Der kleinere Register, der danach geladen wird, muss NOS werden.
     514:	2208      	movs	r2, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:211
    bl element_belegen
     516:	f7ff ffd4 	bl	4c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:213

    movs r2, #offset_state_tos   @ Der kleinste Register, der als letztes geladen wird, muss TOS werden.
     51a:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:214
    bl element_belegen
     51c:	f7ff ffd1 	bl	4c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:216
  
    bl hkomma
     520:	f003 fa3e 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:217
1:pop {pc}
     524:	bd00      	pop	{pc}

00000526 <expect_four_elements>:
expect_four_elements():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:222

@ -----------------------------------------------------------------------------
expect_four_elements: @ Sorgt dafür, dass mindestens vier Elemente bereitliegen.
@ -----------------------------------------------------------------------------
  push {lr}
     526:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:226

  @ Es könnten kein Element, ein Element, zwei oder drei oder vier Elemente geholt werden müssen.

  ldr r1, [r0, #offset_state_4os]
     528:	6981      	ldr	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:227
  cmp r1, #unknown
     52a:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:228
  bne 1f @ Wenn schon etwas in 4OS enthalten ist, bin ich fertig.
     52c:	d10d      	bne.n	54a <expect_four_elements+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:230

    movs r2, #offset_state_4os
     52e:	2218      	movs	r2, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:231
    bl erstes_element_belegen
     530:	f7ff ffc3 	bl	4ba <erstes_element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:233

    movs r2, #offset_state_3os
     534:	2210      	movs	r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:234
    bl element_belegen
     536:	f7ff ffc4 	bl	4c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:236

    movs r2, #offset_state_nos
     53a:	2208      	movs	r2, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:237
    bl element_belegen
     53c:	f7ff ffc1 	bl	4c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:239

    movs r2, #offset_state_tos
     540:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:240
    bl element_belegen
     542:	f7ff ffbe 	bl	4c2 <element_belegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:242
  
    bl hkomma
     546:	f003 fa2b 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:243
1:pop {pc}
     54a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:97
  ldr r0, =allocator_base
     54c:	20000020 	.word	0x20000020

00000550 <expect_tos_in_register>:
expect_tos_in_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:251

@ -----------------------------------------------------------------------------
expect_tos_in_register: @ Sorgt dafür, dass TOS auf jeden Fall einem Register liegt,
                        @ welcher in r1 zurückgegeben wird.
@ -----------------------------------------------------------------------------
  push {lr}
     550:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:255

    @ Sollte jetzt TOS eine Konstante sein, so wird sie geladen.

    ldr r1, [r0, #offset_state_tos]
     552:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:256
    cmp r1, #constant
     554:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:257
    bne 4f
     556:	d104      	bne.n	562 <expect_tos_in_register+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:258
      ldr r3, [r0, #offset_constant_tos] @ Hole die Konstante ab
     558:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:259
      bl generiere_veraenderliche_konstante
     55a:	f7ff ff3e 	bl	3da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:260
      str r3, [r0, #offset_state_tos]
     55e:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:261
      movs r1, r3
     560:	0019      	movs	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:264

4:  @ Beide Argumente sind jetzt in Registern.
  pop {pc}
     562:	bd00      	pop	{pc}

00000564 <expect_nos_in_register>:
expect_nos_in_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:271

@ -----------------------------------------------------------------------------
expect_nos_in_register: @ Sorgt dafür, dass NOS auf jeden Fall einem Register liegt,
                        @ welcher in r1 zurückgegeben wird.
@ -----------------------------------------------------------------------------
  push {lr}
     564:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:275

    @ Sollte jetzt NOS eine Konstante sein, so wird sie geladen.

    ldr r1, [r0, #offset_state_nos]
     566:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:276
    cmp r1, #constant
     568:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:277
    bne 4f
     56a:	d104      	bne.n	576 <expect_nos_in_register+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:278
      ldr r3, [r0, #offset_constant_nos] @ Hole die Konstante ab
     56c:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:279
      bl generiere_veraenderliche_konstante
     56e:	f7ff ff34 	bl	3da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:280
      str r3, [r0, #offset_state_nos]
     572:	6083      	str	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:281
      movs r1, r3
     574:	0019      	movs	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:284

4:  @ Beide Argumente sind jetzt in Registern.
  pop {pc}
     576:	bd00      	pop	{pc}

00000578 <expect_3os_in_register>:
expect_3os_in_register():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:290

@ -----------------------------------------------------------------------------
expect_3os_in_register: @ Sorgt dafür, dass 3OS auf jeden Fall einem Register liegt,
                        @ welcher in r1 zurückgegeben wird.
@ -----------------------------------------------------------------------------
  push {lr}
     578:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:294

    @ Sollte jetzt 3OS eine Konstante sein, so wird sie geladen.

    ldr r1, [r0, #offset_state_3os]
     57a:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:295
    cmp r1, #constant
     57c:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:296
    bne 4f
     57e:	d104      	bne.n	58a <expect_3os_in_register+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:297
      ldr r3, [r0, #offset_constant_3os] @ Hole die Konstante ab
     580:	6943      	ldr	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:298
      bl generiere_veraenderliche_konstante
     582:	f7ff ff2a 	bl	3da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:299
      str r3, [r0, #offset_state_3os]
     586:	6103      	str	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:300
      movs r1, r3
     588:	0019      	movs	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:303

4:  @ Beide Argumente sind jetzt in Registern.
  pop {pc}
     58a:	bd00      	pop	{pc}

0000058c <nos_change_tos_away_later>:
nos_change_tos_away_later():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:314
  @ Zwei Elemente bereithalten (vorher schon passiert)
  @ Prüfen, ob die Register für NOS und 3OS zufällig identisch sind
  @   --> Registerkopie anfertigen

  @ r0 soll die allocator_base enthalten !
  push {r1, r2, r3, r4, r5, lr}
     58c:	b53e      	push	{r1, r2, r3, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:316

  ldr r2, [r0, #offset_state_nos]
     58e:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:317
  ldr r3, [r0, #offset_state_3os]
     590:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:318
  ldr r4, [r0, #offset_state_4os]
     592:	6984      	ldr	r4, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:319
  ldr r5, [r0, #offset_state_5os]
     594:	6a05      	ldr	r5, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:321

  cmp r2, r3
     596:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:322
  beq 1f
     598:	d003      	beq.n	5a2 <nos_change_tos_away_later+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:323
  cmp r2, r4
     59a:	42a2      	cmp	r2, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:324
  beq 1f
     59c:	d001      	beq.n	5a2 <nos_change_tos_away_later+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:325
  cmp r2, r5
     59e:	42aa      	cmp	r2, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:326
  bne 2f
     5a0:	d10a      	bne.n	5b8 <nos_change_tos_away_later+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:329

1:  @ Identisch. Sind es Register ?
    cmp r2, #7 @ Es gibt nur 7 Register - alle anderen Fälle sind größer.
     5a2:	2a07      	cmp	r2, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:330
    bhi 2f
     5a4:	d808      	bhi.n	5b8 <nos_change_tos_away_later+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:333

      @ Ja, es sind beides Register. Mache für NOS einen Registerwechsel, möglichst in r6 hinein.
      pushdatos
     5a6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:334
      lsls tos, r2, #3 @ Quellregister
     5aa:	00d6      	lsls	r6, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:335
      bl get_free_register
     5ac:	f7ff ff60 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:336
      orrs tos, r3 @ Zielregister
     5b0:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:337
      str r3, [r0, #offset_state_nos]
     5b2:	6083      	str	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:338
      bl hkomma
     5b4:	f003 f9f4 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:340

2:pop {r1, r2, r3, r4, r5, pc}
     5b8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

000005ba <make_tos_changeable>:
make_tos_changeable():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:346

@ -----------------------------------------------------------------------------
make_tos_changeable: @ Lege eine Elementkopie an, falls TOS woanders schon belegt ist.
@ -----------------------------------------------------------------------------
  @ r0 soll die allocator_base enthalten !
  push {r1, r2, r3, r4, r5, lr}
     5ba:	b53e      	push	{r1, r2, r3, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:348

  ldr r1, [r0, #offset_state_tos]
     5bc:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:349
  ldr r2, [r0, #offset_state_nos]
     5be:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:350
  ldr r3, [r0, #offset_state_3os]
     5c0:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:351
  ldr r4, [r0, #offset_state_4os]
     5c2:	6984      	ldr	r4, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:352
  ldr r5, [r0, #offset_state_5os]
     5c4:	6a05      	ldr	r5, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:354

  cmp r1, r2
     5c6:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:355
  beq 1f
     5c8:	d006      	beq.n	5d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:356
  cmp r1, r3
     5ca:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:357
  beq 1f
     5cc:	d004      	beq.n	5d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:358
  cmp r1, r4
     5ce:	42a1      	cmp	r1, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:359
  beq 1f
     5d0:	d002      	beq.n	5d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:360
  cmp r1, r5
     5d2:	42a9      	cmp	r1, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:361
  beq 1f
     5d4:	d000      	beq.n	5d8 <make_tos_changeable+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:362
    pop {r1, r2, r3, r4, r5, pc}
     5d6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:366

1: @ Registerwechsel mit Elementkopie für TOS.

      pushdatos
     5d8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:367
      lsls tos, r1, #3 @ Quellregister
     5dc:	00ce      	lsls	r6, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:368
      bl get_free_register
     5de:	f7ff ff47 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:369
      orrs tos, r3 @ Zielregister
     5e2:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:370
      str r3, [r0, #offset_state_tos]
     5e4:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:371
      bl hkomma
     5e6:	f003 f9db 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:373

    pop {r1, r2, r3, r4, r5, pc}
     5ea:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

000005ec <tos_registerwechsel>:
tos_registerwechsel():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:378

@ -----------------------------------------------------------------------------
tos_registerwechsel: @ Wechselt den TOS-Register, gibt diesen in r3 zurück
@ -----------------------------------------------------------------------------
  push {lr}
     5ec:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:380
  @ Registerwechsel direkt im Opcode. Nutze das natürlich aus :-) Spare mir damit eventuelle Elementkopien.
  bl eliminiere_tos
     5ee:	f7ff fe76 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:381
  bl befreie_tos
     5f2:	f7ff fe6a 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:382
  bl get_free_register
     5f6:	f7ff ff3b 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:383
  str r3, [r0, #offset_state_tos]
     5fa:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:384
  pop {pc}
     5fc:	bd00      	pop	{pc}

000005fe <push_lr_nachholen>:
push_lr_nachholen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:389

@ -----------------------------------------------------------------------------
push_lr_nachholen:
@ -----------------------------------------------------------------------------
  push {r0, lr}
     5fe:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:390
    ldr r0, =state
     600:	4806      	ldr	r0, [pc, #24]	; (61c <push_lr_nachholen+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:391
    ldr r3, [r0]
     602:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:392
    adds r3, #1 @ Wenn es -1 war, ergibt dies Null, und es war schon im push {lr} Modus.
     604:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:393
    beq.n 1f
     606:	d008      	beq.n	61a <push_lr_nachholen+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:395

      movs r3, #0  @ State auf klassisch "true" setzen.
     608:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:396
      mvns r3, r3
     60a:	43db      	mvns	r3, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:397
      str r3, [r0]
     60c:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:400

      @ writeln "Nachholen von push {lr}"
      pushdaconstw 0xb500 @ Opcode für push {lr} schreiben  Write opcode for push {lr}
     60e:	f847 6d04 	str.w	r6, [r7, #-4]!
     612:	f24b 5600 	movw	r6, #46336	; 0xb500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:401
      bl hkomma
     616:	f003 f9c3 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:403

1:pop {r0, pc}
     61a:	bd01      	pop	{r0, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:390
    ldr r0, =state
     61c:	2001ffd8 	.word	0x2001ffd8

00000620 <Dictionary_67>:
Dictionary_67():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-tools.s:390
     620:	00000644 	.word	0x00000644
     624:	32040242 	.word	0x32040242
     628:	7564      	.short	0x7564
     62a:	70          	.byte	0x70
	...

0000062c <Code_67>:
Code_67():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:28
@------------------------------------------------------------------------------

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, "2dup" @ ( 2 1 -- 2 1 2 1 )
@ -----------------------------------------------------------------------------
  ldr r0, [psp]
     62c:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:29
  pushdatos
     62e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:30
  subs psp, #4
     632:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:31
  str r0, [psp]
     634:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:32
  bx lr
     636:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:33
    push {lr}
     638:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:34
    bl over_allocator
     63a:	f000 fcc3 	bl	fc4 <over_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:35
    bl over_allocator
     63e:	f000 fcc1 	bl	fc4 <over_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:36
    pop {pc}
     642:	bd00      	pop	{pc}

00000644 <Dictionary_69>:
Dictionary_69():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:36
     644:	00000662 	.word	0x00000662
     648:	32050262 	.word	0x32050262
     64c:	706f7264 	.word	0x706f7264

00000650 <Code_69>:
Code_69():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:42

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "2drop" @ ( 2 1 -- )
ddrop_vektor:
@ -----------------------------------------------------------------------------
  adds psp, #4
     650:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:43
  drop
     652:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:44
  bx lr
     654:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:45
    push {lr}
     656:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:46
    bl drop_allocator
     658:	f000 fc64 	bl	f24 <drop_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:47
    bl drop_allocator
     65c:	f000 fc62 	bl	f24 <drop_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:48
    pop {pc}
     660:	bd00      	pop	{pc}

00000662 <Dictionary_71>:
Dictionary_71():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:48
     662:	06a8      	.short	0x06a8
     664:	02440000 	.word	0x02440000
     668:	77733205 	.word	0x77733205
     66c:	7061      	.short	0x7061

0000066e <Code_71>:
Code_71():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:54

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_4|Flag_allocator, "2swap" @ ( 4 3 2 1 -- 2 1 4 3 )
dswap:
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
     66e:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:55
  subs psp, #4
     670:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:56
  str r0, [psp]
     672:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:57
  pushdatos
     674:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:58
  subs psp, #4
     678:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:59
  str r2, [psp]
     67a:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:60
  movs tos, r1
     67c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:61
  bx lr
     67e:	4770      	bx	lr

00000680 <dswap_allocator>:
dswap_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:64

dswap_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
     680:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:66

    bl expect_four_elements
     682:	f7ff ff50 	bl	526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:68

    ldr r2, [r0, #offset_state_tos]
     686:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:69
    ldr r3, [r0, #offset_state_3os]
     688:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:70
    str r3, [r0, #offset_state_tos]
     68a:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:71
    str r2, [r0, #offset_state_3os]
     68c:	6102      	str	r2, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:73

    ldr r2, [r0, #offset_constant_tos]
     68e:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:74
    ldr r3, [r0, #offset_constant_3os]
     690:	6943      	ldr	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:75
    str r3, [r0, #offset_constant_tos]
     692:	6043      	str	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:76
    str r2, [r0, #offset_constant_3os]
     694:	6142      	str	r2, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:78

    ldr r2, [r0, #offset_state_nos]
     696:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:79
    ldr r3, [r0, #offset_state_4os]
     698:	6983      	ldr	r3, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:80
    str r3, [r0, #offset_state_nos]
     69a:	6083      	str	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:81
    str r2, [r0, #offset_state_4os]
     69c:	6182      	str	r2, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:83

    ldr r2, [r0, #offset_constant_nos]
     69e:	68c2      	ldr	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:84
    ldr r3, [r0, #offset_constant_4os]
     6a0:	69c3      	ldr	r3, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:85
    str r3, [r0, #offset_constant_nos]
     6a2:	60c3      	str	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:86
    str r2, [r0, #offset_constant_4os]
     6a4:	61c2      	str	r2, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:88

    pop {pc}
     6a6:	bd00      	pop	{pc}

000006a8 <Dictionary_73>:
Dictionary_73():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:88
     6a8:	000006d0 	.word	0x000006d0
     6ac:	32040262 	.word	0x32040262
     6b0:	696e      	.short	0x696e
     6b2:	70          	.byte	0x70
	...

000006b4 <Code_73>:
Code_73():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:94

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "2nip" @ ( 4 3 2 1 -- 2 1 )
dnip:
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
     6b4:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:95
  subs psp, #4
     6b6:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:96
  str r0, [psp]
     6b8:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:97
  bx lr
     6ba:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:99

    push {lr}
     6bc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:100
    bl expect_four_elements
     6be:	f7ff ff32 	bl	526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:101
    bl dswap_allocator
     6c2:	f7ff ffdd 	bl	680 <dswap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:102
    bl eliminiere_tos
     6c6:	f7ff fe0a 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:103
    bl eliminiere_tos
     6ca:	f7ff fe08 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:104
    pop {pc}
     6ce:	bd00      	pop	{pc}

000006d0 <Dictionary_74>:
Dictionary_74():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:104
     6d0:	000006ea 	.word	0x000006ea
     6d4:	32050044 	.word	0x32050044
     6d8:	7265766f 	.word	0x7265766f

000006dc <Code_74>:
Code_74():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:109

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_4, "2over" @ ( 4 3 2 1 -- 4 3 2 1 4 3 )
@ -----------------------------------------------------------------------------
  ldr r0, [psp, #8]
     6dc:	68b8      	ldr	r0, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:110
  pushdatos
     6de:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:111
  subs psp, #4
     6e2:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:112
  str r0, [psp]
     6e4:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:113
  ldr tos, [psp, #12]
     6e6:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:114
  bx lr
     6e8:	4770      	bx	lr

000006ea <Dictionary_76>:
Dictionary_76():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:114
     6ea:	070e      	.short	0x070e
     6ec:	00440000 	.word	0x00440000
     6f0:	75743205 	.word	0x75743205
     6f4:	6b63      	.short	0x6b63

000006f6 <Code_76>:
Code_76():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:119

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_4, "2tuck" @ ( 4 3 2 1 -- 2 1 4 3 2 1 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2} @ w=2 x=3 y=4
     6f6:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:120
  subs psp, #4
     6f8:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:121
  str r0, [psp]
     6fa:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:122
  pushdatos
     6fc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:123
  subs psp, #4
     700:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:124
  str r2, [psp]
     702:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:125
  subs psp, #4
     704:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:126
  str r1, [psp]
     706:	6039      	str	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:127
  subs psp, #4
     708:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:128
  str r0, [psp]
     70a:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:129
  bx lr
     70c:	4770      	bx	lr

0000070e <Dictionary_78>:
Dictionary_78():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:129
     70e:	0730      	.short	0x0730
     710:	00460000 	.word	0x00460000
     714:	6f723204 	.word	0x6f723204
     718:	74          	.byte	0x74
	...

0000071a <Code_78>:
Code_78():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:135

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_6, "2rot" @ ( 6  5 4 3 2 1  -- 4  3 2 1 6 5 ) ( x w y -- w y x )
                                    @  16 12 8 4 0 tos  16 12 8 4 0 tos
@ -----------------------------------------------------------------------------
  ldr r0, [psp]
     71a:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:136
  ldr r1, [psp, #8]
     71c:	68b9      	ldr	r1, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:137
  ldr r2, [psp, #16]
     71e:	693a      	ldr	r2, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:139

  str r0, [psp, #8]
     720:	60b8      	str	r0, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:140
  str r1, [psp, #16]
     722:	6139      	str	r1, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:141
  str r2, [psp]
     724:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:143

  ldr r1, [psp, #4]
     726:	6879      	ldr	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:144
  str tos, [psp, #4]
     728:	607e      	str	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:145
  ldr tos, [psp, #12]
     72a:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:146
  str r1, [psp, #12]
     72c:	60f9      	str	r1, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:148

  bx lr
     72e:	4770      	bx	lr

00000730 <Dictionary_79>:
Dictionary_79():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:148
     730:	00000752 	.word	0x00000752
     734:	32050046 	.word	0x32050046
     738:	746f722d 	.word	0x746f722d

0000073c <Code_79>:
Code_79():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:154

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_6, "2-rot" @ ( 6  5 4 3 2 1 --  2  1 6 5 4 3 ( x w y -- y x w )
                                     @  16 12 8 4 0 tos  16 12 8 4 0 tos
@ -----------------------------------------------------------------------------
  ldr r0, [psp]
     73c:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:155
  ldr r1, [psp, #8]
     73e:	68b9      	ldr	r1, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:156
  ldr r2, [psp, #16]
     740:	693a      	ldr	r2, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:158

  str r0, [psp, #16]
     742:	6138      	str	r0, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:159
  str r1, [psp]
     744:	6039      	str	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:160
  str r2, [psp, #8]
     746:	60ba      	str	r2, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:162

  ldr r1, [psp, #12]
     748:	68f9      	ldr	r1, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:163
  str tos, [psp, #12]
     74a:	60fe      	str	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:164
  ldr tos, [psp, #4]
     74c:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:165
  str r1, [psp, #4]
     74e:	6079      	str	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:167

  bx lr
     750:	4770      	bx	lr

00000752 <Dictionary_80>:
Dictionary_80():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:167
     752:	077a      	.short	0x077a
     754:	02200000 	.word	0x02200000
     758:	723e3203 	.word	0x723e3203

0000075c <Code_80>:
Code_80():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:182

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2>r" @ Puts the two top elements of stack on returnstack.
                               @ Equal to swap >r >r
@------------------------------------------------------------------------------
  ldm psp!, {r0}
     75c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:183
  push {r0}
     75e:	b401      	push	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:184
  push {tos}
     760:	b440      	push	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:185
  ldm psp!, {tos}
     762:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:186
  bx lr
     764:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:187
    push {lr}
     766:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:188
    bl push_lr_nachholen
     768:	f7ff ff49 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:189
    bl swap_allocator
     76c:	f000 fbfd 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:190
    bl allocator_to_r
     770:	f000 fc9d 	bl	10ae <allocator_to_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:191
    bl allocator_to_r
     774:	f000 fc9b 	bl	10ae <allocator_to_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:192
    pop {pc}
     778:	bd00      	pop	{pc}

0000077a <Dictionary_81>:
Dictionary_81():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:192
     77a:	07a6      	.short	0x07a6
     77c:	02200000 	.word	0x02200000
     780:	3e723203 	.word	0x3e723203

00000784 <Code_81>:
Code_81():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:198

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2r>" @ Fetches back two elements of returnstack.
                               @ Equal to r> r> swap
@------------------------------------------------------------------------------
  pushdatos
     784:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:199
  pop {tos}
     788:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:200
  pop {r0}
     78a:	bc01      	pop	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:201
  subs psp, #4
     78c:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:202
  str r0, [psp]
     78e:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:203
  bx lr
     790:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:204
    push {lr}
     792:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:205
    bl push_lr_nachholen
     794:	f7ff ff33 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:206
    bl allocator_r_from
     798:	f000 fca5 	bl	10e6 <allocator_r_from>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:207
    bl allocator_r_from
     79c:	f000 fca3 	bl	10e6 <allocator_r_from>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:208
    bl swap_allocator
     7a0:	f000 fbe3 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:209
    pop {pc}
     7a4:	bd00      	pop	{pc}

000007a6 <Dictionary_83>:
Dictionary_83():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:209
     7a6:	07d6      	.short	0x07d6
     7a8:	02200000 	.word	0x02200000
     7ac:	40723203 	.word	0x40723203

000007b0 <Code_83>:
Code_83():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:214

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2r@" @ Copies the two top elements of returnsteack
@------------------------------------------------------------------------------
  pushdatos
     7b0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:215
  ldr tos, [sp, #4]
     7b4:	9e01      	ldr	r6, [sp, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:216
  pushdatos
     7b6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:217
  ldr tos, [sp]
     7ba:	9e00      	ldr	r6, [sp, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:218
  bx lr
     7bc:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:219
    push {lr}
     7be:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:220
    bl push_lr_nachholen
     7c0:	f7ff ff1d 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:221
    pushdaconstw 0x9801
     7c4:	f847 6d04 	str.w	r6, [r7, #-4]!
     7c8:	f649 0601 	movw	r6, #38913	; 0x9801
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:222
    bl loop_j_allocator
     7cc:	f003 fe3d 	bl	444a <loop_j_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:223
    bl rfetch_allocator
     7d0:	f003 fe37 	bl	4442 <rfetch_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:224
    pop {pc}
     7d4:	bd00      	pop	{pc}

000007d6 <Dictionary_88>:
Dictionary_88():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:224
     7d6:	07fc      	.short	0x07fc
     7d8:	02200000 	.word	0x02200000
     7dc:	64723206 	.word	0x64723206
     7e0:	6f72      	.short	0x6f72
     7e2:	70          	.byte	0x70
	...

000007e4 <Code_88>:
Code_88():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:229

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2rdrop" @ Entfernt die obersten beiden Element des Returnstacks
@------------------------------------------------------------------------------
  add sp, #8
     7e4:	b002      	add	sp, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:230
  bx lr
     7e6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:231
    push {lr}
     7e8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:232
    bl push_lr_nachholen
     7ea:	f7ff ff08 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:233
    pushdaconstw 0xB002  @ Opcode add sp, #8
     7ee:	f847 6d04 	str.w	r6, [r7, #-4]!
     7f2:	f24b 0602 	movw	r6, #45058	; 0xb002
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:234
    bl hkomma
     7f6:	f003 f8d3 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:235
    pop {pc}
     7fa:	bd00      	pop	{pc}

000007fc <Dictionary_91>:
Dictionary_91():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:235
     7fc:	00000814 	.word	0x00000814
     800:	64030042 	.word	0x64030042
     804:	2f32      	.short	0x2f32

00000806 <Code_91>:
Code_91():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:246
@------------------------------------------------------------------------------

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_2, "d2/"
@------------------------------------------------------------------------------
  ldr r0, [psp]
     806:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:247
  lsls r1, tos, #31 @ Prepare Carry
     808:	07f1      	lsls	r1, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:248
  asrs tos, #1     @ Shift signed high part right
     80a:	1076      	asrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:249
  lsrs r0, #1       @ Shift low part
     80c:	0840      	lsrs	r0, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:250
  orrs r0, r1
     80e:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:251
  str r0, [psp]
     810:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:252
  bx lr
     812:	4770      	bx	lr

00000814 <Dictionary_92>:
Dictionary_92():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:252
     814:	0000082a 	.word	0x0000082a
     818:	64030262 	.word	0x64030262
     81c:	2a32      	.short	0x2a32

0000081e <Code_92>:
Code_92():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:257

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "d2*"
@------------------------------------------------------------------------------
  ldr r0, [psp]
     81e:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:258
  adds r0, r0
     820:	1800      	adds	r0, r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:259
  adcs tos, tos
     822:	4176      	adcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:260
  str r0, [psp]
     824:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:261
  bx lr
     826:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:262
    b.n 1f
     828:	e017      	b.n	85a <Code_94+0xa>

0000082a <Dictionary_93>:
Dictionary_93():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:262
     82a:	0844      	.short	0x0844
     82c:	00420000 	.word	0x00420000
     830:	68736404 	.word	0x68736404
     834:	72          	.byte	0x72
	...

00000836 <Code_93>:
Code_93():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:267

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_2, "dshr"
@------------------------------------------------------------------------------
  ldr r0, [psp]
     836:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:268
  lsls r1, tos, #31 @ Prepare Carry
     838:	07f1      	lsls	r1, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:269
  lsrs tos, #1     @ Shift unsigned high part right
     83a:	0876      	lsrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:270
  lsrs r0, #1       @ Shift low part
     83c:	0840      	lsrs	r0, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:271
  orrs r0, r1
     83e:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:272
  str r0, [psp]
     840:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:273
  bx lr
     842:	4770      	bx	lr

00000844 <Dictionary_94>:
Dictionary_94():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:273
     844:	00000890 	.word	0x00000890
     848:	64040262 	.word	0x64040262
     84c:	6873      	.short	0x6873
     84e:	6c          	.byte	0x6c
	...

00000850 <Code_94>:
Code_94():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:278

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "dshl"
@------------------------------------------------------------------------------
  ldr r0, [psp]
     850:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:279
  adds r0, r0
     852:	1800      	adds	r0, r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:280
  adcs tos, tos
     854:	4176      	adcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:281
  str r0, [psp]
     856:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:282
  bx lr
     858:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:284

1:  push {lr}
     85a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:285
    bl expect_two_elements
     85c:	f7ff fe46 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:287

    bl expect_tos_in_register
     860:	f7ff fe76 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:288
    bl make_tos_changeable
     864:	f7ff fea9 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:290

    bl swap_allocator
     868:	f000 fb7f 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:291
    bl expect_tos_in_register
     86c:	f7ff fe70 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:292
    bl make_tos_changeable
     870:	f7ff fea3 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:294

    pushdaconst 0x0040 @ lsls r0, r0, #1
     874:	f847 6d04 	str.w	r6, [r7, #-4]!
     878:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:295
    bl smalltworegisters
     87a:	f001 fe9b 	bl	25b4 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:297

    bl swap_allocator
     87e:	f000 fb74 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:298
    pushdaconstw 0x4140 @ adcs r0, r0
     882:	f847 6d04 	str.w	r6, [r7, #-4]!
     886:	f244 1640 	movw	r6, #16704	; 0x4140
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:299
    bl smalltworegisters
     88a:	f001 fe93 	bl	25b4 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:300
    pop {pc}
     88e:	bd00      	pop	{pc}

00000890 <Dictionary_99>:
Dictionary_99():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:300
     890:	000008a2 	.word	0x000008a2
     894:	64040042 	.word	0x64040042
     898:	6261      	.short	0x6261
     89a:	73          	.byte	0x73
	...

0000089c <Code_99>:
Code_99():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:306

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_2, "dabs"
@------------------------------------------------------------------------------
dabs:
  cmp tos, #0   @ Check sign in high-part
     89c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:307
  bmi.n dnegate @ Not negative ? Nothing to do !
     89e:	d407      	bmi.n	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:308
  bx lr
     8a0:	4770      	bx	lr

000008a2 <Dictionary_100>:
Dictionary_100():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:308
     8a2:	08c0      	.short	0x08c0
     8a4:	00420000 	.word	0x00420000
     8a8:	656e6407 	.word	0x656e6407
     8ac:	65746167 	.word	0x65746167

000008b0 <Code_100>:
dnegate():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:322

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_2, "dnegate"
@------------------------------------------------------------------------------
dnegate:
  ldr r0, [psp]
     8b0:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:323
  movs r1, #0
     8b2:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:324
  mvns r0, r0
     8b4:	43c0      	mvns	r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:325
  mvns tos, tos
     8b6:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:326
  adds r0, #1
     8b8:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:327
  adcs tos, r1
     8ba:	414e      	adcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:328
  str r0, [psp]
     8bc:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:329
  bx lr
     8be:	4770      	bx	lr

000008c0 <Dictionary_101>:
Dictionary_101():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:329
     8c0:	00000910 	.word	0x00000910
     8c4:	64020264 	.word	0x64020264
     8c8:	2d          	.byte	0x2d
	...

000008ca <Code_101>:
Code_101():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:334

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_4|Flag_allocator, "d-" @ ( 1L 1H 2L 2H )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
     8ca:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:335
  subs r2, r0     @  Low-part first
     8cc:	1a12      	subs	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:336
  sbcs r1, tos   @ High-part with carry
     8ce:	41b1      	sbcs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:337
  movs tos, r1
     8d0:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:339

  subs psp, #4
     8d2:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:340
  str r2, [psp]
     8d4:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:341
  bx lr
     8d6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:343

    push {lr}
     8d8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:344
    bl expect_four_elements
     8da:	f7ff fe24 	bl	526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:345
    bl rot_allocator @ ( 1L 2L 2H 1H )
     8de:	f000 fb99 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:346
    bl expect_tos_in_register
     8e2:	f7ff fe35 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:347
    bl make_tos_changeable
     8e6:	f7ff fe68 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:348
    bl swap_allocator @ ( 1L 2L 1H 2H )
     8ea:	f000 fb3e 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:349
    bl expect_tos_in_register
     8ee:	f7ff fe2f 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:350
    bl make_tos_changeable
     8f2:	f7ff fe62 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:351
    bl dswap_allocator @ ( 1H 2H 1L 2L )
     8f6:	f7ff fec3 	bl	680 <dswap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:352
    bl minus_allocator  @ ( 1H 2H L )
     8fa:	f001 fdc5 	bl	2488 <minus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:353
    bl minusrot_allocator @ ( L 1H 2H )
     8fe:	f000 fba5 	bl	104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:354
    pushdaconstw 0x4180 @ sbcs r0, r0
     902:	f847 6d04 	str.w	r6, [r7, #-4]!
     906:	f244 1680 	movw	r6, #16768	; 0x4180
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:355
    bl alloc_unkommutativ @ ( L H )
     90a:	f000 fd4e 	bl	13aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:356
    pop {pc}
     90e:	bd00      	pop	{pc}

00000910 <Dictionary_104>:
Dictionary_104():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:356
     910:	0000095e 	.word	0x0000095e
     914:	64020264 	.word	0x64020264
     918:	2b          	.byte	0x2b
	...

0000091a <Code_104>:
Code_104():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:361

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_4|Flag_allocator, "d+" @ ( 1L 1H 2L 2H )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
     91a:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:362
  adds r2, r0
     91c:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:363
  adcs tos, r1
     91e:	414e      	adcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:364
  subs psp, #4
     920:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:365
  str r2, [psp]
     922:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:366
  bx lr
     924:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:368

    push {lr}
     926:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:369
    bl expect_four_elements
     928:	f7ff fdfd 	bl	526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:370
    bl rot_allocator @ ( 1L 2L 2H 1H )
     92c:	f000 fb72 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:371
    bl expect_tos_in_register
     930:	f7ff fe0e 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:372
    bl make_tos_changeable
     934:	f7ff fe41 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:373
    bl swap_allocator @ ( 1L 2L 1H 2H )
     938:	f000 fb17 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:374
    bl expect_tos_in_register
     93c:	f7ff fe08 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:375
    bl make_tos_changeable
     940:	f7ff fe3b 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:376
    bl dswap_allocator @ ( 1H 2H 1L 2L )
     944:	f7ff fe9c 	bl	680 <dswap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:377
    bl plus_allocator  @ ( 1H 2H L )
     948:	f001 fd83 	bl	2452 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:378
    bl minusrot_allocator @ ( L 1H 2H )
     94c:	f000 fb7e 	bl	104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:379
    pushdaconstw 0x4140 @ adcs r0, r0
     950:	f847 6d04 	str.w	r6, [r7, #-4]!
     954:	f244 1640 	movw	r6, #16704	; 0x4140
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:380
    bl alloc_kommutativ @ ( L H )
     958:	f000 fd2b 	bl	13b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:381
    pop {pc}
     95c:	bd00      	pop	{pc}

0000095e <Dictionary_107>:
Dictionary_107():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:381
     95e:	0988      	.short	0x0988
     960:	02610000 	.word	0x02610000
     964:	643e7303 	.word	0x643e7303

00000968 <Code_107>:
Code_107():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:386

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_allocator, "s>d" @ ( n - dl dh ) Single --> Double conversion
@------------------------------------------------------------------------------
  pushdatos
     968:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:387
  movs tos, tos, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
     96c:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:388
  bx lr
     96e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:389
    push {lr}
     970:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:390
    bl dup_allocator
     972:	f000 fac5 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:391
    bl make_tos_changeable
     976:	f7ff fe20 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:392
    pushdaconstw 0x17C0 @ asrs r0, r0, #31
     97a:	f847 6d04 	str.w	r6, [r7, #-4]!
     97e:	f241 76c0 	movw	r6, #6080	; 0x17c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:393
    bl smalltworegisters
     982:	f001 fe17 	bl	25b4 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:394
    pop {pc}
     986:	bd00      	pop	{pc}

00000988 <Dictionary_111>:
Dictionary_111():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:394
     988:	000009e6 	.word	0x000009e6
     98c:	75030262 	.word	0x75030262
     990:	2a6d      	.short	0x2a6d

00000992 <Code_111>:
Code_111():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:426
  @ Multiply unsigned 32*32 = 64
  @ ( u u -- ud )
um_star:
@------------------------------------------------------------------------------

    ldr r0, [psp]
     992:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:427
    umull r0, tos, r0, tos @ Unsigned long multiply 32*32=64
     994:	fba0 0606 	umull	r0, r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:428
    str r0, [psp]
     998:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:429
    bx lr
     99a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:431

    pushdatos
     99c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:432
    ldr tos, =0xFBA00000
     9a0:	f8df 6500 	ldr.w	r6, [pc, #1280]	; ea4 <dgleichungleich_common+0x1c>

000009a4 <alloc_multiplikation_m3>:
alloc_multiplikation_m3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:436

alloc_multiplikation_m3:

    push {lr}
     9a4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:437
    bl expect_two_elements
     9a6:	f7ff fda1 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:438
    bl expect_tos_in_register
     9aa:	f7ff fdd1 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:439
    bl expect_nos_in_register
     9ae:	f7ff fdd9 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:443

    @ Baue den Opcode zusammen:

    ldr r1, [r0, #offset_state_tos]
     9b2:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:444
    orrs tos, r1 @ Quellregister 1 hinzufügen
     9b4:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:446

    ldr r1, [r0, #offset_state_nos]
     9b6:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:447
    orrs tos, tos, r1, lsl #16 @ Quellregister 2 hinzufügen
     9b8:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:450

    @ Zweimal den Register wechseln !
    bl eliminiere_tos
     9bc:	f7ff fc8f 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:451
    bl eliminiere_tos
     9c0:	f7ff fc8d 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:453

          bl befreie_tos
     9c4:	f7ff fc81 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:454
          bl get_free_register
     9c8:	f7ff fd52 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:455
          str r3, [r0, #offset_state_tos]
     9cc:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:457

    orrs tos, tos, r3, lsl #12 @ Zielregister Low hinzufügen
     9ce:	ea56 3603 	orrs.w	r6, r6, r3, lsl #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:459

          bl befreie_tos
     9d2:	f7ff fc7a 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:460
          bl get_free_register
     9d6:	f7ff fd4b 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:461
          str r3, [r0, #offset_state_tos]
     9da:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:463

    orrs tos, tos, r3, lsl #8 @ Zielregister High hinzufügen
     9dc:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:465

    bl reversekomma
     9e0:	f003 f80e 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:466
    pop {pc}
     9e4:	bd00      	pop	{pc}

000009e6 <Dictionary_113>:
Dictionary_113():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:466
     9e6:	0a04      	.short	0x0a04
     9e8:	02620000 	.word	0x02620000
     9ec:	6d02      	.short	0x6d02
     9ee:	2a          	.byte	0x2a
	...

000009f0 <Code_113>:
Code_113():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:496
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "m*"
  @ Multiply signed 32*32 = 64
  @ ( n n -- d )
m_star:
@------------------------------------------------------------------------------
    ldr r0, [psp]
     9f0:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:497
    smull r0, tos, r0, tos @ Signed long multiply 32*32=64
     9f2:	fb80 0606 	smull	r0, r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:498
    str r0, [psp]
     9f6:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:499
    bx lr
     9f8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:501

    pushdatos
     9fa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:502
    ldr tos, =0xFB800000
     9fe:	f8df 64a8 	ldr.w	r6, [pc, #1192]	; ea8 <dgleichungleich_common+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:503
    b.n alloc_multiplikation_m3
     a02:	e7cf      	b.n	9a4 <alloc_multiplikation_m3>

00000a04 <Dictionary_115>:
Dictionary_115():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:503
     a04:	00000a42 	.word	0x00000a42
     a08:	75030044 	.word	0x75030044
     a0c:	2a64      	.short	0x2a64

00000a0e <Code_115>:
Code_115():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:519
  @          tos w      x y

@ r1:r0  r3:r2 -->  r1:r0
@ tos r0 r1 r2 -->  tos r0

        ldm psp!, {r0, r1, r2}
     a0e:	cf07      	ldmia	r7!, {r0, r1, r2}

00000a10 <ud_star_registers>:
ud_star_registers():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:523

ud_star_registers:

	muls	tos, r2        @ High-1 * Low-2 --> tos
     a10:	4356      	muls	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:524
	muls	r1, r0         @ High-2 * Low-1 --> r1
     a12:	4341      	muls	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:525
	adds	tos, r1        @                    Sum into tos
     a14:	1876      	adds	r6, r6, r1

00000a16 <ud_star_late_entry>:
ud_star_late_entry():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:529

ud_star_late_entry:

	lsrs	r1, r0, #16
     a16:	0c01      	lsrs	r1, r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:530
	lsrs	r3, r2, #16
     a18:	0c13      	lsrs	r3, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:531
	muls	r1, r3
     a1a:	4359      	muls	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:532
	adds	tos, r1
     a1c:	1876      	adds	r6, r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:534

	lsrs	r1, r0, #16
     a1e:	0c01      	lsrs	r1, r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:535
	uxth	r0, r0
     a20:	b280      	uxth	r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:536
	uxth	r2, r2
     a22:	b292      	uxth	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:537
	muls	r1, r2
     a24:	4351      	muls	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:538
	muls	r3, r0
     a26:	4343      	muls	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:539
	muls	r0, r2
     a28:	4350      	muls	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:541

	movs	r2, #0
     a2a:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:542
	adds	r1, r3
     a2c:	18c9      	adds	r1, r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:543
	adcs	r2, r2
     a2e:	4152      	adcs	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:544
	lsls	r2, #16
     a30:	0412      	lsls	r2, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:545
	adds	tos, r2
     a32:	18b6      	adds	r6, r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:547

	lsls	r2, r1, #16
     a34:	040a      	lsls	r2, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:548
	lsrs	r1, #16
     a36:	0c09      	lsrs	r1, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:549
	adds	r0, r2
     a38:	1880      	adds	r0, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:550
	adcs	tos, r1
     a3a:	414e      	adcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:552

        subs psp, #4
     a3c:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:553
        str r0, [psp]
     a3e:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:555

        bx lr
     a40:	4770      	bx	lr

00000a42 <Dictionary_116>:
Dictionary_116():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:555
     a42:	0ad4      	.short	0x0ad4
     a44:	00440000 	.word	0x00440000
     a48:	6d647504 	.word	0x6d647504
     a4c:	2a          	.byte	0x2a
	...

00000a4e <Code_116>:
Code_116():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:567
  @ Auf dem Datenstack: ( 1L 1H 2L 2H -- LL  L  H HH )
  @                       12  8  4  0 nach pushdatos
  @                        d  c  b  a    r0 r1 r2 r3
  @ Benötige einen langen Ergebnisregister !

  push {r4, lr}
     a4e:	b510      	push	{r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:568
  movs r4, #0 @ For Carry addition
     a50:	2400      	movs	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:571

  @ ( d c b a )
  pushdatos
     a52:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:572
  ldr tos, [psp, #4]    @ b
     a56:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:573
  pushdatos
     a58:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:574
  ldr tos, [psp, #12+4] @ d
     a5c:	693e      	ldr	r6, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:575
  bl um_star
     a5e:	f7ff ff98 	bl	992 <Code_111>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:577
  @ ( d c b a  b*d-Low b*d-High )
  popda r1 @ b*d-High
     a62:	0031      	movs	r1, r6
     a64:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:578
  popda r0 @ b*d-Low, finished value
     a66:	0030      	movs	r0, r6
     a68:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:582

  @ ( d c b a )

  pushdatos
     a6a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:583
  ldr tos, [psp, #0]   @ a
     a6e:	683e      	ldr	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:584
  pushdatos
     a70:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:585
  ldr tos, [psp, #8+4] @ c
     a74:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:586
  push {r0, r1}
     a76:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:587
    bl um_star
     a78:	f7ff ff8b 	bl	992 <Code_111>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:588
  pop {r0, r1}
     a7c:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:590
  @ ( d c b a  a*c-Low a*c-High )
  popda r3 @ a*c-High
     a7e:	0033      	movs	r3, r6
     a80:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:591
  popda r2 @ a*c-Low
     a82:	0032      	movs	r2, r6
     a84:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:595

  @ ( d c b a )

  pushdatos
     a86:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:596
  ldr tos, [psp, #0]    @ a
     a8a:	683e      	ldr	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:597
  pushdatos
     a8c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:598
  ldr tos, [psp, #12+4] @ d
     a90:	693e      	ldr	r6, [r7, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:600

  push {r0, r1, r2, r3}
     a92:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:601
    bl um_star
     a94:	f7ff ff7d 	bl	992 <Code_111>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:602
  pop {r0, r1, r2, r3}
     a98:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:605
  @ ( d c b a  a*d-Low a*d-High )

  adds r2, tos @ a*c-Low + a*d-High
     a9a:	1992      	adds	r2, r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:606
  adcs r3, r4  @ Carry
     a9c:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:607
  drop
     a9e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:609

  adds r1, tos @ a*d-Low + b*d-High
     aa0:	1989      	adds	r1, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:610
  adcs r2, r4  @ Carry
     aa2:	4162      	adcs	r2, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:611
  adcs r3, r4  @ Carry
     aa4:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:612
  drop
     aa6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:616

  @ ( d c b a )

  pushdatos
     aa8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:617
  ldr tos, [psp, #4]    @ b
     aac:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:618
  pushdatos
     aae:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:619
  ldr tos, [psp, #8+4]  @ c
     ab2:	68fe      	ldr	r6, [r7, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:621

  push {r0, r1, r2, r3}
     ab4:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:622
    bl um_star
     ab6:	f7ff ff6c 	bl	992 <Code_111>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:623
  pop {r0, r1, r2, r3}
     aba:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:626
  @ ( d c b a  b*c-Low b*c-High )

  adds r2, tos @ a*c-Low + b*c-High + a*d-High
     abc:	1992      	adds	r2, r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:627
  adcs r3, r4  @ Carry
     abe:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:628
  drop
     ac0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:630

  adds r1, tos @ b*c-Low + a*d-Low + b*d-High
     ac2:	1989      	adds	r1, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:631
  adcs r2, r4  @ Carry
     ac4:	4162      	adcs	r2, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:632
  adcs r3, r4  @ Carry
     ac6:	4163      	adcs	r3, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:633
  drop
     ac8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:636

  @ ( d c b tos: a )
  movs tos, r3
     aca:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:637
  str r2, [psp, #0]
     acc:	603a      	str	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:638
  str r1, [psp, #4]
     ace:	6079      	str	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:639
  str r0, [psp, #8]
     ad0:	60b8      	str	r0, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:641

  pop {r4, pc}
     ad2:	bd10      	pop	{r4, pc}

00000ad4 <Dictionary_133>:
Dictionary_133():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:641
     ad4:	00000af6 	.word	0x00000af6
     ad8:	2a020043 	.word	0x2a020043
     adc:	2f          	.byte	0x2f
	...

00000ade <Code_133>:
Code_133():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:648

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "*/" @ Signed scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
     ade:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:649
  to_r
     ae0:	b440      	push	{r6}
     ae2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:650
  bl m_star
     ae4:	f7ff ff84 	bl	9f0 <Code_113>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:651
  r_from
     ae8:	f847 6d04 	str.w	r6, [r7, #-4]!
     aec:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:652
  bl m_slash_mod
     aee:	f000 f84c 	bl	b8a <Code_156>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:653
  nip
     af2:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:654
  pop {pc}
     af4:	bd00      	pop	{pc}

00000af6 <Dictionary_138>:
Dictionary_138():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:654
     af6:	0b18      	.short	0x0b18
     af8:	00430000 	.word	0x00430000
     afc:	6d2f2a05 	.word	0x6d2f2a05
     b00:	646f      	.short	0x646f

00000b02 <Code_138>:
Code_138():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:660

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "*/mod" @ Signed scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
     b02:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:661
  to_r
     b04:	b440      	push	{r6}
     b06:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:662
  bl m_star
     b08:	f7ff ff72 	bl	9f0 <Code_113>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:663
  r_from
     b0c:	f847 6d04 	str.w	r6, [r7, #-4]!
     b10:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:664
  bl m_slash_mod
     b12:	f000 f83a 	bl	b8a <Code_156>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:665
  pop {pc}
     b16:	bd00      	pop	{pc}

00000b18 <Dictionary_142>:
Dictionary_142():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:665
     b18:	00000b3a 	.word	0x00000b3a
     b1c:	75030043 	.word	0x75030043
     b20:	2f2a      	.short	0x2f2a

00000b22 <Code_142>:
Code_142():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:672
@ : u*/  ( u1 u2 u3 -- u1 * u2 / u3 )  >r um* r> um/mod nip 3-foldable ;
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "u*/" @ Unsigned scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
     b22:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:673
  to_r
     b24:	b440      	push	{r6}
     b26:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:674
  bl um_star
     b28:	f7ff ff33 	bl	992 <Code_111>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:675
  r_from
     b2c:	f847 6d04 	str.w	r6, [r7, #-4]!
     b30:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:676
  bl um_slash_mod
     b32:	f000 f81b 	bl	b6c <Code_151>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:677
  nip
     b36:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:678
  pop {pc}
     b38:	bd00      	pop	{pc}

00000b3a <Dictionary_147>:
Dictionary_147():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:678
     b3a:	0b5e      	.short	0x0b5e
     b3c:	00430000 	.word	0x00430000
     b40:	2f2a7506 	.word	0x2f2a7506
     b44:	6f6d      	.short	0x6f6d
     b46:	64          	.byte	0x64
	...

00000b48 <Code_147>:
Code_147():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:684

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "u*/mod" @ Unsigned scalar
  @ ( u1 u2 u3 -- u1*u2/u3 ) With double length intermediate result
@------------------------------------------------------------------------------
  push {lr}
     b48:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:685
  to_r
     b4a:	b440      	push	{r6}
     b4c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:686
  bl um_star
     b4e:	f7ff ff20 	bl	992 <Code_111>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:687
  r_from
     b52:	f847 6d04 	str.w	r6, [r7, #-4]!
     b56:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:688
  bl um_slash_mod
     b58:	f000 f808 	bl	b6c <Code_151>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:689
  pop {pc}
     b5c:	bd00      	pop	{pc}

00000b5e <Dictionary_151>:
Dictionary_151():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:689
     b5e:	0b7e      	.short	0x0b7e
     b60:	00430000 	.word	0x00430000
     b64:	2f6d7506 	.word	0x2f6d7506
     b68:	6f6d      	.short	0x6f6d
     b6a:	64          	.byte	0x64
	...

00000b6c <Code_151>:
um_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:696
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "um/mod"
um_slash_mod: @ ( ud u -- u u ) Dividend Divisor -- Rest Ergebnis
             @ 64/32 = 32 Rest 32
@------------------------------------------------------------------------------
  push {lr}
     b6c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:697
  pushdaconst 0
     b6e:	f847 6d04 	str.w	r6, [r7, #-4]!
     b72:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:698
  bl ud_slash_mod
     b74:	f000 f819 	bl	baa <Code_160>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:699
  drop
     b78:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:700
  nip
     b7a:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:701
  pop {pc}
     b7c:	bd00      	pop	{pc}

00000b7e <Dictionary_156>:
Dictionary_156():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:701
     b7e:	0b9c      	.short	0x0b9c
     b80:	00430000 	.word	0x00430000
     b84:	6d2f6d05 	.word	0x6d2f6d05
     b88:	646f      	.short	0x646f

00000b8a <Code_156>:
m_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:708
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_3, "m/mod"
              @ Signed symmetric divide 64/32 = 32 remainder 32
m_slash_mod:  @ ( d n -- n n )
@------------------------------------------------------------------------------
  push {lr}
     b8a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:709
  pushdatos                 @ s>d
     b8c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:710
  movs tos, tos, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
     b90:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:711
  bl d_slash_mod
     b92:	f000 f832 	bl	bfa <Code_162>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:712
  drop
     b96:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:713
  nip
     b98:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:714
  pop {pc}
     b9a:	bd00      	pop	{pc}

00000b9c <Dictionary_160>:
Dictionary_160():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:714
     b9c:	00000bee 	.word	0x00000bee
     ba0:	75060044 	.word	0x75060044
     ba4:	6f6d2f64 	.word	0x6f6d2f64
     ba8:	64          	.byte	0x64
	...

00000baa <Code_160>:
ud_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:751
         @ Unsigned divide 64/64 = 64 remainder 64
         @ ( ud1 ud2 -- ud ud)
         @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
@------------------------------------------------------------------------------
ud_slash_mod:
   push {r4, r5}
     baa:	b430      	push	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:760


   @ Shift-High Shift-Low Dividend-High Dividend-Low
   @         r3        r2            r1           r0

   movs r3, #0
     bac:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:761
   movs r2, #0
     bae:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:762
   ldr  r1, [psp, #4]
     bb0:	6879      	ldr	r1, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:763
   ldr  r0, [psp, #8]
     bb2:	68b8      	ldr	r0, [r7, #8]

00000bb4 <ud_slash_mod_internal>:
ud_slash_mod_internal():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:769

   @ Divisor-High Divisor-Low
   @          r5           r4

ud_slash_mod_internal:
   movs r5, tos
     bb4:	0035      	movs	r5, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:770
   ldr  r4, [psp, #0]
     bb6:	683c      	ldr	r4, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:773

   @ For this long division, we need 64 individual division steps.
   movs tos, #64
     bb8:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:775

3: division_step
     bba:	0040      	lsls	r0, r0, #1
     bbc:	4149      	adcs	r1, r1
     bbe:	4152      	adcs	r2, r2
     bc0:	415b      	adcs	r3, r3
     bc2:	42ab      	cmp	r3, r5
     bc4:	d802      	bhi.n	bcc <ud_slash_mod_internal+0x18>
     bc6:	d304      	bcc.n	bd2 <ud_slash_mod_internal+0x1e>
     bc8:	42a2      	cmp	r2, r4
     bca:	d302      	bcc.n	bd2 <ud_slash_mod_internal+0x1e>
     bcc:	1b12      	subs	r2, r2, r4
     bce:	41ab      	sbcs	r3, r5
     bd0:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:776
   subs tos, #1
     bd2:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:777
   bne 3b
     bd4:	d1f1      	bne.n	bba <ud_slash_mod_internal+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:780

   @ Now place all values to their destination.
   movs tos, r1       @ Result-High
     bd6:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:781
   str  r0, [psp, #0] @ Result-Low
     bd8:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:782
   str  r3, [psp, #4] @ Remainder-High
     bda:	607b      	str	r3, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:783
   str  r2, [psp, #8] @ Remainder-Low
     bdc:	60ba      	str	r2, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:785

   pop {r4, r5}
     bde:	bc30      	pop	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:786
   bx lr
     be0:	4770      	bx	lr

00000be2 <uf_slash_mod>:
uf_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:794
@  Wortbirne Flag_visible|Flag_foldable_4, "uf/mod" @ Internal helper only.
uf_slash_mod: @ Divide 64/64 = 64 Remainder 64. Puts decimal point in the middle. Overflow possible.
         @ ( ud1 ud2 -- ud ud)
         @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
@------------------------------------------------------------------------------
   push {r4, r5}
     be2:	b430      	push	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:796

   movs r3, #0
     be4:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:797
   ldr  r2, [psp, #4]
     be6:	687a      	ldr	r2, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:798
   ldr  r1, [psp, #8]
     be8:	68b9      	ldr	r1, [r7, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:799
   movs r0, #0
     bea:	2000      	movs	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:801

   b.n ud_slash_mod_internal
     bec:	e7e2      	b.n	bb4 <ud_slash_mod_internal>

00000bee <Dictionary_162>:
Dictionary_162():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:801
     bee:	0c64      	.short	0x0c64
     bf0:	00440000 	.word	0x00440000
     bf4:	6d2f6405 	.word	0x6d2f6405
     bf8:	646f      	.short	0x646f

00000bfa <Code_162>:
d_slash_mod():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:810
              @ Signed symmetric divide 64/64 = 64 remainder 64
              @ ( d1 d2 -- d d )
d_slash_mod:  @ ( 1L 1H 2L tos: 2H -- Rem-L Rem-H Quot-L tos: Quot-H )
@------------------------------------------------------------------------------
  @ Check Divisor
  push {lr}
     bfa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:811
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     bfc:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:812
  beq 2f
     bfe:	d019      	beq.n	c34 <Code_162+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:814
    @ ? / -
    bl dnegate
     c00:	f7ff fe56 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:815
    bl dswap
     c04:	f7ff fd33 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:816
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     c08:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:817
    beq 1f
     c0a:	d00c      	beq.n	c26 <Code_162+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:819
    @ - / -
    bl dnegate
     c0c:	f7ff fe50 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:820
    bl dswap
     c10:	f7ff fd2d 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:821
    bl ud_slash_mod
     c14:	f7ff ffc9 	bl	baa <Code_160>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:823

    bl dswap
     c18:	f7ff fd29 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:824
    bl dnegate @ Negative remainder
     c1c:	f7ff fe48 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:825
    bl dswap
     c20:	f7ff fd25 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:826
    pop {pc}
     c24:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:829

1:  @ + / -
    bl dswap
     c26:	f7ff fd22 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:830
    bl ud_slash_mod
     c2a:	f7ff ffbe 	bl	baa <Code_160>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:831
    bl dnegate  @ Negative result
     c2e:	f7ff fe3f 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:832
    pop {pc}
     c32:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:835

2:  @ ? / +
    bl dswap
     c34:	f7ff fd1b 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:836
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     c38:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:837
    beq 3f
     c3a:	d00e      	beq.n	c5a <Code_162+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:839
    @ - / +
    bl dnegate
     c3c:	f7ff fe38 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:840
    bl dswap
     c40:	f7ff fd15 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:842

    bl ud_slash_mod
     c44:	f7ff ffb1 	bl	baa <Code_160>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:844

    bl dnegate @ Negative result
     c48:	f7ff fe32 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:845
    bl dswap
     c4c:	f7ff fd0f 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:846
    bl dnegate @ Negative remainder
     c50:	f7ff fe2e 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:847
    bl dswap
     c54:	f7ff fd0b 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:848
    pop {pc}
     c58:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:851

3:  @ + / +
    bl dswap
     c5a:	f7ff fd08 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:852
    bl ud_slash_mod
     c5e:	f7ff ffa4 	bl	baa <Code_160>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:853
    pop {pc}
     c62:	bd00      	pop	{pc}

00000c64 <Dictionary_163>:
Dictionary_163():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:853
     c64:	00000c7a 	.word	0x00000c7a
     c68:	64020044 	.word	0x64020044
     c6c:	2f          	.byte	0x2f
	...

00000c6e <Code_163>:
Code_163():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:858

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_4, "d/"
@------------------------------------------------------------------------------
  push {lr}
     c6e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:859
  bl d_slash_mod
     c70:	f7ff ffc3 	bl	bfa <Code_162>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:860
  bl dnip
     c74:	f7ff fd1e 	bl	6b4 <Code_73>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:861
  pop {pc}
     c78:	bd00      	pop	{pc}

00000c7a <Dictionary_164>:
Dictionary_164():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:861
     c7a:	0cc2      	.short	0x0cc2
     c7c:	00440000 	.word	0x00440000
     c80:	6602      	.short	0x6602
     c82:	2a          	.byte	0x2a
	...

00000c84 <Code_164>:
Code_164():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:874
  Wortbirne Flag_visible|Flag_foldable_4, "f*"
f_star: @ Signed multiply s31.32
        @ ( fi fi -- fi )
        @ Overflow possible. Sign wrong in this case.
@------------------------------------------------------------------------------
  push {lr}
     c84:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:875
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     c86:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:876
  beq 1f
     c88:	d00d      	beq.n	ca6 <Code_164+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:878
  @ - * ?
    bl dnegate
     c8a:	f7ff fe11 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:879
    bl dswap
     c8e:	f7ff fcee 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:880
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     c92:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:881
    beq 2f @ - * +
     c94:	d00d      	beq.n	cb2 <Code_164+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:884

    @ - * -
    bl dnegate
     c96:	f7ff fe0b 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:887

3:  @ + * +, - * -
    bl udm_star
     c9a:	f7ff fed8 	bl	a4e <Code_116>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:889
    @ ( LL L H HH )
    drop
     c9e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:890
    ldmia psp!, {r0}
     ca0:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:891
    str r0, [psp]
     ca2:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:893
    @ ( L H )
    pop {pc}
     ca4:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:896

1:@ + * ?
    bl dswap
     ca6:	f7ff fce2 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:897
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     caa:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:898
    beq 3b @ + * +
     cac:	d0f5      	beq.n	c9a <Code_164+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:900

    bl dnegate
     cae:	f7ff fdff 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:903

    @ - * + or + * -
2:  bl udm_star
     cb2:	f7ff fecc 	bl	a4e <Code_116>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:905
    @ ( LL L H HH )
    drop
     cb6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:906
    ldmia psp!, {r0}
     cb8:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:907
    str r0, [psp]
     cba:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:909
    @ ( L H )
    bl dnegate
     cbc:	f7ff fdf8 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:910
  pop {pc}
     cc0:	bd00      	pop	{pc}

00000cc2 <Dictionary_167>:
Dictionary_167():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:910
     cc2:	0d0e      	.short	0x0d0e
     cc4:	00440000 	.word	0x00440000
     cc8:	6602      	.short	0x6602
     cca:	2f          	.byte	0x2f
	...

00000ccc <Code_167>:
Code_167():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:917
@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_4, "f/"
  @ Signed divide for s31.32. Overflow possible. Sign wrong in this case.
@------------------------------------------------------------------------------
  @ Take care of sign ! ( 1L 1H 2L 2H - EL EH )
  push {lr}
     ccc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:918
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     cce:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:919
  beq 2f
     cd0:	d00e      	beq.n	cf0 <Code_167+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:921
  @ ? / -
    bl dnegate
     cd2:	f7ff fded 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:922
    bl dswap
     cd6:	f7ff fcca 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:923
    movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     cda:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:924
    beq 3f @ + / -
     cdc:	d00e      	beq.n	cfc <Code_167+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:927

    @ - / -
    bl dnegate
     cde:	f7ff fde7 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:928
1:  bl dswap @ - / - or + / +
     ce2:	f7ff fcc4 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:929
    bl uf_slash_mod
     ce6:	f7ff ff7c 	bl	be2 <uf_slash_mod>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:930
    bl dnip
     cea:	f7ff fce3 	bl	6b4 <Code_73>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:931
    pop {pc}
     cee:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:934

2:@ ? / +
  bl dswap
     cf0:	f7ff fcbd 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:935
  movs r0, tos, asr #31 @ Turn MSB into 0xffffffff or 0x00000000
     cf4:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:936
  beq 1b @ + / +
     cf6:	d0f4      	beq.n	ce2 <Code_167+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:939

  @ - / +
  bl dnegate
     cf8:	f7ff fdda 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:940
3:bl dswap @ - / + or + / -
     cfc:	f7ff fcb7 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:941
  bl uf_slash_mod
     d00:	f7ff ff6f 	bl	be2 <uf_slash_mod>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:942
  bl dnegate
     d04:	f7ff fdd4 	bl	8b0 <Code_100>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:943
  bl dnip
     d08:	f7ff fcd4 	bl	6b4 <Code_73>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:944
  pop {pc}
     d0c:	bd00      	pop	{pc}

00000d0e <Dictionary_168>:
Dictionary_168():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:944
     d0e:	0d56      	.short	0x0d56
     d10:	02200000 	.word	0x02200000
     d14:	3202      	.short	0x3202
     d16:	21          	.byte	0x21
	...

00000d18 <Code_168>:
Code_168():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:954
@------------------------------------------------------------------------------

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2!" @ Store ( d addr -- )
@------------------------------------------------------------------------------
  ldmia psp!, {r1, r2}
     d18:	cf06      	ldmia	r7!, {r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:955
  str r1, [tos]
     d1a:	6031      	str	r1, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:956
  str r2, [tos, #4]
     d1c:	6072      	str	r2, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:957
  drop
     d1e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:958
  bx lr
     d20:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:960

    push {lr}
     d22:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:961
    bl expect_three_elements
     d24:	f7ff fbef 	bl	506 <expect_three_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:963

    ldr r1, [r0, #offset_state_tos]
     d28:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:964
    ldr r2, [r0, #offset_constant_tos]
     d2a:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:965
    push {r1, r2}
     d2c:	b406      	push	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:967

    bl allocator_4store @ High-Teil wegstauen.
     d2e:	f000 fe0c 	bl	194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:970

    @ Das Schreiben sollte keinen der Register mit Ausnahme der Konstantenregister verändern.
    bl befreie_tos
     d32:	f7ff faca 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:971
    pop {r1, r2}
     d36:	bc06      	pop	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:972
    str r1, [r0, #offset_state_tos]
     d38:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:974

    cmp r1, #constant
     d3a:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:975
    beq 1f
     d3c:	d006      	beq.n	d4c <Code_168+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:977
      @ Tos ist im Register - dazu kann ich dann einfach einen anderen Opcode verwenden:
      pushdaconstw 0x6040 @ str r0, [r0, #4] Opcode
     d3e:	f847 6d04 	str.w	r6, [r7, #-4]!
     d42:	f246 0640 	movw	r6, #24640	; 0x6040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:978
      bl allocator_4store_anderer_opcode
     d46:	f000 fe04 	bl	1952 <allocator_4store_anderer_opcode>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:979
      pop {pc}
     d4a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:982

1:  @ Tos ist eine Konstante ! Wie fein :-)
    adds r2, #4
     d4c:	3204      	adds	r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:983
    str r2, [r0, #offset_constant_tos]
     d4e:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:984
    bl allocator_4store
     d50:	f000 fdfb 	bl	194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:985
    pop {pc}
     d54:	bd00      	pop	{pc}

00000d56 <Dictionary_172>:
Dictionary_172():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:985
     d56:	0da0      	.short	0x0da0
     d58:	02200000 	.word	0x02200000
     d5c:	3202      	.short	0x3202
     d5e:	40          	.byte	0x40
	...

00000d60 <Code_172>:
Code_172():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:990

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "2@" @ Fetch ( addr -- d )
@------------------------------------------------------------------------------
  subs psp, #4
     d60:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:991
  ldr r0, [tos, #4]
     d62:	6870      	ldr	r0, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:992
  str r0, [psp]
     d64:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:993
  ldr tos, [tos]
     d66:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:994
  bx lr
     d68:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:996

    push {lr}
     d6a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:997
    bl dup_allocator
     d6c:	f000 f8c8 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:999

    ldr r1, [r0, #offset_state_tos]
     d70:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1000
    cmp r1, #constant
     d72:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1001
    beq 1f
     d74:	d00a      	beq.n	d8c <Code_172+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1004
      @ TOS ist ein Register.
      @ So wird es Zeit für einen Register, #4 Opcode !
      pushdaconstw 0x6840 @ ldr r0, [r0, #4] Opcode
     d76:	f847 6d04 	str.w	r6, [r7, #-4]!
     d7a:	f646 0640 	movw	r6, #26688	; 0x6840
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1005
      bl allocator_4fetch_anderer_opcode
     d7e:	f000 fdc5 	bl	190c <allocator_4fetch_anderer_opcode>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1007

      bl swap_allocator
     d82:	f000 f8f2 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1008
      bl allocator_4fetch
     d86:	f000 fdbd 	bl	1904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1009
      pop {pc}
     d8a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1012

1:  @ TOS ist eine Konstante. Kann sie also wunderbar weiterverwenden ! Ergibt aber einzeln eine lange Aufräum-Sequenz, falls r6 nicht frei ist.
    ldr r1, [r0, #offset_constant_tos]
     d8c:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1013
    adds r1, #4
     d8e:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1014
    str r1, [r0, #offset_constant_tos]
     d90:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1015
    bl allocator_4fetch
     d92:	f000 fdb7 	bl	1904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1017

    bl swap_allocator
     d96:	f000 f8e8 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1018
    bl allocator_4fetch
     d9a:	f000 fdb3 	bl	1904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1019
    pop {pc}
     d9e:	bd00      	pop	{pc}

00000da0 <Dictionary_175>:
Dictionary_175():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1019
     da0:	00000db4 	.word	0x00000db4
     da4:	64030044 	.word	0x64030044
     da8:	3c75      	.short	0x3c75

00000daa <Code_175>:
Code_175():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1031
Wortbirne Flag_visible|Flag_foldable_4, "du<"
  @ ( 2L 2H 1L 1H -- Flag )
  @   r2 r1 r0 tos
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
     daa:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1032
  subs r2, r0    @  Low-part first
     dac:	1a12      	subs	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1033
  sbcs r1, tos   @ High-part with carry
     dae:	41b1      	sbcs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1035

  sbcs tos, tos  @ Create carry flag on TOS
     db0:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1036
  bx lr
     db2:	4770      	bx	lr

00000db4 <Dictionary_176>:
Dictionary_176():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1036
     db4:	00000dc8 	.word	0x00000dc8
     db8:	64030044 	.word	0x64030044
     dbc:	3e75      	.short	0x3e75

00000dbe <Code_176>:
Code_176():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1042

@------------------------------------------------------------------------------
Wortbirne Flag_visible|Flag_foldable_4, "du>"  @ Just swapped the order of registers
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
     dbe:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1043
  subs r0, r2    @  Low-part first
     dc0:	1a80      	subs	r0, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1044
  sbcs tos, r1   @ High-part with carry
     dc2:	418e      	sbcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1046

  sbcs tos, tos  @ Create carry flag on TOS
     dc4:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1047
  bx lr
     dc6:	4770      	bx	lr

00000dc8 <Dictionary_177>:
Dictionary_177():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1047
     dc8:	00000dde 	.word	0x00000dde
     dcc:	64020044 	.word	0x64020044
     dd0:	3c          	.byte	0x3c
	...

00000dd2 <Code_177>:
Code_177():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1054

@------------------------------------------------------------------------------
Wortbirne Flag_visible|Flag_foldable_4, "d<"
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
     dd2:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1055
  subs r2, r0    @  Low-part first
     dd4:	1a12      	subs	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1056
  sbcs r1, tos   @ High-part with carry
     dd6:	41b1      	sbcs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1058

  blt 1f
     dd8:	db0c      	blt.n	df4 <Code_178+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1059
  movs tos, #0
     dda:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1060
  bx lr
     ddc:	4770      	bx	lr

00000dde <Dictionary_178>:
Dictionary_178():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1060
     dde:	0dfa      	.short	0x0dfa
     de0:	00440000 	.word	0x00440000
     de4:	6402      	.short	0x6402
     de6:	3e          	.byte	0x3e
	...

00000de8 <Code_178>:
Code_178():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1066

@------------------------------------------------------------------------------
Wortbirne Flag_visible|Flag_foldable_4, "d>"  @ Just swapped the order of registers
@------------------------------------------------------------------------------

  ldm psp!, {r0, r1, r2}
     de8:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1067
  subs r0, r2    @  Low-part first
     dea:	1a80      	subs	r0, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1068
  sbcs tos, r1   @ High-part with carry
     dec:	418e      	sbcs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1070

  blt 1f
     dee:	db01      	blt.n	df4 <Code_178+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1071
  movs tos, #0
     df0:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1072
  bx lr
     df2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1074

1:movs tos, #0   @ True
     df4:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1075
  mvns tos, tos
     df6:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1076
  bx lr
     df8:	4770      	bx	lr

00000dfa <Dictionary_179>:
Dictionary_179():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1076
     dfa:	0e16      	.short	0x0e16
     dfc:	02620000 	.word	0x02620000
     e00:	3c306403 	.word	0x3c306403

00000e04 <Code_179>:
Code_179():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1081

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "d0<" @ ( 1L 1H -- Flag ) Is double number negative ?
@------------------------------------------------------------------------------
  adds psp, #4
     e04:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1082
  movs TOS, TOS, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
     e06:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1083
  bx lr
     e08:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1085

    push {lr}
     e0a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1086
    bl nip_allocator
     e0c:	f000 f8c0 	bl	f90 <nip_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1087
    bl alloc_nullkleiner
     e10:	f000 fb58 	bl	14c4 <alloc_nullkleiner>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1088
    pop {pc}
     e14:	bd00      	pop	{pc}

00000e16 <Dictionary_180>:
Dictionary_180():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1088
     e16:	0e3e      	.short	0x0e3e
     e18:	02620000 	.word	0x02620000
     e1c:	3d306403 	.word	0x3d306403

00000e20 <Code_180>:
Code_180():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1093

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "d0=" @ ( 1L 1H -- Flag )
@------------------------------------------------------------------------------
  ldm psp!, {r0}
     e20:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1094
  orrs tos, r0
     e22:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1095
  subs tos, #1
     e24:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1096
  sbcs tos, tos
     e26:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1097
  bx lr
     e28:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1099

    push {lr}
     e2a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1100
    pushdaconstw 0x4300 @ orrs r0, r0      Opcode
     e2c:	f847 6d04 	str.w	r6, [r7, #-4]!
     e30:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1101
    bl alloc_kommutativ
     e34:	f000 fabd 	bl	13b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1102
    bl allocator_equal_zero
     e38:	f000 fb1e 	bl	1478 <allocator_equal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1103
    pop {pc}
     e3c:	bd00      	pop	{pc}

00000e3e <Dictionary_183>:
Dictionary_183():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1103
     e3e:	0e64      	.short	0x0e64
     e40:	02440000 	.word	0x02440000
     e44:	3e3c6403 	.word	0x3e3c6403

00000e48 <Code_183>:
Code_183():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1108

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_4|Flag_allocator, "d<>" @ ( 1L 1H 2L 2H -- Flag )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
     e48:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1110

  eors r0, r2
     e4a:	4050      	eors	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1111
  eors tos, r1
     e4c:	404e      	eors	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1112
  orrs tos, r0
     e4e:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1114

  subs tos, #1
     e50:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1115
  sbcs tos, tos
     e52:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1116
  mvns tos, tos
     e54:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1118

  bx lr
     e56:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1120

    push {lr}
     e58:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1121
    bl dgleichungleich_common
     e5a:	f000 f815 	bl	e88 <dgleichungleich_common>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1122
    bl allocator_unequal_zero
     e5e:	f000 fb1f 	bl	14a0 <allocator_unequal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1123
    pop {pc}
     e62:	bd00      	pop	{pc}

00000e64 <Dictionary_184>:
Dictionary_184():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1123
     e64:	00000eac 	.word	0x00000eac
     e68:	64020244 	.word	0x64020244
     e6c:	3d          	.byte	0x3d
	...

00000e6e <Code_184>:
Code_184():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1128

@------------------------------------------------------------------------------
  Wortbirne Flag_foldable_4|Flag_allocator, "d=" @ ( 1L 1H 2L 2H -- Flag )
@------------------------------------------------------------------------------
  ldm psp!, {r0, r1, r2}
     e6e:	cf07      	ldmia	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1130

  eors r0, r2
     e70:	4050      	eors	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1131
  eors tos, r1
     e72:	404e      	eors	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1132
  orrs tos, r0
     e74:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1134

  subs tos, #1
     e76:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1135
  sbcs tos, tos
     e78:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1137

  bx lr
     e7a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1139

    push {lr}
     e7c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1140
    bl dgleichungleich_common
     e7e:	f000 f803 	bl	e88 <dgleichungleich_common>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1141
    bl allocator_equal_zero
     e82:	f000 faf9 	bl	1478 <allocator_equal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1142
    pop {pc}
     e86:	bd00      	pop	{pc}

00000e88 <dgleichungleich_common>:
dgleichungleich_common():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1145

dgleichungleich_common:
  push {lr}
     e88:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1146
  bl expect_four_elements @ ( 1L 1H 2L 2H )
     e8a:	f7ff fb4c 	bl	526 <expect_four_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1147
  bl rot_allocator        @ ( 1L 2L 2H 1H )
     e8e:	f000 f8c1 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1148
  bl xor_allocator        @ ( 1L 2L H )
     e92:	f000 f9c3 	bl	121c <xor_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1149
  bl minusrot_allocator   @ ( H 1L 2L )
     e96:	f000 f8d9 	bl	104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1150
  bl xor_allocator        @ ( L H )
     e9a:	f000 f9bf 	bl	121c <xor_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1151
  bl or_allocator         @ ( ? )
     e9e:	f000 f9b0 	bl	1202 <or_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:1152
  pop {pc}
     ea2:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:432
    ldr tos, =0xFBA00000
     ea4:	fba00000 	.word	0xfba00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:502
    ldr tos, =0xFB800000
     ea8:	fb800000 	.word	0xfb800000

00000eac <Dictionary_185>:
Dictionary_185():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/double.s:502
     eac:	00000ebe 	.word	0x00000ebe
     eb0:	73030020 	.word	0x73030020
     eb4:	4070      	.short	0x4070

00000eb6 <Code_185>:
Code_185():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:27
@ Stack pointers

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "sp@" @ ( -- a-addr )
@ -----------------------------------------------------------------------------
  pushdatos
     eb6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:28
  movs tos, psp
     eba:	003e      	movs	r6, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:29
  bx lr
     ebc:	4770      	bx	lr

00000ebe <Dictionary_187>:
Dictionary_187():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:29
     ebe:	0ece      	.short	0x0ece
     ec0:	00200000 	.word	0x00200000
     ec4:	21707303 	.word	0x21707303

00000ec8 <Code_187>:
Code_187():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:34

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "sp!" @ ( a-addr -- )
@ -----------------------------------------------------------------------------
  movs psp, tos
     ec8:	0037      	movs	r7, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:35
  ldm psp!, {tos}
     eca:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:36
  bx lr
     ecc:	4770      	bx	lr

00000ece <Dictionary_188>:
Dictionary_188():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:36
     ece:	0ee0      	.short	0x0ee0
     ed0:	00200000 	.word	0x00200000
     ed4:	40707203 	.word	0x40707203

00000ed8 <Code_188>:
Code_188():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:41

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "rp@" @ ( -- a-addr )
@ -----------------------------------------------------------------------------
  pushdatos
     ed8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:42
  mov tos, sp
     edc:	466e      	mov	r6, sp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:43
  bx lr
     ede:	4770      	bx	lr

00000ee0 <Dictionary_190>:
Dictionary_190():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:43
     ee0:	00000ef0 	.word	0x00000ef0
     ee4:	72030020 	.word	0x72030020
     ee8:	2170      	.short	0x2170

00000eea <Code_190>:
Code_190():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:48

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "rp!" @ ( a-addr -- )
@ -----------------------------------------------------------------------------
  mov sp, tos
     eea:	46b5      	mov	sp, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:49
  ldm psp!, {tos}
     eec:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:50
  bx lr
     eee:	4770      	bx	lr

00000ef0 <Dictionary_191>:
Dictionary_191():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:50
     ef0:	00000f14 	.word	0x00000f14
     ef4:	64030261 	.word	0x64030261
     ef8:	7075      	.short	0x7075

00000efa <Code_191>:
Code_191():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:57
@ Stack juggling

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "dup" @ ( x -- x x )
@ -----------------------------------------------------------------------------
  dup
     efa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:58
  bx lr
     efe:	4770      	bx	lr

00000f00 <dup_allocator>:
dup_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:61

dup_allocator:
    push {r1, r2, lr} @ Spezialeinsprung des Registerallokators:
     f00:	b506      	push	{r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:62
    bl expect_one_element  @ Mindestens ein Wert vorhanden
     f02:	f7ff fae9 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:64

    ldr r1, [r0, #offset_state_tos]
     f06:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:65
    ldr r2, [r0, #offset_constant_tos]
     f08:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:67

    bl befreie_tos
     f0a:	f7ff f9de 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:69

    str r1, [r0, #offset_state_tos]
     f0e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:70
    str r2, [r0, #offset_constant_tos]
     f10:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:72

    pop {r1, r2, pc}
     f12:	bd06      	pop	{r1, r2, pc}

00000f14 <Dictionary_194>:
Dictionary_194():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:72
     f14:	00000f40 	.word	0x00000f40
     f18:	64040261 	.word	0x64040261
     f1c:	6f72      	.short	0x6f72
     f1e:	70          	.byte	0x70
	...

00000f20 <Code_194>:
drop_einsprung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:78

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "drop" @ ( x -- )
drop_einsprung:
@ -----------------------------------------------------------------------------
  drop
     f20:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:79
  bx lr
     f22:	4770      	bx	lr

00000f24 <drop_allocator>:
drop_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:82

drop_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
     f24:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:87
    @ Falten geht von selbst vorher.
    @ Wenn kein Element da ist, generiere den regulären drop-Opcode:
    @ Wenn ein Element da ist, vernichte es und lasse nachrutschen.

    ldr r1, [r0, #offset_state_tos]
     f26:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:88
    cmp r1, #unknown
     f28:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:89
    bne 2f
     f2a:	d106      	bne.n	f3a <drop_allocator+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:91

      pushdaconstw 0x3704 @ adds r7, #4 - Momentan ist TOS auf dem Stack, kann direkt runterwerfen
     f2c:	f847 6d04 	str.w	r6, [r7, #-4]!
     f30:	f243 7604 	movw	r6, #14084	; 0x3704
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:92
      bl hkomma
     f34:	f002 fd34 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:93
      pop {pc}
     f38:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:96

2: @ Es ist ein Element da, das muss ich beachten.
   bl eliminiere_tos
     f3a:	f7ff f9d0 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:97
   pop {pc}
     f3e:	bd00      	pop	{pc}

00000f40 <Dictionary_198>:
Dictionary_198():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:97
     f40:	00000f56 	.word	0x00000f56
     f44:	3f040061 	.word	0x3f040061
     f48:	7564      	.short	0x7564
     f4a:	70          	.byte	0x70
	...

00000f4c <Code_198>:
Code_198():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:102

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline, "?dup" @ ( x -- 0 | x x )
@ -----------------------------------------------------------------------------
  cmp tos, #0
     f4c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:103
  beq 1f
     f4e:	d001      	beq.n	f54 <Code_198+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:104
  pushdatos
     f50:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:105
1:bx lr
     f54:	4770      	bx	lr

00000f56 <Dictionary_200>:
Dictionary_200():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:105
     f56:	0f82      	.short	0x0f82
     f58:	02620000 	.word	0x02620000
     f5c:	61777304 	.word	0x61777304
     f60:	70          	.byte	0x70
	...

00000f62 <Code_200>:
Code_200():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:110

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "swap" @ ( x y -- y x )
@ -----------------------------------------------------------------------------
  ldr r1,  [psp]  @ Load X from the stack, no SP change.
     f62:	6839      	ldr	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:111
  str tos, [psp]  @ Replace it with TOS.
     f64:	603e      	str	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:112
  movs tos, r1    @ And vice versa.
     f66:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:113
  bx lr
     f68:	4770      	bx	lr

00000f6a <swap_allocator>:
swap_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:116

swap_allocator:
    push {r2, r3, lr} @ Spezialeinsprung des Registerallokators:
     f6a:	b50c      	push	{r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:118

    bl expect_two_elements
     f6c:	f7ff fabe 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:121

    @ TOS und NOS vertauschen.
    ldr r2, [r0, #offset_state_tos]
     f70:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:122
    ldr r3, [r0, #offset_state_nos]
     f72:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:123
    str r3, [r0, #offset_state_tos]
     f74:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:124
    str r2, [r0, #offset_state_nos]
     f76:	6082      	str	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:126

    ldr r2, [r0, #offset_constant_tos]
     f78:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:127
    ldr r3, [r0, #offset_constant_nos]
     f7a:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:128
    str r3, [r0, #offset_constant_tos]
     f7c:	6043      	str	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:129
    str r2, [r0, #offset_constant_nos]
     f7e:	60c2      	str	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:131

    pop {r2, r3, pc}
     f80:	bd0c      	pop	{r2, r3, pc}

00000f82 <Dictionary_201>:
Dictionary_201():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:131
     f82:	0fb0      	.short	0x0fb0
     f84:	02620000 	.word	0x02620000
     f88:	70696e03 	.word	0x70696e03

00000f8c <Code_201>:
Code_201():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:136

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "nip" @ ( x y -- x )
@ -----------------------------------------------------------------------------
  nip
     f8c:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:137
  bx lr
     f8e:	4770      	bx	lr

00000f90 <nip_allocator>:
nip_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:140

nip_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
     f90:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:150
    @ 1 Konstante --> TOS weg
    @ Wenn kein Element  da ist, muss ich eins holen und eins löschen.
    @ Wenn  ein Element  da ist, verändere den Stackpointer
    @ Wenn zwei Elemente in Registern sind, vernichte NOS.

    bl expect_one_element @ TOS auf jeden Fall belegen.
     f92:	f7ff faa1 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:152

    ldr r1, [r0, #offset_state_nos]
     f96:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:153
    cmp r1, #unknown
     f98:	291e      	cmp	r1, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:154
    beq 1f
     f9a:	d002      	beq.n	fa2 <nip_allocator+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:156
      @ NOS ist belegt - kann das Element direkt eliminieren
      bl eliminiere_nos
     f9c:	f7ff f9a5 	bl	2ea <eliminiere_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:157
      pop {pc}
     fa0:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:161

1:  @ NOS nicht belegt - lösche einfach das nächste Stackelement, ohne es zu laden
    @ Vernichte also das obere Element auf dem Stack im Speicher, welches dann NOS darstellt.
    pushdaconstw 0x3704 @ adds r7, #4 - Momentan ist NOS auf dem Stack, kann direkt runterwerfen
     fa2:	f847 6d04 	str.w	r6, [r7, #-4]!
     fa6:	f243 7604 	movw	r6, #14084	; 0x3704
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:162
    bl hkomma
     faa:	f002 fcf9 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:163
    pop {pc}
     fae:	bd00      	pop	{pc}

00000fb0 <Dictionary_205>:
Dictionary_205():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:163
     fb0:	00000fd8 	.word	0x00000fd8
     fb4:	6f040262 	.word	0x6f040262
     fb8:	6576      	.short	0x6576
     fba:	72          	.byte	0x72
	...

00000fbc <Code_205>:
Code_205():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:168

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "over" @ ( x y -- x y x )
@ -----------------------------------------------------------------------------
  pushdatos
     fbc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:169
  ldr tos, [psp, #4]
     fc0:	687e      	ldr	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:170
  bx lr
     fc2:	4770      	bx	lr

00000fc4 <over_allocator>:
over_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:173

over_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
     fc4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:175

    bl expect_two_elements
     fc6:	f7ff fa91 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:177

    ldr r1, [r0, #offset_state_nos]
     fca:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:178
    ldr r2, [r0, #offset_constant_nos]
     fcc:	68c2      	ldr	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:180

    bl befreie_tos
     fce:	f7ff f97c 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:182

    str r1, [r0, #offset_state_tos]
     fd2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:183
    str r2, [r0, #offset_constant_tos]
     fd4:	6042      	str	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:185

    pop {pc}
     fd6:	bd00      	pop	{pc}

00000fd8 <Dictionary_207>:
Dictionary_207():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:185
     fd8:	00000ffe 	.word	0x00000ffe
     fdc:	74040262 	.word	0x74040262
     fe0:	6375      	.short	0x6375
     fe2:	6b          	.byte	0x6b
	...

00000fe4 <Code_207>:
Code_207():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:192

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "tuck" @ ( x1 x2 -- x2 x1 x2 )
@ -----------------------------------------------------------------------------
tuck:
  ldm psp!, {r0}
     fe4:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:193
  subs psp, #8
     fe6:	3f08      	subs	r7, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:194
  str tos, [psp, #4]
     fe8:	607e      	str	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:195
  str r0, [psp]
     fea:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:196
  bx lr
     fec:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:198

    push {lr} @ Spezialeinsprung des Registerallokators:
     fee:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:199
    bl expect_two_elements
     ff0:	f7ff fa7c 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:200
    bl dup_allocator
     ff4:	f7ff ff84 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:201
    bl minusrot_allocator
     ff8:	f000 f828 	bl	104c <minusrot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:202
    pop {pc}
     ffc:	bd00      	pop	{pc}

00000ffe <Dictionary_208>:
Dictionary_208():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:202
     ffe:	1034      	.short	0x1034
    1000:	02630000 	.word	0x02630000
    1004:	746f7203 	.word	0x746f7203

00001008 <Code_208>:
Code_208():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:208

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_3|Flag_inline|Flag_allocator, "rot" @ ( x w y -- w y x )
@ -----------------------------------------------------------------------------
rot:
  ldm psp!, {r0, r1}
    1008:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:209
  subs psp, #8
    100a:	3f08      	subs	r7, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:210
  str r0, [psp, #4]
    100c:	6078      	str	r0, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:211
  str tos, [psp]
    100e:	603e      	str	r6, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:212
  movs tos, r1
    1010:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:213
  bx lr
    1012:	4770      	bx	lr

00001014 <rot_allocator>:
rot_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:216

rot_allocator:
    push {r1, r2, r3, lr} @ Spezialeinsprung des Registerallokators:
    1014:	b50e      	push	{r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:217
    bl expect_three_elements
    1016:	f7ff fa76 	bl	506 <expect_three_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:224

    @ TOS --> NOS
    @ NOS --> 3OS
    @ 3OS --> TOS

    ldr r1, [r0, #offset_state_tos]
    101a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:225
    ldr r2, [r0, #offset_state_nos]
    101c:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:226
    ldr r3, [r0, #offset_state_3os]
    101e:	6903      	ldr	r3, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:228

    str r1, [r0, #offset_state_nos]
    1020:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:229
    str r2, [r0, #offset_state_3os]
    1022:	6102      	str	r2, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:230
    str r3, [r0, #offset_state_tos]
    1024:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:232

    ldr r1, [r0, #offset_constant_tos]
    1026:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:233
    ldr r2, [r0, #offset_constant_nos]
    1028:	68c2      	ldr	r2, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:234
    ldr r3, [r0, #offset_constant_3os]
    102a:	6943      	ldr	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:236

    str r1, [r0, #offset_constant_nos]
    102c:	60c1      	str	r1, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:237
    str r2, [r0, #offset_constant_3os]
    102e:	6142      	str	r2, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:238
    str r3, [r0, #offset_constant_tos]
    1030:	6043      	str	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:239
    pop {r1, r2, r3, pc}
    1032:	bd0e      	pop	{r1, r2, r3, pc}

00001034 <Dictionary_209>:
Dictionary_209():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:239
    1034:	00001058 	.word	0x00001058
    1038:	2d040263 	.word	0x2d040263
    103c:	6f72      	.short	0x6f72
    103e:	74          	.byte	0x74
	...

00001040 <Code_209>:
Code_209():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:245

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_3|Flag_inline|Flag_allocator, "-rot" @ ( x w y -- y x w )
@ -----------------------------------------------------------------------------
minusrot:
  ldm psp!, {r0, r1}
    1040:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:246
  subs psp, #8
    1042:	3f08      	subs	r7, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:247
  str tos, [psp, #4]
    1044:	607e      	str	r6, [r7, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:248
  str r1, [psp]
    1046:	6039      	str	r1, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:249
  movs tos, r0
    1048:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:250
  bx lr
    104a:	4770      	bx	lr

0000104c <minusrot_allocator>:
minusrot_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:253

minusrot_allocator:
    push {lr} @ Spezialeinsprung des Registerallokators:
    104c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:254
    bl rot_allocator  @ -rot = rot rot
    104e:	f7ff ffe1 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:255
    bl rot_allocator
    1052:	f7ff ffdf 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:256
    pop {pc}
    1056:	bd00      	pop	{pc}

00001058 <Dictionary_210>:
Dictionary_210():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:256
    1058:	0000106a 	.word	0x0000106a
    105c:	70040020 	.word	0x70040020
    1060:	6369      	.short	0x6369
    1062:	6b          	.byte	0x6b
	...

00001064 <Code_210>:
Code_210():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:266
  .ifdef m0core
  lsls r0, tos, #2
  ldr tos, [psp, r0]
  bx lr
  .else
  ldr tos, [psp, tos, lsl #2]  @ I love ARM. :-)
    1064:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:267
  bx lr
    1068:	4770      	bx	lr

0000106a <Dictionary_211>:
Dictionary_211():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:267
    106a:	1082      	.short	0x1082
    106c:	00000000 	.word	0x00000000
    1070:	70656405 	.word	0x70656405
    1074:	6874      	.short	0x6874

00001076 <Code_211>:
Code_211():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:275
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "depth" @ ( -- Zahl der Elemente, die vorher auf den Datenstack waren )
                                  @ ( -- Number of elements that have been on datastack before )
@ -----------------------------------------------------------------------------
  @ Berechne den Stackfüllstand
  ldr r1, =datenstackanfang @ Anfang laden  Calculate stack fill gauge
    1076:	494f      	ldr	r1, [pc, #316]	; (11b4 <Code_230+0x1c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:276
  subs r1, psp @ und aktuellen Stackpointer abziehen
    1078:	1bc9      	subs	r1, r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:277
  pushdatos
    107a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:278
  asrs tos, r1, #2 @ Durch 4 teilen  Divide through 4 Bytes/element.
    107e:	108e      	asrs	r6, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:279
  bx lr
    1080:	4770      	bx	lr

00001082 <Dictionary_213>:
Dictionary_213():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:279
    1082:	109e      	.short	0x109e
    1084:	00000000 	.word	0x00000000
    1088:	65647206 	.word	0x65647206
    108c:	7470      	.short	0x7470
    108e:	68          	.byte	0x68
	...

00001090 <Code_213>:
Code_213():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:284

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "rdepth"
@ -----------------------------------------------------------------------------
  pushdatos
    1090:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:285
  mov tos, sp
    1094:	466e      	mov	r6, sp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:286
  ldr r1, =returnstackanfang @ Anfang laden  Calculate stack fill gauge
    1096:	4948      	ldr	r1, [pc, #288]	; (11b8 <Code_230+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:287
  subs r1, tos @ und aktuellen Stackpointer abziehen
    1098:	1b89      	subs	r1, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:288
  asrs tos, r1, #2 @ Durch 4 teilen  Divide through 4 Bytes/element.
    109a:	108e      	asrs	r6, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:289
  bx lr
    109c:	4770      	bx	lr

0000109e <Dictionary_215>:
Dictionary_215():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:289
    109e:	10d4      	.short	0x10d4
    10a0:	02200000 	.word	0x02200000
    10a4:	3e02      	.short	0x3e02
    10a6:	72          	.byte	0x72
	...

000010a8 <Code_215>:
Code_215():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:296
@ Returnstack

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, ">r" @ Legt das oberste Element des Datenstacks auf den Returnstack.
@------------------------------------------------------------------------------
  push {tos}
    10a8:	b440      	push	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:297
  ldm psp!, {tos}
    10aa:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:298
  bx lr
    10ac:	4770      	bx	lr

000010ae <allocator_to_r>:
allocator_to_r():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:301

allocator_to_r:
    push {lr}
    10ae:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:302
    bl push_lr_nachholen
    10b0:	f7ff faa5 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:303
    bl expect_one_element
    10b4:	f7ff fa10 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:304
    bl expect_tos_in_register @ Gibt den Register in r1 zurück.
    10b8:	f7ff fa4a 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:306

    pushdaconstw 0xB400 @ push {...}
    10bc:	f847 6d04 	str.w	r6, [r7, #-4]!
    10c0:	f24b 4600 	movw	r6, #46080	; 0xb400
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:308

    movs r2, #1
    10c4:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:309
    lsls r2, r1
    10c6:	408a      	lsls	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:310
    orrs tos, r2
    10c8:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:312

    bl hkomma
    10ca:	f002 fc69 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:313
    bl eliminiere_tos
    10ce:	f7ff f906 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:314
    pop {pc}
    10d2:	bd00      	pop	{pc}

000010d4 <Dictionary_218>:
Dictionary_218():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:314
    10d4:	0000110a 	.word	0x0000110a
    10d8:	72020220 	.word	0x72020220
    10dc:	3e          	.byte	0x3e
	...

000010de <Code_218>:
Code_218():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:319

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "r>" @ Holt das zwischengespeicherte Element aus dem Returnstack zurück
@------------------------------------------------------------------------------
  pushdatos
    10de:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:320
  pop {tos}
    10e2:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:321
  bx lr
    10e4:	4770      	bx	lr

000010e6 <allocator_r_from>:
allocator_r_from():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:324

allocator_r_from:
    push {lr}
    10e6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:325
    bl push_lr_nachholen
    10e8:	f7ff fa89 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:326
    bl befreie_tos
    10ec:	f7ff f8ed 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:327
    bl get_free_register
    10f0:	f7ff f9be 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:328
    str r3, [r0, #offset_state_tos]
    10f4:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:330

    pushdaconstw 0xBC00 @ pop {...}
    10f6:	f847 6d04 	str.w	r6, [r7, #-4]!
    10fa:	f64b 4600 	movw	r6, #48128	; 0xbc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:332

    movs r2, #1
    10fe:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:333
    lsls r2, r3
    1100:	409a      	lsls	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:334
    orrs tos, r2
    1102:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:336

    bl hkomma
    1104:	f002 fc4c 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:337
    pop {pc}
    1108:	bd00      	pop	{pc}

0000110a <Dictionary_222>:
Dictionary_222():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:337
    110a:	1128      	.short	0x1128
    110c:	02200000 	.word	0x02200000
    1110:	7202      	.short	0x7202
    1112:	40          	.byte	0x40
	...

00001114 <Code_222>:
Code_222():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:342

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "r@" @ Kopiert das oberste Element des Returnstacks auf den Datenstack
@------------------------------------------------------------------------------
  pushdatos
    1114:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:343
  ldr tos, [sp]
    1118:	9e00      	ldr	r6, [sp, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:344
  bx lr
    111a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:345
    push {lr}
    111c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:346
    bl push_lr_nachholen
    111e:	f7ff fa6e 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:347
    bl rfetch_allocator
    1122:	f003 f98e 	bl	4442 <rfetch_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:348
    pop {pc}
    1126:	bd00      	pop	{pc}

00001128 <Dictionary_224>:
Dictionary_224():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:348
    1128:	0000114c 	.word	0x0000114c
    112c:	72050220 	.word	0x72050220
    1130:	706f7264 	.word	0x706f7264

00001134 <Code_224>:
Code_224():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:353

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "rdrop" @ Entfernt das oberste Element des Returnstacks
@------------------------------------------------------------------------------
  add sp, #4
    1134:	b001      	add	sp, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:354
  bx lr
    1136:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:355
    push {lr}
    1138:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:356
    bl push_lr_nachholen
    113a:	f7ff fa60 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:357
    pushdaconstw 0xB001  @ Opcode add sp, #4
    113e:	f847 6d04 	str.w	r6, [r7, #-4]!
    1142:	f24b 0601 	movw	r6, #45057	; 0xb001
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:358
    bl hkomma
    1146:	f002 fc2b 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:359
    pop {pc}
    114a:	bd00      	pop	{pc}

0000114c <Dictionary_227>:
Dictionary_227():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:359
    114c:	00001160 	.word	0x00001160
    1150:	72050020 	.word	0x72050020
    1154:	6b636970 	.word	0x6b636970

00001158 <Code_227>:
Code_227():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:364

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_inline, "rpick" @ ( u -- xu R: xu .. x1 x0 -- xu ... x1 x0 )
@ -----------------------------------------------------------------------------
  lsls tos, #2
    1158:	00b6      	lsls	r6, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:365
  add tos, sp
    115a:	446e      	add	r6, sp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:366
  ldr tos, [tos]
    115c:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:367
  bx lr
    115e:	4770      	bx	lr

00001160 <Dictionary_228>:
Dictionary_228():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:367
    1160:	0000118c 	.word	0x0000118c
    1164:	72040000 	.word	0x72040000
    1168:	6c6f      	.short	0x6c6f
    116a:	6c          	.byte	0x6c
	...

0000116c <Code_228>:
roll():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:376
roll:
@ -----------------------------------------------------------------------------
  @ 2 ROLL is equivalent to ROT, 1 ROLL is equivalent to SWAP and 0 ROLL is a null operation.
  @ TOS enthält das Element, welches am Ende nach oben rutschen soll.

  cmp tos, #0 @ No moves ?
    116c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:377
  bne 1f
    116e:	d101      	bne.n	1174 <Code_228+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:378
    drop
    1170:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:379
    bx lr
    1172:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:381

1:lsls r0, tos, #2
    1174:	00b0      	lsls	r0, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:382
  ldr r1, [psp, r0] @ Pick final TOS value temporarily into r1
    1176:	5839      	ldr	r1, [r7, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:403

  @ Lückenadresse = psp + r0

  @ Lege von psp + r0 - 4 an die Stelle psp + r0.

    adds r0, psp
    1178:	19c0      	adds	r0, r0, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:405

2:  subs r3, r0, #4   @ Dies hier noch ein bisschen verschönern ! Funktioniert aber schonmal.
    117a:	1f03      	subs	r3, r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:406
    ldr r2, [r3]
    117c:	681a      	ldr	r2, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:407
    str r2, [r0]
    117e:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:408
    subs r0, #4
    1180:	3804      	subs	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:410

    subs tos, #1
    1182:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:411
    bne 2b
    1184:	d1f9      	bne.n	117a <Code_228+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:413

  adds psp, #4 @ Element entfernen
    1186:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:416

3:@ Finished shifting of stack. Load result into TOS.
  movs tos, r1
    1188:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:417
  bx lr
    118a:	4770      	bx	lr

0000118c <Dictionary_230>:
Dictionary_230():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:417
    118c:	000011bc 	.word	0x000011bc
    1190:	2d050000 	.word	0x2d050000
    1194:	6c6c6f72 	.word	0x6c6c6f72

00001198 <Code_230>:
minusroll():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:426
minusroll: @ Kehrt die Wirkung von roll um.
@ -----------------------------------------------------------------------------
  @ 2 ROLL is equivalent to ROT, 1 ROLL is equivalent to SWAP and 0 ROLL is a null operation.
  @ TOS enthält das Element, welches am Ende nach oben rutschen soll.

  cmp tos, #0 @ No moves ?
    1198:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:427
  bne 1f
    119a:	d101      	bne.n	11a0 <Code_230+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:428
    drop
    119c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:429
    bx lr
    119e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:434


1:@ TOS contains number of moves.

  ldr r0, [psp] @ Das jetztige NOS soll später in die Lücke hinein, wird aber überschrieben.
    11a0:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:441
  @ (  5  4  3  2  1  X   TOS: 4)
  @ (  5  4  4  3  2  1 )
  @ (  5  X  4  3  2  1 )

  @ Beginne direkt beim Stackpointer:
  mov r1, psp
    11a2:	4639      	mov	r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:444

2:@ Mache nun die gewünschte Zahl von Schüben:
  ldr r2, [r1, #4]
    11a4:	684a      	ldr	r2, [r1, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:445
  str r2, [r1]
    11a6:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:446
  adds r1, #4
    11a8:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:447
  subs tos, #1
    11aa:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:448
  bne 2b
    11ac:	d1fa      	bne.n	11a4 <Code_230+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:451

  @ Lege das NOS-Element in die Lücke
  str r0, [r1]
    11ae:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:454

  @ Vergiss den Zähler in TOS
  drop
    11b0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:455
  bx lr
    11b2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:275
  ldr r1, =datenstackanfang @ Anfang laden  Calculate stack fill gauge
    11b4:	20000288 	.word	0x20000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:286
  ldr r1, =returnstackanfang @ Anfang laden  Calculate stack fill gauge
    11b8:	20000388 	.word	0x20000388

000011bc <Dictionary_233>:
Dictionary_233():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/stackjugglers.s:286
    11bc:	000011d6 	.word	0x000011d6
    11c0:	61030262 	.word	0x61030262
    11c4:	646e      	.short	0x646e

000011c6 <Code_233>:
Code_233():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:26

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "and" @ ( x1 x2 -- x1&x2 )
                        @ Combines the top two stack elements using bitwise AND.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    11c6:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:27
  ands tos, r0
    11c8:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:28
  bx lr
    11ca:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:30

  pushdaconstw 0x4000 @ ands r0, r0
    11cc:	f847 6d04 	str.w	r6, [r7, #-4]!
    11d0:	f244 0600 	movw	r6, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:31
  b.n alloc_kommutativ
    11d4:	e0ed      	b.n	13b2 <alloc_kommutativ>

000011d6 <Dictionary_236>:
Dictionary_236():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:31
    11d6:	11f2      	.short	0x11f2
    11d8:	02620000 	.word	0x02620000
    11dc:	63696203 	.word	0x63696203

000011e0 <Code_236>:
Code_236():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:36

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "bic" @ ( x1 x2 -- x1&~x2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    11e0:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:37
  bics r0, tos
    11e2:	43b0      	bics	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:38
  movs tos, r0
    11e4:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:39
  bx lr
    11e6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:41

  pushdaconstw 0x4380 @ bics r0, r0
    11e8:	f847 6d04 	str.w	r6, [r7, #-4]!
    11ec:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:42
  b.n alloc_unkommutativ
    11f0:	e0db      	b.n	13aa <alloc_unkommutativ>

000011f2 <Dictionary_239>:
Dictionary_239():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:42
    11f2:	120c      	.short	0x120c
    11f4:	02620000 	.word	0x02620000
    11f8:	6f02      	.short	0x6f02
    11fa:	72          	.byte	0x72
	...

000011fc <Code_239>:
Code_239():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:48

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "or" @ ( x1 x2 -- x1|x2 )
                       @ Combines the top two stack elements using bitwise OR.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    11fc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:49
  orrs tos, r0
    11fe:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:50
  bx lr
    1200:	4770      	bx	lr

00001202 <or_allocator>:
or_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:53

or_allocator:
  pushdaconstw 0x4300 @ orrs r0, r0
    1202:	f847 6d04 	str.w	r6, [r7, #-4]!
    1206:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:54
  b.n alloc_kommutativ
    120a:	e0d2      	b.n	13b2 <alloc_kommutativ>

0000120c <Dictionary_242>:
Dictionary_242():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:54
    120c:	00001226 	.word	0x00001226
    1210:	78030262 	.word	0x78030262
    1214:	726f      	.short	0x726f

00001216 <Code_242>:
Code_242():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:60

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "xor" @ ( x1 x2 -- x1|x2 )
                        @ Combines the top two stack elements using bitwise exclusive-OR.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    1216:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:61
  eors tos, r0
    1218:	4046      	eors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:62
  bx lr
    121a:	4770      	bx	lr

0000121c <xor_allocator>:
xor_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:65

xor_allocator:
  pushdaconstw 0x4040 @ eors r0, r0
    121c:	f847 6d04 	str.w	r6, [r7, #-4]!
    1220:	f244 0640 	movw	r6, #16448	; 0x4040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:66
  b.n alloc_kommutativ
    1224:	e0c5      	b.n	13b2 <alloc_kommutativ>

00001226 <Dictionary_245>:
Dictionary_245():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:66
    1226:	123e      	.short	0x123e
    1228:	02620000 	.word	0x02620000
    122c:	2a01      	.short	0x2a01

0000122e <Code_245>:
Code_245():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:71

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "*" @ ( u1|n1 u2|n2 -- u3|n3 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}    @ Get u1|n1 into a register.
    122e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:72
  muls tos, r0      @ Multiply!
    1230:	4346      	muls	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:73
  bx lr
    1232:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:75

  pushdaconstw 0x4340 @ muls r0, r0
    1234:	f847 6d04 	str.w	r6, [r7, #-4]!
    1238:	f244 3640 	movw	r6, #17216	; 0x4340
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:76
  b.n alloc_kommutativ
    123c:	e0b9      	b.n	13b2 <alloc_kommutativ>

0000123e <Dictionary_248>:
Dictionary_248():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:76
    123e:	1272      	.short	0x1272
    1240:	02610000 	.word	0x02610000
    1244:	7a6c6303 	.word	0x7a6c6303

00001248 <Code_248>:
Code_248():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:105

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "clz" @ ( x -- u )
                        @ Counts leading zeroes in x.
@ -----------------------------------------------------------------------------
  clz tos, tos
    1248:	fab6 f686 	clz	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:106
  bx lr
    124c:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:108

    push {lr}
    124e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:109
    bl expect_one_element
    1250:	f7ff f942 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:110
    pushdatos
    1254:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:111
    ldr tos, =0xfab0f080 @ clz r0, r0
    1258:	4e7e      	ldr	r6, [pc, #504]	; (1454 <m3_opcodieren+0x24>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:112
    bl expect_tos_in_register
    125a:	f7ff f979 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:113
    orrs tos, r1 @ Quellregister
    125e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:114
    orrs tos, tos, r1, lsl #16 @ Quellregister nochmal
    1260:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:116

    bl tos_registerwechsel
    1264:	f7ff f9c2 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:118

    orrs tos, tos, r3, lsl #8 @ Zielregister
    1268:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:119
    bl reversekomma
    126c:	f002 fbc8 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:121

    pop {pc}
    1270:	bd00      	pop	{pc}

00001272 <Dictionary_250>:
Dictionary_250():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:121
    1272:	1290      	.short	0x1290
    1274:	18610000 	.word	0x18610000
    1278:	726f7203 	.word	0x726f7203

0000127c <Code_250>:
Code_250():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:159
  .endif

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_inlinecache|Flag_bxlr, "ror" @ ( x -- x' ) @ Um eine Stelle rechts rotieren
@ -----------------------------------------------------------------------------
  movs r0, #1
    127c:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:160
  rors tos, r0
    127e:	41c6      	rors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:161
  bx lr
    1280:	4770      	bx	lr
    1282:	0002      	.short	0x0002
    1284:	00000001 	.word	0x00000001
    1288:	12bc2000 	.word	0x12bc2000
    128c:	02620000 	.word	0x02620000

00001290 <Dictionary_251>:
Dictionary_251():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:161
    1290:	000012ae 	.word	0x000012ae
    1294:	72031861 	.word	0x72031861
    1298:	6c6f      	.short	0x6c6f

0000129a <Code_251>:
Code_251():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:175

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_inlinecache|Flag_bxlr, "rol" @ ( x -- x' ) @ Um eine Stelle links rotieren
@ -----------------------------------------------------------------------------
  @ Rotate left by one bit place
  movs r0, #31
    129a:	201f      	movs	r0, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:176
  rors tos, r0
    129c:	41c6      	rors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:177
  bx lr
    129e:	4770      	bx	lr
    12a0:	001f0002 	.word	0x001f0002
    12a4:	20000000 	.word	0x20000000
    12a8:	000012bc 	.word	0x000012bc
    12ac:	0262      	.short	0x0262

000012ae <Dictionary_252>:
Dictionary_252():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:177
    12ae:	12ce      	.short	0x12ce
    12b0:	02620000 	.word	0x02620000
    12b4:	6f727207 	.word	0x6f727207
    12b8:	65746174 	.word	0x65746174

000012bc <Code_252>:
rrotate():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:191

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "rrotate" @ ( x n -- x' )
rrotate:                    @ Rotate 'x' right by 'n' bits.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    12bc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:192
  rors r0, tos
    12be:	41f0      	rors	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:193
  movs tos, r0
    12c0:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:194
  bx lr
    12c2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:196

  pushdaconstw 0x41C0 @ rors r0, r0
    12c4:	f847 6d04 	str.w	r6, [r7, #-4]!
    12c8:	f244 16c0 	movw	r6, #16832	; 0x41c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:197
  b.n alloc_unkommutativ
    12cc:	e06d      	b.n	13aa <alloc_unkommutativ>

000012ce <Dictionary_255>:
Dictionary_255():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:197
    12ce:	1306      	.short	0x1306
    12d0:	02620000 	.word	0x02620000
    12d4:	73726107 	.word	0x73726107
    12d8:	74666968 	.word	0x74666968

000012dc <Code_255>:
Code_255():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:203

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "arshift" @ ( x n -- x' )
                            @ Shifts 'x' right by 'n' bits, shifting in x's MSB.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    12dc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:204
  asrs r0, tos
    12de:	4130      	asrs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:205
  movs tos, r0
    12e0:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:206
  bx lr
    12e2:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:209

  @ -----------------------------------------------------------------------------
    push {lr}
    12e4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:210
    pushdaconstw 0x4100 @ asrs r0, r0
    12e6:	f847 6d04 	str.w	r6, [r7, #-4]!
    12ea:	f244 1600 	movw	r6, #16640	; 0x4100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:211
    pushdaconstw 0x1000 @ asrs r0, r0, #0
    12ee:	f847 6d04 	str.w	r6, [r7, #-4]!
    12f2:	f241 0600 	movw	r6, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:213

    bl expect_two_elements
    12f6:	f7ff f8f9 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:215

    ldr r1, [r0, #offset_constant_tos] @ Ich weiß zwar noch nicht, ob es eine Konstante oder ein Register ist, aber das ist egal.
    12fa:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:216
    cmp r1, #31                        @ Falls es eine Konstante ist, kappe sie, wenn es ein Register sein sollte, ändert sich nichts.
    12fc:	291f      	cmp	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:217
    bls 5f
    12fe:	d92a      	bls.n	1356 <Code_265+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:218
      movs r1, #31 @ Größere Schübe ? --> asrs mit Weite 31 generieren, damit das Vorzeichen stimmt !
    1300:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:219
      str r1, [r0, #offset_constant_tos]
    1302:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:220
      b.n 5f
    1304:	e027      	b.n	1356 <Code_265+0x18>

00001306 <Dictionary_260>:
Dictionary_260():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:220
    1306:	1330      	.short	0x1330
    1308:	02620000 	.word	0x02620000
    130c:	68737206 	.word	0x68737206
    1310:	6669      	.short	0x6669
    1312:	74          	.byte	0x74
	...

00001314 <Code_260>:
Code_260():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:226

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "rshift" @ ( x n -- x' )
                           @ Shifts 'x' right by 'n' bits.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    1314:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:227
  lsrs r0, tos
    1316:	40f0      	lsrs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:228
  movs tos, r0
    1318:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:229
  bx lr
    131a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:232

  @ -----------------------------------------------------------------------------
    push {lr}
    131c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:233
    pushdaconstw 0x40C0 @ lsrs r0, r0
    131e:	f847 6d04 	str.w	r6, [r7, #-4]!
    1322:	f244 06c0 	movw	r6, #16576	; 0x40c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:234
    pushdaconstw 0x0800 @ lsrs r0, r0, #0
    1326:	f847 6d04 	str.w	r6, [r7, #-4]!
    132a:	f640 0600 	movw	r6, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:235
    b.n 5f
    132e:	e012      	b.n	1356 <Code_265+0x18>

00001330 <Dictionary_265>:
Dictionary_265():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:235
    1330:	00001468 	.word	0x00001468
    1334:	6c060262 	.word	0x6c060262
    1338:	66696873 	.word	0x66696873
    133c:	74          	.byte	0x74
	...

0000133e <Code_265>:
Code_265():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:241

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "lshift" @ ( x n -- x' )
                           @ Shifts 'x' left by 'n' bits.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    133e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:242
  lsls r0, tos
    1340:	40b0      	lsls	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:243
  movs tos, r0
    1342:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:244
  bx lr
    1344:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:247

  @ -----------------------------------------------------------------------------
    push {lr}
    1346:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:248
    pushdaconstw 0x4080 @ lsls r0, r0
    1348:	f847 6d04 	str.w	r6, [r7, #-4]!
    134c:	f244 0680 	movw	r6, #16512	; 0x4080
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:249
    pushdaconst  0x0000 @ lsls r0, r0, #0
    1350:	f847 6d04 	str.w	r6, [r7, #-4]!
    1354:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:251

5:  bl expect_two_elements
    1356:	f7ff f8c9 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:253

    ldr r1, [r0, #offset_state_tos]
    135a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:254
    cmp r1, #constant
    135c:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:255
    beq 1f
    135e:	d003      	beq.n	1368 <Code_265+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:257
      @ TOS ist keine Konstante --> Also Register-Register-Schub. Es gibt nur Opcodes im M0, bei denen Quelle und Ziel identisch sind.
      drop @ Vergiß den Shift-Immediate-Opcode
    1360:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:258
      bl alloc_unkommutativ @ Kümmert sich um alles.
    1362:	f000 f822 	bl	13aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:259
      pop {pc}
    1366:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:262
1:  @ TOS ist eine Konstante ! NOS muss jetzt ein Register sein, weil es sonst bereits vorher gefaltet worden wäre.

    nip @ Vergiß den Shift-Register-Register-Opcode
    1368:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:265

    @ Hole die Konstante !
    ldr r1, [r0, #offset_constant_tos]
    136a:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:266
    bl eliminiere_tos
    136c:	f7fe ffb7 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:268

    cmp r1, #0 @ Gar nicht schieben ?
    1370:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:269
    bne 3f
    1372:	d101      	bne.n	1378 <Code_265+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:270
      drop
    1374:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:271
      pop {pc}
    1376:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:274
3:

    cmp r1, #31
    1378:	291f      	cmp	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:275
    bhi 2f
    137a:	d80a      	bhi.n	1392 <Code_265+0x54>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:277
      @ Konstante kleiner als 31 --> Schiebebefehl generieren.
      lsls r1, #6  @ Shift places accordingly
    137c:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:278
      orrs tos, r1  @ Build shift opcode
    137e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:280

      ldr r2, [r0, #offset_state_tos]
    1380:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:281
      lsls r2, #3
    1382:	00d2      	lsls	r2, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:282
      orrs tos, r2
    1384:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:285

      @ Registerwechsel in r6, wenn möglich - Schiebeopcode gibt das her
      bl tos_registerwechsel
    1386:	f7ff f931 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:286
      orrs tos, r3
    138a:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:288

      bl hkomma
    138c:	f002 fb08 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:289
      pop {pc}
    1390:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:292

2:  @ Konstante größer als 31 --> Alles rausschieben.
    drop @ Vergiß den zweiten Opcode auch
    1392:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:293
    bl tos_registerwechsel
    1394:	f7ff f92a 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:295

    pushdaconstw 0x2000 @ movs r0, #0
    1398:	f847 6d04 	str.w	r6, [r7, #-4]!
    139c:	f242 0600 	movw	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:296
    lsls r3, #8
    13a0:	021b      	lsls	r3, r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:297
    orrs tos, r3
    13a2:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:298
    bl hkomma
    13a4:	f002 fafc 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:299
    pop {pc}
    13a8:	bd00      	pop	{pc}

000013aa <alloc_unkommutativ>:
alloc_unkommutativ():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:26
@ Sondereinsprünge, die für Memory Read-Modify-Write und die Schiebebefehle gebraucht werden.

@ -----------------------------------------------------------------------------
alloc_unkommutativ:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    13aa:	b50f      	push	{r0, r1, r2, r3, lr}

000013ac <alloc_unkommutativ_ohneregister>:
alloc_unkommutativ_ohneregister():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:28
alloc_unkommutativ_ohneregister:
    bl expect_two_elements
    13ac:	f7ff f89e 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:29
    b.n alloc_logic_gemeinsam
    13b0:	e00c      	b.n	13cc <alloc_logic_gemeinsam>

000013b2 <alloc_kommutativ>:
alloc_kommutativ():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:34

@ -----------------------------------------------------------------------------
alloc_kommutativ:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    13b2:	b50f      	push	{r0, r1, r2, r3, lr}

000013b4 <alloc_kommutativ_ohneregister>:
alloc_kommutativ_ohneregister():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:37
alloc_kommutativ_ohneregister:

      bl expect_two_elements
    13b4:	f7ff f89a 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:46
    @ Entweder zwei Register, oder eine Konstante und einen Register.


    @ Sorge dafür, dass NOS (nachher das neue TOS) r6 bekommt, falls möglich.

    ldr r1, [r0, #offset_state_tos]
    13b8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:47
    cmp r1, #reg6         @ Falls das aktuelle TOS gerade r6 hat, gib es an NOS ab.
    13ba:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:48
    bne 2f
    13bc:	d101      	bne.n	13c2 <alloc_kommutativ_ohneregister+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:49
      bl swap_allocator
    13be:	f7ff fdd4 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:55
2:


    @ Sorge jetzt einmal dafür, dass falls es eine Konstante gibt, im RA-Cache TOS die Konstante und NOS das Ziel ist.

    ldr r2, [r0, #offset_state_nos]
    13c2:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:56
    cmp r2, #constant     @ NOS ist die Konstante ?
    13c4:	2a28      	cmp	r2, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:57
    bne 3f
    13c6:	d101      	bne.n	13cc <alloc_logic_gemeinsam>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:58
      bl swap_allocator   @ Ab jetzt ist es TOS !
    13c8:	f7ff fdcf 	bl	f6a <swap_allocator>

000013cc <alloc_logic_gemeinsam>:
alloc_logic_gemeinsam():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:64
3:


alloc_logic_gemeinsam:

    bl expect_nos_in_register @ Für den Fall, dass doch zwei Konstanten einlaufen.
    13cc:	f7ff f8ca 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:67

    .ifndef m0core
      ldr r1, [r0, #offset_state_tos] @ Prüfe, ob TOS eine Konstante ist.
    13d0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:68
      cmp r1, #constant
    13d2:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:69
      bne 6f
    13d4:	d11e      	bne.n	1414 <alloc_logic_gemeinsam+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:71
        @ TOS ist eine Konstante.
        pushdatos
    13d6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:72
        ldr tos, [r0, #offset_constant_tos]
    13da:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:73
        bl twelvebitencoding @ Hole sie und prüfe, ob sie als Imm12 darstellbar ist.
    13dc:	f001 febe 	bl	315c <Code_709>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:74
        ldmia psp!, {r1} @ Entweder die Bitmaske oder wieder die Konstante
    13e0:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:76

        cmp tos, #0
    13e2:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:77
        drop   @ Preserves Flags !
    13e4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:78
        beq 6f
    13e6:	d015      	beq.n	1414 <alloc_logic_gemeinsam+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:83
          @ Die Konstante lässt sich als Imm12 darstellen - fein ! Bitmaske liegt in r1 bereit
          @ Prüfe nun den Opcode, und ersetze ihn, falls möglich.


          cmp tos, #0x4000 @ ands r0, r0 Opcode
    13e8:	f5b6 4f80 	cmp.w	r6, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:84
          bne 5f
    13ec:	d101      	bne.n	13f2 <alloc_logic_gemeinsam+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:85
            ldr tos, =0xF0100000 @ ands r0, r0, #Imm12
    13ee:	4e1a      	ldr	r6, [pc, #104]	; (1458 <m3_opcodieren+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:86
            b.n m3_opcodieren
    13f0:	e01e      	b.n	1430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:89
5:

          ldr r2, =0x4040 @ eors r0, r0      Opcode
    13f2:	f244 0240 	movw	r2, #16448	; 0x4040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:90
          cmp tos, r2
    13f6:	4296      	cmp	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:91
          bne 5f
    13f8:	d101      	bne.n	13fe <alloc_logic_gemeinsam+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:92
            ldr tos, =0xF0900000 @ eors r0, r0, #Imm12
    13fa:	4e18      	ldr	r6, [pc, #96]	; (145c <m3_opcodieren+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:93
            b.n m3_opcodieren
    13fc:	e018      	b.n	1430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:97
5:


          cmp tos, #0x4300 @ orrs r0, r0      Opcode
    13fe:	f5b6 4f86 	cmp.w	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:98
          bne 5f
    1402:	d101      	bne.n	1408 <alloc_logic_gemeinsam+0x3c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:99
            ldr tos, =0xF0500000 @ orrs r0, r0, #Imm12
    1404:	4e16      	ldr	r6, [pc, #88]	; (1460 <m3_opcodieren+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:100
            b.n m3_opcodieren
    1406:	e013      	b.n	1430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:103
5:

          ldr r2, =0x4380 @ bics r0, r0      Opcode
    1408:	f44f 4287 	mov.w	r2, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:104
          cmp tos, r2
    140c:	4296      	cmp	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:105
          bne 6f
    140e:	d101      	bne.n	1414 <alloc_logic_gemeinsam+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:107
            @ Ja, den Opcode kann ich verlängern und dann einfügen !
            ldr tos, =0xF0300000 @ bics r0, r0, #Imm12
    1410:	4e14      	ldr	r6, [pc, #80]	; (1464 <m3_opcodieren+0x34>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:108
            b.n m3_opcodieren
    1412:	e00d      	b.n	1430 <m3_opcodieren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:114

6:    @ Sonderopcodierungen M3/M4 nicht möglich
    .endif

    @ Sorge dafür, dass NOS bereit zum Verändern wird.
    bl nos_change_tos_away_later
    1414:	f7ff f8ba 	bl	58c <nos_change_tos_away_later>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:116

    bl expect_tos_in_register
    1418:	f7ff f89a 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:118

    lsls r1, #3  @ Quellregister ist um 3 Stellen geschoben
    141c:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:119
    ldr r2, [r0, #offset_state_nos]
    141e:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:123

    @ Baue jetzt den Opcode zusammen:

    orrs tos, r1
    1420:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:124
    orrs tos, r2
    1422:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:126

    bl hkomma
    1424:	f002 fabc 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:128

    bl eliminiere_tos
    1428:	f7fe ff59 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:129
    pop {r0, r1, r2, r3, pc}
    142c:	bd0f      	pop	{r0, r1, r2, r3, pc}

0000142e <m3_opcodieren_anderswo>:
m3_opcodieren_anderswo():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:134

.ifndef m0core

m3_opcodieren_anderswo:
  push {r0, r1, r2, r3, lr}
    142e:	b50f      	push	{r0, r1, r2, r3, lr}

00001430 <m3_opcodieren>:
m3_opcodieren():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:139
@ -----------------------------------------------------------------------------
m3_opcodieren:
@ -----------------------------------------------------------------------------
          @ Gemeinsamer Teil für alle Fälle:
          orrs tos, r1 @ Bitmaske für Imm12 hinzufügen
    1430:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:141

          ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
    1432:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:143

          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
    1434:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:146

          @ Vergiß die Konstante
          bl eliminiere_tos
    1438:	f7fe ff51 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:149

          @ Registerwechsel direkt im Opcode. Nutze das natürlich aus :-) Spare mir damit eventuelle Elementkopien.
          bl eliminiere_tos
    143c:	f7fe ff4f 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:151

          bl befreie_tos
    1440:	f7fe ff43 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:152
          bl get_free_register
    1444:	f7ff f814 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:153
          str r3, [r0, #offset_state_tos]
    1448:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:155

          orrs tos, tos, r3, lsl #8  @ Den Zielregister hinzufügen
    144a:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:157

          bl reversekomma
    144e:	f002 fad7 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:158
          pop {r0, r1, r2, r3, pc}
    1452:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/logic.s:111
    ldr tos, =0xfab0f080 @ clz r0, r0
    1454:	fab0f080 	.word	0xfab0f080
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:85
            ldr tos, =0xF0100000 @ ands r0, r0, #Imm12
    1458:	f0100000 	.word	0xf0100000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:92
            ldr tos, =0xF0900000 @ eors r0, r0, #Imm12
    145c:	f0900000 	.word	0xf0900000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:99
            ldr tos, =0xF0500000 @ orrs r0, r0, #Imm12
    1460:	f0500000 	.word	0xf0500000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:107
            ldr tos, =0xF0300000 @ bics r0, r0, #Imm12
    1464:	f0300000 	.word	0xf0300000

00001468 <Dictionary_278>:
Dictionary_278():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-logic.s:107
    1468:	0000148e 	.word	0x0000148e
    146c:	30020261 	.word	0x30020261
    1470:	3d          	.byte	0x3d
	...

00001472 <Code_278>:
Code_278():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:28
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "0=" @ ( x -- ? )
@ -----------------------------------------------------------------------------
@        subs TOS, TOS, #1       ; if zero, carry is set, else carry is clear
@        sbc TOS, TOS, TOS       ; subtracting r0 from itself leaves zero if
@                                ; carry was clear or -1 if carry was set.
  subs tos, #1
    1472:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:29
  sbcs tos, tos
    1474:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:30
  bx lr
    1476:	4770      	bx	lr

00001478 <allocator_equal_zero>:
allocator_equal_zero():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:33

allocator_equal_zero:
    push {lr}
    1478:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:34
      bl prepare_single_compare @ Beinhaltet expect_one_element.
    147a:	f000 f8fb 	bl	1674 <prepare_single_compare>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:35
      bl allocator_one_minus
    147e:	f001 f856 	bl	252e <allocator_one_minus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:36
      bl eliminiere_tos
    1482:	f7fe ff2c 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:38

      ldr r1, =0xD200
    1486:	f44f 4152 	mov.w	r1, #53760	; 0xd200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:39
      str r1, [r0, #offset_sprungtrampolin] @ Daraus wird später der sbcs-Opcode zusammengesetzt, falls nötig.
    148a:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:40
    pop {pc}
    148c:	bd00      	pop	{pc}

0000148e <Dictionary_279>:
Dictionary_279():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:40
    148e:	14b6      	.short	0x14b6
    1490:	02610000 	.word	0x02610000
    1494:	3e3c3003 	.word	0x3e3c3003

00001498 <Code_279>:
Code_279():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:45

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "0<>" @ ( x -- ? )
@ -----------------------------------------------------------------------------
  subs tos, #1
    1498:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:46
  sbcs tos, tos
    149a:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:47
  mvns tos, tos
    149c:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:48
  bx lr
    149e:	4770      	bx	lr

000014a0 <allocator_unequal_zero>:
allocator_unequal_zero():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:51

allocator_unequal_zero:
    push {lr}
    14a0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:52
      bl prepare_single_compare @ Beinhaltet expect_one_element.
    14a2:	f000 f8e7 	bl	1674 <prepare_single_compare>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:53
      bl allocator_one_minus
    14a6:	f001 f842 	bl	252e <allocator_one_minus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:54
      bl eliminiere_tos
    14aa:	f7fe ff18 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:56

      ldr r1, =0xD300
    14ae:	f44f 4153 	mov.w	r1, #54016	; 0xd300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:57
      str r1, [r0, #offset_sprungtrampolin] @ Daraus wird später die sbcs/mvns-Opcodesequenz zusammengesetzt, falls nötig.
    14b2:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:58
    pop {pc}
    14b4:	bd00      	pop	{pc}

000014b6 <Dictionary_280>:
Dictionary_280():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:58
    14b6:	14de      	.short	0x14de
    14b8:	02610000 	.word	0x02610000
    14bc:	3002      	.short	0x3002
    14be:	3c          	.byte	0x3c
	...

000014c0 <Code_280>:
Code_280():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:63

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "0<" @ ( n -- ? )
@ -----------------------------------------------------------------------------
  movs TOS, TOS, asr #31    @ Turn MSB into 0xffffffff or 0x00000000
    14c0:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:64
  bx lr
    14c2:	4770      	bx	lr

000014c4 <alloc_nullkleiner>:
alloc_nullkleiner():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:67

alloc_nullkleiner:
    push {lr}
    14c4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:68
      bl prepare_single_compare @ Beinhaltet expect_one_element.
    14c6:	f000 f8d5 	bl	1674 <prepare_single_compare>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:70

      pushdaconstw 0x17C0 @ asrs r0, r0, #31
    14ca:	f847 6d04 	str.w	r6, [r7, #-4]!
    14ce:	f241 76c0 	movw	r6, #6080	; 0x17c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:71
      bl smalltworegisters
    14d2:	f001 f86f 	bl	25b4 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:73

      ldr r1, =0xD500
    14d6:	f44f 4155 	mov.w	r1, #54528	; 0xd500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:74
      str r1, [r0, #offset_sprungtrampolin] @ Daraus wird später die sbcs/mvns-Opcodesequenz zusammengesetzt, falls nötig.
    14da:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:75
    pop {pc}
    14dc:	bd00      	pop	{pc}

000014de <Dictionary_283>:
Dictionary_283():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:75
    14de:	14f4      	.short	0x14f4
    14e0:	00600000 	.word	0x00600000
    14e4:	75727404 	.word	0x75727404
    14e8:	65          	.byte	0x65
	...

000014ea <Code_283>:
Code_283():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:83
@ Also ist TOS ohnehin ein Register.

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_0|Flag_inline, "true" @ ( -- -1 )
@ -----------------------------------------------------------------------------
  pushdatos
    14ea:	f847 6d04 	str.w	r6, [r7, #-4]!

000014ee <generate_true>:
generate_true():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:85
generate_true:
  movs tos, #0
    14ee:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:86
  mvns tos, tos
    14f0:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:87
  bx lr
    14f2:	4770      	bx	lr

000014f4 <Dictionary_285>:
Dictionary_285():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:87
    14f4:	00001508 	.word	0x00001508
    14f8:	66050060 	.word	0x66050060
    14fc:	65736c61 	.word	0x65736c61

00001500 <Code_285>:
Code_285():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:92

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_0|Flag_inline, "false" @ ( x -- 0 )
@ -----------------------------------------------------------------------------
  pushdatos
    1500:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:93
  movs tos, #0
    1504:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:94
  bx lr
    1506:	4770      	bx	lr

00001508 <Dictionary_287>:
Dictionary_287():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:94
    1508:	0000152e 	.word	0x0000152e
    150c:	3e020242 	.word	0x3e020242
    1510:	3d          	.byte	0x3d
	...

00001512 <Code_287>:
Code_287():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:99

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, ">=" @ ( x1 x2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}      @ Get x1 into a register.
    1512:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:100
  cmp r0, tos         @ Is x2 less or equal ?
    1514:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:101
  bge.n generate_true
    1516:	daea      	bge.n	14ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:102
  movs tos, #0
    1518:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:103
  bx lr
    151a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:105

    pushdaconstw 0xDB00 @ blt signed less
    151c:	f847 6d04 	str.w	r6, [r7, #-4]!
    1520:	f64d 3600 	movw	r6, #56064	; 0xdb00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:106
    pushdaconstw 0xDA00 @ signed greater or equal
    1524:	f847 6d04 	str.w	r6, [r7, #-4]!
    1528:	f64d 2600 	movw	r6, #55808	; 0xda00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:107
    b.n prepare_compare
    152c:	e0ae      	b.n	168c <prepare_compare>

0000152e <Dictionary_292>:
Dictionary_292():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:107
    152e:	1554      	.short	0x1554
    1530:	02420000 	.word	0x02420000
    1534:	3c02      	.short	0x3c02
    1536:	3d          	.byte	0x3d
	...

00001538 <Code_292>:
Code_292():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:112

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, "<=" @ ( x1 x2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get x1 into a register.
    1538:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:113
  cmp r0, tos        @ Is x2 greater or equal ?
    153a:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:114
  ble.n generate_true
    153c:	ddd7      	ble.n	14ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:115
  movs tos, #0
    153e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:116
  bx lr
    1540:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:118

    pushdaconstw 0xDC00 @ bge signed greater
    1542:	f847 6d04 	str.w	r6, [r7, #-4]!
    1546:	f64d 4600 	movw	r6, #56320	; 0xdc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:119
    pushdaconstw 0xDD00 @ ble signed less or equal
    154a:	f847 6d04 	str.w	r6, [r7, #-4]!
    154e:	f64d 5600 	movw	r6, #56576	; 0xdd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:120
    b.n prepare_compare
    1552:	e09b      	b.n	168c <prepare_compare>

00001554 <Dictionary_297>:
Dictionary_297():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:120
    1554:	00001578 	.word	0x00001578
    1558:	3c010242 	.word	0x3c010242

0000155c <Code_297>:
Code_297():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:126

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, "<" @ ( x1 x2 -- ? )
                      @ Checks if x2 is less than x1.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get x1 into a register.
    155c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:127
  cmp r0, tos        @ Is x2 less?
    155e:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:128
  blt.n generate_true
    1560:	dbc5      	blt.n	14ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:129
  movs tos, #0
    1562:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:130
  bx lr
    1564:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:132

    pushdaconstw 0xDA00 @ signed greater or equal
    1566:	f847 6d04 	str.w	r6, [r7, #-4]!
    156a:	f64d 2600 	movw	r6, #55808	; 0xda00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:133
    pushdaconstw 0xDB00 @ blt signed less
    156e:	f847 6d04 	str.w	r6, [r7, #-4]!
    1572:	f64d 3600 	movw	r6, #56064	; 0xdb00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:134
    b.n prepare_compare
    1576:	e089      	b.n	168c <prepare_compare>

00001578 <Dictionary_302>:
Dictionary_302():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:134
    1578:	0000159c 	.word	0x0000159c
    157c:	3e010242 	.word	0x3e010242

00001580 <Code_302>:
Code_302():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:140

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_allocator, ">" @ ( x1 x2 -- ? )
                      @ Checks if x2 is greater than x1.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get x1 into a register.
    1580:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:141
  cmp r0, tos        @ Is x2 greater?
    1582:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:142
  bgt.n generate_true
    1584:	dcb3      	bgt.n	14ee <generate_true>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:143
  movs tos, #0
    1586:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:144
  bx lr
    1588:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:146

    pushdaconstw 0xDD00 @ ble signed less or equal
    158a:	f847 6d04 	str.w	r6, [r7, #-4]!
    158e:	f64d 5600 	movw	r6, #56576	; 0xdd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:147
    pushdaconstw 0xDC00 @ bge signed greater
    1592:	f847 6d04 	str.w	r6, [r7, #-4]!
    1596:	f64d 4600 	movw	r6, #56320	; 0xdc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:148
    b.n prepare_compare
    159a:	e077      	b.n	168c <prepare_compare>

0000159c <Dictionary_307>:
Dictionary_307():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:148
    159c:	000015c2 	.word	0x000015c2
    15a0:	75030262 	.word	0x75030262
    15a4:	3d3e      	.short	0x3d3e

000015a6 <Code_307>:
Code_307():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:153

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u>=" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}      @ Get u1 into a register.
    15a6:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:154
  subs tos, r0, tos   @ subs tos, w, tos   @ TOS = a-b  -- carry set if a is less than b
    15a8:	1b86      	subs	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:155
  sbcs tos, tos
    15aa:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:156
  mvns tos, tos
    15ac:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:157
  bx lr
    15ae:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:159

    pushdaconstw 0xD300 @ blo unsigned lower
    15b0:	f847 6d04 	str.w	r6, [r7, #-4]!
    15b4:	f24d 3600 	movw	r6, #54016	; 0xd300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:160
    pushdaconstw 0xD200 @ bhs unsigned higher or same
    15b8:	f847 6d04 	str.w	r6, [r7, #-4]!
    15bc:	f24d 2600 	movw	r6, #53760	; 0xd200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:161
    b.n prepare_compare
    15c0:	e064      	b.n	168c <prepare_compare>

000015c2 <Dictionary_312>:
Dictionary_312():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:161
    15c2:	15e8      	.short	0x15e8
    15c4:	02620000 	.word	0x02620000
    15c8:	3d3c7503 	.word	0x3d3c7503

000015cc <Code_312>:
Code_312():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:166

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u<=" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    15cc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:167
  subs tos, r0
    15ce:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:168
  sbcs tos, tos
    15d0:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:169
  mvns tos, tos
    15d2:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:170
  bx lr
    15d4:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:172

    pushdaconstw 0xD800 @ bhi unsigned higher
    15d6:	f847 6d04 	str.w	r6, [r7, #-4]!
    15da:	f64d 0600 	movw	r6, #55296	; 0xd800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:173
    pushdaconstw 0xD900 @ bls unsigned lower or same
    15de:	f847 6d04 	str.w	r6, [r7, #-4]!
    15e2:	f64d 1600 	movw	r6, #55552	; 0xd900
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:174
    b.n prepare_compare
    15e6:	e051      	b.n	168c <prepare_compare>

000015e8 <Dictionary_317>:
Dictionary_317():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:174
    15e8:	0000160c 	.word	0x0000160c
    15ec:	75020262 	.word	0x75020262
    15f0:	3c          	.byte	0x3c
	...

000015f2 <Code_317>:
Code_317():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:179

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u<" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}      @ Get u1 into a register.
    15f2:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:180
  subs tos, r0, tos   @ subs tos, w, tos   @ TOS = a-b  -- carry set if a is less than b
    15f4:	1b86      	subs	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:181
  sbcs tos, tos
    15f6:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:182
  bx lr
    15f8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:184

    pushdaconstw 0xD200 @ bhs unsigned higher or same
    15fa:	f847 6d04 	str.w	r6, [r7, #-4]!
    15fe:	f24d 2600 	movw	r6, #53760	; 0xd200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:185
    pushdaconstw 0xD300 @ blo unsigned lower
    1602:	f847 6d04 	str.w	r6, [r7, #-4]!
    1606:	f24d 3600 	movw	r6, #54016	; 0xd300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:186
    b.n prepare_compare
    160a:	e03f      	b.n	168c <prepare_compare>

0000160c <Dictionary_322>:
Dictionary_322():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:186
    160c:	00001630 	.word	0x00001630
    1610:	75020262 	.word	0x75020262
    1614:	3e          	.byte	0x3e
	...

00001616 <Code_322>:
Code_322():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:191

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "u>" @ ( u1 u2 -- ? )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    1616:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:192
  subs tos, r0
    1618:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:193
  sbcs tos, tos
    161a:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:194
  bx lr
    161c:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:196

    pushdaconstw 0xD900 @ bls unsigned lower or same
    161e:	f847 6d04 	str.w	r6, [r7, #-4]!
    1622:	f64d 1600 	movw	r6, #55552	; 0xd900
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:197
    pushdaconstw 0xD800 @ bhi unsigned higher
    1626:	f847 6d04 	str.w	r6, [r7, #-4]!
    162a:	f64d 0600 	movw	r6, #55296	; 0xd800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:198
    b.n prepare_compare
    162e:	e02d      	b.n	168c <prepare_compare>

00001630 <Dictionary_327>:
Dictionary_327():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:198
    1630:	00001654 	.word	0x00001654
    1634:	3c020262 	.word	0x3c020262
    1638:	3e          	.byte	0x3e
	...

0000163a <Code_327>:
Code_327():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:204

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "<>" @ ( x1 x2 -- ? )
                       @ Compares the top two stack elements for inequality.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    163a:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:205
  subs tos, r0
    163c:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:207

  subs tos, #1
    163e:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:208
  sbcs tos, tos
    1640:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:209
  mvns tos, tos
    1642:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:210
  bx lr
    1644:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:212

    pushdaconstw 0xD000 @ Opcode: beq
    1646:	f847 6d04 	str.w	r6, [r7, #-4]!
    164a:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:213
    dup
    164e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:214
    b.n prepare_compare
    1652:	e01b      	b.n	168c <prepare_compare>

00001654 <Dictionary_332>:
Dictionary_332():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:214
    1654:	000017b6 	.word	0x000017b6
    1658:	3d010262 	.word	0x3d010262

0000165c <Code_332>:
Code_332():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:220

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "=" @ ( x1 x2 -- ? )
                      @ Compares the top two stack elements for equality.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}     @ Get the next elt into a register.
    165c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:221
  subs tos, r0       @ Z=equality; if equal, TOS=0
    165e:	1a36      	subs	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:223

  subs tos, #1       @ Wenn es Null war, gibt es jetzt einen Überlauf
    1660:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:224
  sbcs tos, tos
    1662:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:225
  bx lr
    1664:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:227

    pushdaconstw 0xD100 @ Opcode: bne
    1666:	f847 6d04 	str.w	r6, [r7, #-4]!
    166a:	f24d 1600 	movw	r6, #53504	; 0xd100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:228
    dup
    166e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:229
    b.n prepare_compare
    1672:	e00b      	b.n	168c <prepare_compare>

00001674 <prepare_single_compare>:
prepare_single_compare():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:236
 .ltorg

@ -----------------------------------------------------------------------------
prepare_single_compare:
@ -----------------------------------------------------------------------------
  push {lr}
    1674:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:237
  bl expect_one_element
    1676:	f7fe ff2f 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:242

  @ Es gibt maximal fünf Elemente im RA. Eins wird am Ende rausfliegen, eins kann nachrutschen.
  @ Falls die anderen Elemente also Konstanten sind, müssen sie jetzt generiert werden.

    bl tidyup_register_allocator_5os
    167a:	f7fe fe67 	bl	34c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:243
    bl tidyup_register_allocator_4os
    167e:	f7fe fe6a 	bl	356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:244
    bl tidyup_register_allocator_3os
    1682:	f7fe fe6d 	bl	360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:245
    bl expect_nos_in_register
    1686:	f7fe ff6d 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:247

  pop {pc}
    168a:	bd00      	pop	{pc}

0000168c <prepare_compare>:
prepare_compare():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:253

@ -----------------------------------------------------------------------------
prepare_compare:
@ -----------------------------------------------------------------------------

    push {lr} @ So ähnlich wie die Optimierungen in Plus und Minus
    168c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:254
    bl expect_two_elements @ Zwei Elemente, die NICHT verändert werden. Mindestens eins davon ist ein Register, sonst würde gefaltet werden.
    168e:	f7fe ff2d 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:265


    @ Jetzt gibt es bis zu fünf Elemente. Zwei werden am Ende herausfliegen, eins kann direkt ins neue TOS nachrücken.
    @ Ich muss also die tieferen Elemente rausschreiben, bevor ich weitermache, weil im M0 das Rausschreiben Flags zerstört.

    bl tidyup_register_allocator_5os
    1692:	f7fe fe5b 	bl	34c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:266
    bl tidyup_register_allocator_4os
    1696:	f7fe fe5e 	bl	356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:267
    bl expect_3os_in_register
    169a:	f7fe ff6d 	bl	578 <expect_3os_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:270

    @ Ist in TOS oder in NOS eine kleine Konstante ?
    ldr r2, [r0, #offset_state_nos]
    169e:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:271
    cmp r2, #constant
    16a0:	2a28      	cmp	r2, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:272
    bne 1f
    16a2:	d105      	bne.n	16b0 <prepare_compare+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:273
      bl swap_allocator @ Wenn NOS eine Konstante gewesen ist, war TOS es nicht (Vorherige Faltung !) und ich kann einfach umtauschen.
    16a4:	f7ff fc61 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:274
      swap @ Vertausche in diesem Fall auch die Sprungopcodes
    16a8:	6839      	ldr	r1, [r7, #0]
    16aa:	603e      	str	r6, [r7, #0]
    16ac:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:275
      ldr r2, [r0, #offset_state_nos] @ r2 nach dem Vertauschen neu laden
    16ae:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:278
1:  @ Fertig: Wenn eine Konstante da ist, ist sie jetzt in TOS.

    drop @ Vergiss den oberen Sprungopcode
    16b0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:282

    @ Ist jetzt TOS eine kleine Konstante ?

    ldr r1, [r0, #offset_state_tos]
    16b2:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:283
    cmp r1, #constant
    16b4:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:284
    bne 3f
    16b6:	d11d      	bne.n	16f4 <prepare_compare+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:285
      ldr r1, [r0, #offset_constant_tos]
    16b8:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:286
      cmp r1, #0xff
    16ba:	29ff      	cmp	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:287
      bhi 5f
    16bc:	d807      	bhi.n	16ce <prepare_compare+0x42>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:289
        @ TOS ist eine kleine Konstante.
        pushdaconstw 0x2800 @ cmp r0, #imm8
    16be:	f847 6d04 	str.w	r6, [r7, #-4]!
    16c2:	f642 0600 	movw	r6, #10240	; 0x2800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:290
        orrs tos, r1
    16c6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:291
        ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
    16c8:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:292
        lsls r1, #8
    16ca:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:293
        b.n 4f
    16cc:	e01a      	b.n	1704 <prepare_compare+0x78>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:300

.ifndef m0core
  @ TOS ist eine Konstante, aber zu groß für Imm8.
  @ Vielleicht passt sie in Imm12 ?

       pushdatos
    16ce:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:301
        ldr tos, [r0, #offset_constant_tos]
    16d2:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:302
        bl twelvebitencoding @ Hole sie und prüfe, ob sie als Imm12 darstellbar ist.
    16d4:	f001 fd42 	bl	315c <Code_709>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:303
        ldmia psp!, {r1} @ Entweder die Bitmaske oder wieder die Konstante
    16d8:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:305

        cmp tos, #0
    16da:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:306
        drop   @ Preserves Flags !
    16dc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:307
        beq 3f
    16de:	d009      	beq.n	16f4 <prepare_compare+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:311
          @ Die Konstante lässt sich als Imm12 darstellen - fein ! Bitmaske liegt in r1 bereit
          @ Prüfe nun den Opcode, und ersetze ihn, falls möglich.

          pushdatos
    16e0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:312
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
    16e4:	4e6a      	ldr	r6, [pc, #424]	; (1890 <alloc_minmax+0x60>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:313
          orrs tos, r1
    16e6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:314
          ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
    16e8:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:315
          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
    16ea:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:316
          bl reversekomma
    16ee:	f002 f987 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:317
          b 5f
    16f2:	e00a      	b.n	170a <prepare_compare+0x7e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:324
.endif


3:  @ Schritt eins: Die Konstante, falls TOS jetzt eine sein sollten, laden.
    @ NOS kann durch den Swap keine Konstante sein.
    bl expect_tos_in_register
    16f4:	f7fe ff2c 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:327

    @ Beide Argumente sind jetzt in Registern.
    pushdaconstw 0x4280 @ cmp r0, r0
    16f8:	f847 6d04 	str.w	r6, [r7, #-4]!
    16fc:	f244 2680 	movw	r6, #17024	; 0x4280
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:330
    @ Baue Quell- und "Ziel-" Register in den Opcode ein.

    lsls r1, #3  @ Erster Operand ist um 3 Stellen geschoben. Das muss mit dem oberen CMP-mit-Konstanten-Opcode übereinstimmen !
    1700:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:334

    @ Baue jetzt den Opcode zusammen:

    orrs tos, r2
    1702:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:335
4:  orrs tos, r1
    1704:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:337

    bl hkomma
    1706:	f002 f94b 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:341

    @ Vergiss die bisherige Registerzuordnung

5:  bl eliminiere_tos
    170a:	f7fe fde8 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:342
    bl eliminiere_tos
    170e:	f7fe fde6 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:346

    @ Das Ergebnis ist jetzt erstmal nur in den Flags - welche bei Bedarf von einem Flaggenerator geschrieben werden oder von einer Kontrollstruktur direkt geschluckt.

    str tos, [r0, #offset_sprungtrampolin]
    1712:	6286      	str	r6, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:347
    drop
    1714:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:348
    pop {pc}
    1716:	bd00      	pop	{pc}

00001718 <sprungschreiber_flaggenerator>:
sprungschreiber_flaggenerator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:353

@ -----------------------------------------------------------------------------
sprungschreiber_flaggenerator:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    1718:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:355
    @ writeln "Sprungschreiber"
    ldr r0, =allocator_base
    171a:	485e      	ldr	r0, [pc, #376]	; (1894 <alloc_minmax+0x64>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:356
    ldr r1, [r0, #offset_sprungtrampolin]
    171c:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:357
    cmp r1, #0
    171e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:358
    beq 1f
    1720:	d035      	beq.n	178e <sprungschreiber_flaggenerator+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:360

      pushdatos
    1722:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:361
      ldr tos, [r0, #offset_sprungtrampolin]
    1726:	6a86      	ldr	r6, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:362
        movs r1, #0
    1728:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:363
        str r1, [r0, #offset_sprungtrampolin]
    172a:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:371
    @ Kümmere mich um das Ergebnis !

    @ In diesen neuen Register muss ich nun abhängig von den Flags einen Wert generieren.

      @ Im Falle des Carry-Flags gibt es einen kürzeren Weg, ein Flag zusammenzubauen:
      lsrs r1, tos, #8 @ Sprungopcode so schieben, dass ich bequem vergleichen kann
    172c:	0a31      	lsrs	r1, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:375
@      pushda r1
@      bl hexdot

      cmp r1, #0xD5 @ Opcode bpl - der Minussprung. Er wird ausschließlich von 0< generiert.
    172e:	29d5      	cmp	r1, #213	; 0xd5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:376
      bne 2f
    1730:	d101      	bne.n	1736 <sprungschreiber_flaggenerator+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:378
        @ Die Besonderheit: Dieses Flag ist schon fertig in einem Register. Muss nichts tun.
        drop
    1732:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:379
        pop {r0, r1, r2, r3, pc}
    1734:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:383
2:

    @ Alle anderen Fälle benötigen einen neuen Register, in dem das Flag generiert werden kann.
    bl befreie_tos
    1736:	f7fe fdc8 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:384
    bl get_free_register
    173a:	f7fe fe99 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:385
    str r3, [r0, #offset_state_tos]
    173e:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:387

      cmp r1, #0xD2
    1740:	29d2      	cmp	r1, #210	; 0xd2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:388
      bne 2f
    1742:	d104      	bne.n	174e <sprungschreiber_flaggenerator+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:389
        ldr tos, =0x4180 @ sbcs r0, r0, #0
    1744:	f44f 4683 	mov.w	r6, #16768	; 0x4180
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:390
        bl smalltworegisters
    1748:	f000 ff34 	bl	25b4 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:391
        pop {r0, r1, r2, r3, pc}
    174c:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:394
2:

      cmp r1, #0xD3
    174e:	29d3      	cmp	r1, #211	; 0xd3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:395
      bne 2f
    1750:	d106      	bne.n	1760 <sprungschreiber_flaggenerator+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:396
        ldr tos, =0x4180 @ sbcs r0, r0, #0
    1752:	f44f 4683 	mov.w	r6, #16768	; 0x4180
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:397
        bl smalltworegisters
    1756:	f000 ff2d 	bl	25b4 <smalltworegisters>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:398
        bl allocator_not
    175a:	f000 ff3e 	bl	25da <allocator_not>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:399
        pop {r0, r1, r2, r3, pc}
    175e:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:404
2:

    @ Dies ist der "normale" Flaggenerator, der immer und bei allen Flagkombinationen funktioniert.

    adds tos, #2 @ Flaggenerator_inverted benötigt einen Sprung drei Befehle weiter
    1760:	3602      	adds	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:406
    @ Bedingten Sprung schreiben, um Flag zu generieren
    bl hkomma
    1762:	f002 f91d 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:408

    pushdaconstw 0x2000 @ movs r0, #0
    1766:	f847 6d04 	str.w	r6, [r7, #-4]!
    176a:	f242 0600 	movw	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:409
    bl smallplusminus
    176e:	f000 f80f 	bl	1790 <smallplusminus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:410
    bl allocator_not @ Generates: mvns r0, r0
    1772:	f000 ff32 	bl	25da <allocator_not>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:412

    pushdaconstw 0xE000 @ b ein Befehl weiter
    1776:	f847 6d04 	str.w	r6, [r7, #-4]!
    177a:	f24e 0600 	movw	r6, #57344	; 0xe000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:413
    bl hkomma
    177e:	f002 f90f 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:414
    pushdaconstw 0x2000 @ movs r0, #0
    1782:	f847 6d04 	str.w	r6, [r7, #-4]!
    1786:	f242 0600 	movw	r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:415
    bl smallplusminus
    178a:	f000 f801 	bl	1790 <smallplusminus>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:417

1:pop {r0, r1, r2, r3, pc}
    178e:	bd0f      	pop	{r0, r1, r2, r3, pc}

00001790 <smallplusminus>:
smallplusminus():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:420

smallplusminus:
    push {lr}
    1790:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:421
    bl expect_one_element @ Da nicht gefaltet worden ist, muss es sich um einen Register handeln.
    1792:	f7fe fea1 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:422
    bl make_tos_changeable
    1796:	f7fe ff10 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:423
    ldr r1, [r0, #offset_state_tos]
    179a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:424
    lsls r1, #8
    179c:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:425
    orrs tos, r1
    179e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:426
    bl hkomma
    17a0:	f002 f8fe 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:427
    pop {pc}
    17a4:	bd00      	pop	{pc}

000017a6 <eliminiere_tos_wenn_bmi>:
eliminiere_tos_wenn_bmi():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:430

eliminiere_tos_wenn_bmi: @ Dies wird vor dem Einpflegen der Sprünge in eine Konstrollstruktur aufgerufen.
  push {lr}              @ 0< hat die Besonderheit, einen Forth-Flag in ein Register zu legen. Dieser muss entfernt werden, wenn der Sprungopcode benutzt wird.
    17a6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:432

    ldr r1, [r0, #offset_sprungtrampolin]
    17a8:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:433
    lsrs r1, r1, #8
    17aa:	0a09      	lsrs	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:434
    cmp r1, #0xD5 @ BMI Opcode
    17ac:	29d5      	cmp	r1, #213	; 0xd5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:435
    bne 1f
    17ae:	d101      	bne.n	17b4 <eliminiere_tos_wenn_bmi+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:436
      bl eliminiere_tos
    17b0:	f7fe fd95 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:437
1:pop {pc}
    17b4:	bd00      	pop	{pc}

000017b6 <Dictionary_355>:
Dictionary_355():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:437
    17b6:	17d4      	.short	0x17d4
    17b8:	02620000 	.word	0x02620000
    17bc:	6e696d03 	.word	0x6e696d03

000017c0 <Code_355>:
Code_355():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:443

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "min" @ ( x1 x2 -- x3 )
                        @ x3 is the lesser of x1 and x2.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    17c0:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:444
  cmp r0, tos
    17c2:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:445
  bgt 1f
    17c4:	dc00      	bgt.n	17c8 <Code_355+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:446
  movs tos, r0
    17c6:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:447
1:bx lr
    17c8:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:449

    pushdaconstw 0xDB00 @ blt signed less
    17ca:	f847 6d04 	str.w	r6, [r7, #-4]!
    17ce:	f64d 3600 	movw	r6, #56064	; 0xdb00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:450
    b.n alloc_minmax
    17d2:	e02d      	b.n	1830 <alloc_minmax>

000017d4 <Dictionary_358>:
Dictionary_358():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:450
    17d4:	000017f2 	.word	0x000017f2
    17d8:	6d030262 	.word	0x6d030262
    17dc:	7861      	.short	0x7861

000017de <Code_358>:
Code_358():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:456

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "max" @ ( x1 x2 -- x3 )
                        @ x3 is the greater of x1 and x2.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    17de:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:457
  cmp r0, tos
    17e0:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:458
  blt 1f
    17e2:	db00      	blt.n	17e6 <Code_358+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:459
  movs tos, r0
    17e4:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:460
1:bx lr
    17e6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:462

    pushdaconstw 0xDC00 @ bgt signed greater
    17e8:	f847 6d04 	str.w	r6, [r7, #-4]!
    17ec:	f64d 4600 	movw	r6, #56320	; 0xdc00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:463
    b.n alloc_minmax
    17f0:	e01e      	b.n	1830 <alloc_minmax>

000017f2 <Dictionary_361>:
Dictionary_361():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:463
    17f2:	1812      	.short	0x1812
    17f4:	02620000 	.word	0x02620000
    17f8:	616d7504 	.word	0x616d7504
    17fc:	78          	.byte	0x78
	...

000017fe <Code_361>:
Code_361():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:468

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "umax" @ ( u1 u2 -- u1|u2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    17fe:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:469
  cmp r0, tos
    1800:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:470
  blo 1f
    1802:	d300      	bcc.n	1806 <Code_361+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:471
  movs tos, r0
    1804:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:472
1:bx lr
    1806:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:474

    pushdaconstw 0xD800 @ bhi unsigned higher
    1808:	f847 6d04 	str.w	r6, [r7, #-4]!
    180c:	f64d 0600 	movw	r6, #55296	; 0xd800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:475
    b.n alloc_minmax
    1810:	e00e      	b.n	1830 <alloc_minmax>

00001812 <Dictionary_364>:
Dictionary_364():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:475
    1812:	1898      	.short	0x1898
    1814:	02620000 	.word	0x02620000
    1818:	696d7504 	.word	0x696d7504
    181c:	6e          	.byte	0x6e
	...

0000181e <Code_364>:
Code_364():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:480

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "umin" @ ( u1 u2 -- u1|u2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    181e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:481
  cmp r0, tos
    1820:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:482
  bhi 1f
    1822:	d800      	bhi.n	1826 <Code_364+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:483
  movs tos, r0
    1824:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:484
1:bx lr
    1826:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:486

    pushdaconstw 0xD300 @ blo unsigned lower
    1828:	f847 6d04 	str.w	r6, [r7, #-4]!
    182c:	f24d 3600 	movw	r6, #54016	; 0xd300

00001830 <alloc_minmax>:
alloc_minmax():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:489

alloc_minmax:
    push {lr}
    1830:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:490
    bl expect_two_elements       @ Es kann nur eine Konstante geben
    1832:	f7fe fe5b 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:492

    ldr r1, [r0, #offset_state_tos]
    1836:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:493
    ldr r2, [r0, #offset_state_nos]
    1838:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:494
    cmp r1, r2
    183a:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:495
    bne 1f
    183c:	d103      	bne.n	1846 <alloc_minmax+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:496
      drop @ Sollten es aus irgendwelchen Gründen identische Register sein - nichts generieren.
    183e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:497
      bl eliminiere_nos
    1840:	f7fe fd53 	bl	2ea <eliminiere_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:498
      pop {pc} @ Der Fall zweier Konstanten wird vorher weggefaltet.
    1844:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:502
1:


    cmp r2, #reg6 @ Ist NOS gerade in r6 ? Wenn ja, dann wechseln ! Weniger hin- und her am Ende.
    1846:	2a06      	cmp	r2, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:503
    bne 2f
    1848:	d101      	bne.n	184e <alloc_minmax+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:504
      bl swap_allocator
    184a:	f7ff fb8e 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:509
2:

    @ Es ist praktischer, eine eventuelle Konstante in NOS zu haben... Dann kann die Konstante direkt aus r0/r1 geholt werden.
    @ Da durch die Faltung höchstens eine Konstante auftreten kann, ist alles kein Problem.
    ldr r1, [r0, #offset_state_tos]
    184e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:510
    cmp r1, #constant @ Ist TOS also eine Konstante, welchsele ich.
    1850:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:511
    bne 2f
    1852:	d101      	bne.n	1858 <alloc_minmax+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:512
      bl swap_allocator
    1854:	f7ff fb89 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:515
2:  @ Konstante, wenn vorhanden, in NOS !

    bl make_tos_changeable       @ Wenn nötig, eine Elementkopie anlegen
    1858:	f7fe feaf 	bl	5ba <make_tos_changeable>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:516
    bl expect_nos_in_register    @ Register kommt in r1 zurück
    185c:	f7fe fe82 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:520


    @ r1: NOS
    lsls r1, #3
    1860:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:523

    @ r2: TOS
    ldr r2, [r0, #offset_state_tos]
    1862:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:525

    pushdaconstw 0x4280 @ cmp r0, r0
    1864:	f847 6d04 	str.w	r6, [r7, #-4]!
    1868:	f244 2680 	movw	r6, #17024	; 0x4280
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:526
    orrs tos, r1
    186c:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:527
    orrs tos, r2
    186e:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:528
    bl hkomma
    1870:	f002 f896 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:529
    bl hkomma @ Sprung einfügen
    1874:	f002 f894 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:530
    pushdaconstw 0x4600 @ mov r0, r0
    1878:	f847 6d04 	str.w	r6, [r7, #-4]!
    187c:	f244 6600 	movw	r6, #17920	; 0x4600
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:531
    orrs tos, r1
    1880:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:532
    orrs tos, r2
    1882:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:533
    bl hkomma
    1884:	f002 f88c 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:535

    bl eliminiere_nos
    1888:	f7fe fd2f 	bl	2ea <eliminiere_nos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:536
    pop {pc}
    188c:	bd00      	pop	{pc}
    188e:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:312
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
    1890:	f1b00f00 	.word	0xf1b00f00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:355
    ldr r0, =allocator_base
    1894:	20000020 	.word	0x20000020

00001898 <Dictionary_372>:
Dictionary_372():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/comparisions.s:355
    1898:	000018d6 	.word	0x000018d6
    189c:	6d040000 	.word	0x6d040000
    18a0:	766f      	.short	0x766f
    18a2:	65          	.byte	0x65
	...

000018a4 <Code_372>:
Code_372():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:27
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "move"  @ Move some bytes around. This can cope with overlapping memory areas.
move:  @ ( Quelladdr Zieladdr Byteanzahl -- ) ( Source Destination Count -- )
@------------------------------------------------------------------------------

  push {r0, r1, r2, lr}
    18a4:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:29

  popda r1 @ Count
    18a6:	0031      	movs	r1, r6
    18a8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:30
  popda r2 @ Destination address
    18aa:	0032      	movs	r2, r6
    18ac:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:34
  @ TOS:     Source address

  @ Count > 0 ?
  cmp r1, #0
    18ae:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:35
  beq 3f @ Nothing to do if count is zero.
    18b0:	d00f      	beq.n	18d2 <Code_372+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:38

  @ Compare source and destination address to find out which direction to copy.
  cmp r2, tos
    18b2:	42b2      	cmp	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:39
  beq 3f @ If source and destionation are the same, nothing to do.
    18b4:	d00d      	beq.n	18d2 <Code_372+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:40
  blo 2f
    18b6:	d306      	bcc.n	18c6 <Code_372+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:42

  subs tos, #1
    18b8:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:43
  subs r2, #1
    18ba:	3a01      	subs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:46

1:@ Source > Destination --> Backward move
  ldrb r0, [tos, r1]
    18bc:	5c70      	ldrb	r0, [r6, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:47
  strb r0, [r2, r1]
    18be:	5450      	strb	r0, [r2, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:48
  subs r1, #1
    18c0:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:49
  bne 1b
    18c2:	d1fb      	bne.n	18bc <Code_372+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:50
  b 3f
    18c4:	e005      	b.n	18d2 <Code_372+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:53

2:@ Source < Destination --> Forward move
  ldrb r0, [tos]
    18c6:	7830      	ldrb	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:54
  strb r0, [r2]
    18c8:	7010      	strb	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:55
  adds tos, #1
    18ca:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:56
  adds r2, #1
    18cc:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:57
  subs r1, #1
    18ce:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:58
  bne 2b
    18d0:	d1f9      	bne.n	18c6 <Code_372+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:60

3:drop
    18d2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:61
  pop {r0, r1, r2, pc}
    18d4:	bd07      	pop	{r0, r1, r2, pc}

000018d6 <Dictionary_376>:
Dictionary_376():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:61
    18d6:	18f8      	.short	0x18f8
    18d8:	00000000 	.word	0x00000000
    18dc:	6c696604 	.word	0x6c696604
    18e0:	6c          	.byte	0x6c
	...

000018e2 <Code_376>:
Code_376():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:69
  Wortbirne Flag_visible, "fill"  @ Fill memory with given byte.
  @ ( Destination Count Filling -- )
@------------------------------------------------------------------------------
  @ 6.1.1540 FILL CORE ( c-addr u char -- ) If u is greater than zero, store char in each of u consecutive characters of memory beginning at c-addr.

  popda r0 @ Filling byte
    18e2:	0030      	movs	r0, r6
    18e4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:70
  popda r1 @ Count
    18e6:	0031      	movs	r1, r6
    18e8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:73
  @ TOS      Destination

  cmp r1, #0
    18ea:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:74
  beq 2f
    18ec:	d002      	beq.n	18f4 <Code_376+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:76

1:subs r1, #1
    18ee:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:77
  strb r0, [tos, r1]
    18f0:	5470      	strb	r0, [r6, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:78
  bne 1b
    18f2:	d1fc      	bne.n	18ee <Code_376+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:80

2:drop
    18f4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:81
  bx lr
    18f6:	4770      	bx	lr

000018f8 <Dictionary_380>:
Dictionary_380():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:81
    18f8:	0000193a 	.word	0x0000193a
    18fc:	40010220 	.word	0x40010220

00001900 <Code_380>:
Code_380():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:87

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "@" @ ( 32-addr -- x )
                              @ Loads the cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldr tos, [tos]
    1900:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:88
  bx lr
    1902:	4770      	bx	lr

00001904 <allocator_4fetch>:
allocator_4fetch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:91

allocator_4fetch:
    pushdaconstw 0x6800 @ ldr r0, [r0, #0] Opcode
    1904:	f847 6d04 	str.w	r6, [r7, #-4]!
    1908:	f646 0600 	movw	r6, #26624	; 0x6800

0000190c <allocator_4fetch_anderer_opcode>:
allocator_4fetch_anderer_opcode():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:94

allocator_4fetch_anderer_opcode:
    push {lr}
    190c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:95
    bl expect_one_element
    190e:	f7fe fde3 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:98

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
    1912:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:99
    cmp r3, #constant
    1914:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:100
    bne 2f
    1916:	d108      	bne.n	192a <allocator_4fetch_anderer_opcode+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:101
      ldr r3, [r0, #offset_constant_tos]
    1918:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:104

      @ Die fünf Bits, die in den LDR-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x7C @ %1111100
    191a:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:105
      ands r1, r3   @ Bits herausholen
    191c:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:106
      lsls r1, #4
    191e:	0109      	lsls	r1, r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:107
      orrs tos, r1
    1920:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:109

      movs r1, 0x7C @ %1111100
    1922:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:110
      bics r3, r1
    1924:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:112

      bl generiere_adresskonstante
    1926:	f7fe fd64 	bl	3f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:115

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Laden bereitliegt.
    lsls r3, #3
    192a:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:116
    orrs tos, r3
    192c:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:119

    @ Elementkopien umschiffen - das Ladeergebnis benötigt auf jeden Fall einen frischen Register:
    bl tos_registerwechsel
    192e:	f7fe fe5d 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:121

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
    1932:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:122
    bl hkomma
    1934:	f002 f834 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:123
    pop {pc}
    1938:	bd00      	pop	{pc}

0000193a <Dictionary_383>:
Dictionary_383():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:123
    193a:	1992      	.short	0x1992
    193c:	02200000 	.word	0x02200000
    1940:	2101      	.short	0x2101

00001942 <Code_383>:
Code_383():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:129

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "!" @ ( x 32-addr -- )
@ Given a value 'x' and a cell-aligned address 'addr', stores 'x' to memory at 'addr', consuming both.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1942:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:130
  str r0, [tos]      @ Popping both saves a cycle.
    1944:	6030      	str	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:131
  movs tos, r1
    1946:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:132
  bx lr
    1948:	4770      	bx	lr

0000194a <allocator_4store>:
allocator_4store():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:135

allocator_4store:
    pushdaconstw 0x6000 @ str r0, [r0, #0] Opcode
    194a:	f847 6d04 	str.w	r6, [r7, #-4]!
    194e:	f246 0600 	movw	r6, #24576	; 0x6000

00001952 <allocator_4store_anderer_opcode>:
allocator_4store_anderer_opcode():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:138

allocator_4store_anderer_opcode:
    push {lr}
    1952:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:139
    bl expect_two_elements
    1954:	f7fe fdca 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:142

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
    1958:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:143
    cmp r3, #constant
    195a:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:144
    bne 2f
    195c:	d109      	bne.n	1972 <allocator_4store_anderer_opcode+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:145
      ldr r3, [r0, #offset_constant_tos]
    195e:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:148

      @ Die fünf Bits, die in den STR-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x7C @ %1111100
    1960:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:149
      ands r1, r3   @ Bits herausholen
    1962:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:150
      lsls r1, #4
    1964:	0109      	lsls	r1, r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:151
      orrs tos, r1
    1966:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:153

      movs r1, 0x7C @ %1111100
    1968:	217c      	movs	r1, #124	; 0x7c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:154
      bics r3, r1
    196a:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:156

      bl generiere_adresskonstante
    196c:	f7fe fd41 	bl	3f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:157
      str r3, [r0, #offset_state_tos]
    1970:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:160

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Schreiben bereitliegt.
    lsls r3, #3
    1972:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:161
    orrs tos, r3
    1974:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:165


    @ Sollte NOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_nos]
    1976:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:166
    cmp r3, #constant
    1978:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:167
    bne 3f
    197a:	d102      	bne.n	1982 <allocator_4store_anderer_opcode+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:168
      ldr r3, [r0, #offset_constant_nos]
    197c:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:169
      bl generiere_konstante
    197e:	f7fe fd2c 	bl	3da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:171
3:  @ r3 sagt nun in jedem Fall, in welchem Register der Inhalt zum Schreiben bereitliegt.
    orrs tos, r3
    1982:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:172
    bl hkomma
    1984:	f002 f80c 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:174

    bl eliminiere_tos
    1988:	f7fe fca9 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:175
    bl eliminiere_tos
    198c:	f7fe fca7 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:176
    pop {pc}
    1990:	bd00      	pop	{pc}

00001992 <Dictionary_386>:
Dictionary_386():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:176
    1992:	19c8      	.short	0x19c8
    1994:	02200000 	.word	0x02200000
    1998:	2b02      	.short	0x2b02
    199a:	21          	.byte	0x21
	...

0000199c <Code_386>:
Code_386():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:182

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "+!" @ ( x 32-addr -- )
                               @ Adds 'x' to the memory cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    199c:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:183
  ldr  r2, [tos]     @ Load the current cell value
    199e:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:184
  adds r2, r0        @ Do the add
    19a0:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:185
  str  r2, [tos]     @ Store it back
    19a2:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:186
  movs tos, r1
    19a4:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:187
  bx lr
    19a6:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:189

    push {lr}
    19a8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:190
      bl expect_two_elements
    19aa:	f7fe fd9f 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:191
      bl dup_allocator
    19ae:	f7ff faa7 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:192
      bl allocator_4fetch
    19b2:	f7ff ffa7 	bl	1904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:193
      bl rot_allocator
    19b6:	f7ff fb2d 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:194
      bl plus_allocator
    19ba:	f000 fd4a 	bl	2452 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:195
      bl swap_allocator
    19be:	f7ff fad4 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:196
      bl allocator_4store
    19c2:	f7ff ffc2 	bl	194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:197
    pop {pc}
    19c6:	bd00      	pop	{pc}

000019c8 <Dictionary_387>:
Dictionary_387():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:197
    19c8:	00001a0c 	.word	0x00001a0c
    19cc:	68020220 	.word	0x68020220
    19d0:	40          	.byte	0x40
	...

000019d2 <Code_387>:
Code_387():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:214

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "h@" @ ( 16-addr -- x )
                              @ Loads the half-word at 'addr'.
@ -----------------------------------------------------------------------------
  ldrh tos, [tos]
    19d2:	8836      	ldrh	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:215
  bx lr
    19d4:	4770      	bx	lr

000019d6 <allocator_2fetch>:
allocator_2fetch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:218

allocator_2fetch:
    push {lr}
    19d6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:219
    bl expect_one_element
    19d8:	f7fe fd7e 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:220
    pushdaconstw 0x8800 @ ldrh r0, [r0, #0] Opcode
    19dc:	f847 6d04 	str.w	r6, [r7, #-4]!
    19e0:	f648 0600 	movw	r6, #34816	; 0x8800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:223

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
    19e4:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:224
    cmp r3, #constant
    19e6:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:225
    bne 2f
    19e8:	d108      	bne.n	19fc <allocator_2fetch+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:226
      ldr r3, [r0, #offset_constant_tos]
    19ea:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:229

      @ Die fünf Bits, die in den LDRH-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x3E @ %1111100
    19ec:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:230
      ands r1, r3   @ Bits herausholen
    19ee:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:231
      lsls r1, #5
    19f0:	0149      	lsls	r1, r1, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:232
      orrs tos, r1
    19f2:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:234

      movs r1, 0x3E @ %1111100
    19f4:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:235
      bics r3, r1
    19f6:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:237

      bl generiere_adresskonstante
    19f8:	f7fe fcfb 	bl	3f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:240

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Laden bereitliegt.
    lsls r3, #3
    19fc:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:241
    orrs tos, r3
    19fe:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:244

    @ Elementkopien umschiffen - das Ladeergebnis benötigt auf jeden Fall einen frischen Register:
    bl tos_registerwechsel
    1a00:	f7fe fdf4 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:246

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
    1a04:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:247
    bl hkomma
    1a06:	f001 ffcb 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:248
    pop {pc}
    1a0a:	bd00      	pop	{pc}

00001a0c <Dictionary_390>:
Dictionary_390():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:248
    1a0c:	00001a66 	.word	0x00001a66
    1a10:	68020220 	.word	0x68020220
    1a14:	21          	.byte	0x21
	...

00001a16 <Code_390>:
Code_390():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:254

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "h!" @ ( x 16-addr -- )
hstore: @ Given a value 'x' and an 16-bit-aligned address 'addr', stores 'x' to memory at 'addr', consuming both.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1a16:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:255
  strh r0, [tos]     @ Popping both saves a cycle.
    1a18:	8030      	strh	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:256
  movs tos, r1
    1a1a:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:257
  bx lr
    1a1c:	4770      	bx	lr

00001a1e <allocator_2store>:
allocator_2store():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:260

allocator_2store:
    push {lr}
    1a1e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:261
    bl expect_two_elements
    1a20:	f7fe fd64 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:262
    pushdaconstw 0x8000 @ strh r0, [r0, #0] Opcode
    1a24:	f847 6d04 	str.w	r6, [r7, #-4]!
    1a28:	f248 0600 	movw	r6, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:265

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
    1a2c:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:266
    cmp r3, #constant
    1a2e:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:267
    bne 2f
    1a30:	d109      	bne.n	1a46 <allocator_2store+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:268
      ldr r3, [r0, #offset_constant_tos]
    1a32:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:271

      @ Die fünf Bits, die in den STRH-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x3E @ %1111100
    1a34:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:272
      ands r1, r3   @ Bits herausholen
    1a36:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:273
      lsls r1, #5
    1a38:	0149      	lsls	r1, r1, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:274
      orrs tos, r1
    1a3a:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:276

      movs r1, 0x3E @ %1111100
    1a3c:	213e      	movs	r1, #62	; 0x3e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:277
      bics r3, r1
    1a3e:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:279

      bl generiere_adresskonstante
    1a40:	f7fe fcd7 	bl	3f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:280
      str r3, [r0, #offset_state_tos]
    1a44:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:283

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Schreiben bereitliegt.
    lsls r3, #3
    1a46:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:284
    orrs tos, r3
    1a48:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:288


    @ Sollte NOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_nos]
    1a4a:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:289
    cmp r3, #constant
    1a4c:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:290
    bne 3f
    1a4e:	d102      	bne.n	1a56 <allocator_2store+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:291
      ldr r3, [r0, #offset_constant_nos]
    1a50:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:292
      bl generiere_konstante
    1a52:	f7fe fcc2 	bl	3da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:294
3:  @ r3 sagt nun in jedem Fall, in welchem Register der Inhalt zum Schreiben bereitliegt.
    orrs tos, r3
    1a56:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:295
    bl hkomma
    1a58:	f001 ffa2 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:297

    bl eliminiere_tos
    1a5c:	f7fe fc3f 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:298
    bl eliminiere_tos
    1a60:	f7fe fc3d 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:299
    pop {pc}
    1a64:	bd00      	pop	{pc}

00001a66 <Dictionary_393>:
Dictionary_393():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:299
    1a66:	1a9c      	.short	0x1a9c
    1a68:	02200000 	.word	0x02200000
    1a6c:	212b6803 	.word	0x212b6803

00001a70 <Code_393>:
Code_393():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:306

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "h+!" @ ( x 16-addr -- )
                                @ Adds 'x' to the memory cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1a70:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:307
  ldrh r2, [tos]     @ Load the current cell value
    1a72:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:308
  adds r2, r0        @ Do the add
    1a74:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:309
  strh r2, [tos]     @ Store it back
    1a76:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:310
  movs tos, r1
    1a78:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:311
  bx lr
    1a7a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:313

    push {lr}
    1a7c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:314
      bl expect_two_elements
    1a7e:	f7fe fd35 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:315
      bl dup_allocator
    1a82:	f7ff fa3d 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:316
      bl allocator_2fetch
    1a86:	f7ff ffa6 	bl	19d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:317
      bl rot_allocator
    1a8a:	f7ff fac3 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:318
      bl plus_allocator
    1a8e:	f000 fce0 	bl	2452 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:319
      bl swap_allocator
    1a92:	f7ff fa6a 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:320
      bl allocator_2store
    1a96:	f7ff ffc2 	bl	1a1e <allocator_2store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:321
    pop {pc}
    1a9a:	bd00      	pop	{pc}

00001a9c <Dictionary_394>:
Dictionary_394():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:321
    1a9c:	00001ae0 	.word	0x00001ae0
    1aa0:	63020220 	.word	0x63020220
    1aa4:	40          	.byte	0x40
	...

00001aa6 <Code_394>:
Code_394():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:328

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "c@" @ ( 8-addr -- x )
                              @ Loads the byte at 'addr'.
@ -----------------------------------------------------------------------------
  ldrb tos, [tos]
    1aa6:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:329
  bx lr
    1aa8:	4770      	bx	lr

00001aaa <allocator_1fetch>:
allocator_1fetch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:332

allocator_1fetch:
    push {lr}
    1aaa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:333
    bl expect_one_element
    1aac:	f7fe fd14 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:334
    pushdaconstw 0x7800 @ ldrb r0, [r0, #0] Opcode
    1ab0:	f847 6d04 	str.w	r6, [r7, #-4]!
    1ab4:	f647 0600 	movw	r6, #30720	; 0x7800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:337

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
    1ab8:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:338
    cmp r3, #constant
    1aba:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:339
    bne 2f
    1abc:	d108      	bne.n	1ad0 <allocator_1fetch+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:340
      ldr r3, [r0, #offset_constant_tos]
    1abe:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:343

      @ Die fünf Bits, die in den LDRB-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x1F @ %111110
    1ac0:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:344
      ands r1, r3   @ Bits herausholen
    1ac2:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:345
      lsls r1, #6
    1ac4:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:346
      orrs tos, r1
    1ac6:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:348

      movs r1, 0x1F @ %111110
    1ac8:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:349
      bics r3, r1
    1aca:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:351

      bl generiere_adresskonstante
    1acc:	f7fe fc91 	bl	3f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:354

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Laden bereitliegt.
    lsls r3, #3
    1ad0:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:355
    orrs tos, r3
    1ad2:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:358

    @ Elementkopien umschiffen - das Ladeergebnis benötigt auf jeden Fall einen frischen Register:
    bl tos_registerwechsel
    1ad4:	f7fe fd8a 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:360

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
    1ad8:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:361
    bl hkomma
    1ada:	f001 ff61 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:362
    pop {pc}
    1ade:	bd00      	pop	{pc}

00001ae0 <Dictionary_397>:
Dictionary_397():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:362
    1ae0:	00001b3a 	.word	0x00001b3a
    1ae4:	63020220 	.word	0x63020220
    1ae8:	21          	.byte	0x21
	...

00001aea <Code_397>:
Code_397():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:368

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "c!" @ ( x 8-addr -- )
cstore: @ Given a value 'x' and an 8-bit-aligned address 'addr', stores 'x' to memory at 'addr', consuming both.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1aea:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:369
  strb r0, [tos]     @ Popping both saves a cycle.
    1aec:	7030      	strb	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:370
  movs tos, r1
    1aee:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:371
  bx lr
    1af0:	4770      	bx	lr

00001af2 <allocator_1store>:
allocator_1store():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:374

allocator_1store:
    push {lr}
    1af2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:375
    bl expect_two_elements
    1af4:	f7fe fcfa 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:376
    pushdaconstw 0x7000 @ strb r0, [r0, #0] Opcode
    1af8:	f847 6d04 	str.w	r6, [r7, #-4]!
    1afc:	f247 0600 	movw	r6, #28672	; 0x7000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:379

    @ Sollte TOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_tos]
    1b00:	6803      	ldr	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:380
    cmp r3, #constant
    1b02:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:381
    bne 2f
    1b04:	d109      	bne.n	1b1a <allocator_1store+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:382
      ldr r3, [r0, #offset_constant_tos]
    1b06:	6843      	ldr	r3, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:385

      @ Die fünf Bits, die in den STRB-Opcode passen, werden nun direkt dort eingepflegt.
      movs r1, 0x1F @ %111110
    1b08:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:386
      ands r1, r3   @ Bits herausholen
    1b0a:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:387
      lsls r1, #6
    1b0c:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:388
      orrs tos, r1
    1b0e:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:390

      movs r1, 0x1F @ %111110
    1b10:	211f      	movs	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:391
      bics r3, r1
    1b12:	438b      	bics	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:393

      bl generiere_adresskonstante
    1b14:	f7fe fc6d 	bl	3f2 <generiere_adresskonstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:394
      str r3, [r0, #offset_state_tos]
    1b18:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:397

2:  @ r3 sagt nun in jedem Fall, in welchem Register die Adresse zum Schreiben bereitliegt.
    lsls r3, #3
    1b1a:	00db      	lsls	r3, r3, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:398
    orrs tos, r3
    1b1c:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:402


    @ Sollte NOS gerade eine Konstante sein, generiere sie so gut es geht.
    ldr r3, [r0, #offset_state_nos]
    1b1e:	6883      	ldr	r3, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:403
    cmp r3, #constant
    1b20:	2b28      	cmp	r3, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:404
    bne 3f
    1b22:	d102      	bne.n	1b2a <allocator_1store+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:405
      ldr r3, [r0, #offset_constant_nos]
    1b24:	68c3      	ldr	r3, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:406
      bl generiere_konstante
    1b26:	f7fe fc58 	bl	3da <generiere_konstante>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:408
3:  @ r3 sagt nun in jedem Fall, in welchem Register der Inhalt zum Schreiben bereitliegt.
    orrs tos, r3
    1b2a:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:409
    bl hkomma
    1b2c:	f001 ff38 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:411

    bl eliminiere_tos
    1b30:	f7fe fbd5 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:412
    bl eliminiere_tos
    1b34:	f7fe fbd3 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:413
    pop {pc}
    1b38:	bd00      	pop	{pc}

00001b3a <Dictionary_400>:
Dictionary_400():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:413
    1b3a:	1b70      	.short	0x1b70
    1b3c:	02200000 	.word	0x02200000
    1b40:	212b6303 	.word	0x212b6303

00001b44 <Code_400>:
Code_400():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:419

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "c+!" @ ( x 8-addr -- )
                               @ Adds 'x' to the memory cell at 'addr'.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1b44:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:420
  ldrb r2, [tos]     @ Load the current cell value
    1b46:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:421
  adds r2, r0        @ Do the add
    1b48:	1812      	adds	r2, r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:422
  strb r2, [tos]     @ Store it back
    1b4a:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:423
  movs tos, r1
    1b4c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:424
  bx lr
    1b4e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:426

    push {lr}
    1b50:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:427
      bl expect_two_elements
    1b52:	f7fe fccb 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:428
      bl dup_allocator
    1b56:	f7ff f9d3 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:429
      bl allocator_1fetch
    1b5a:	f7ff ffa6 	bl	1aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:430
      bl rot_allocator
    1b5e:	f7ff fa59 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:431
      bl plus_allocator
    1b62:	f000 fc76 	bl	2452 <plus_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:432
      bl swap_allocator
    1b66:	f7ff fa00 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:433
      bl allocator_1store
    1b6a:	f7ff ffc2 	bl	1af2 <allocator_1store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:434
    pop {pc}
    1b6e:	bd00      	pop	{pc}

00001b70 <Dictionary_401>:
Dictionary_401():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:434
    1b70:	00001b94 	.word	0x00001b94
    1b74:	62040220 	.word	0x62040220
    1b78:	7369      	.short	0x7369
    1b7a:	21          	.byte	0x21
	...

00001b7c <Code_401>:
Code_401():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:442

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "bis!" @ ( x 32-addr -- )  Set bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1b7c:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:443
  ldr  r2, [tos] @ Alten Inhalt laden
    1b7e:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:444
  orrs r2, r0    @ Hinzuverodern
    1b80:	4302      	orrs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:445
  str  r2, [tos] @ Zurückschreiben
    1b82:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:446
  movs tos, r1
    1b84:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:447
  bx lr
    1b86:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:449

    push {lr}
    1b88:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:450
      pushdaconstw 0x4300 @ orrs r0, r0      Opcode
    1b8a:	f847 6d04 	str.w	r6, [r7, #-4]!
    1b8e:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:451
      b.n allocator_xorstore_intern
    1b92:	e030      	b.n	1bf6 <allocator_xorstore_intern>

00001b94 <Dictionary_404>:
Dictionary_404():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:451
    1b94:	00001bd4 	.word	0x00001bd4
    1b98:	62040220 	.word	0x62040220
    1b9c:	6369      	.short	0x6369
    1b9e:	21          	.byte	0x21
	...

00001ba0 <Code_404>:
Code_404():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:457

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "bic!" @ ( x 32-addr -- )  Clear bits
  @ Löscht die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1ba0:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:458
  ldr  r2, [tos] @ Alten Inhalt laden
    1ba2:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:459
  bics r2, r0    @ Bits löschen
    1ba4:	4382      	bics	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:460
  str  r2, [tos] @ Zurückschreiben
    1ba6:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:461
  movs tos, r1
    1ba8:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:462
  bx lr
    1baa:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:464

    push {lr}
    1bac:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:465
      bl expect_two_elements
    1bae:	f7fe fc9d 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:466
      bl dup_allocator
    1bb2:	f7ff f9a5 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:467
      bl allocator_4fetch
    1bb6:	f7ff fea5 	bl	1904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:468
      bl rot_allocator
    1bba:	f7ff fa2b 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:469
      pushdaconstw 0x4380 @ bics r0, r0      Opcode
    1bbe:	f847 6d04 	str.w	r6, [r7, #-4]!
    1bc2:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:470
      bl alloc_unkommutativ
    1bc6:	f7ff fbf0 	bl	13aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:471
      bl swap_allocator
    1bca:	f7ff f9ce 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:472
      bl allocator_4store
    1bce:	f7ff febc 	bl	194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:473
    pop {pc}
    1bd2:	bd00      	pop	{pc}

00001bd4 <Dictionary_407>:
Dictionary_407():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:473
    1bd4:	00001c14 	.word	0x00001c14
    1bd8:	78040220 	.word	0x78040220
    1bdc:	726f      	.short	0x726f
    1bde:	21          	.byte	0x21
	...

00001be0 <Code_407>:
Code_407():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:479

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "xor!" @ ( x 32-addr -- )  Toggle bits
  @ Wechselt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1be0:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:480
  ldr  r2, [tos] @ Alten Inhalt laden
    1be2:	6832      	ldr	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:481
  eors r2, r0    @ Bits umkehren
    1be4:	4042      	eors	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:482
  str  r2, [tos] @ Zurückschreiben
    1be6:	6032      	str	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:483
  movs tos, r1
    1be8:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:484
  bx lr
    1bea:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:486

    push {lr}
    1bec:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:487
      pushdaconstw 0x4040 @ eors r0, r0      Opcode
    1bee:	f847 6d04 	str.w	r6, [r7, #-4]!
    1bf2:	f244 0640 	movw	r6, #16448	; 0x4040

00001bf6 <allocator_xorstore_intern>:
allocator_xorstore_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:489
allocator_xorstore_intern:
      bl expect_two_elements
    1bf6:	f7fe fc79 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:490
      bl dup_allocator
    1bfa:	f7ff f981 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:491
      bl allocator_4fetch
    1bfe:	f7ff fe81 	bl	1904 <allocator_4fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:492
      bl rot_allocator
    1c02:	f7ff fa07 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:494
      @ ( Opcode )
      bl alloc_kommutativ
    1c06:	f7ff fbd4 	bl	13b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:495
      bl swap_allocator
    1c0a:	f7ff f9ae 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:496
      bl allocator_4store
    1c0e:	f7ff fe9c 	bl	194a <allocator_4store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:497
    pop {pc}
    1c12:	bd00      	pop	{pc}

00001c14 <Dictionary_410>:
Dictionary_410():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:497
    1c14:	00001c4a 	.word	0x00001c4a
    1c18:	62040220 	.word	0x62040220
    1c1c:	7469      	.short	0x7469
    1c1e:	40          	.byte	0x40
	...

00001c20 <Code_410>:
Code_410():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:503

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "bit@" @ ( x 32-addr -- Flag )  Check bits
  @ Prüft, ob Bits in der Speicherstelle gesetzt sind
@ -----------------------------------------------------------------------------
  ldm psp!, {r0} @ Bitmaske holen
    1c20:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:504
  ldr tos, [tos] @ Speicherinhalt holen
    1c22:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:505
  ands tos, r0   @ Bleibt nach AND etwas über ?
    1c24:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:513
  subs tos, #1
  sbcs tos, tos
  mvns tos, tos
  bx lr
  .else
  it ne
    1c26:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:514
  movne tos, #-1 @ Bleibt etwas über, mache ein ordentliches true-Flag daraus.
    1c28:	f04f 36ff 	movne.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:515
  bx lr
    1c2c:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:518
  .endif

    push {lr}
    1c2e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:519
      bl expect_two_elements
    1c30:	f7fe fc5c 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:520
      bl allocator_4fetch
    1c34:	f7ff fe66 	bl	1904 <allocator_4fetch>

00001c38 <allocator_bitfetch_intern>:
allocator_bitfetch_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:522
allocator_bitfetch_intern:
      pushdaconstw 0x4000 @ ands r0, r0 Opcode
    1c38:	f847 6d04 	str.w	r6, [r7, #-4]!
    1c3c:	f244 0600 	movw	r6, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:523
      bl alloc_kommutativ
    1c40:	f7ff fbb7 	bl	13b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:524
      bl allocator_unequal_zero
    1c44:	f7ff fc2c 	bl	14a0 <allocator_unequal_zero>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:525
    pop {pc}
    1c48:	bd00      	pop	{pc}

00001c4a <Dictionary_413>:
Dictionary_413():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:525
    1c4a:	1c6e      	.short	0x1c6e
    1c4c:	02200000 	.word	0x02200000
    1c50:	69626805 	.word	0x69626805
    1c54:	2173      	.short	0x2173

00001c56 <Code_413>:
Code_413():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:531

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hbis!" @ ( x 16-addr -- )  Set bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1c56:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:532
  ldrh r2, [tos] @ Alten Inhalt laden
    1c58:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:533
  orrs r2, r0    @ Hinzuverodern
    1c5a:	4302      	orrs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:534
  strh r2, [tos] @ Zurückschreiben
    1c5c:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:535
  movs tos, r1
    1c5e:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:536
  bx lr
    1c60:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:538

    push {lr}
    1c62:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:539
      pushdaconstw 0x4300 @ orrs r0, r0      Opcode
    1c64:	f847 6d04 	str.w	r6, [r7, #-4]!
    1c68:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:540
      b.n allocator_hxorstore_intern
    1c6c:	e030      	b.n	1cd0 <allocator_hxorstore_intern>

00001c6e <Dictionary_416>:
Dictionary_416():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:540
    1c6e:	1cae      	.short	0x1cae
    1c70:	02200000 	.word	0x02200000
    1c74:	69626805 	.word	0x69626805
    1c78:	2163      	.short	0x2163

00001c7a <Code_416>:
Code_416():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:546

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hbic!" @ ( x 16-addr -- )  Clear bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1c7a:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:547
  ldrh r2, [tos] @ Alten Inhalt laden
    1c7c:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:548
  bics r2, r0    @ Hinzuverodern
    1c7e:	4382      	bics	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:549
  strh r2, [tos] @ Zurückschreiben
    1c80:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:550
  movs tos, r1
    1c82:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:551
  bx lr
    1c84:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:553

    push {lr}
    1c86:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:554
      bl expect_two_elements
    1c88:	f7fe fc30 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:555
      bl dup_allocator
    1c8c:	f7ff f938 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:556
      bl allocator_2fetch
    1c90:	f7ff fea1 	bl	19d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:557
      bl rot_allocator
    1c94:	f7ff f9be 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:558
      pushdaconstw 0x4380 @ bics r0, r0      Opcode
    1c98:	f847 6d04 	str.w	r6, [r7, #-4]!
    1c9c:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:559
      bl alloc_unkommutativ
    1ca0:	f7ff fb83 	bl	13aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:560
      bl swap_allocator
    1ca4:	f7ff f961 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:561
      bl allocator_2store
    1ca8:	f7ff feb9 	bl	1a1e <allocator_2store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:562
    pop {pc}
    1cac:	bd00      	pop	{pc}

00001cae <Dictionary_419>:
Dictionary_419():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:562
    1cae:	1cee      	.short	0x1cee
    1cb0:	02200000 	.word	0x02200000
    1cb4:	6f786805 	.word	0x6f786805
    1cb8:	2172      	.short	0x2172

00001cba <Code_419>:
Code_419():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:568

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hxor!" @ ( x 16-addr -- )  Toggle bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1cba:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:569
  ldrh r2, [tos] @ Alten Inhalt laden
    1cbc:	8832      	ldrh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:570
  eors r2, r0    @ Hinzuverodern
    1cbe:	4042      	eors	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:571
  strh r2, [tos] @ Zurückschreiben
    1cc0:	8032      	strh	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:572
  movs tos, r1
    1cc2:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:573
  bx lr
    1cc4:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:575

    push {lr}
    1cc6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:576
      pushdaconstw 0x4040 @ eors r0, r0      Opcode
    1cc8:	f847 6d04 	str.w	r6, [r7, #-4]!
    1ccc:	f244 0640 	movw	r6, #16448	; 0x4040

00001cd0 <allocator_hxorstore_intern>:
allocator_hxorstore_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:578
allocator_hxorstore_intern:
      bl expect_two_elements
    1cd0:	f7fe fc0c 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:579
      bl dup_allocator
    1cd4:	f7ff f914 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:580
      bl allocator_2fetch
    1cd8:	f7ff fe7d 	bl	19d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:581
      bl rot_allocator
    1cdc:	f7ff f99a 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:583
      @ ( Opcode -- )
      bl alloc_kommutativ
    1ce0:	f7ff fb67 	bl	13b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:584
      bl swap_allocator
    1ce4:	f7ff f941 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:585
      bl allocator_2store
    1ce8:	f7ff fe99 	bl	1a1e <allocator_2store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:586
    pop {pc}
    1cec:	bd00      	pop	{pc}

00001cee <Dictionary_422>:
Dictionary_422():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:586
    1cee:	1d14      	.short	0x1d14
    1cf0:	02200000 	.word	0x02200000
    1cf4:	69626805 	.word	0x69626805
    1cf8:	4074      	.short	0x4074

00001cfa <Code_422>:
Code_422():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:592

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "hbit@" @ ( x 16-addr -- Flag )  Check bits
  @ Prüft, ob Bits in der Speicherstelle gesetzt sind
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}  @ Bitmaske holen
    1cfa:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:593
  ldrh tos, [tos] @ Speicherinhalt holen
    1cfc:	8836      	ldrh	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:594
  ands tos, r0    @ Bleibt nach AND etwas über ?
    1cfe:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:602
  subs tos, #1
  sbcs tos, tos
  mvns tos, tos
  bx lr
  .else
  it ne
    1d00:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:603
  movne tos, #-1 @ Bleibt etwas über, mache ein ordentliches true-Flag daraus.
    1d02:	f04f 36ff 	movne.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:604
  bx lr
    1d06:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:607
  .endif

    push {lr}
    1d08:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:608
      bl expect_two_elements
    1d0a:	f7fe fbef 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:609
      bl allocator_2fetch
    1d0e:	f7ff fe62 	bl	19d6 <allocator_2fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:610
      b.n allocator_bitfetch_intern
    1d12:	e791      	b.n	1c38 <allocator_bitfetch_intern>

00001d14 <Dictionary_423>:
Dictionary_423():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:610
    1d14:	00001d38 	.word	0x00001d38
    1d18:	63050220 	.word	0x63050220
    1d1c:	21736962 	.word	0x21736962

00001d20 <Code_423>:
Code_423():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:616

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cbis!" @ ( x 8-addr -- )  Set bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1d20:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:617
  ldrb r2, [tos] @ Alten Inhalt laden
    1d22:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:618
  orrs r2, r0    @ Hinzuverodern
    1d24:	4302      	orrs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:619
  strb r2, [tos] @ Zurückschreiben
    1d26:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:620
  movs tos, r1
    1d28:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:621
  bx lr
    1d2a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:623

    push {lr}
    1d2c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:624
      pushdaconstw 0x4300 @ orrs r0, r0      Opcode
    1d2e:	f847 6d04 	str.w	r6, [r7, #-4]!
    1d32:	f244 3600 	movw	r6, #17152	; 0x4300
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:625
      b.n allocator_cxorstore_intern
    1d36:	e030      	b.n	1d9a <allocator_cxorstore_intern>

00001d38 <Dictionary_426>:
Dictionary_426():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:625
    1d38:	00001d78 	.word	0x00001d78
    1d3c:	63050220 	.word	0x63050220
    1d40:	21636962 	.word	0x21636962

00001d44 <Code_426>:
Code_426():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:631

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cbic!" @ ( x 8-addr -- )  Clear bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1d44:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:632
  ldrb r2, [tos] @ Alten Inhalt laden
    1d46:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:633
  bics r2, r0    @ Hinzuverodern
    1d48:	4382      	bics	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:634
  strb r2, [tos] @ Zurückschreiben
    1d4a:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:635
  movs tos, r1
    1d4c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:636
  bx lr
    1d4e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:638

    push {lr}
    1d50:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:639
      bl expect_two_elements
    1d52:	f7fe fbcb 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:640
      bl dup_allocator
    1d56:	f7ff f8d3 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:641
      bl allocator_1fetch
    1d5a:	f7ff fea6 	bl	1aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:642
      bl rot_allocator
    1d5e:	f7ff f959 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:643
      pushdaconstw 0x4380 @ bics r0, r0      Opcode
    1d62:	f847 6d04 	str.w	r6, [r7, #-4]!
    1d66:	f244 3680 	movw	r6, #17280	; 0x4380
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:644
      bl alloc_unkommutativ
    1d6a:	f7ff fb1e 	bl	13aa <alloc_unkommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:645
      bl swap_allocator
    1d6e:	f7ff f8fc 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:646
      bl allocator_1store
    1d72:	f7ff febe 	bl	1af2 <allocator_1store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:647
    pop {pc}
    1d76:	bd00      	pop	{pc}

00001d78 <Dictionary_429>:
Dictionary_429():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:647
    1d78:	00001db8 	.word	0x00001db8
    1d7c:	63050220 	.word	0x63050220
    1d80:	21726f78 	.word	0x21726f78

00001d84 <Code_429>:
Code_429():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:653

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cxor!" @ ( x 8-addr -- )  Toggle bits
  @ Setzt die Bits in der Speicherstelle
@ -----------------------------------------------------------------------------
  ldm psp!, {r0, r1} @ X is the new TOS after the store completes.
    1d84:	cf03      	ldmia	r7!, {r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:654
  ldrb r2, [tos] @ Alten Inhalt laden
    1d86:	7832      	ldrb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:655
  eors r2, r0     @ Hinzuverodern
    1d88:	4042      	eors	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:656
  strb r2, [tos] @ Zurückschreiben
    1d8a:	7032      	strb	r2, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:657
  movs tos, r1
    1d8c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:658
  bx lr
    1d8e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:660

    push {lr}
    1d90:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:661
      pushdaconstw 0x4040 @ eors r0, r0      Opcode
    1d92:	f847 6d04 	str.w	r6, [r7, #-4]!
    1d96:	f244 0640 	movw	r6, #16448	; 0x4040

00001d9a <allocator_cxorstore_intern>:
allocator_cxorstore_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:663
allocator_cxorstore_intern:
      bl expect_two_elements
    1d9a:	f7fe fba7 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:664
      bl dup_allocator
    1d9e:	f7ff f8af 	bl	f00 <dup_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:665
      bl allocator_1fetch
    1da2:	f7ff fe82 	bl	1aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:666
      bl rot_allocator
    1da6:	f7ff f935 	bl	1014 <rot_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:668
      @ ( Opcode -- )
      bl alloc_kommutativ
    1daa:	f7ff fb02 	bl	13b2 <alloc_kommutativ>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:669
      bl swap_allocator
    1dae:	f7ff f8dc 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:670
      bl allocator_1store
    1db2:	f7ff fe9e 	bl	1af2 <allocator_1store>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:671
    pop {pc}
    1db6:	bd00      	pop	{pc}

00001db8 <Dictionary_432>:
Dictionary_432():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:671
    1db8:	00001dde 	.word	0x00001dde
    1dbc:	63050220 	.word	0x63050220
    1dc0:	40746962 	.word	0x40746962

00001dc4 <Code_432>:
Code_432():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:677

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "cbit@" @ ( x 8-addr -- Flag )  Check bits
  @ Prüft, ob Bits in der Speicherstelle gesetzt sind
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}  @ Bitmaske holen
    1dc4:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:678
  ldrb tos, [tos] @ Speicherinhalt holen
    1dc6:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:679
  ands tos, r0    @ Bleibt nach AND etwas über ?
    1dc8:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:687
  subs tos, #1
  sbcs tos, tos
  mvns tos, tos
  bx lr
  .else
  it ne
    1dca:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:688
  movne tos, #-1 @ Bleibt etwas über, mache ein ordentliches true-Flag daraus.
    1dcc:	f04f 36ff 	movne.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:689
  bx lr
    1dd0:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:692
  .endif

    push {lr}
    1dd2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:693
      bl expect_two_elements
    1dd4:	f7fe fb8a 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:694
      bl allocator_1fetch
    1dd8:	f7ff fe67 	bl	1aaa <allocator_1fetch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:695
      b.n allocator_bitfetch_intern
    1ddc:	e72c      	b.n	1c38 <allocator_bitfetch_intern>

00001dde <Dictionary_433>:
Dictionary_433():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/memory.s:695
    1dde:	1dfc      	.short	0x1dfc
    1de0:	00000000 	.word	0x00000000
    1de4:	616c660c 	.word	0x616c660c
    1de8:	342d6873 	.word	0x342d6873
    1dec:	484d3030 	.word	0x484d3030
    1df0:	7a          	.byte	0x7a
	...

00001df2 <Code_433>:
Code_433():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:32
@ -----------------------------------------------------------------------------
@ The STM32H750's internal flash needs two wait states when clocked for 400MHz
flash_400mhz:

    @ Configure the flash for 400MHz (2 wait states)
    ldr  r0, =Flash_ACR
    1df2:	f8df 0628 	ldr.w	r0, [pc, #1576]	; 241c <Code_470+0x54>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:33
    movs r1, #FLASH_ACR_2WS
    1df6:	2122      	movs	r1, #34	; 0x22
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:34
    str  r1, [r0]
    1df8:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:36

    bx   lr
    1dfa:	4770      	bx	lr

00001dfc <Dictionary_434>:
Dictionary_434():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:36
    1dfc:	00001e1a 	.word	0x00001e1a
    1e00:	730c0040 	.word	0x730c0040
    1e04:	722d6970 	.word	0x722d6970
    1e08:	2d646165 	.word	0x2d646165
    1e0c:	7273      	.short	0x7273
    1e0e:	31          	.byte	0x31
	...

00001e10 <Code_434>:
Code_434():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:49
Wortbirne Flag_visible|Flag_foldable_0, "spi-read-sr1" @ ( -- cmd )
@ -----------------------------------------------------------------------------
spi_read_reg1:

    @ Push the read status register 1 command on the stack
    stmdb psp!, {tos}
    1e10:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:50
    mov   tos, #SPI_READ_SR1
    1e14:	f04f 0605 	mov.w	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:52

    bx    lr
    1e18:	4770      	bx	lr

00001e1a <Dictionary_435>:
Dictionary_435():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:52
    1e1a:	1e38      	.short	0x1e38
    1e1c:	00400000 	.word	0x00400000
    1e20:	6970730c 	.word	0x6970730c
    1e24:	6165722d 	.word	0x6165722d
    1e28:	72732d64 	.word	0x72732d64
    1e2c:	32          	.byte	0x32
	...

00001e2e <Code_435>:
Code_435():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:60
Wortbirne Flag_visible|Flag_foldable_0, "spi-read-sr2" @ ( -- cmd )
@ -----------------------------------------------------------------------------
spi_read_reg2:

    @ Push the read status register 2 command on the stack
    stmdb psp!, {tos}
    1e2e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:61
    mov   tos, #SPI_READ_SR2
    1e32:	f04f 0635 	mov.w	r6, #53	; 0x35
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:63

    bx    lr
    1e36:	4770      	bx	lr

00001e38 <Dictionary_436>:
Dictionary_436():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:63
    1e38:	00001e56 	.word	0x00001e56
    1e3c:	730c0040 	.word	0x730c0040
    1e40:	722d6970 	.word	0x722d6970
    1e44:	2d646165 	.word	0x2d646165
    1e48:	7273      	.short	0x7273
    1e4a:	33          	.byte	0x33
	...

00001e4c <Code_436>:
Code_436():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:71
Wortbirne Flag_visible|Flag_foldable_0, "spi-read-sr3" @ ( -- cmd )
@ -----------------------------------------------------------------------------
spi_read_reg3:

    @ Push the read status register 3 command on the stack
    stmdb psp!, {tos}
    1e4c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:72
    mov   tos, #SPI_READ_SR3
    1e50:	f04f 0615 	mov.w	r6, #21
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:74

    bx    lr
    1e54:	4770      	bx	lr

00001e56 <Dictionary_437>:
Dictionary_437():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:74
    1e56:	1f1c      	.short	0x1f1c
    1e58:	00000000 	.word	0x00000000
    1e5c:	696e6908 	.word	0x696e6908
    1e60:	70732d74 	.word	0x70732d74
    1e64:	69          	.byte	0x69
	...

00001e66 <Code_437>:
Code_437():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:97
@ -----------------------------------------------------------------------------
@ Modify for weact board where PB3 CLK, PB4 MISO, PD7 MOSI, PD6 CS

init_spi:
    @ Enable GPIOB clock
    ldr  r0, =RCC_AHB4ENR
    1e66:	f8df 05b8 	ldr.w	r0, [pc, #1464]	; 2420 <Code_470+0x58>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:98
    ldr  r2, [r0]
    1e6a:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:99
    orr  r2, #RCC_AHB4ENR_GPIOBEN
    1e6c:	f042 0202 	orr.w	r2, r2, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:100
    str  r2, [r0]
    1e70:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:103

    @ Enable GPIOD clock
    ldr  r0, =RCC_AHB4ENR
    1e72:	f8df 05ac 	ldr.w	r0, [pc, #1452]	; 2420 <Code_470+0x58>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:104
    ldr  r2, [r0]
    1e76:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:105
    orr  r2, #RCC_AHB4ENR_GPIODEN
    1e78:	f042 0208 	orr.w	r2, r2, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:106
    str  r2, [r0]
    1e7c:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:109

    @ Enable SPI1 clock
    ldr  r1, =RCC_APB2ENR
    1e7e:	f8df 15a4 	ldr.w	r1, [pc, #1444]	; 2424 <Code_470+0x5c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:110
    ldr  r2, [r1] 
    1e82:	680a      	ldr	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:111
    orr  r2, #RCC_APB2ENR_SPI1EN
    1e84:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:112
    str  r2, [r1]
    1e88:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:115

    @ Load GPIOB base
    ldr  r0, =GPIOB_BASE
    1e8a:	f8df 059c 	ldr.w	r0, [pc, #1436]	; 2428 <Code_470+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:118

    @ Select PB4, PB3 alternate function AF5
    ldr  r2, [r0, #AFRL]
    1e8e:	f8d0 2020 	ldr.w	r2, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:119
    bic	 r2, #0x000FF000
    1e92:	f422 227f 	bic.w	r2, r2, #1044480	; 0xff000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:120
    orr  r2, #0x00055000
    1e96:	f442 22aa 	orr.w	r2, r2, #348160	; 0x55000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:121
    str  r2, [r0, #AFRL]
    1e9a:	f8c0 2020 	str.w	r2, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:124

    @ Drive PB4, PB3 as hard as possible
    ldr  r2, [r0, #OSPEEDR]
    1e9e:	f8d0 2008 	ldr.w	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:125
    orr  r2, #0b1111<<6
    1ea2:	f442 7270 	orr.w	r2, r2, #960	; 0x3c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:126
    str  r2, [r0, #OSPEEDR]
    1ea6:	f8c0 2008 	str.w	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:129

    @ Put PB4, PB3 into alternative function mode
    ldr  r2, [r0, #MODER]
    1eaa:	f8d0 2000 	ldr.w	r2, [r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:130
    bic	 r2, #0b1111<<6
    1eae:	f422 7270 	bic.w	r2, r2, #960	; 0x3c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:131
    orr  r2, #0b1010<<6
    1eb2:	f442 7220 	orr.w	r2, r2, #640	; 0x280
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:132
    str  r2, [r0, #MODER]
    1eb6:	f8c0 2000 	str.w	r2, [r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:135

    @ Load GPIOD base
    ldr  r0, =GPIOD_BASE
    1eba:	f8df 0570 	ldr.w	r0, [pc, #1392]	; 242c <Code_470+0x64>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:138

    @ Select PD7 alternate function AF5
    ldr  r2, [r0, #AFRL]
    1ebe:	f8d0 2020 	ldr.w	r2, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:139
    bic	 r2, #0xF0000000
    1ec2:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:140
    orr  r2, #0x50000000
    1ec6:	f042 42a0 	orr.w	r2, r2, #1342177280	; 0x50000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:141
    str  r2, [r0, #AFRL]
    1eca:	f8c0 2020 	str.w	r2, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:144

    @ Drive PD7 as hard as possible
    ldr  r2, [r0, #OSPEEDR]
    1ece:	f8d0 2008 	ldr.w	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:145
    orr  r2, #0b11<<14
    1ed2:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:146
    str  r2, [r0, #OSPEEDR]
    1ed6:	f8c0 2008 	str.w	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:149

    @ Put PD7 into alternative function mode
    ldr  r2, [r0, #MODER]
    1eda:	f8d0 2000 	ldr.w	r2, [r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:150
    bic	 r2, #0b11<<14
    1ede:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:151
    orr  r2, #0b10<<14
    1ee2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:152
    str  r2, [r0, #MODER]
    1ee6:	f8c0 2000 	str.w	r2, [r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:155

    @ enable PD6 as GPIO output for manually doing CS
    ldr  r2, [r0, #MODER]
    1eea:	f8d0 2000 	ldr.w	r2, [r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:156
    bic	 r2, #0b11<<12
    1eee:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:157
    orr  r2, #0b01<<12
    1ef2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:158
    str  r2, [r0, #MODER]
    1ef6:	f8c0 2000 	str.w	r2, [r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:160
    @ set it high to disable cs
    ldr  r2, [r0, #ODR]
    1efa:	f8d0 2014 	ldr.w	r2, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:161
    orr  r2, #1<<6
    1efe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:162
    str  r2, [r0, #ODR]
    1f02:	f8c0 2014 	str.w	r2, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:165

    @ Load SPI1 base address
    ldr  r1, =SPI1_BASE
    1f06:	f8df 1528 	ldr.w	r1, [pc, #1320]	; 2430 <Code_470+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:168

    @ Configure SPI baud rate (200MHz/4 = 50MHz)
    ldr  r2, =(0b001 << SPI1_CFG1_MBR_Shift) | (0b00111 << SPI1_CFG1_CRCSIZE_Shift) | (0b00111 << SPI1_CFG1_DSIZE_Shift)
    1f0a:	f8df 2528 	ldr.w	r2, [pc, #1320]	; 2434 <Code_470+0x6c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:169
    str  r2, [r1, #(SPI1_CFG1 - SPI1_BASE)]
    1f0e:	608a      	str	r2, [r1, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:172
    
    @ Configure SPI as master
    ldr  r2, =(SPI1_CFG2_AFCNTR | SPI1_CFG2_SSOE | SPI1_CFG2_MASTER|(0b0001 << SPI1_CFG2_MSSI_Shift))
    1f10:	f8df 2524 	ldr.w	r2, [pc, #1316]	; 2438 <Code_470+0x70>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:173
    str  r2, [r1, #(SPI1_CFG2 - SPI1_BASE)]
    1f14:	60ca      	str	r2, [r1, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:176

    @ Enable SPI
    movs r2, #SPI1_CR1_SPE
    1f16:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:177
    str  r2, [r1, #(SPI1_CR1 - SPI1_BASE)]
    1f18:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:179

    bx   lr
    1f1a:	4770      	bx	lr

00001f1c <Dictionary_438>:
Dictionary_438():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:179
    1f1c:	00001f82 	.word	0x00001f82
    1f20:	6a080000 	.word	0x6a080000
    1f24:	63656465 	.word	0x63656465
    1f28:	692d      	.short	0x692d
    1f2a:	64          	.byte	0x64
	...

00001f2c <Code_438>:
Code_438():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:187
  Wortbirne Flag_visible, "jedec-id" @ ( -- id )
@ -----------------------------------------------------------------------------
@ Query the SPI flash chip for its manufacturer, type and capacity
jedec_id:
    @ Load SPI1 base addresss
    ldr   r0, =SPI1_BASE
    1f2c:	f8df 0500 	ldr.w	r0, [pc, #1280]	; 2430 <Code_470+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:190

    @ Push the 0x9f command (repeated four times)
    stmdb psp!, {tos}
    1f30:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:191
    mov   tos, #0x9f9f9f9f
    1f34:	f04f 369f 	mov.w	r6, #2678038431	; 0x9f9f9f9f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:194
    
    @ Disable SPI
    movs  r1, #0
    1f38:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:195
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    1f3a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:198

    @ Set length
    movs  r1, #4
    1f3c:	2104      	movs	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:199
    str   r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    1f3e:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:202
    
    @ Clear TXTFC and EOT
    movs r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    1f40:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:203
    str  r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    1f42:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:206
    
    @ Enable SPI
    movs r1, #SPI1_CR1_SPE
    1f44:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:207
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    1f46:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:210

    @ set cs low
    enable_cs
    1f48:	f8df 54e0 	ldr.w	r5, [pc, #1248]	; 242c <Code_470+0x64>
    1f4c:	f8d5 4014 	ldr.w	r4, [r5, #20]
    1f50:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    1f54:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:213

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    1f58:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:214
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    1f5c:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:217
    
    @ Enqueue the JEDEC ID command (0x9f) and three repeptitions as dummies
    str  tos, [r0, #(SPI1_TXDR - SPI1_BASE)]
    1f5e:	6206      	str	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:224
    @ According to the JEDEC standard for SPI compatible memories from 2203
    @ the SPI flash responds to 0x9f with three bytes:
    @   * manufacturer ID (0xEF for Winbond)
    @   * memory type
    @   * capacity
1:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    1f60:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:225
    tst  r1, #SPI1_SR_RXWNE
    1f62:	f411 4f00 	tst.w	r1, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:226
    beq  1b
    1f66:	d0fb      	beq.n	1f60 <Code_438+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:227
    ldr  tos, [r0, #(SPI1_RXDR - SPI1_BASE)]
    1f68:	6b06      	ldr	r6, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:230

    @ Convert to host endianness and mask the dummy byte
    rev  tos, tos
    1f6a:	ba36      	rev	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:231
    bic  tos, #0xff000000
    1f6c:	f026 467f 	bic.w	r6, r6, #4278190080	; 0xff000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:234

    @ set cs high
    disable_cs
    1f70:	f8df 54b8 	ldr.w	r5, [pc, #1208]	; 242c <Code_470+0x64>
    1f74:	f8d5 4014 	ldr.w	r4, [r5, #20]
    1f78:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    1f7c:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:236

    bx   lr
    1f80:	4770      	bx	lr

00001f82 <Dictionary_441>:
Dictionary_441():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:236
    1f82:	1fa0      	.short	0x1fa0
    1f84:	00000000 	.word	0x00000000
    1f88:	656a3e0b 	.word	0x656a3e0b
    1f8c:	2d636564 	.word	0x2d636564
    1f90:	657a6973 	.word	0x657a6973

00001f94 <Code_441>:
Code_441():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:244
  Wortbirne Flag_visible, ">jedec-size" @ ( id -- size )
@ -----------------------------------------------------------------------------
to_jedec_size:

    @ Decode the JEDEC id into the flash capacity in bytes
    movs r0, #1
    1f94:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:245
    and  tos, #0xff
    1f96:	f006 06ff 	and.w	r6, r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:246
    lsl  tos, r0, tos
    1f9a:	fa00 f606 	lsl.w	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:248

    bx   lr
    1f9e:	4770      	bx	lr

00001fa0 <Dictionary_442>:
Dictionary_442():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:248
    1fa0:	00002000 	.word	0x00002000
    1fa4:	730b0000 	.word	0x730b0000
    1fa8:	732d6970 	.word	0x732d6970
    1fac:	75746174 	.word	0x75746174
    1fb0:	4073      	.short	0x4073

00001fb2 <Code_442>:
Code_442():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:255
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "spi-status@" @ ( reg -- byte )
@ -----------------------------------------------------------------------------
spi_status_read:
    @ Load SPI1 base addresss
    ldr   r0, =SPI1_BASE
    1fb2:	f8df 047c 	ldr.w	r0, [pc, #1148]	; 2430 <Code_470+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:258

    @ Reuse the read command as dummy
    bfi   tos, tos, #8, #8
    1fb6:	f366 260f 	bfi	r6, r6, #8, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:261
    
    @ Disable SPI
    movs  r1, #0
    1fba:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:262
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    1fbc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:265

    @ Set length
    movs  r1, #2
    1fbe:	2102      	movs	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:266
    str   r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    1fc0:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:269
    
    @ Clear TXTFC and EOT
    movs r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    1fc2:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:270
    str  r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    1fc4:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:273
    
    @ Enable SPI
    movs r1, #SPI1_CR1_SPE
    1fc6:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:274
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    1fc8:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:276

    enable_cs
    1fca:	f8df 5460 	ldr.w	r5, [pc, #1120]	; 242c <Code_470+0x64>
    1fce:	f8d5 4014 	ldr.w	r4, [r5, #20]
    1fd2:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    1fd6:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:279

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    1fda:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:280
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    1fde:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:283
    
    @ Enqueue the read status register command (twice, once as dummy)
    strh tos, [r0, #(SPI1_TXDR - SPI1_BASE)]
    1fe0:	8406      	strh	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:286
    
    @ Wait until both bytes are in Rx FIFO
1:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    1fe2:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:287
    tst  r1, #(2 << SPI1_SR_RXPLVL_Shift)
    1fe4:	f411 4f80 	tst.w	r1, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:288
    beq  1b
    1fe8:	d0fb      	beq.n	1fe2 <Code_442+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:289
    ldrh tos, [r0, #(SPI1_RXDR - SPI1_BASE)]
    1fea:	8e06      	ldrh	r6, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:292

    @ Keep only the second byte
    lsrs tos, #8
    1fec:	0a36      	lsrs	r6, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:294

    disable_cs
    1fee:	f8df 543c 	ldr.w	r5, [pc, #1084]	; 242c <Code_470+0x64>
    1ff2:	f8d5 4014 	ldr.w	r4, [r5, #20]
    1ff6:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    1ffa:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:296

    bx   lr
    1ffe:	4770      	bx	lr

00002000 <Dictionary_445>:
Dictionary_445():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:296
    2000:	0000206a 	.word	0x0000206a
    2004:	73060000 	.word	0x73060000
    2008:	632d6970 	.word	0x632d6970
    200c:	40          	.byte	0x40
	...

0000200e <Code_445>:
Code_445():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:304
  Wortbirne Flag_visible, "spi-c@" @ ( addr -- byte )
@ -----------------------------------------------------------------------------
@ Reads a single byte from SPI flash

    @ Load SPI1 base addresss
    ldr  r0, =SPI1_BASE
    200e:	f8df 0420 	ldr.w	r0, [pc, #1056]	; 2430 <Code_470+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:307

    @ Merge the 24 bit address and 0x03 (read) into a 32 bit big endian command 
    bic  tos, #0xff000000
    2012:	f026 467f 	bic.w	r6, r6, #4278190080	; 0xff000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:308
    add  tos, #0x03000000
    2016:	f106 7640 	add.w	r6, r6, #50331648	; 0x3000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:309
    rev  tos, tos
    201a:	ba36      	rev	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:312
    
    @ Disable SPI
    movs r1, #0
    201c:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:313
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    201e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:316

    @ Set length
    movs r1, #5
    2020:	2105      	movs	r1, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:317
    str  r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    2022:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:320
    
    @ Clear TXTFC and EOT
    movs r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    2024:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:321
    str  r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    2026:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:324
    
    @ Enable SPI
    movs r1, #SPI1_CR1_SPE
    2028:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:325
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    202a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:327

    enable_cs
    202c:	4dff      	ldr	r5, [pc, #1020]	; (242c <Code_470+0x64>)
    202e:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2032:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    2036:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:330

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    203a:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:331
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    203e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:334
    
    @ Enqueue the read command and address twice (once as command and once as dummy).
    str  tos, [r0, #(SPI1_TXDR - SPI1_BASE)]
    2040:	6206      	str	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:335
    strb tos, [r0, #(SPI1_TXDR - SPI1_BASE)]
    2042:	f880 6020 	strb.w	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:340
    
    @ The SPI flash doesn't reply anything useful to the command
    @ and address bytes. Ignore those four bytes as soon as they're available.
    @ The RXWNE flag is set if the Rx FIFO contains at least 4 bytes.
1:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    2046:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:341
    tst  r1, #SPI1_SR_RXWNE
    2048:	f411 4f00 	tst.w	r1, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:342
    beq  1b
    204c:	d0fb      	beq.n	2046 <Code_445+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:343
    ldr  r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    204e:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:346

    @ Wait for the four data bytes to consume from the Rx FIFO
2:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    2050:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:347
    tst  r1, #(1 << SPI1_SR_RXPLVL_Shift)
    2052:	f411 5f00 	tst.w	r1, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:348
    beq  2b
    2056:	d0fb      	beq.n	2050 <Code_445+0x42>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:349
    ldr  tos, [r0, #(SPI1_RXDR - SPI1_BASE)]
    2058:	6b06      	ldr	r6, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:351
    
    disable_cs
    205a:	4df4      	ldr	r5, [pc, #976]	; (242c <Code_470+0x64>)
    205c:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2060:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    2064:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:353

    bx   lr
    2068:	4770      	bx	lr

0000206a <Dictionary_448>:
Dictionary_448():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:353
    206a:	20ce      	.short	0x20ce
    206c:	00000000 	.word	0x00000000
    2070:	69707305 	.word	0x69707305
    2074:	402d      	.short	0x402d

00002076 <Code_448>:
Code_448():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:361
  Wortbirne Flag_visible, "spi-@" @ ( addr -- cell )
@ -----------------------------------------------------------------------------
@ Reads four byte from SPI flash

    @ Load SPI1 base addresss
    ldr  r0, =SPI1_BASE
    2076:	48ee      	ldr	r0, [pc, #952]	; (2430 <Code_470+0x68>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:364

    @ Merge the 24 bit address and 0x03 (read) into a 32 bit big endian command 
    bic  tos, #0xff000000
    2078:	f026 467f 	bic.w	r6, r6, #4278190080	; 0xff000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:365
    add  tos, #0x03000000
    207c:	f106 7640 	add.w	r6, r6, #50331648	; 0x3000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:366
    rev  tos, tos
    2080:	ba36      	rev	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:369
    
    @ Disable SPI
    movs r1, #0
    2082:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:370
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2084:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:373

    @ Set length
    movs r1, #8
    2086:	2108      	movs	r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:374
    str  r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    2088:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:377
    
    @ Clear TXTFC and EOT
    movs r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    208a:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:378
    str  r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    208c:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:381
    
    @ Enable SPI
    movs r1, #SPI1_CR1_SPE
    208e:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:382
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2090:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:384

    enable_cs
    2092:	4de6      	ldr	r5, [pc, #920]	; (242c <Code_470+0x64>)
    2094:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2098:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    209c:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:387

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    20a0:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:388
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    20a4:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:391
    
    @ Enqueue the read command and address twice (once as command and once as dummy).
    str  tos, [r0, #(SPI1_TXDR - SPI1_BASE)]
    20a6:	6206      	str	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:392
    str  tos, [r0, #(SPI1_TXDR - SPI1_BASE)]
    20a8:	6206      	str	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:397
    
    @ The SPI flash doesn't reply anything useful to the command
    @ and address bytes. Ignore those four bytes as soon as they're available.
    @ The RXWNE flag is set if the Rx FIFO contains at least 4 bytes.
1:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    20aa:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:398
    tst  r1, #SPI1_SR_RXWNE
    20ac:	f411 4f00 	tst.w	r1, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:399
    beq  1b
    20b0:	d0fb      	beq.n	20aa <Code_448+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:400
    ldr  r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    20b2:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:403

    @ Wait for the four data bytes to consume from the Rx FIFO
2:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    20b4:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:404
    tst  r1, #SPI1_SR_RXWNE
    20b6:	f411 4f00 	tst.w	r1, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:405
    beq  2b
    20ba:	d0fb      	beq.n	20b4 <Code_448+0x3e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:406
    ldr  tos, [r0, #(SPI1_RXDR - SPI1_BASE)]
    20bc:	6b06      	ldr	r6, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:408
    
    disable_cs
    20be:	4ddb      	ldr	r5, [pc, #876]	; (242c <Code_470+0x64>)
    20c0:	f8d5 4014 	ldr.w	r4, [r5, #20]
    20c4:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    20c8:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:410

    bx   lr
    20cc:	4770      	bx	lr

000020ce <Dictionary_451>:
Dictionary_451():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:410
    20ce:	2154      	.short	0x2154
    20d0:	00000000 	.word	0x00000000
    20d4:	69707308 	.word	0x69707308
    20d8:	6165722d 	.word	0x6165722d
    20dc:	64          	.byte	0x64
	...

000020de <Code_451>:
Code_451():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:418
  Wortbirne Flag_visible, "spi-read" @ ( spi-addr ram-addr length -- )
@ -----------------------------------------------------------------------------
@ Read from SPI flash in a single transfer
spi_read:
    @ Load SPI1 base addresss
    ldr  r0, =SPI1_BASE
    20de:	48d4      	ldr	r0, [pc, #848]	; (2430 <Code_470+0x68>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:421

    @ Load spi-addr and ram-addr
    ldm  psp!, {r1, r2}
    20e0:	cf06      	ldmia	r7!, {r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:424
    
    @ Merge the 24 bit address and 0x03 (read) into a 32 bit big endian command 
    bic  r2, #0xff000000
    20e2:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:425
    add  r2, #0x03000000
    20e6:	f102 7240 	add.w	r2, r2, #50331648	; 0x3000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:426
    rev  r2, r2
    20ea:	ba12      	rev	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:429
    
    @ Disable SPI
    movs r3, #0
    20ec:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:430
    str  r3, [r0, #(SPI1_CR1 - SPI1_BASE)]
    20ee:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:433

    @ Set length
    adds tos, #4
    20f0:	3604      	adds	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:434
    str  tos, [r0, #(SPI1_CR2 - SPI1_BASE)]
    20f2:	6046      	str	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:435
    subs tos, #4
    20f4:	3e04      	subs	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:438

    @ Clear TXTFC and EOT
    movs r3, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    20f6:	2318      	movs	r3, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:439
    str  r3, [r0, #(SPI1_IFCR - SPI1_BASE)]
    20f8:	6183      	str	r3, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:442
    
    @ Enable SPI
    movs r3, #SPI1_CR1_SPE
    20fa:	2301      	movs	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:443
    str  r3, [r0, #(SPI1_CR1 - SPI1_BASE)]
    20fc:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:445

    enable_cs
    20fe:	4dcb      	ldr	r5, [pc, #812]	; (242c <Code_470+0x64>)
    2100:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2104:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    2108:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:448

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw r3, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    210c:	f240 2301 	movw	r3, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:449
    str  r3, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2110:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:452

    @ Send the read command
    str  r2, [r0, #(SPI1_TXDR - SPI1_BASE)]
    2112:	6202      	str	r2, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:457

    @ The SPI flash doesn't reply anything useful to the command
    @ and address bytes. Ignore those four bytes as soon as they're available.
    @ The RXWNE flag is set if the Rx FIFO contains at least 4 bytes.
1:  ldr  r3, [r0, #(SPI1_SR - SPI1_BASE)]
    2114:	6943      	ldr	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:458
    tst  r3, #SPI1_SR_RXWNE
    2116:	f413 4f00 	tst.w	r3, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:459
    beq  1b
    211a:	d0fb      	beq.n	2114 <Code_451+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:460
    ldr  r3, [r0, #(SPI1_RXDR - SPI1_BASE)]
    211c:	6b03      	ldr	r3, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:463
    
    @ Maintain separate transmit and receive counters
    movs r2, tos
    211e:	0032      	movs	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:466

    @ Load SPI1 status register (lower half)
2:  ldrh r3, [r0, #(SPI1_SR - SPI1_BASE)]
    2120:	8a83      	ldrh	r3, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:469

    @ Have we transmitted enough dummy bytes?
    cmp  r2, #0
    2122:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:470
    beq  3f
    2124:	d005      	beq.n	2132 <Code_451+0x54>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:473

    @ Is transmit FIFO full?
    tst  r3, #SPI1_SR_TXP
    2126:	f013 0f02 	tst.w	r3, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:474
    beq  3f
    212a:	d002      	beq.n	2132 <Code_451+0x54>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:477

    @ Enqueue a dummy byte
    strb r0, [r0, #(SPI1_TXDR - SPI1_BASE)]
    212c:	f880 0020 	strb.w	r0, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:478
    subs r2, #1
    2130:	3a01      	subs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:481

3:  @ Is the Rx FIFO empty?
    lsrs r3, #SPI1_SR_RXPLVL_Shift
    2132:	0b5b      	lsrs	r3, r3, #13
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:482
    beq  2b
    2134:	d0f4      	beq.n	2120 <Code_451+0x42>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:485
    
    @ Dequeue and store a data byte
    ldrb r3, [r0, #(SPI1_RXDR - SPI1_BASE)]
    2136:	f890 3030 	ldrb.w	r3, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:486
    strb r3, [r1]
    213a:	700b      	strb	r3, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:487
    adds r1, #1
    213c:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:488
    subs r6, #1
    213e:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:489
    bne  2b
    2140:	d1ee      	bne.n	2120 <Code_451+0x42>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:491
    
    disable_cs
    2142:	4dba      	ldr	r5, [pc, #744]	; (242c <Code_470+0x64>)
    2144:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2148:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    214c:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:494

    @ Drop and return
    ldm  psp!, {tos}
    2150:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:495
    bx   lr
    2152:	4770      	bx	lr

00002154 <Dictionary_454>:
Dictionary_454():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:495
    2154:	0000219e 	.word	0x0000219e
    2158:	73080000 	.word	0x73080000
    215c:	6d2d6970 	.word	0x6d2d6970
    2160:	766f      	.short	0x766f
    2162:	65          	.byte	0x65
	...

00002164 <Code_454>:
Code_454():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:505
spi_move:
    @ The SPI peripherals contain a 16 bit transfer counter (TSIZE in CR2).
    @ This counter limits us to 2^15 - 1 bytes per transfer including the
    @ read command and address.

    push  {lr}                  @ Registers:                                        Stack (r6 = top of stack):
    2164:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:508
                                
    @ Duplicate all arguments
    movs  r0, r6                @ r0 = len,                               r6 = len  ( spi ram len )
    2166:	0030      	movs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:509
    ldmia psp!, {r1, r2}        @ r0 = len, r1 = ram, r2 = spi,           r6 = len  ( len )
    2168:	cf06      	ldmia	r7!, {r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:510
    stmdb psp!, {r0, r1, r2}    @ r0 = len, r1 = ram, r2 = spi,           r6 = len  ( spi ram len len )
    216a:	e927 0007 	stmdb	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:511
    stmdb psp!, {r1, r2}        @ r0 = len, r1 = ram, r2 = spi,           r6 = len  ( spi ram len spi ram len )
    216e:	e927 0006 	stmdb	r7!, {r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:515

    @ Load the maximum payload size per read operation.
    @ The four bytes for the command and address have to be substracted from the 0xffff transfer size limit
    movw  r3, #0x0ffb           @ r0 = len, r1 = ram, r2 = spi, r3 = max, r6 = len  ( spi ram len spi ram len )
    2172:	f640 73fb 	movw	r3, #4091	; 0xffb
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:518
    
    @ Limit the payload size
1:  cmp   r6, r3                @ r0 = len, r1 = ram, r2 = spi, r3 = max, r6 = len  ( spi ram len spi ram len )
    2176:	429e      	cmp	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:519
    it    hs                    @ r0 = len, r1 = ram, r2 = spi, r3 = max, r6 = len  ( spi ram len spi ram len )
    2178:	bf28      	it	cs
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:520
    movhs r6, r3                @ r0 = len, r1 = ram, r2 = spi, r3 = max, r6 = len  ( spi ram len spi ram len )
    217a:	461e      	movcs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:523

    @ Read the as much as possible per transfer from the flash
    bl    spi_read              @                                         r6 = len  ( spi ram len )
    217c:	f7ff ffaf 	bl	20de <Code_451>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:527
    
    @ Advance the posititions and decrease the remaining length
    @ The call to spi_read has invalidated r0-r3.
    movw  r3, #0x0ffb           @                               r3 = max, r6 = len  ( spi ram len )
    2180:	f640 73fb 	movw	r3, #4091	; 0xffb
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:528
    ldmia psp!, {r1, r2}        @           r1 = ram, r2 = spi, r3 = max, r6 = len  ( len )
    2184:	cf06      	ldmia	r7!, {r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:529
    adds  r1, r3                @           r1 = ram, r2 = spi, r3 = max, r6 = len  ( len )
    2186:	18c9      	adds	r1, r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:530
    adds  r2, r3                @           r1 = ram, r2 = spi, r3 = max, r6 = len  ( len )
    2188:	18d2      	adds	r2, r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:531
    subs  r6, r3                @           r1 = ram, r2 = spi, r3 = max, r6 = len  ( len )
    218a:	1af6      	subs	r6, r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:534

    @ We're done if the length underflowed
    blo   2f                    @           r1 = ram, r2 = spi, r3 = max, r6 = len  ( len )
    218c:	d305      	bcc.n	219a <Code_454+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:537

    @ Duplicate the arguments
    movs  r0, r6                @ r0 = len, r1 = ram, r2 = spi, r3 = max, r6 = len  ( len )
    218e:	0030      	movs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:538
    stmdb psp!, {r0, r1, r2}    @ r0 = len, r1 = ram, r2 = spi, r3 = max, r6 = len  ( spi ram len len )
    2190:	e927 0007 	stmdb	r7!, {r0, r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:539
    stmdb psp!, {r1, r2}        @ r0 = len, r1 = ram, r2 = spi, r3 = max, r6 = len  ( spi ram len spi ram len )
    2194:	e927 0006 	stmdb	r7!, {r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:540
    b     1b                    @
    2198:	e7ed      	b.n	2176 <Code_454+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:543
    
    @ Drop the length
2:  ldmia psp!, {r6}            @                                                   ( )
    219a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:544
    pop   {pc}                  @
    219c:	bd00      	pop	{pc}

0000219e <Dictionary_455>:
Dictionary_455():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:544
    219e:	2220      	.short	0x2220
    21a0:	00000000 	.word	0x00000000
    21a4:	6c666807 	.word	0x6c666807
    21a8:	21687361 	.word	0x21687361

000021ac <Code_455>:
Code_455():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:554
  Wortbirne Flag_visible, "hflash!" @ ( x Addr -- )
@ -----------------------------------------------------------------------------
h_flashkomma:
@ Write two bytes to the flash

    push  {lr}
    21ac:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:556
    
    bl    write_enable
    21ae:	f000 f883 	bl	22b8 <Code_461>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:559

    @ Load SPI1 base addresss
    ldr   r0, =SPI1_BASE
    21b2:	489f      	ldr	r0, [pc, #636]	; (2430 <Code_470+0x68>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:562

    @ Store the data to SRAM
    mov   r2, tos
    21b4:	4632      	mov	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:563
    ldmia psp!, {r3, tos}
    21b6:	cf48      	ldmia	r7!, {r3, r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:564
    strh  r3, [r2]
    21b8:	8013      	strh	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:567

    @ Clean data cache, invalidate instruction cache
    ldr  r1, =DCCMVAU
    21ba:	49a0      	ldr	r1, [pc, #640]	; (243c <Code_470+0x74>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:568
    dmb
    21bc:	f3bf 8f5f 	dmb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:569
    str  r2, [r1]
    21c0:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:570
    ldr  r1, =ICIMVAU
    21c2:	499f      	ldr	r1, [pc, #636]	; (2440 <Code_470+0x78>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:571
    str  r2, [r1]
    21c4:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:574

    @ Merge the 24 bit address and 0x02 (program page) command into a 32 bit big endian command 
    bic   r2, #0xff000000
    21c6:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:575
    add   r2, #0x02000000
    21ca:	f102 7200 	add.w	r2, r2, #33554432	; 0x2000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:576
    rev   r2, r2
    21ce:	ba12      	rev	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:579
    
    @ Disable SPI
    movs  r1, #0
    21d0:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:580
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    21d2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:583

    @ Set length
    movs  r1, #6
    21d4:	2106      	movs	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:584
    str   r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    21d6:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:587
    
    @ Clear TXTFC and EOT
    movs  r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    21d8:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:588
    str   r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    21da:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:591
    
    @ Enable SPI
    movs  r1, #SPI1_CR1_SPE
    21dc:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:592
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    21de:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:594

    enable_cs
    21e0:	4d92      	ldr	r5, [pc, #584]	; (242c <Code_470+0x64>)
    21e2:	f8d5 4014 	ldr.w	r4, [r5, #20]
    21e6:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    21ea:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:597

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw  r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    21ee:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:598
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    21f2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:601
    
    @ Enqueue the program command and address and data
    str   r2, [r0, #(SPI1_TXDR - SPI1_BASE)]
    21f4:	6202      	str	r2, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:602
    strh  r3, [r0, #(SPI1_TXDR - SPI1_BASE)]
    21f6:	8403      	strh	r3, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:607
    
    @ The SPI flash doesn't reply anything useful to the commandw
    @ and address bytes. Ignore those four bytes as soon as they're available.
    @ The RXWNE flag is set if the Rx FIFO contains at least 4 bytes.
1:  ldr   r1, [r0, #(SPI1_SR - SPI1_BASE)]
    21f8:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:608
    tst   r1, #SPI1_SR_RXWNE
    21fa:	f411 4f00 	tst.w	r1, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:609
    beq   1b
    21fe:	d0fb      	beq.n	21f8 <Code_455+0x4c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:610
    ldr   r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    2200:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:613

    @ Wait for the two dummy bytes to consume from the Rx FIFO
2:  ldr   r1, [r0, #(SPI1_SR - SPI1_BASE)]
    2202:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:614
    tst   r1, #(2 << SPI1_SR_RXPLVL_Shift)
    2204:	f411 4f80 	tst.w	r1, #16384	; 0x4000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:615
    beq   2b
    2208:	d0fb      	beq.n	2202 <Code_455+0x56>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:616
    ldr   r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    220a:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:618

    disable_cs
    220c:	4d87      	ldr	r5, [pc, #540]	; (242c <Code_470+0x64>)
    220e:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2212:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    2216:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:620

    pop  {lr}
    221a:	f85d eb04 	ldr.w	lr, [sp], #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:621
    b    spi_wait
    221e:	e077      	b.n	2310 <Code_464>

00002220 <Dictionary_458>:
Dictionary_458():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:621
    2220:	000022a4 	.word	0x000022a4
    2224:	63070000 	.word	0x63070000
    2228:	73616c66 	.word	0x73616c66
    222c:	2168      	.short	0x2168

0000222e <Code_458>:
Code_458():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:629
  @ Schreibt ein einzelnes Byte in den Flash.
c_flashkomma:
@ -----------------------------------------------------------------------------
@ Write a single byte to the flash

    push  {lr}
    222e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:631
    
    bl    write_enable
    2230:	f000 f842 	bl	22b8 <Code_461>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:634

    @ Load SPI1 base addresss
    ldr   r0, =SPI1_BASE
    2234:	487e      	ldr	r0, [pc, #504]	; (2430 <Code_470+0x68>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:637

    @ Store the data to SRAM
    mov   r2, tos
    2236:	4632      	mov	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:638
    ldmia psp!, {r3, tos}
    2238:	cf48      	ldmia	r7!, {r3, r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:639
    strb  r3, [r2]
    223a:	7013      	strb	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:642

    @ Clean data cache, invalidate instruction cache
    ldr  r1, =DCCMVAU
    223c:	497f      	ldr	r1, [pc, #508]	; (243c <Code_470+0x74>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:643
    dmb
    223e:	f3bf 8f5f 	dmb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:644
    str  r2, [r1]
    2242:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:645
    ldr  r1, =ICIMVAU
    2244:	497e      	ldr	r1, [pc, #504]	; (2440 <Code_470+0x78>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:646
    str  r2, [r1]
    2246:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:649

    @ Merge the 24 bit address and 0x02 (program page) command into a 32 bit big endian command 
    bic   r2, #0xff000000
    2248:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:650
    add   r2, #0x02000000
    224c:	f102 7200 	add.w	r2, r2, #33554432	; 0x2000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:651
    rev   r2, r2
    2250:	ba12      	rev	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:654
    
    @ Disable SPI
    movs  r1, #0
    2252:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:655
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2254:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:658

    @ Set length
    movs  r1, #5
    2256:	2105      	movs	r1, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:659
    str   r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    2258:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:662
    
    @ Clear TXTFC and EOT
    movs  r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    225a:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:663
    str   r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    225c:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:666
    
    @ Enable SPI
    movs  r1, #SPI1_CR1_SPE
    225e:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:667
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2260:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:669

    enable_cs
    2262:	4d72      	ldr	r5, [pc, #456]	; (242c <Code_470+0x64>)
    2264:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2268:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    226c:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:672

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw  r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    2270:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:673
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2274:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:676
    
    @ Enqueue the program command and address and data
    str   r2, [r0, #(SPI1_TXDR - SPI1_BASE)]
    2276:	6202      	str	r2, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:677
    strb  r3, [r0, #(SPI1_TXDR - SPI1_BASE)]
    2278:	f880 3020 	strb.w	r3, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:682
    
    @ The SPI flash doesn't reply anything useful to the commandw
    @ and address bytes. Ignore those four bytes as soon as they're available.
    @ The RXWNE flag is set if the Rx FIFO contains at least 4 bytes.
1:  ldr   r1, [r0, #(SPI1_SR - SPI1_BASE)]
    227c:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:683
    tst   r1, #SPI1_SR_RXWNE
    227e:	f411 4f00 	tst.w	r1, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:684
    beq   1b
    2282:	d0fb      	beq.n	227c <Code_458+0x4e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:685
    ldr   r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    2284:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:688

    @ Wait for the single dummy byte to consume from the Rx FIFO
2:  ldr   r1, [r0, #(SPI1_SR - SPI1_BASE)]
    2286:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:689
    tst   r1, #(1 << SPI1_SR_RXPLVL_Shift)
    2288:	f411 5f00 	tst.w	r1, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:690
    beq   2b
    228c:	d0fb      	beq.n	2286 <Code_458+0x58>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:691
    ldr   r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    228e:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:693

    disable_cs
    2290:	4d66      	ldr	r5, [pc, #408]	; (242c <Code_470+0x64>)
    2292:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2296:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    229a:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:695

    pop  {lr}
    229e:	f85d eb04 	ldr.w	lr, [sp], #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:696
    b    spi_wait
    22a2:	e035      	b.n	2310 <Code_464>

000022a4 <Dictionary_461>:
Dictionary_461():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:696
    22a4:	00002300 	.word	0x00002300
    22a8:	770c0000 	.word	0x770c0000
    22ac:	65746972 	.word	0x65746972
    22b0:	616e652d 	.word	0x616e652d
    22b4:	6c62      	.short	0x6c62
    22b6:	65          	.byte	0x65
	...

000022b8 <Code_461>:
write_enable():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:703
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "write-enable" @ ( -- )
@ -----------------------------------------------------------------------------
write_enable:
    @ Load SPI1 base addresss
    ldr   r0, =SPI1_BASE
    22b8:	485d      	ldr	r0, [pc, #372]	; (2430 <Code_470+0x68>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:706

    @ Disable SPI
    movs  r1, #0
    22ba:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:707
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    22bc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:710

    @ Set length
    movs  r1, #1
    22be:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:711
    str   r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    22c0:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:714
    
    @ Clear TXTFC and EOT
    movs r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    22c2:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:715
    str  r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    22c4:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:718
    
    @ Enable SPI
    movs r1, #SPI1_CR1_SPE
    22c6:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:719
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    22c8:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:721

    enable_cs
    22ca:	4d58      	ldr	r5, [pc, #352]	; (242c <Code_470+0x64>)
    22cc:	f8d5 4014 	ldr.w	r4, [r5, #20]
    22d0:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    22d4:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:724

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    22d8:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:725
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    22dc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:728
    
    @ Enqueue the write enable command
    movs r1, 0x06
    22de:	2106      	movs	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:729
    strb r1, [r0, #(SPI1_TXDR - SPI1_BASE)]
    22e0:	f880 1020 	strb.w	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:732
    
    @ Wait until the transfer completed
1:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    22e4:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:733
    tst  r1, #(1 << SPI1_SR_RXPLVL_Shift)
    22e6:	f411 5f00 	tst.w	r1, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:734
    beq  1b
    22ea:	d0fb      	beq.n	22e4 <Code_461+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:735
    ldrb r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    22ec:	f890 1030 	ldrb.w	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:737

    disable_cs
    22f0:	4d4e      	ldr	r5, [pc, #312]	; (242c <Code_470+0x64>)
    22f2:	f8d5 4014 	ldr.w	r4, [r5, #20]
    22f6:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    22fa:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:739

    bx   lr
    22fe:	4770      	bx	lr

00002300 <Dictionary_464>:
Dictionary_464():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:739
    2300:	00002320 	.word	0x00002320
    2304:	73080000 	.word	0x73080000
    2308:	772d6970 	.word	0x772d6970
    230c:	6961      	.short	0x6961
    230e:	74          	.byte	0x74
	...

00002310 <Code_464>:
spi_wait():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:747
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "spi-wait" @ ( -- )
@ -----------------------------------------------------------------------------
spi_wait:

    push {tos, lr}
    2310:	b540      	push	{r6, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:749
    
1:  movs  tos, #SPI_READ_SR1
    2312:	2605      	movs	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:750
    bl    spi_status_read
    2314:	f7ff fe4d 	bl	1fb2 <Code_442>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:751
    tst   tos, #1
    2318:	f016 0f01 	tst.w	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:752
    bne   1b
    231c:	d1f9      	bne.n	2312 <Code_464+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:754

    pop  {tos, pc}
    231e:	bd40      	pop	{r6, pc}

00002320 <Dictionary_465>:
Dictionary_465():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:754
    2320:	00002336 	.word	0x00002336
    2324:	65080000 	.word	0x65080000
    2328:	65736172 	.word	0x65736172
    232c:	342d      	.short	0x342d
    232e:	6b          	.byte	0x6b
	...

00002330 <Code_465>:
Code_465():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:760
    

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "erase-4k" @ ( addr -- )
@ -----------------------------------------------------------------------------
    mov r3, #0x20 @ Opcode to erase 4kiB
    2330:	f04f 0320 	mov.w	r3, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:761
    b   erase
    2334:	e014      	b.n	2360 <erase>

00002336 <Dictionary_466>:
Dictionary_466():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:761
    2336:	234c      	.short	0x234c
    2338:	00000000 	.word	0x00000000
    233c:	61726509 	.word	0x61726509
    2340:	332d6573 	.word	0x332d6573
    2344:	6b32      	.short	0x6b32

00002346 <Code_466>:
Code_466():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:766

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "erase-32k" @ ( addr -- )
@ -----------------------------------------------------------------------------
    mov r3, #0x52 @ Opcode to erase 32kiB
    2346:	f04f 0352 	mov.w	r3, #82	; 0x52
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:767
    b   erase
    234a:	e009      	b.n	2360 <erase>

0000234c <Dictionary_467>:
Dictionary_467():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:767
    234c:	000023b6 	.word	0x000023b6
    2350:	65090000 	.word	0x65090000
    2354:	65736172 	.word	0x65736172
    2358:	6b34362d 	.word	0x6b34362d

0000235c <Code_467>:
Code_467():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:772

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "erase-64k" @ ( addr -- )
@ -----------------------------------------------------------------------------
    mov r3, #0xd8 @ Opcode to erase 64kiB
    235c:	f04f 03d8 	mov.w	r3, #216	; 0xd8

00002360 <erase>:
erase():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:775

erase:
    push  {lr}
    2360:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:778
    
    @ We have to set the write enable latch to erase the flash
    bl    write_enable
    2362:	f7ff ffa9 	bl	22b8 <Code_461>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:781

    @ Load SPI1 base addresss
    ldr   r0, =SPI1_BASE
    2366:	4832      	ldr	r0, [pc, #200]	; (2430 <Code_470+0x68>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:784

    @ Merge the 24 bit address and 0x03 (read) into a 32 bit big endian command 
    bic   tos, #0xff000000
    2368:	f026 467f 	bic.w	r6, r6, #4278190080	; 0xff000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:785
    rev   tos, tos
    236c:	ba36      	rev	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:786
    adds  tos, r3
    236e:	18f6      	adds	r6, r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:789
    
    @ Disable SPI
    movs  r1, #0
    2370:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:790
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2372:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:793

    @ Set length
    movs  r1, #4
    2374:	2104      	movs	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:794
    str   r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    2376:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:797
    
    @ Clear TXTFC and EOT
    movs  r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    2378:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:798
    str   r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    237a:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:801
    
    @ Enable SPI
    movs  r1, #SPI1_CR1_SPE
    237c:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:802
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    237e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:804

    enable_cs
    2380:	4d2a      	ldr	r5, [pc, #168]	; (242c <Code_470+0x64>)
    2382:	f8d5 4014 	ldr.w	r4, [r5, #20]
    2386:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    238a:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:807

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw  r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    238e:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:808
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    2392:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:811
    
    @ Enqueue the erase command and address
    str   tos, [r0, #(SPI1_TXDR - SPI1_BASE)]
    2394:	6206      	str	r6, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:816
    
    @ The SPI flash doesn't reply anything useful to the command
    @ and address bytes. Ignore those four bytes as soon as they're available.
    @ The RXWNE flag is set if the Rx FIFO contains at least 4 bytes.
1:  ldr   r1, [r0, #(SPI1_SR - SPI1_BASE)]
    2396:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:817
    tst   r1, #SPI1_SR_RXWNE
    2398:	f411 4f00 	tst.w	r1, #32768	; 0x8000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:818
    beq   1b
    239c:	d0fb      	beq.n	2396 <erase+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:819
    ldr   r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    239e:	6b01      	ldr	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:821

    disable_cs
    23a0:	4d22      	ldr	r5, [pc, #136]	; (242c <Code_470+0x64>)
    23a2:	f8d5 4014 	ldr.w	r4, [r5, #20]
    23a6:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    23aa:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:823

    ldmia psp!, {tos}
    23ae:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:824
    pop   {lr}
    23b0:	f85d eb04 	ldr.w	lr, [sp], #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:826

    b     spi_wait
    23b4:	e7ac      	b.n	2310 <Code_464>

000023b6 <Dictionary_470>:
Dictionary_470():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:826
    23b6:	2444      	.short	0x2444
    23b8:	00000000 	.word	0x00000000
    23bc:	6172650a 	.word	0x6172650a
    23c0:	632d6573 	.word	0x632d6573
    23c4:	6968      	.short	0x6968
    23c6:	70          	.byte	0x70
	...

000023c8 <Code_470>:
Code_470():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:834
  Wortbirne Flag_visible, "erase-chip" @ ( -- )
@ -----------------------------------------------------------------------------
@ The chip erase command doesn't take an address parameter.
erase_chip:

    push {lr}
    23c8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:837

    @ Enable writes
    bl   write_enable
    23ca:	f7ff ff75 	bl	22b8 <Code_461>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:840

    @ Load SPI1 base addresss
    ldr   r0, =SPI1_BASE
    23ce:	4818      	ldr	r0, [pc, #96]	; (2430 <Code_470+0x68>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:843

    @ Disable SPI
    movs  r1, #0
    23d0:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:844
    str   r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    23d2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:847

    @ Set length
    movs  r1, #1
    23d4:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:848
    str   r1, [r0, #(SPI1_CR2 - SPI1_BASE)]
    23d6:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:851
    
    @ Clear TXTFC and EOT
    movs r1, #(SPI1_IFCR_TXTFC | SPI1_IFCR_EOTC)
    23d8:	2118      	movs	r1, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:852
    str  r1, [r0, #(SPI1_IFCR - SPI1_BASE)]
    23da:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:855
    
    @ Enable SPI
    movs r1, #SPI1_CR1_SPE
    23dc:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:856
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    23de:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:858

    enable_cs
    23e0:	4d12      	ldr	r5, [pc, #72]	; (242c <Code_470+0x64>)
    23e2:	f8d5 4014 	ldr.w	r4, [r5, #20]
    23e6:	f024 0440 	bic.w	r4, r4, #64	; 0x40
    23ea:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:861

    @ Start the transfer. The SPI flash autoincrements the read address.
    movw r1, #(SPI1_CR1_CSTART | SPI1_CR1_SPE)
    23ee:	f240 2101 	movw	r1, #513	; 0x201
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:862
    str  r1, [r0, #(SPI1_CR1 - SPI1_BASE)]
    23f2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:865
    
    @ Enqueue the erase chip command
    movs r1, 0xc7
    23f4:	21c7      	movs	r1, #199	; 0xc7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:866
    strb r1, [r0, #(SPI1_TXDR - SPI1_BASE)]
    23f6:	f880 1020 	strb.w	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:869
    
    @ Wait until the transfer completed
1:  ldr  r1, [r0, #(SPI1_SR - SPI1_BASE)]
    23fa:	6941      	ldr	r1, [r0, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:870
    tst  r1, #(1 << SPI1_SR_RXPLVL_Shift)
    23fc:	f411 5f00 	tst.w	r1, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:871
    beq  1b
    2400:	d0fb      	beq.n	23fa <Code_470+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:872
    ldrb r1, [r0, #(SPI1_RXDR - SPI1_BASE)]
    2402:	f890 1030 	ldrb.w	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:874

    disable_cs
    2406:	4d09      	ldr	r5, [pc, #36]	; (242c <Code_470+0x64>)
    2408:	f8d5 4014 	ldr.w	r4, [r5, #20]
    240c:	f044 0440 	orr.w	r4, r4, #64	; 0x40
    2410:	f8c5 4014 	str.w	r4, [r5, #20]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:876

    bl   spi_wait
    2414:	f7ff ff7c 	bl	2310 <Code_464>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:878

    pop  {pc}
    2418:	bd00      	pop	{pc}
    241a:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:32
    ldr  r0, =Flash_ACR
    241c:	52002000 	.word	0x52002000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:97
    ldr  r0, =RCC_AHB4ENR
    2420:	580244e0 	.word	0x580244e0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:109
    ldr  r1, =RCC_APB2ENR
    2424:	580244f0 	.word	0x580244f0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:115
    ldr  r0, =GPIOB_BASE
    2428:	58020400 	.word	0x58020400
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:135
    ldr  r0, =GPIOD_BASE
    242c:	58020c00 	.word	0x58020c00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:165
    ldr  r1, =SPI1_BASE
    2430:	40013000 	.word	0x40013000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:168
    ldr  r2, =(0b001 << SPI1_CFG1_MBR_Shift) | (0b00111 << SPI1_CFG1_CRCSIZE_Shift) | (0b00111 << SPI1_CFG1_DSIZE_Shift)
    2434:	10070007 	.word	0x10070007
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:172
    ldr  r2, =(SPI1_CFG2_AFCNTR | SPI1_CFG2_SSOE | SPI1_CFG2_MASTER|(0b0001 << SPI1_CFG2_MSSI_Shift))
    2438:	a0400001 	.word	0xa0400001
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:567
    ldr  r1, =DCCMVAU
    243c:	e000ef64 	.word	0xe000ef64
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:570
    ldr  r1, =ICIMVAU
    2440:	e000ef58 	.word	0xe000ef58

00002444 <Dictionary_473>:
Dictionary_473():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/flash.s:570
    2444:	0000247a 	.word	0x0000247a
    2448:	2b010262 	.word	0x2b010262

0000244c <Code_473>:
Code_473():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:36

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "+" @ ( x1 x2 -- x1+x2 )
                      @ Adds x1 and x2.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    244c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:37
  adds tos, r0
    244e:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:38
  bx lr
    2450:	4770      	bx	lr

00002452 <plus_allocator>:
plus_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:42

plus_allocator:

    push {lr}
    2452:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:43
    bl expect_two_elements
    2454:	f7fe f84a 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:45

    pushdaconstw 0x3000 @ adds r0, #imm8
    2458:	f847 6d04 	str.w	r6, [r7, #-4]!
    245c:	f243 0600 	movw	r6, #12288	; 0x3000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:47
    .ifndef m0core
      pushdatos
    2460:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:48
      ldr tos, =0xF1100000 @ adds r0, r0, #Imm12
    2464:	4ec9      	ldr	r6, [pc, #804]	; (278c <Code_545+0x8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:50
    .endif
    pushdaconstw 0x1800 @ adds r0, r0, r0
    2466:	f847 6d04 	str.w	r6, [r7, #-4]!
    246a:	f641 0600 	movw	r6, #6144	; 0x1800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:53

    @ Ist in TOS oder in NOS eine kleine Konstante ?
    ldr r1, [r0, #offset_state_nos]
    246e:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:54
    cmp r1, #constant
    2470:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:55
    bne 1f
    2472:	d117      	bne.n	24a4 <minus_allocator+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:56
      bl swap_allocator @ Wenn NOS eine Konstante gewesen ist, war TOS es nicht (Vorherige Faltung !) und ich kann einfach umtauschen.
    2474:	f7fe fd79 	bl	f6a <swap_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:57
      b.n 1f
    2478:	e014      	b.n	24a4 <minus_allocator+0x1c>

0000247a <Dictionary_479>:
Dictionary_479():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:57
    247a:	2520      	.short	0x2520
    247c:	02620000 	.word	0x02620000
    2480:	2d01      	.short	0x2d01

00002482 <Code_479>:
Code_479():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:63

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_2|Flag_allocator, "-" @ ( x1 x2 -- x1-x2 )
                      @ Subtracts x2 from x1.
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}
    2482:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:64
  subs tos, r0, tos
    2484:	1b86      	subs	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:65
  bx lr
    2486:	4770      	bx	lr

00002488 <minus_allocator>:
minus_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:69

minus_allocator:

    push {lr}
    2488:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:70
    bl expect_two_elements
    248a:	f7fe f82f 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:72

    pushdaconstw 0x3800 @ subs r0, #imm8
    248e:	f847 6d04 	str.w	r6, [r7, #-4]!
    2492:	f643 0600 	movw	r6, #14336	; 0x3800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:74
    .ifndef m0core
      pushdatos
    2496:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:75
      ldr tos, =0xF1B00000 @ subs r0, r0, #Imm12
    249a:	4ebd      	ldr	r6, [pc, #756]	; (2790 <Code_545+0xc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:77
    .endif
    pushdaconstw 0x1A00 @ subs r0, r0, r0
    249c:	f847 6d04 	str.w	r6, [r7, #-4]!
    24a0:	f641 2600 	movw	r6, #6656	; 0x1a00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:81

1:  @ Minus ist nicht kommutativ, deswegen hier eine Optimierung weniger als bei Plus.

    bl expect_nos_in_register
    24a4:	f7fe f85e 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:89
    @ Der Fall, dass beide Konstanten sind tritt nicht auf, weil er von der Faltung bereits erledigt wird.
    @ Entweder zwei Register, oder eine Konstante und einen Register.

    @ Ist jetzt TOS eine kleine Konstante ?

    ldr r1, [r0, #offset_state_tos]
    24a8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:90
    cmp r1, #constant
    24aa:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:91
    bne 4f
    24ac:	d127      	bne.n	24fe <minus_allocator+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:92
      ldr r1, [r0, #offset_constant_tos]
    24ae:	6841      	ldr	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:93
      cmp r1, #0xff
    24b0:	29ff      	cmp	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:94
      bhi 3f
    24b2:	d80c      	bhi.n	24ce <minus_allocator+0x46>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:95
        drop @ Vergiß den Drei-Register-Opcode
    24b4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:98

        .ifndef m0core
        drop @ Vergiß den Imm12-Opcode
    24b6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:102
        .endif

        @ writeln "Plusminus kleine Konstante"
        bl nos_change_tos_away_later
    24b8:	f7fe f868 	bl	58c <nos_change_tos_away_later>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:104
        @ TOS ist eine kleine Konstante.
        orrs tos, r1
    24bc:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:105
        ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
    24be:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:106
        lsls r1, #8
    24c0:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:107
        orrs tos, r1
    24c2:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:108
        bl hkomma
    24c4:	f001 fa6c 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:110

        bl eliminiere_tos
    24c8:	f7fd ff09 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:111
        pop {pc}
    24cc:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:117

3:  @ TOS war keine kleine Konstante

        .ifndef m0core
        @ Vielleicht ist TOS eine große Konstante, die sich als Imm12 darstellen lässt ?
        pushda r1 @ Konstante auf den Stack legen
    24ce:	f847 6d04 	str.w	r6, [r7, #-4]!
    24d2:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:118
        bl twelvebitencoding @ ( Konstante -- Bitmaske true | Konstante false )
    24d4:	f000 fe42 	bl	315c <Code_709>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:119
        ldmia psp!, {r1} @ Entweder die Bitmaske oder wieder die Konstante
    24d8:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:121

        cmp tos, #0
    24da:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:122
        drop   @ Preserves Flags !
    24dc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:123
        beq 4f
    24de:	d00e      	beq.n	24fe <minus_allocator+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:126
          @ Die Konstante lässt sich als Imm12 darstellen - fein !

          drop @ Vergiß den Drei-Register-Opcode
    24e0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:127
          nip  @ Vergiß den Imm8-Opcode
    24e2:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:129

          orrs tos, r1 @ Bitmaske für Imm12 hinzufügen
    24e4:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:131

          ldr r1, [r0, offset_state_nos] @ NOS dann der Faltung wegen unbedingt ein Register.
    24e6:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:133

          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
    24e8:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:136

          @ Vergiß die Konstante
          bl eliminiere_tos
    24ec:	f7fd fef7 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:138

          bl tos_registerwechsel
    24f0:	f7fe f87c 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:139
          orrs tos, tos, r3, lsl #8  @ Den Zielregister hinzufügen
    24f4:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:141

          bl reversekomma
    24f8:	f001 fa82 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:142
          pop {pc}
    24fc:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:147
        .endif

4:  @ TOS war überhaupt keine Konstante oder ließ sich nicht opcodieren.

    nip @ Vergiß den Imm8-Opcode
    24fe:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:150

    .ifndef m0core
    nip @ Vergiß denn Imm12-Opcode
    2500:	3704      	adds	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:156
    .endif

    @ Es ist egal, wierum die Quellregister liegen, da ich mir bei diesen Opcodes den Zielregister frei aussuchen kann.
    @ Schritt eins: Die Konstante, falls TOS oder NOS eine sein sollten, laden.

    bl expect_tos_in_register
    2502:	f7fe f825 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:160

    @ Baue Quell- und "Ziel-" Register in den Opcode ein.

    lsls r1, #6  @ Erster Operand ist um 6 Stellen geschoben
    2506:	0189      	lsls	r1, r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:162

    ldr r2, [r0, #offset_state_nos]
    2508:	6882      	ldr	r2, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:163
    lsls r2, #3  @ Zweiter Operand ist um 3 Stellen geschoben
    250a:	00d2      	lsls	r2, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:167

    @ Baue jetzt den Opcode zusammen:

    orrs tos, r1
    250c:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:168
    orrs tos, r2
    250e:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:172

    @ Vergiss die bisherige Registerzuordnung

    bl eliminiere_tos
    2510:	f7fd fee5 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:175

    @ Den Zielregister des Gesamtergebnis bestimmen, ganz komfortabel, und möglichst in r6:
    bl tos_registerwechsel
    2514:	f7fe f86a 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:177

    orrs tos, r3  @ Der Endzielregister ist gar nicht geschoben
    2518:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:178
    bl hkomma
    251a:	f001 fa41 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:180

    pop {pc}
    251e:	bd00      	pop	{pc}

00002520 <Dictionary_494>:
Dictionary_494():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:180
    2520:	00002538 	.word	0x00002538
    2524:	31020261 	.word	0x31020261
    2528:	2d          	.byte	0x2d
	...

0000252a <Code_494>:
Code_494():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:187

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "1-" @ ( u -- u-1 )
                      @ Subtracts one from the cell on top of the stack.
@ -----------------------------------------------------------------------------
  subs tos, #1
    252a:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:188
  bx lr
    252c:	4770      	bx	lr

0000252e <allocator_one_minus>:
allocator_one_minus():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:191

allocator_one_minus:
    pushdaconstw 0x1E00 + 1<<6
    252e:	f847 6d04 	str.w	r6, [r7, #-4]!
    2532:	f641 6640 	movw	r6, #7744	; 0x1e40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:192
    b.n smalltworegisters
    2536:	e03d      	b.n	25b4 <smalltworegisters>

00002538 <Dictionary_497>:
Dictionary_497():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:192
    2538:	00002550 	.word	0x00002550
    253c:	31020261 	.word	0x31020261
    2540:	2b          	.byte	0x2b
	...

00002542 <Code_497>:
Code_497():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:198

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "1+" @ ( u -- u+1 )
                       @ Adds one to the cell on top of the stack.
@ -----------------------------------------------------------------------------
  adds tos, #1
    2542:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:199
  bx lr
    2544:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:201

    pushdaconstw 0x1C00 + 1<<6
    2546:	f847 6d04 	str.w	r6, [r7, #-4]!
    254a:	f641 4640 	movw	r6, #7232	; 0x1c40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:202
    b.n smalltworegisters
    254e:	e031      	b.n	25b4 <smalltworegisters>

00002550 <Dictionary_500>:
Dictionary_500():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:202
    2550:	00002568 	.word	0x00002568
    2554:	32020261 	.word	0x32020261
    2558:	2d          	.byte	0x2d
	...

0000255a <Code_500>:
Code_500():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:208

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2-" @ ( u -- u-1 )
                      @ Subtracts two from the cell on top of the stack.
@ -----------------------------------------------------------------------------
  subs tos, #2
    255a:	3e02      	subs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:209
  bx lr
    255c:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:211

    pushdaconstw 0x1E00 + 2<<6
    255e:	f847 6d04 	str.w	r6, [r7, #-4]!
    2562:	f641 6680 	movw	r6, #7808	; 0x1e80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:212
    b.n smalltworegisters
    2566:	e025      	b.n	25b4 <smalltworegisters>

00002568 <Dictionary_503>:
Dictionary_503():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:212
    2568:	00002580 	.word	0x00002580
    256c:	32020261 	.word	0x32020261
    2570:	2b          	.byte	0x2b
	...

00002572 <Code_503>:
Code_503():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:218

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2+" @ ( u -- u+1 )
                       @ Adds two to the cell on top of the stack.
@ -----------------------------------------------------------------------------
  adds tos, #2
    2572:	3602      	adds	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:219
  bx lr
    2574:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:221

    pushdaconstw 0x1C00 + 2<<6
    2576:	f847 6d04 	str.w	r6, [r7, #-4]!
    257a:	f641 4680 	movw	r6, #7296	; 0x1c80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:222
    b.n smalltworegisters
    257e:	e019      	b.n	25b4 <smalltworegisters>

00002580 <Dictionary_506>:
Dictionary_506():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:222
    2580:	0000259a 	.word	0x0000259a
    2584:	63050261 	.word	0x63050261
    2588:	2b6c6c65 	.word	0x2b6c6c65

0000258c <Code_506>:
Code_506():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:227

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "cell+" @ ( x -- x+4 )
@ -----------------------------------------------------------------------------
  adds tos, #4
    258c:	3604      	adds	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:228
  bx lr
    258e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:230

    pushdaconstw 0x1C00 + 4<<6
    2590:	f847 6d04 	str.w	r6, [r7, #-4]!
    2594:	f641 5600 	movw	r6, #7424	; 0x1d00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:231
    b.n smalltworegisters
    2598:	e00c      	b.n	25b4 <smalltworegisters>

0000259a <Dictionary_509>:
Dictionary_509():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:231
    259a:	25cc      	.short	0x25cc
    259c:	02610000 	.word	0x02610000
    25a0:	67656e06 	.word	0x67656e06
    25a4:	7461      	.short	0x7461
    25a6:	65          	.byte	0x65
	...

000025a8 <Code_509>:
Code_509():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:236

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "negate" @ ( n1 -- -n1 )
@ -----------------------------------------------------------------------------
  rsbs tos, tos, #0
    25a8:	4276      	negs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:237
  bx lr
    25aa:	4770      	bx	lr

000025ac <allocator_negate>:
allocator_negate():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:240

allocator_negate:
    pushdaconstw 0x4240 @ rsbs r0, r0, #0
    25ac:	f847 6d04 	str.w	r6, [r7, #-4]!
    25b0:	f244 2640 	movw	r6, #16960	; 0x4240

000025b4 <smalltworegisters>:
smalltworegisters():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:243

smalltworegisters:
    push {lr}
    25b4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:244
    bl expect_one_element @ Da nicht gefaltet worden ist, muss es sich um einen Register handeln.
    25b6:	f7fd ff8f 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:245
    ldr r1, [r0, #offset_state_tos]
    25ba:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:246
    lsls r1, #3
    25bc:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:247
    orrs tos, r1
    25be:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:248
    bl tos_registerwechsel
    25c0:	f7fe f814 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:249
    orrs tos, r3
    25c4:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:250
    bl hkomma
    25c6:	f001 f9eb 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:251
    pop {pc}
    25ca:	bd00      	pop	{pc}

000025cc <Dictionary_512>:
Dictionary_512():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:251
    25cc:	000025e4 	.word	0x000025e4
    25d0:	6e030261 	.word	0x6e030261
    25d4:	746f      	.short	0x746f

000025d6 <Code_512>:
Code_512():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:256

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "not" @ ( x -- ~x )
@ -----------------------------------------------------------------------------
  mvns tos, tos
    25d6:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:257
  bx lr
    25d8:	4770      	bx	lr

000025da <allocator_not>:
allocator_not():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:260

allocator_not:
    pushdaconstw 0x43C0 @ mvns r0, r0
    25da:	f847 6d04 	str.w	r6, [r7, #-4]!
    25de:	f244 36c0 	movw	r6, #17344	; 0x43c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:261
    b.n smalltworegisters
    25e2:	e7e7      	b.n	25b4 <smalltworegisters>

000025e4 <Dictionary_515>:
Dictionary_515():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:261
    25e4:	000025fc 	.word	0x000025fc
    25e8:	73030261 	.word	0x73030261
    25ec:	7268      	.short	0x7268

000025ee <Code_515>:
Code_515():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:266

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_allocator, "shr" @ ( x -- x' ) @ Um eine Stelle rechts schieben
@ -----------------------------------------------------------------------------
  lsrs tos, #1
    25ee:	0876      	lsrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:267
  bx lr
    25f0:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:269

    pushdaconstw 0x0840 @ lsrs r0, r0, #1
    25f2:	f847 6d04 	str.w	r6, [r7, #-4]!
    25f6:	f640 0640 	movw	r6, #2112	; 0x840
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:270
    b.n smalltworegisters
    25fa:	e7db      	b.n	25b4 <smalltworegisters>

000025fc <Dictionary_518>:
Dictionary_518():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:270
    25fc:	0000260c 	.word	0x0000260c
    2600:	73030261 	.word	0x73030261
    2604:	6c68      	.short	0x6c68

00002606 <Code_518>:
Code_518():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:275

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_foldable_1|Flag_allocator, "shl" @ ( x -- x' ) @ Um eine Stelle links schieben
@ -----------------------------------------------------------------------------
  lsls tos, #1
    2606:	0076      	lsls	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:276
  bx lr
    2608:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:278

    b.n 1f
    260a:	e006      	b.n	261a <Code_519+0x4>

0000260c <Dictionary_519>:
Dictionary_519():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:278
    260c:	00002622 	.word	0x00002622
    2610:	32020261 	.word	0x32020261
    2614:	2a          	.byte	0x2a
	...

00002616 <Code_519>:
Code_519():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:283

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2*" @ ( n -- n*2 )
@ -----------------------------------------------------------------------------
  lsls tos, #1
    2616:	0076      	lsls	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:284
  bx lr
    2618:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:286

1:  pushdaconst 0x0040 @ lsls r0, r0, #1
    261a:	f847 6d04 	str.w	r6, [r7, #-4]!
    261e:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:287
    b.n smalltworegisters
    2620:	e7c8      	b.n	25b4 <smalltworegisters>

00002622 <Dictionary_522>:
Dictionary_522():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:287
    2622:	263a      	.short	0x263a
    2624:	02610000 	.word	0x02610000
    2628:	6c656305 	.word	0x6c656305
    262c:	736c      	.short	0x736c

0000262e <Code_522>:
Code_522():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:292

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "cells" @ ( x -- 4*x )
@ -----------------------------------------------------------------------------
  lsls tos, #2
    262e:	00b6      	lsls	r6, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:293
  bx lr
    2630:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:295

    pushdaconst 0x0080 @ lsls r0, r0, #2
    2632:	f847 6d04 	str.w	r6, [r7, #-4]!
    2636:	2680      	movs	r6, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:296
    b.n smalltworegisters
    2638:	e7bc      	b.n	25b4 <smalltworegisters>

0000263a <Dictionary_525>:
Dictionary_525():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:296
    263a:	2652      	.short	0x2652
    263c:	02610000 	.word	0x02610000
    2640:	3202      	.short	0x3202
    2642:	2f          	.byte	0x2f
	...

00002644 <Code_525>:
Code_525():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:302


@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "2/" @ ( n -- n/2 )
@ -----------------------------------------------------------------------------
  asrs tos, #1
    2644:	1076      	asrs	r6, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:303
  bx lr
    2646:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:305

    pushdaconstw 0x1040 @ asrs r0, r0, #1
    2648:	f847 6d04 	str.w	r6, [r7, #-4]!
    264c:	f241 0640 	movw	r6, #4160	; 0x1040
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:306
    b.n smalltworegisters
    2650:	e7b0      	b.n	25b4 <smalltworegisters>

00002652 <Dictionary_528>:
Dictionary_528():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:306
    2652:	2692      	.short	0x2692
    2654:	02610000 	.word	0x02610000
    2658:	73626103 	.word	0x73626103

0000265c <Code_528>:
Code_528():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:312


@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline|Flag_allocator, "abs" @ ( n1 -- |n1| )
@ -----------------------------------------------------------------------------
  asrs r0, tos, #31 @ Turn MSB into 0xffffffff or 0x00000000
    265c:	17f0      	asrs	r0, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:313
  adds tos, r0
    265e:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:314
  eors tos, r0
    2660:	4046      	eors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:315
  bx lr
    2662:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:317

    push {lr} @ Eine Konstante wären weggefaltet worden, also muss TOS jetzt ein Register sein.
    2664:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:318
    bl expect_one_element
    2666:	f7fd ff37 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:320

    pushdaconst 0  @ lsls r0, r0, #0 @ Bereite einen movs-Opcode vor, der garantiert in einen freien Register landet und die Funktion eines CMP übernimmt.
    266a:	f847 6d04 	str.w	r6, [r7, #-4]!
    266e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:321
    ldr r1, [r0, #offset_state_tos]
    2670:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:322
    lsls r1, #3
    2672:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:323
    orrs tos, r1
    2674:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:324
    bl tos_registerwechsel
    2676:	f7fd ffb9 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:325
    orrs tos, r3
    267a:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:326
    bl hkomma
    267c:	f001 f990 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:328

    pushdaconstw 0xD500 @ bpl
    2680:	f847 6d04 	str.w	r6, [r7, #-4]!
    2684:	f24d 5600 	movw	r6, #54528	; 0xd500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:329
    bl hkomma
    2688:	f001 f98a 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:331

    bl allocator_negate @ Negate wird keinen Registerwechsel mehr machen, weil wir hier schon einen freien Zielregister vorbereitet haben.
    268c:	f7ff ff8e 	bl	25ac <allocator_negate>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:332
    pop {pc}
    2690:	bd00      	pop	{pc}

00002692 <Dictionary_533>:
Dictionary_533():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:332
    2692:	26b0      	.short	0x26b0
    2694:	00420000 	.word	0x00420000
    2698:	6d2f7505 	.word	0x6d2f7505
    269c:	646f      	.short	0x646f

0000269e <Code_533>:
Code_533():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:376
  pushda r3
  bx lr

  .else

  ldm psp!, {r0}       @ Get u1 into a register
    269e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:377
  movs r1, tos        @ Back up the divisor in X.
    26a0:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:378
  udiv tos, r0, tos  @ Divide: quotient in TOS.
    26a2:	fbb0 f6f6 	udiv	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:379
  muls r1, tos, r1    @ Un-divide to compute remainder.
    26a6:	4371      	muls	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:380
  subs r0, r1          @ Compute remainder.
    26a8:	1a40      	subs	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:381
  subs psp, #4
    26aa:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:382
  str r0, [psp]
    26ac:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:383
  bx lr
    26ae:	4770      	bx	lr

000026b0 <Dictionary_534>:
Dictionary_534():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:383
    26b0:	000026ce 	.word	0x000026ce
    26b4:	2f040042 	.word	0x2f040042
    26b8:	6f6d      	.short	0x6f6d
    26ba:	64          	.byte	0x64
	...

000026bc <Code_534>:
Code_534():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:442
      bl u_divmod
      pop {pc}

  .else

  ldm psp!, {r0}       @ Get u1 into a register
    26bc:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:443
  movs r1, tos       @ Back up the divisor in X.
    26be:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:444
  sdiv tos, r0, tos @ Divide: quotient in TOS.
    26c0:	fb90 f6f6 	sdiv	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:445
  muls r1, tos, r1   @ Un-divide to compute remainder.
    26c4:	4371      	muls	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:446
  subs r0, r1         @ Compute remainder.
    26c6:	1a40      	subs	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:447
  subs psp, #4
    26c8:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:448
  str r0, [psp]
    26ca:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:449
  bx lr
    26cc:	4770      	bx	lr

000026ce <Dictionary_535>:
Dictionary_535():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:449
    26ce:	26e2      	.short	0x26e2
    26d0:	00420000 	.word	0x00420000
    26d4:	646f6d03 	.word	0x646f6d03

000026d8 <Code_535>:
Code_535():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:456
  .endif

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2, "mod" @ ( n1 n2 -- rem )
@ -----------------------------------------------------------------------------
  push {lr}
    26d8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:457
  bl divmod
    26da:	f7ff ffef 	bl	26bc <Code_534>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:458
  drop
    26de:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:459
  pop {pc}
    26e0:	bd00      	pop	{pc}

000026e2 <Dictionary_537>:
Dictionary_537():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:459
    26e2:	2722      	.short	0x2722
    26e4:	02620000 	.word	0x02620000
    26e8:	2f01      	.short	0x2f01

000026ea <Code_537>:
Code_537():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:475
  .else

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_2|Flag_inline|Flag_allocator, "/" @ ( n1 n2 -- n1/n2 )
@ -----------------------------------------------------------------------------
  ldm psp!, {r0}       @ Get n1 into a register
    26ea:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:476
  sdiv tos, r0, tos    @ Divide !
    26ec:	fb90 f6f6 	sdiv	r6, r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:477
  bx lr
    26f0:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:479

    push {lr}
    26f2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:480
    bl expect_two_elements
    26f4:	f7fd fefa 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:481
    bl expect_tos_in_register
    26f8:	f7fd ff2a 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:482
    bl expect_nos_in_register
    26fc:	f7fd ff32 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:485

    @ Baue den Opcode zusammen:
    pushdatos
    2700:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:486
    ldr tos, =0xFB90F0F0
    2704:	4e23      	ldr	r6, [pc, #140]	; (2794 <Code_545+0x10>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:488

    ldr r1, [r0, #offset_state_tos]
    2706:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:489
    orrs tos, r1 @ Quellregister 1 hinzufügen
    2708:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:491

    ldr r1, [r0, #offset_state_nos]
    270a:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:492
    orrs tos, tos, r1, lsl #16 @ Quellregister 2 hinzufügen
    270c:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:494

    bl eliminiere_tos
    2710:	f7fd fde5 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:496

    bl tos_registerwechsel
    2714:	f7fd ff6a 	bl	5ec <tos_registerwechsel>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:498

    orrs tos, tos, r3, lsl #8 @ Zielregister hinzufügen
    2718:	ea56 2603 	orrs.w	r6, r6, r3, lsl #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:499
    bl reversekomma
    271c:	f001 f970 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:500
    pop {pc}
    2720:	bd00      	pop	{pc}

00002722 <Dictionary_539>:
Dictionary_539():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:500
    2722:	2736      	.short	0x2736
    2724:	00610000 	.word	0x00610000
    2728:	65766504 	.word	0x65766504
    272c:	6e          	.byte	0x6e
	...

0000272e <Code_539>:
Code_539():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:507
  .endif

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_1|Flag_inline, "even" @ ( x -- x' )
@ -----------------------------------------------------------------------------
  movs r0, #1
    272e:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:508
  ands r0, tos
    2730:	4030      	ands	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:509
  adds tos, r0
    2732:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:510
  bx lr
    2734:	4770      	bx	lr

00002736 <Dictionary_540>:
Dictionary_540():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:510
    2736:	274e      	.short	0x274e
    2738:	00810000 	.word	0x00810000
    273c:	73616204 	.word	0x73616204
    2740:	65          	.byte	0x65
	...

00002742 <Code_540>:
Code_540():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:527

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "base" @ ( -- addr )
  CoreVariable base
@ -----------------------------------------------------------------------------
  pushdatos
    2742:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:528
  ldr tos, =base
    2746:	4e14      	ldr	r6, [pc, #80]	; (2798 <Code_545+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:529
  bx lr
    2748:	4770      	bx	lr
    274a:	000a      	.short	0x000a
	...

0000274e <Dictionary_543>:
Dictionary_543():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:529
    274e:	2764      	.short	0x2764
    2750:	00000000 	.word	0x00000000
    2754:	6e696206 	.word	0x6e696206
    2758:	7261      	.short	0x7261
    275a:	79          	.byte	0x79
	...

0000275c <Code_543>:
Code_543():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:535
  .word 10

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "binary" @ ( -- )
@ -----------------------------------------------------------------------------
  ldr r0, =base
    275c:	480e      	ldr	r0, [pc, #56]	; (2798 <Code_545+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:536
  movs r1, #2
    275e:	2102      	movs	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:537
  str r1, [r0]
    2760:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:538
  bx lr
    2762:	4770      	bx	lr

00002764 <Dictionary_544>:
Dictionary_544():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:538
    2764:	0000277a 	.word	0x0000277a
    2768:	64070000 	.word	0x64070000
    276c:	6d696365 	.word	0x6d696365
    2770:	6c61      	.short	0x6c61

00002772 <Code_544>:
Code_544():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:543

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "decimal" @ ( -- )
@ -----------------------------------------------------------------------------
  ldr r0, =base
    2772:	4809      	ldr	r0, [pc, #36]	; (2798 <Code_545+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:544
  movs r1, #10
    2774:	210a      	movs	r1, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:545
  str r1, [r0]
    2776:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:546
  bx lr
    2778:	4770      	bx	lr

0000277a <Dictionary_545>:
Dictionary_545():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:546
    277a:	27f6      	.short	0x27f6
    277c:	00000000 	.word	0x00000000
    2780:	78656803 	.word	0x78656803

00002784 <Code_545>:
Code_545():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:551

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "hex" @ ( -- )
@ -----------------------------------------------------------------------------
  ldr r0, =base
    2784:	4804      	ldr	r0, [pc, #16]	; (2798 <Code_545+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:552
  movs r1, #16
    2786:	2110      	movs	r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:553
  str r1, [r0]
    2788:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:554
  bx lr
    278a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:48
      ldr tos, =0xF1100000 @ adds r0, r0, #Imm12
    278c:	f1100000 	.word	0xf1100000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:75
      ldr tos, =0xF1B00000 @ subs r0, r0, #Imm12
    2790:	f1b00000 	.word	0xf1b00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:486
    ldr tos, =0xFB90F0F0
    2794:	fb90f0f0 	.word	0xfb90f0f0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/calculations.s:528
  ldr tos, =base
    2798:	2001fffc 	.word	0x2001fffc

0000279c <enable_caches>:
enable_caches():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:41
.equ DCCSW   , 0xE000EF6C @ WO Privileged Unknown Data cache clean by set/way
.equ DCCIMVAC, 0xE000EF70 @ WO Privileged Unknown Data cache clean and invalidate by address to the PoC(2)
.equ DCCISW  , 0xE000EF74 @ WO Privileged Unknown Data cache clean and invalidate by set/way

enable_caches:
    push {lr}
    279c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:50
    @
    @ On reset the cache content is unpredicatable. We have to invalidate the
    @ caches before turning them on [2].
    @
    
    ldr  r3, =CCR       @ Read the configuration and control register
    279e:	4b6f      	ldr	r3, [pc, #444]	; (295c <Code_557+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:51
    ldr  r0, [r3]       @
    27a0:	6818      	ldr	r0, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:52
    tst  r0, #CCR_DC    @ Skip over the data cache if 
    27a2:	f410 3f80 	tst.w	r0, #65536	; 0x10000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:53
    bne  2f             @ if it's already enabled
    27a6:	d115      	bne.n	27d4 <enable_caches+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:75
    @ The layout of the DCISW register is [4]:
    @   * [31:30] : way (one of the four sets)
    @   * [13:5]  : set (only the lower 7 bits are populated in by a 4way 16kiB cache with 32B lines)j
    @   * rest    : reserved

    ldr  r0, =DCISW     @ Load the address of the data cache invalidate by set/way register
    27a8:	486d      	ldr	r0, [pc, #436]	; (2960 <Code_557+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:76
    movw r1, #(1<<9)-1  @ Use a 9 bit down counter
    27aa:	f240 11ff 	movw	r1, #511	; 0x1ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:78

1:  lsrs r2, r1, 7      @ Extract the upper two counter bits
    27ae:	09ca      	lsrs	r2, r1, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:79
    lsls r2, #30        @ into the cache way field.
    27b0:	0792      	lsls	r2, r2, #30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:80
    bfi  r2, r1, #5, #7 @ Insert the lower 7 bits into the set field.
    27b2:	f361 124b 	bfi	r2, r1, #5, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:81
    str  r2, [r0]       @ Invalidate the addressed caches set.
    27b6:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:82
    subs r1, #1         @ Decrement the counter
    27b8:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:83
    bne  1b             @ Repeat until all sets have been invalidated
    27ba:	d1f8      	bne.n	27ae <enable_caches+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:84
    dsb                 @ Wait for all memory accesses to complete
    27bc:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:85
    isb                     
    27c0:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:87
    
    ldr  r0, [r3]       @ Enable the data cache
    27c4:	6818      	ldr	r0, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:88
    orr  r0, #CCR_DC    
    27c6:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:89
    str  r0, [r3]
    27ca:	6018      	str	r0, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:90
    dsb                 @ Your friendly memory barrier
    27cc:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:91
    isb
    27d0:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:93

2:  tst  r0, #CCR_IC    @ If the instruction cache is already enabled
    27d4:	f410 3f00 	tst.w	r0, #131072	; 0x20000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:94
    bne  3f             @ we're done.
    27d8:	d10c      	bne.n	27f4 <enable_caches+0x58>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:105
    @
    @ Invalidating the instruction cache is a lot simpler. Writing to the
    @ Instruction cache invalidate all to the Point of Unification (sic!)
    @ register (ICIALLU) invalidates the whole instruction cache [5].
    
    ldr  r2, =ICIALLU   @ Load the ICIALLU register address and invalidate
    27da:	4a62      	ldr	r2, [pc, #392]	; (2964 <Code_557+0x12>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:106
    str  r0, [r2]       @ the instruction cache by just writing to it.
    27dc:	6010      	str	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:107
    dsb                 @ Wait for it.
    27de:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:108
    isb
    27e2:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:110
    
    orr  r0, #CCR_IC    @ Enable the instruction cache
    27e6:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:111
    str  r0, [r3]
    27ea:	6018      	str	r0, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:112
    dsb
    27ec:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:113
    isb
    27f0:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:142
    @ [5] : Arm® Cortex®-M7 Devices
    @       Generic User Guide
    @       Section 4.8.1 Full instruction cache operation, page 292
    @       URL: https://static.docs.arm.com/dui0646/c/DUI0646C_cortex_m7_dgug.pdf

3:  pop  {pc}
    27f4:	bd00      	pop	{pc}

000027f6 <Dictionary_546>:
Dictionary_546():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:142
    27f6:	2816      	.short	0x2816
    27f8:	00000000 	.word	0x00000000
    27fc:	6163640c 	.word	0x6163640c
    2800:	2d656863 	.word	0x2d656863
    2804:	61656c63 	.word	0x61656c63
    2808:	6e          	.byte	0x6e
	...

0000280a <Code_546>:
Code_546():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:161
    @   * Explicitly clean the cache
    @
    @ According to the STM32H750 errata sheet write through caching of the AXI
    @ SRAM can lead to data corruption.

    ldr  r0, =DCCMVAC    
    280a:	4857      	ldr	r0, [pc, #348]	; (2968 <Code_557+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:162
    str  tos, [r0]
    280c:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:163
    dsb
    280e:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:164
    drop 
    2812:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:165
    bx   lr
    2814:	4770      	bx	lr

00002816 <Dictionary_548>:
Dictionary_548():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:165
    2816:	283a      	.short	0x283a
    2818:	00000000 	.word	0x00000000
    281c:	61636411 	.word	0x61636411
    2820:	2d656863 	.word	0x2d656863
    2824:	61766e69 	.word	0x61766e69
    2828:	6164696c 	.word	0x6164696c
    282c:	6574      	.short	0x6574

0000282e <Code_548>:
Code_548():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:183
    @
    @ Write through caching doesn't help with loads from cached memory
    @ instead the any potentially cached lines have to be invalidated
    @ without writing them back to memory

    ldr  r0, =DCIMVAC
    282e:	484f      	ldr	r0, [pc, #316]	; (296c <Code_557+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:184
    str  tos, [r0]
    2830:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:185
    dsb
    2832:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:186
    drop 
    2836:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:187
    bx   lr
    2838:	4770      	bx	lr

0000283a <Dictionary_550>:
Dictionary_550():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:187
    283a:	2858      	.short	0x2858
    283c:	00000000 	.word	0x00000000
    2840:	6f646c06 	.word	0x6f646c06
    2844:	6f2d      	.short	0x6f2d
    2846:	6e          	.byte	0x6e
	...

00002848 <Code_550>:
Code_550():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:7
  Wortbirne Flag_visible, "ldo-on" @ ( -- )
@ -----------------------------------------------------------------------------
ldo_on:
    @ Use the internal low drop regulator
    @ Locks away the V_CAP bypass until the next power cycle
    ldr r0, =PWR_CR3
    2848:	4849      	ldr	r0, [pc, #292]	; (2970 <Code_557+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:8
    ldr r1, [r0]
    284a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:9
    orr r1, #PWR_CR3_LDOEN
    284c:	f041 0102 	orr.w	r1, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:10
    bic r1, #(PWR_CR3_SCUEN | PWR_CR3_BYPASS)
    2850:	f021 0105 	bic.w	r1, r1, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:11
    str r1, [r0]
    2854:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:13

    bx  lr
    2856:	4770      	bx	lr

00002858 <Dictionary_551>:
Dictionary_551():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:13
    2858:	00002878 	.word	0x00002878
    285c:	76040000 	.word	0x76040000
    2860:	736f      	.short	0x736f
    2862:	31          	.byte	0x31
	...

00002864 <Code_551>:
Code_551():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:20
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "vos1" @ ( -- )
@ -----------------------------------------------------------------------------
vos1:
    @ Raise the voltage to VOS1 level
    ldr r0, =PWR_D3CR
    2864:	4843      	ldr	r0, [pc, #268]	; (2974 <Code_557+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:21
    ldr r1, [r0]
    2866:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:22
    orr r1, #(0b11 << PWR_D3CR_VOS_Shift)
    2868:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:23
    str r1, [r0]
    286c:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:26
    
    @ Wait for the voltage to reach VOS1 level
1:  ldr r1, [r0]
    286e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:27
    tst r1, #PWR_D3CR_VOSRDY
    2870:	f411 5f00 	tst.w	r1, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:28
    beq 1b
    2874:	d0fb      	beq.n	286e <Code_551+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:30

    bx  lr
    2876:	4770      	bx	lr

00002878 <Dictionary_552>:
Dictionary_552():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:30
    2878:	0000289a 	.word	0x0000289a
    287c:	68060000 	.word	0x68060000
    2880:	6f2d6573 	.word	0x6f2d6573
    2884:	6e          	.byte	0x6e
	...

00002886 <Code_552>:
Code_552():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:37
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "hse-on" @ ( -- )
@ -----------------------------------------------------------------------------
hse_on:
    @ Enable the HSE oscillator
    ldr r0, =RCC_CR
    2886:	483c      	ldr	r0, [pc, #240]	; (2978 <Code_557+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:38
    ldr r1, [r0]
    2888:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:39
    orr r1, #RCC_CR_HSEON
    288a:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:40
    str r1, [r0]
    288e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:43

    @ Wait for the HSE oscillator become usable
1:  ldr r1, [r0]
    2890:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:44
    tst r1, #RCC_CR_HSERDY
    2892:	f411 3f00 	tst.w	r1, #131072	; 0x20000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:45
    beq 1b
    2896:	d0fb      	beq.n	2890 <Code_552+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:47

    bx  lr
    2898:	4770      	bx	lr

0000289a <Dictionary_553>:
Dictionary_553():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:47
    289a:	28f4      	.short	0x28f4
    289c:	00000000 	.word	0x00000000
    28a0:	6c6c700a 	.word	0x6c6c700a
    28a4:	3030342d 	.word	0x3030342d
    28a8:	484d      	.short	0x484d
    28aa:	7a          	.byte	0x7a
	...

000028ac <Code_553>:
Code_553():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:79
    @   * Wait for its readiness

    @ using 25MHz xtal for the weact board

    @ Keep the RCC_BASE around
    ldr  r0, =RCC_BASE
    28ac:	4832      	ldr	r0, [pc, #200]	; (2978 <Code_557+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:82

    @ Select 25MHz the HSE clock as PLL source
    ldr  r1, [r0, #(RCC_PLLCKSELR - RCC_BASE)]
    28ae:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:83
    orr  r1, #RCC_PLLCKSELR_PLLSRC_HSE
    28b0:	f041 0102 	orr.w	r1, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:86
    
    @ Divide the HSE 25MHz by 5 to get ref1_ck = 5MHz
    movs r2, #RCC_PLLCKSELR_DIVM1_Div5
    28b4:	2205      	movs	r2, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:87
    bfi  r1, r2, #RCC_PLLCKSELR_DIVM1_Shift, #RCC_PLLCKSELR_DIVM1_Width
    28b6:	f362 1109 	bfi	r1, r2, #4, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:88
    str  r1, [r0, #(RCC_PLLCKSELR - RCC_BASE)]
    28ba:	6281      	str	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:91

    @ Configure PLL1 for a reference clock between 4MHz and 8MHz
    ldr  r1, [r0, #(RCC_CFGR - RCC_BASE)]
    28bc:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:92
    orr  r1, #(0b10 << RCC_PLLCFGR_PLL1RGE_Shift)
    28be:	f041 0108 	orr.w	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:93
    str  r1, [r0, #(RCC_CFGR - RCC_BASE)]
    28c2:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:96
    
    @ Multiply the 5MHz reference clock by 160 and divide by 2
    ldr  r1, =RCC_PLL1DIVR_Value
    28c4:	492d      	ldr	r1, [pc, #180]	; (297c <Code_557+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:97
    str  r1, [r0, #(RCC_PLL1DIVR - RCC_BASE)]
    28c6:	6301      	str	r1, [r0, #48]	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:100
    
    @ Enable PLL1 (PLL1ON = 1)
    ldr  r1, [r0, #(RCC_CR - RCC_BASE)]
    28c8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:101
    orr  r1, #RCC_CR_PLL1ON
    28ca:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:102
    str  r1, [r0, #(RCC_CR - RCC_BASE)]
    28ce:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:105
    
    @ Wait for PLL1 to become usable (PLL1RDY = 1)
1:  ldr  r1, [r0, #(RCC_CR - RCC_BASE)]
    28d0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:106
    tst  r1, #RCC_CR_PLL1RDY
    28d2:	f011 7f00 	tst.w	r1, #33554432	; 0x2000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:107
    beq  1b
    28d6:	d0fb      	beq.n	28d0 <Code_553+0x24>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:115
    @  to the 400MHz PLL clock source.
    @ Run the chip at its maximum clock rates for VOS1:
    @   * CPU: 400MHz
    @   * AHB: 200MHz
    @   * APB: 100MHz
    mov  r1, #(0b0000 << RCC_D1CFGR_D1CPRE_Shift) | (0b100 << RCC_D1CFGR_D1PPRE_Shift) | (0b1000 << RCC_D1CFGR_HPRE_Shift)
    28d8:	f04f 0148 	mov.w	r1, #72	; 0x48
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:116
    str  r1, [r0, #(RCC_D1CFGR - RCC_BASE)]
    28dc:	6181      	str	r1, [r0, #24]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:117
    mov  r1, #(0b100 << RCC_D2CFGR_D2PPRE2_Shift) | (0b100 << RCC_D2CFGR_D2PPRE1_Shift)
    28de:	f44f 6188 	mov.w	r1, #1088	; 0x440
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:118
    str  r1, [r0, #(RCC_D2CFGR - RCC_BASE)]
    28e2:	61c1      	str	r1, [r0, #28]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:119
    mov  r1, #(0b100 << RCC_D3CFGR_D3PPRE_Shift)
    28e4:	f04f 0140 	mov.w	r1, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:120
    str  r1, [r0, #(RCC_D3CFGR - RCC_BASE)]
    28e8:	6201      	str	r1, [r0, #32]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:123

    @ Switch system clock from HSI to PLL1
    ldr  r1, [r0, #(RCC_CFGR - RCC_BASE)]
    28ea:	6901      	ldr	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:124
    orr  r1, #(0b11 << RCC_CFGR_SW_Shift)
    28ec:	f041 0103 	orr.w	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:125
    str  r1, [r0, #(RCC_CFGR - RCC_BASE)]
    28f0:	6101      	str	r1, [r0, #16]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:127

    bx   lr
    28f2:	4770      	bx	lr

000028f4 <Dictionary_554>:
Dictionary_554():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:127
    28f4:	00002910 	.word	0x00002910
    28f8:	69080000 	.word	0x69080000
    28fc:	2d74696e 	.word	0x2d74696e
    2900:	7263      	.short	0x7263
    2902:	63          	.byte	0x63
	...

00002904 <Code_554>:
Code_554():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:6
@ -----------------------------------------------------------------------------
Wortbirne Flag_visible, "init-crc" @ ( -- )
@ -----------------------------------------------------------------------------
init_crc:
    @ Enable the CRC32 peripheral
    ldr  r0, =RCC_AHB4ENR
    2904:	481e      	ldr	r0, [pc, #120]	; (2980 <Code_557+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:7
    ldr  r1, [r0]
    2906:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:8
    eor  r1, #RCC_AHB4ENR_CRCEN
    2908:	f481 2100 	eor.w	r1, r1, #524288	; 0x80000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:9
    str  r1, [r0]
    290c:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:11

    b    reset_crc
    290e:	e007      	b.n	2920 <Code_555>

00002910 <Dictionary_555>:
Dictionary_555():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:11
    2910:	00002928 	.word	0x00002928
    2914:	72090000 	.word	0x72090000
    2918:	74657365 	.word	0x74657365
    291c:	6372632d 	.word	0x6372632d

00002920 <Code_555>:
reset_crc():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:18
@ -----------------------------------------------------------------------------
Wortbirne Flag_visible, "reset-crc" @ ( -- )
@ -----------------------------------------------------------------------------
reset_crc:
    @ Start a new CRC calculation
    ldr  r0, =CRC_BASE
    2920:	4818      	ldr	r0, [pc, #96]	; (2984 <Code_557+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:19
    movs r1, #CRC_CR_RESET
    2922:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:20
    str  r1, [r0, #(CRC_CR - CRC_BASE)]
    2924:	6081      	str	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:22

    bx   lr
    2926:	4770      	bx	lr

00002928 <Dictionary_556>:
Dictionary_556():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:22
    2928:	00002946 	.word	0x00002946
    292c:	3e040000 	.word	0x3e040000
    2930:	7263      	.short	0x7263
    2932:	63          	.byte	0x63
	...

00002934 <Code_556>:
Code_556():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:32
@ -----------------------------------------------------------------------------
to_crc:
    @ Length must be a multiple of four!!!

    @ Load CRC base address into r0
    ldr   r0, =CRC_BASE
    2934:	4813      	ldr	r0, [pc, #76]	; (2984 <Code_557+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:35

    @ Pop base address into r1
    ldmia psp!, {r1}
    2936:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:38

    @ Did the length underflow?
1:  subs  r6, #4
    2938:	3e04      	subs	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:39
    blo   2f
    293a:	d302      	bcc.n	2942 <Code_556+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:42

    @ Checksum the current byte and advance
    ldmia r1!, {r2}
    293c:	c904      	ldmia	r1!, {r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:43
    str   r2, [r0, #(CRC_DR - CRC_BASE)]
    293e:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:44
    b     1b
    2940:	e7fa      	b.n	2938 <Code_556+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:47
    
    @ Drop the length
2:  ldmia psp!, {r6}
    2942:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:48
    bx    lr
    2944:	4770      	bx	lr

00002946 <Dictionary_557>:
Dictionary_557():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:48
    2946:	2988      	.short	0x2988
    2948:	00000000 	.word	0x00000000
    294c:	63726304 	.word	0x63726304
    2950:	40          	.byte	0x40
	...

00002952 <Code_557>:
Code_557():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:55
@ -----------------------------------------------------------------------------
Wortbirne Flag_visible, "crc@" @ ( -- crc )
@ -----------------------------------------------------------------------------
crc_at:
    @ Fetch the calculated checksum
    ldr   r0, =CRC_BASE
    2952:	480c      	ldr	r0, [pc, #48]	; (2984 <Code_557+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:56
    stmdb psp!, {r6}
    2954:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:57
    ldr   r6, [r0, #(CRC_DR - CRC_BASE)]
    2958:	6806      	ldr	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:58
    bx    lr
    295a:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:50
    ldr  r3, =CCR       @ Read the configuration and control register
    295c:	e000ed14 	.word	0xe000ed14
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:75
    ldr  r0, =DCISW     @ Load the address of the data cache invalidate by set/way register
    2960:	e000ef60 	.word	0xe000ef60
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:105
    ldr  r2, =ICIALLU   @ Load the ICIALLU register address and invalidate
    2964:	e000ef50 	.word	0xe000ef50
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:161
    ldr  r0, =DCCMVAC    
    2968:	e000ef68 	.word	0xe000ef68
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/cache.s:183
    ldr  r0, =DCIMVAC
    296c:	e000ef5c 	.word	0xe000ef5c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:7
    ldr r0, =PWR_CR3
    2970:	5802480c 	.word	0x5802480c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:20
    ldr r0, =PWR_D3CR
    2974:	58024818 	.word	0x58024818
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:37
    ldr r0, =RCC_CR
    2978:	58024400 	.word	0x58024400
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/clock.s:96
    ldr  r1, =RCC_PLL1DIVR_Value
    297c:	0103029f 	.word	0x0103029f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:6
    ldr  r0, =RCC_AHB4ENR
    2980:	580244e0 	.word	0x580244e0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:18
    ldr  r0, =CRC_BASE
    2984:	58024c00 	.word	0x58024c00

00002988 <Dictionary_558>:
Dictionary_558():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/crc.s:18
    2988:	000029a4 	.word	0x000029a4
    298c:	69090000 	.word	0x69090000
    2990:	2d74696e 	.word	0x2d74696e
    2994:	68736168 	.word	0x68736168

00002998 <Code_558>:
Code_558():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:6
@ -----------------------------------------------------------------------------
Wortbirne Flag_visible, "init-hash" @ ( -- )
@ -----------------------------------------------------------------------------
init_hash:
    @ Enable the CRC32 peripheral
    ldr  r0, =RCC_AHB2ENR
    2998:	4808      	ldr	r0, [pc, #32]	; (29bc <Code_559+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:7
    ldr  r1, [r0]
    299a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:8
    eor  r1, #RCC_AHB2ENR_HASHEN
    299c:	f081 0120 	eor.w	r1, r1, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:9
    str  r1, [r0]
    29a0:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:11

    bx   lr
    29a2:	4770      	bx	lr

000029a4 <Dictionary_559>:
Dictionary_559():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:11
    29a4:	000029c4 	.word	0x000029c4
    29a8:	68070000 	.word	0x68070000
    29ac:	5f687361 	.word	0x5f687361
    29b0:	7263      	.short	0x7263

000029b2 <Code_559>:
Code_559():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:17


@ -----------------------------------------------------------------------------
Wortbirne Flag_visible, "hash_cr" @ ( -- a-addr )
@ -----------------------------------------------------------------------------
    dup
    29b2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:18
    ldr tos, =HASH_CR
    29b6:	4e02      	ldr	r6, [pc, #8]	; (29c0 <Code_559+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:19
    bx  lr
    29b8:	4770      	bx	lr
    29ba:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:6
    ldr  r0, =RCC_AHB2ENR
    29bc:	580244dc 	.word	0x580244dc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:18
    ldr tos, =HASH_CR
    29c0:	48021400 	.word	0x48021400

000029c4 <Dictionary_562>:
Dictionary_562():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/hash.s:18
    29c4:	000029d8 	.word	0x000029d8
    29c8:	73030000 	.word	0x73030000
    29cc:	6477      	.short	0x6477

000029ce <Code_562>:
Code_562():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:75
 
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "swd"
@ -----------------------------------------------------------------------------
swd_addr:
    dup             @ In theory the rest could be written in forth
    29ce:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:76
    movs tos, r11   @ with just knowledge of this constant, but
    29d2:	ea5f 060b 	movs.w	r6, fp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:77
    bx   lr         @ it would require a two stage bootstrap.
    29d6:	4770      	bx	lr

000029d8 <Dictionary_565>:
Dictionary_565():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:77
    29d8:	00002a08 	.word	0x00002a08
    29dc:	73080000 	.word	0x73080000
    29e0:	692d6477 	.word	0x692d6477
    29e4:	696e      	.short	0x696e
    29e6:	74          	.byte	0x74
	...

000029e8 <Code_565>:
Code_565():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:84

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "swd-init"
@ -----------------------------------------------------------------------------
uart_init:                      @ Hijack the usart_init symbol to minimize code changes
    push {lr}
    29e8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:86

    ldr  r0, =Dictionarypointer @ Assumes that the directory pointer points to a word aligned address in SRAM.
    29ea:	486e      	ldr	r0, [pc, #440]	; (2ba4 <hook_intern+0x4>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:87
    ldr  r1, [r0]               @ Load the start of free space
    29ec:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:88
    movs r0, #0                 @ Initialize all four indices to zero.
    29ee:	2000      	movs	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:89
    str  r0, [r1]
    29f0:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:90
    movs r11, r1                @ Save the base address in R11. This makes the code
    29f2:	ea5f 0b01 	movs.w	fp, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:93
                                @ slightly faster and allows the host PC to autodiscover
                                @ the buffer address.
    dup                         @ Allocate the required 4 + 2*256 bytes
    29f6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:94
    pushdaconstw 516            @ Ignore failure. There is nothing we can do
    29fa:	f847 6d04 	str.w	r6, [r7, #-4]!
    29fe:	f240 2604 	movw	r6, #516	; 0x204
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:95
    bl   allot                  @ to recover and there should always be at least
    2a02:	f001 f83b 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:96
    pop  {pc}                   @ this much free SRAM on start up.
    2a06:	bd00      	pop	{pc}

00002a08 <Dictionary_570>:
Dictionary_570():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:96
    2a08:	00002a32 	.word	0x00002a32
    2a0c:	73080000 	.word	0x73080000
    2a10:	6b2d6477 	.word	0x6b2d6477
    2a14:	7965      	.short	0x7965
    2a16:	3f          	.byte	0x3f
	...

00002a18 <Code_570>:
Code_570():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:102

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "swd-key?" @ ( -- ? )
@ -----------------------------------------------------------------------------
serial_qkey:            @ Hijack the serial_qkey symbol to minimize code changes
    push  {lr}          @ Yield the CPU
    2a18:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:103
    bl    pause
    2a1a:	f000 f8be 	bl	2b9a <Code_600>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:105

    dup
    2a1e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:106
    mov   r2, r11       @ Load SWD buffer base address into a low register
    2a22:	465a      	mov	r2, fp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:107
    ldrb  r0, [r2]      @ Load RX write index
    2a24:	7810      	ldrb	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:108
    ldrb  r1, [r2, 1]   @ Load RX read index
    2a26:	7851      	ldrb	r1, [r2, #1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:110

    movs  tos, 0        @ Assume that the RX buffer is empty (read == write)
    2a28:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:111
    cmp   r0, r1        @ Test the assumption
    2a2a:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:112
    it    ne            @ Change from 0 to -1 if the assumption was incorrect 
    2a2c:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:113
    subne tos, 1
    2a2e:	3e01      	subne	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:115

    pop   {pc}
    2a30:	bd00      	pop	{pc}

00002a32 <Dictionary_573>:
Dictionary_573():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:115
    2a32:	2a60      	.short	0x2a60
    2a34:	00000000 	.word	0x00000000
    2a38:	64777309 	.word	0x64777309
    2a3c:	696d652d 	.word	0x696d652d
    2a40:	3f74      	.short	0x3f74

00002a42 <Code_573>:
Code_573():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:121

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "swd-emit?" @ ( -- ? )
@ -----------------------------------------------------------------------------
serial_qemit:        @ Hijack the serial_qemit symbol to minimize code changes
    push {lr}        @ Yield the CPU
    2a42:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:122
    bl pause
    2a44:	f000 f8a9 	bl	2b9a <Code_600>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:124

    dup
    2a48:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:125
    mov r2, r11      @ Load SWD buffer base address into a low register
    2a4c:	465a      	mov	r2, fp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:126
    ldrb r0, [r2, 2] @ Load TX write index
    2a4e:	7890      	ldrb	r0, [r2, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:127
    ldrb r1, [r2, 3] @ Load TX read index
    2a50:	78d1      	ldrb	r1, [r2, #3]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:128
    adds r0, 1       @ Check if RX write index + 1 == RX read index
    2a52:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:129
    uxtb r0, r0      @ clear possible carry
    2a54:	b2c0      	uxtb	r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:130
    movs tos, 0      @ Assume that the TX buffer is full (write + 1 == RX)
    2a56:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:131
    cmp r0, r1       @ Test the assumption
    2a58:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:132
    it ne            @ Change from 0 to -1 if the assumption was incorrect
    2a5a:	bf18      	it	ne
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:133
    subne tos, 1
    2a5c:	3e01      	subne	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:135

    pop {pc}
    2a5e:	bd00      	pop	{pc}

00002a60 <Dictionary_576>:
Dictionary_576():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:135
    2a60:	00002a86 	.word	0x00002a86
    2a64:	73070000 	.word	0x73070000
    2a68:	6b2d6477 	.word	0x6b2d6477
    2a6c:	7965      	.short	0x7965

00002a6e <Code_576>:
Code_576():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:141

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "swd-key" @ ( -- c )
@ -----------------------------------------------------------------------------
serial_key:             @ Hijack the serial_key symbol to minimize code changes
    dup
    2a6e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:143

    mov  r2, r11        @ Load SWD buffer base address into a low register
    2a72:	465a      	mov	r2, fp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:144
    ldrb r0, [r2, 1]    @ Cache RX read index
    2a74:	7850      	ldrb	r0, [r2, #1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:145
1:  ldrb r1, [r2, 0]    @ Load RX write index
    2a76:	7811      	ldrb	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:146
    cmp  r0, r1         @ Wait while RX read == RX write
    2a78:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:147
    beq  1b
    2a7a:	d0fc      	beq.n	2a76 <Code_576+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:149
    
    adds r1, r0, 4      @ The next byte is at R11 + 4 + RX read
    2a7c:	1d01      	adds	r1, r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:150
    ldrb tos, [r1, r2]  @ Load the byte that was written
    2a7e:	5c8e      	ldrb	r6, [r1, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:152

    adds r0, 1          @ Advance the read index one byte
    2a80:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:153
    strb r0, [r2, 1]    @ And write it to the ring buffer
    2a82:	7050      	strb	r0, [r2, #1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:155

    bx   lr
    2a84:	4770      	bx	lr

00002a86 <Dictionary_579>:
Dictionary_579():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:155
    2a86:	2ab0      	.short	0x2ab0
    2a88:	00000000 	.word	0x00000000
    2a8c:	64777308 	.word	0x64777308
    2a90:	696d652d 	.word	0x696d652d
    2a94:	74          	.byte	0x74
	...

00002a96 <Code_579>:
Code_579():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:161
      
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "swd-emit" @ ( c -- )
@ -----------------------------------------------------------------------------
serial_emit:            @ Hijack the serial_emit symbol to minimize code changes
    mov  r3, r11        @ Load SWD buffer base address into a low register
    2a96:	465b      	mov	r3, fp
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:162
    ldrb r0, [r3, 2]    @ Cache TX write index
    2a98:	7898      	ldrb	r0, [r3, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:163
    adds r1, r0, 1      @ Increment TX write index % 256
    2a9a:	1c41      	adds	r1, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:164
    uxtb r1, r1
    2a9c:	b2c9      	uxtb	r1, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:165
1:  ldrb r2, [r3, 3]    @ Load TX read index
    2a9e:	78da      	ldrb	r2, [r3, #3]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:166
    cmp  r1, r2         @ Wait while TX write + 1 == TX read
    2aa0:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:167
    beq  1b
    2aa2:	d0fc      	beq.n	2a9e <Code_579+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:169

    add  r0, #256+4     @ Store the next byte at R11 + 4 + 256 + TX write
    2aa4:	f500 7082 	add.w	r0, r0, #260	; 0x104
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:170
    strb tos, [r0, r3]
    2aa8:	54c6      	strb	r6, [r0, r3]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:172

    strb r1, [r3, #2]
    2aaa:	7099      	strb	r1, [r3, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:174
    
    drop
    2aac:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:175
    bx   lr
    2aae:	4770      	bx	lr

00002ab0 <Dictionary_581>:
Dictionary_581():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:175
    2ab0:	00002acc 	.word	0x00002acc
    2ab4:	68090081 	.word	0x68090081
    2ab8:	2d6b6f6f 	.word	0x2d6b6f6f
    2abc:	74696d65 	.word	0x74696d65

00002ac0 <Code_581>:
Code_581():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:25

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-emit" @ ( -- addr )
  CoreVariable hook_emit
@------------------------------------------------------------------------------
  pushdatos
    2ac0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:26
  ldr tos, =hook_emit
    2ac4:	4e38      	ldr	r6, [pc, #224]	; (2ba8 <hook_intern+0x8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:27
  bx lr
    2ac6:	4770      	bx	lr
    2ac8:	00002a96 	.word	0x00002a96

00002acc <Dictionary_584>:
Dictionary_584():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:27
    2acc:	00002ae8 	.word	0x00002ae8
    2ad0:	68080081 	.word	0x68080081
    2ad4:	2d6b6f6f 	.word	0x2d6b6f6f
    2ad8:	656b      	.short	0x656b
    2ada:	79          	.byte	0x79
	...

00002adc <Code_584>:
Code_584():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:39

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-key" @ ( -- addr )
  CoreVariable hook_key
@------------------------------------------------------------------------------
  pushdatos
    2adc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:40
  ldr tos, =hook_key
    2ae0:	4e32      	ldr	r6, [pc, #200]	; (2bac <hook_intern+0xc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:41
  bx lr
    2ae2:	4770      	bx	lr
    2ae4:	00002a6e 	.word	0x00002a6e

00002ae8 <Dictionary_587>:
Dictionary_587():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:41
    2ae8:	00002b06 	.word	0x00002b06
    2aec:	680a0081 	.word	0x680a0081
    2af0:	2d6b6f6f 	.word	0x2d6b6f6f
    2af4:	74696d65 	.word	0x74696d65
    2af8:	3f          	.byte	0x3f
	...

00002afa <Code_587>:
Code_587():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:52

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-emit?" @ ( -- addr )
  CoreVariable hook_qemit
@------------------------------------------------------------------------------
  pushdatos
    2afa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:53
  ldr tos, =hook_qemit
    2afe:	4e2c      	ldr	r6, [pc, #176]	; (2bb0 <hook_intern+0x10>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:54
  bx lr
    2b00:	4770      	bx	lr
    2b02:	2a42      	.short	0x2a42
	...

00002b06 <Dictionary_590>:
Dictionary_590():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:54
    2b06:	2b22      	.short	0x2b22
    2b08:	00810000 	.word	0x00810000
    2b0c:	6f6f6809 	.word	0x6f6f6809
    2b10:	656b2d6b 	.word	0x656b2d6b
    2b14:	3f79      	.short	0x3f79

00002b16 <Code_590>:
Code_590():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:65

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-key?" @ ( -- addr )
  CoreVariable hook_qkey
@------------------------------------------------------------------------------
  pushdatos
    2b16:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:66
  ldr tos, =hook_qkey
    2b1a:	4e26      	ldr	r6, [pc, #152]	; (2bb4 <hook_intern+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:67
  bx lr
    2b1c:	4770      	bx	lr
    2b1e:	2a18      	.short	0x2a18
	...

00002b22 <Dictionary_593>:
Dictionary_593():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:67
    2b22:	2b40      	.short	0x2b40
    2b24:	00810000 	.word	0x00810000
    2b28:	6f6f680a 	.word	0x6f6f680a
    2b2c:	61702d6b 	.word	0x61702d6b
    2b30:	7375      	.short	0x7375
    2b32:	65          	.byte	0x65
	...

00002b34 <Code_593>:
Code_593():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:78

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-pause" @ ( -- addr )
  CoreVariable hook_pause
@------------------------------------------------------------------------------
  pushdatos
    2b34:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:79
  ldr tos, =hook_pause
    2b38:	4e1f      	ldr	r6, [pc, #124]	; (2bb8 <hook_intern+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:80
  bx lr
    2b3a:	4770      	bx	lr
    2b3c:	0000503a 	.word	0x0000503a

00002b40 <Dictionary_596>:
Dictionary_596():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:80
    2b40:	00002b56 	.word	0x00002b56
    2b44:	65040000 	.word	0x65040000
    2b48:	696d      	.short	0x696d
    2b4a:	74          	.byte	0x74
	...

00002b4c <Code_596>:
Code_596():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:87

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "emit" @ ( c -- )
emit:
@------------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr} @ Used in core, registers have to be saved !
    2b4c:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:88
  ldr r0, =hook_emit
    2b4e:	4816      	ldr	r0, [pc, #88]	; (2ba8 <hook_intern+0x8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:89
  bl hook_intern
    2b50:	f000 f826 	bl	2ba0 <hook_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:90
  pop {r0, r1, r2, r3, pc}
    2b54:	bd0f      	pop	{r0, r1, r2, r3, pc}

00002b56 <Dictionary_597>:
Dictionary_597():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:90
    2b56:	2b6a      	.short	0x2b6a
    2b58:	00000000 	.word	0x00000000
    2b5c:	79656b03 	.word	0x79656b03

00002b60 <Code_597>:
Code_597():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:96

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "key" @ ( -- c )
key:
@------------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr} @ Used in core, registers have to be saved !
    2b60:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:97
  ldr r0, =hook_key
    2b62:	4812      	ldr	r0, [pc, #72]	; (2bac <hook_intern+0xc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:98
  bl hook_intern
    2b64:	f000 f81c 	bl	2ba0 <hook_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:99
  pop {r0, r1, r2, r3, pc}
    2b68:	bd0f      	pop	{r0, r1, r2, r3, pc}

00002b6a <Dictionary_598>:
Dictionary_598():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:99
    2b6a:	2b7c      	.short	0x2b7c
    2b6c:	00000000 	.word	0x00000000
    2b70:	696d6505 	.word	0x696d6505
    2b74:	3f74      	.short	0x3f74

00002b76 <Code_598>:
Code_598():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:104

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "emit?" @ ( -- ? )
@------------------------------------------------------------------------------
  ldr r0, =hook_qemit
    2b76:	480e      	ldr	r0, [pc, #56]	; (2bb0 <hook_intern+0x10>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:105
  ldr r0, [r0]
    2b78:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:106
  mov pc, r0
    2b7a:	4687      	mov	pc, r0

00002b7c <Dictionary_599>:
Dictionary_599():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:106
    2b7c:	00002b8e 	.word	0x00002b8e
    2b80:	6b040000 	.word	0x6b040000
    2b84:	7965      	.short	0x7965
    2b86:	3f          	.byte	0x3f
	...

00002b88 <Code_599>:
Code_599():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:111

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "key?" @ ( -- ? )
@------------------------------------------------------------------------------
  ldr r0, =hook_qkey
    2b88:	480a      	ldr	r0, [pc, #40]	; (2bb4 <hook_intern+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:112
  ldr r0, [r0]
    2b8a:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:113
  mov pc, r0
    2b8c:	4687      	mov	pc, r0

00002b8e <Dictionary_600>:
Dictionary_600():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:113
    2b8e:	2bbc      	.short	0x2bbc
    2b90:	00000000 	.word	0x00000000
    2b94:	75617005 	.word	0x75617005
    2b98:	6573      	.short	0x6573

00002b9a <Code_600>:
pause():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:119

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "pause" @ ( -- ? )
pause:
@------------------------------------------------------------------------------
  ldr r0, =hook_pause
    2b9a:	4807      	ldr	r0, [pc, #28]	; (2bb8 <hook_intern+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:120
  ldr r0, [r0]
    2b9c:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:121
  mov pc, r0
    2b9e:	4687      	mov	pc, r0

00002ba0 <hook_intern>:
hook_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:125

@------------------------------------------------------------------------------
hook_intern:
  ldr r0, [r0]
    2ba0:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:126
  mov pc, r0
    2ba2:	4687      	mov	pc, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:86
    ldr  r0, =Dictionarypointer @ Assumes that the directory pointer points to a word aligned address in SRAM.
    2ba4:	2001ffd0 	.word	0x2001ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:26
  ldr tos, =hook_emit
    2ba8:	2001fff8 	.word	0x2001fff8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:40
  ldr tos, =hook_key
    2bac:	2001fff4 	.word	0x2001fff4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:53
  ldr tos, =hook_qemit
    2bb0:	2001fff0 	.word	0x2001fff0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:66
  ldr tos, =hook_qkey
    2bb4:	2001ffec 	.word	0x2001ffec
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:79
  ldr tos, =hook_pause
    2bb8:	2001ffe8 	.word	0x2001ffe8

00002bbc <Dictionary_601>:
Dictionary_601():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/terminalhooks.s:79
    2bbc:	00002bd8 	.word	0x00002bd8
    2bc0:	620b0000 	.word	0x620b0000
    2bc4:	756b6361 	.word	0x756b6361
    2bc8:	61622d70 	.word	0x61622d70
    2bcc:	6573      	.short	0x6573

00002bce <Code_601>:
Code_601():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:186
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "backup-base" @ ( -- addr )
@ -----------------------------------------------------------------------------
backup_base:
    @ Base address of the 4kiB (hopefully) battery backed SRAM
    dup
    2bce:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:187
    ldr tos, =0x38800000
    2bd2:	f04f 5662 	mov.w	r6, #947912704	; 0x38800000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:188
    bx  lr
    2bd6:	4770      	bx	lr

00002bd8 <Dictionary_604>:
Dictionary_604():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:188
    2bd8:	00002c1c 	.word	0x00002c1c
    2bdc:	62090000 	.word	0x62090000
    2be0:	756b6361 	.word	0x756b6361
    2be4:	6e6f2d70 	.word	0x6e6f2d70

00002be8 <Code_604>:
Code_604():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:196
  Wortbirne Flag_visible, "backup-on" @ ( -- )
@ -----------------------------------------------------------------------------
    @ Enable the battery backed SRAM and disable its write protection

    @ Enable clock
    ldr r0, =RCC_AHB4ENR
    2be8:	4809      	ldr	r0, [pc, #36]	; (2c10 <Code_604+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:197
    ldr r1, [r0]
    2bea:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:198
    orr r1, #RCC_AHB4ENR_BKPRAMEN
    2bec:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:199
    str r1, [r0]
    2bf0:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:202

    @ Allow writes to the backup SRAM (and its registers)
    ldr r0, =PWR_CR1
    2bf2:	4808      	ldr	r0, [pc, #32]	; (2c14 <Code_604+0x2c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:203
    ldr r1, [r0]
    2bf4:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:204
    orr r1, #PWR_CR1_DBP
    2bf6:	f441 7180 	orr.w	r1, r1, #256	; 0x100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:205
    str r1, [r0]
    2bfa:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:208

    @ Run backup SRAM from battery
    ldr r0, =PWR_CR2
    2bfc:	4806      	ldr	r0, [pc, #24]	; (2c18 <Code_604+0x30>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:209
    ldr r1, [r0]
    2bfe:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:210
    orr r1, #PWR_CR2_BREN
    2c00:	f041 0101 	orr.w	r1, r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:211
    str r1, [r0]
    2c04:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:214

    @ Wait for the backup power regulator to turn on
1:  ldr r1, [r0]
    2c06:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:215
    tst r1, #PWR_CR2_BRRDY    
    2c08:	f411 3f80 	tst.w	r1, #65536	; 0x10000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:216
    beq 1b
    2c0c:	d0fb      	beq.n	2c06 <Code_604+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:218

    bx  lr
    2c0e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:196
    ldr r0, =RCC_AHB4ENR
    2c10:	580244e0 	.word	0x580244e0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:202
    ldr r0, =PWR_CR1
    2c14:	58024800 	.word	0x58024800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:208
    ldr r0, =PWR_CR2
    2c18:	58024808 	.word	0x58024808

00002c1c <Dictionary_605>:
Dictionary_605():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/terminal.s:208
    2c1c:	00002c40 	.word	0x00002c40
    2c20:	63070000 	.word	0x63070000
    2c24:	65707865 	.word	0x65707865
    2c28:	7463      	.short	0x7463

00002c2a <Code_605>:
Code_605():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:24
@ Input routine Query - with Unicode support.

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "cexpect" @ ( cstr-addr maxlength ) Collecting your keystrokes into a counted string !
@ -----------------------------------------------------------------------------
  push {lr}
    2c2a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:25
  ldr r0, [psp]  @ Fetch address
    2c2c:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:26
  push {r0}
    2c2e:	b401      	push	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:27
  adds r0, #1    @ Add one to skip length byte for accept area
    2c30:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:28
  str r0, [psp]
    2c32:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:29
  bl accept
    2c34:	f000 f80b 	bl	2c4e <Code_607>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:30
  pop {r0}
    2c38:	bc01      	pop	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:31
  strb tos, [r0] @ Store accepted length into length byte of counted string
    2c3a:	7006      	strb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:32
  drop
    2c3c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:33
  pop {pc}
    2c3e:	bd00      	pop	{pc}

00002c40 <Dictionary_607>:
Dictionary_607():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:33
    2c40:	00002cb6 	.word	0x00002cb6
    2c44:	61060000 	.word	0x61060000
    2c48:	70656363 	.word	0x70656363
    2c4c:	74          	.byte	0x74
	...

00002c4e <Code_607>:
accept():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:39

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "accept" @ ( c-addr maxlength -- length ) Collecting your keystrokes !
accept: @ Nimmt einen String entgegen und legt ihn in einen Puffer.
@ -----------------------------------------------------------------------------
        push    {lr}
    2c4e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:48
        @ r1: Pufferzeiger     Buffer pointer
        @ r2: Pufferfüllstand  Buffer fill gauge
        @ r3: Helferlein       Temporary
        @ tos:Längengrenze     Maximum length

        ldm psp!, {r1}          @ Pufferadresse holen                 Fetch buffer address
    2c50:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:49
        subs r1, #1             @ Einen abziehen, weil die Routine bislang eigentlich abgezählte Strings erwartet hat.
    2c52:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:50
        movs r2, #0             @ Momentaner Pufferfüllstand Null     Currently zero characters typed
    2c54:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:53

1:      @ Queryschleife  Collcting loop
        bl key              @ Tastendruck holen  Fetch keypress
    2c56:	f7ff ff83 	bl	2b60 <Code_597>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:54
        popda r0
    2c5a:	0030      	movs	r0, r6
    2c5c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:56

        cmp     r0, #127          @ Delete
    2c5e:	287f      	cmp	r0, #127	; 0x7f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:57
        beq     6f                @ Should do the same as Backspace
    2c60:	d009      	beq.n	2c76 <Code_607+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:59

        cmp     r0, #32           @ ASCII 0-31 sind Steuerzeichen, 32 ist Space. Die Steuerzeichen müssten einzeln behandelt werden.
    2c62:	2820      	cmp	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:60
        bhs     2f                @ Space wird hier einfach so mit aufgenommen.
    2c64:	d219      	bcs.n	2c9a <Code_607+0x4c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:64

        @ Steuerzeichen bearbeiten.
        @ Handle control characters below ascii 32 = space here.
        cmp     r0, #9            @ TAB ?
    2c66:	2809      	cmp	r0, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:65
        beq     5f                @ Jump to replace TAB with space and include as normal character.
    2c68:	d016      	beq.n	2c98 <Code_607+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:67

        cmp     r0, #10           @ Bei Enter sind wir fertig - LF  Finish with LF
    2c6a:	280a      	cmp	r0, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:68
        beq     3f
    2c6c:	d01f      	beq.n	2cae <Code_607+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:69
        cmp     r0, #13           @ Bei Enter sind wir fertig - CR  Finish with CR
    2c6e:	280d      	cmp	r0, #13
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:70
        beq     3f
    2c70:	d01d      	beq.n	2cae <Code_607+0x60>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:72

        cmp     r0, #8            @ Backspace
    2c72:	2808      	cmp	r0, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:73
        bne     1b                @ Alle anderen Steuerzeichen ignorieren  Ignore all other control characters
    2c74:	d1ef      	bne.n	2c56 <Code_607+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:75

6:        cmp     r2, #0            @ Null Zeichen im Puffer ? Dann ist nichts zu löschen da.
    2c76:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:76
          beq     1b                @ Zero characters in buffer ? Then we cannot delete one.
    2c78:	d0ed      	beq.n	2c56 <Code_607+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:78

          bl dotgaensefuesschen  @ Clear a character visually. Emit sequence to delete one character in terminal.
    2c7a:	f000 f90b 	bl	2e94 <dotgaensefuesschen>
    2c7e:	0803      	.short	0x0803
    2c80:	0820      	.short	0x0820
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:104
      @ Unicode-Characters have this format:
      @ 11xx xxxx,  10xx xxxx,  10xx xxxx......
      @ If the last character has 10... then I have to delete until i reach a character that has 11....
      @ Always check if buffer may be already empty !

4:    cmp     r2, #0            @ Null Zeichen im Puffer ? Dann ist nichts zu löschen da.
    2c82:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:105
      beq     1b                @ Anything available to be deleted ?
    2c84:	d0e7      	beq.n	2c56 <Code_607+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:109

      @ Hole das letzte Zeichen und schneide es ab.
      @ Fetch character from the end and cut it off.
      ldrb    r0, [r1, r2]      @ Letztes Zeichen im Puffer holen
    2c86:	5c88      	ldrb	r0, [r1, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:110
      subs    r2, #1            @  und abschneiden
    2c88:	3a01      	subs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:115

      @ Teste das Zeichen auf Unicode, oberstes Bit gesetzt ?
      @ Check character for Unicode, is MSB set ?
      @ tst r0, 0x80
      movs r3, #0x80
    2c8a:	2380      	movs	r3, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:116
      ands r3, r0
    2c8c:	4003      	ands	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:117
      beq 1b @ Wenn nein, dann war das ein normales Zeichen und ich bin schon fertig.
    2c8e:	d0e2      	beq.n	2c56 <Code_607+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:125
      @ Ansonsten könnten noch mehr Unicode-Zeichen folgen.
      @ Zeichen das erste Byte eines Unicode-Zeichens ?
      @ Else I have to remove more bytes of this single Unicode character.
      @ Have I reached the first byte of this particular Unicode character yet ?
      @ tst r0, 0x40
      movs r3, #0x40
    2c90:	2340      	movs	r3, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:126
      ands r3, r0
    2c92:	4003      	ands	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:127
      beq 4b @ Wenn nein, lösche ein weiteres Zeichen. No ? Delete one more byte.
    2c94:	d0f5      	beq.n	2c82 <Code_607+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:128
      b 1b   @ Wenn ja, fertig. Dann habe ich soeben das erste Byte eines Unicode-Zeichens entfernt.  Yes ? Finished deleting.
    2c96:	e7de      	b.n	2c56 <Code_607+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:132
  .endif

5:      @ Replace TAB with space:
        movs r0, #32
    2c98:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:136

2:      @ Normale Zeichen annehmen
        @ Add a character to buffer if there is space left and echo it back.
        cmp     r2, tos              @ Ist der Puffer voll ?  Check buffer fill level.
    2c9a:	42b2      	cmp	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:137
        bhs     1b                   @ Keine weiteren Zeichen mehr annehmen.  No more characters if buffer is full !
    2c9c:	d2db      	bcs.n	2c56 <Code_607+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:139

        pushda r0
    2c9e:	f847 6d04 	str.w	r6, [r7, #-4]!
    2ca2:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:140
        bl emit                   @ Zeichen ausgeben
    2ca4:	f7ff ff52 	bl	2b4c <Code_596>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:141
        adds    r2, #1            @ Pufferfüllstand erhöhen
    2ca8:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:142
        strb    r0, [r1, r2]      @ Zeichen in Puffer speichern
    2caa:	5488      	strb	r0, [r1, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:143
        b       1b
    2cac:	e7d3      	b.n	2c56 <Code_607+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:146

3:      @ Return has been pressed: Store string length, print space and leave.
        movs tos, r2              @ Give back accepted length
    2cae:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:147
        bl space                  @ Statt des Zeilenumbruches ein Leerzeichen ausgeben
    2cb0:	f000 f89f 	bl	2df2 <Code_637>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:148
        pop {pc}
    2cb4:	bd00      	pop	{pc}

00002cb6 <Dictionary_611>:
Dictionary_611():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:148
    2cb6:	2cc8      	.short	0x2cc8
    2cb8:	00400000 	.word	0x00400000
    2cbc:	62697403 	.word	0x62697403

00002cc0 <Code_611>:
Code_611():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:154

@ -----------------------------------------------------------------------------
  Wortbirne Flag_foldable_0, "tib" @ ( -- addr )
@ -----------------------------------------------------------------------------
tib:
  pushdatos
    2cc0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:155
  ldr tos, =Eingabepuffer
    2cc4:	4e29      	ldr	r6, [pc, #164]	; (2d6c <Code_623+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:156
  bx lr
    2cc6:	4770      	bx	lr

00002cc8 <Dictionary_613>:
Dictionary_613():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:156
    2cc8:	00002cde 	.word	0x00002cde
    2ccc:	3e030081 	.word	0x3e030081
    2cd0:	6e69      	.short	0x6e69

00002cd2 <Code_613>:
Code_613():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:162

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, ">in" @ ( -- addr )
  CoreVariable Pufferstand
@ -----------------------------------------------------------------------------
  pushdatos
    2cd2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:163
  ldr tos, =Pufferstand
    2cd6:	4e26      	ldr	r6, [pc, #152]	; (2d70 <Code_623+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:164
  bx lr
    2cd8:	4770      	bx	lr
    2cda:	0000      	.short	0x0000
	...

00002cde <Dictionary_616>:
Dictionary_616():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:164
    2cde:	2d04      	.short	0x2d04
    2ce0:	00820000 	.word	0x00820000
    2ce4:	7275630e 	.word	0x7275630e
    2ce8:	746e6572 	.word	0x746e6572
    2cec:	756f732d 	.word	0x756f732d
    2cf0:	6372      	.short	0x6372
    2cf2:	65          	.byte	0x65
	...

00002cf4 <Code_616>:
Code_616():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:171

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_2variable, "current-source" @ ( -- addr )
  DoubleCoreVariable current_source
@------------------------------------------------------------------------------
  pushdatos
    2cf4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:172
  ldr tos, =current_source
    2cf8:	4e1e      	ldr	r6, [pc, #120]	; (2d74 <Code_623+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:173
  bx lr
    2cfa:	4770      	bx	lr
    2cfc:	00000000 	.word	0x00000000
    2d00:	200000c0 	.word	0x200000c0

00002d04 <Dictionary_619>:
Dictionary_619():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:173
    2d04:	00002d20 	.word	0x00002d20
    2d08:	73090000 	.word	0x73090000
    2d0c:	6f737465 	.word	0x6f737465
    2d10:	65637275 	.word	0x65637275

00002d14 <Code_619>:
Code_619():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:182

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "setsource" @ ( c-addr len -- )
setsource:
@ -----------------------------------------------------------------------------
  ldr r0, =current_source
    2d14:	4817      	ldr	r0, [pc, #92]	; (2d74 <Code_623+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:183
  ldm psp!, {r1}
    2d16:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:184
  str tos, [r0]
    2d18:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:185
  str r1, [r0, #4]
    2d1a:	6041      	str	r1, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:186
  drop
    2d1c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:187
  bx lr
    2d1e:	4770      	bx	lr

00002d20 <Dictionary_621>:
Dictionary_621():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:187
    2d20:	00002d3e 	.word	0x00002d3e
    2d24:	73060000 	.word	0x73060000
    2d28:	6372756f 	.word	0x6372756f
    2d2c:	65          	.byte	0x65
	...

00002d2e <Code_621>:
Code_621():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:193

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "source" @ ( c-addr len -- )
source:
@ -----------------------------------------------------------------------------
  pushdatos
    2d2e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:194
  ldr tos, =current_source
    2d32:	4e10      	ldr	r6, [pc, #64]	; (2d74 <Code_623+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:196

  subs psp, #4        @ Opcodes for 2@
    2d34:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:197
  ldr r0, [tos, #4]
    2d36:	6870      	ldr	r0, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:198
  str r0, [psp]
    2d38:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:199
  ldr tos, [tos]
    2d3a:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:200
  bx lr
    2d3c:	4770      	bx	lr

00002d3e <Dictionary_623>:
Dictionary_623():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:200
    2d3e:	2d78      	.short	0x2d78
    2d40:	00000000 	.word	0x00000000
    2d44:	65757105 	.word	0x65757105
    2d48:	7972      	.short	0x7972

00002d4a <Code_623>:
Code_623():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:206

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "query" @ Collecting your keystrokes into TIB ! Forth at your fingertips :-)
query: @ ( -- ) Nimmt einen String in den Eingabepuffer auf
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    2d4a:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:208

  ldr r0, =Pufferstand @ Aktueller Offset in den Eingabepuffer  Zero characters consumed yet
    2d4c:	4808      	ldr	r0, [pc, #32]	; (2d70 <Code_623+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:209
  movs r1, #0
    2d4e:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:210
  str r1, [r0]
    2d50:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:212

  bl tib
    2d52:	f7ff ffb5 	bl	2cc0 <Code_611>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:213
  dup
    2d56:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:214
  pushdaconst Maximaleeingabe
    2d5a:	f847 6d04 	str.w	r6, [r7, #-4]!
    2d5e:	26c8      	movs	r6, #200	; 0xc8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:215
  bl accept
    2d60:	f7ff ff75 	bl	2c4e <Code_607>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:216
  bl setsource
    2d64:	f7ff ffd6 	bl	2d14 <Code_619>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:218

  pop {r0, r1, r2, r3, pc}
    2d68:	bd0f      	pop	{r0, r1, r2, r3, pc}
    2d6a:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:155
  ldr tos, =Eingabepuffer
    2d6c:	200000c0 	.word	0x200000c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:163
  ldr tos, =Pufferstand
    2d70:	2001ffe4 	.word	0x2001ffe4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:172
  ldr tos, =current_source
    2d74:	2001ffdc 	.word	0x2001ffdc

00002d78 <Dictionary_628>:
Dictionary_628():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/query.s:172
    2d78:	00002dc0 	.word	0x00002dc0
    2d7c:	63070000 	.word	0x63070000
    2d80:	61706d6f 	.word	0x61706d6f
    2d84:	6572      	.short	0x6572

00002d86 <Code_628>:
Code_628():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:57

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compare"  @ Vergleicht zwei Strings  Compare two strings
compare:                             @ ( c-addr1 len-1 c-addr2 len-2 -- f )
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    2d86:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:59

  popda r1        @ Length of second string
    2d88:	0031      	movs	r1, r6
    2d8a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:60
  ldm psp!, {r0}  @ Length of first  string
    2d8c:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:61
  cmp r0, r1
    2d8e:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:63

   ldm psp!, {r1}  @ Address of first string. ldm does not change flags.
    2d90:	cf02      	ldmia	r7!, {r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:66
                   @ TOS contains address of second string.

  bne 2f @ Exit in case of unequal lengths.
    2d92:	d110      	bne.n	2db6 <Code_628+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:70

   @ Lengths are equal. Compare characters.
   @ How many characters to compare left ?
1: cmp r0, #0
    2d94:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:71
   beq 3f
    2d96:	d010      	beq.n	2dba <Code_628+0x34>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:73

     subs r0, #1
    2d98:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:74
     ldrb r2, [r1, r0]
    2d9a:	5c0a      	ldrb	r2, [r1, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:75
     ldrb r3, [tos, r0]
    2d9c:	5c33      	ldrb	r3, [r6, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:78

     @ Beide Zeichen in Kleinbuchstaben verwandeln.  Convert booth to lowercase.
     lowercase r2
    2d9e:	2a41      	cmp	r2, #65	; 0x41
    2da0:	d302      	bcc.n	2da8 <Code_628+0x22>
    2da2:	2a5b      	cmp	r2, #91	; 0x5b
    2da4:	bf38      	it	cc
    2da6:	3220      	addcc	r2, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:79
     lowercase r3
    2da8:	2b41      	cmp	r3, #65	; 0x41
    2daa:	d302      	bcc.n	2db2 <Code_628+0x2c>
    2dac:	2b5b      	cmp	r3, #91	; 0x5b
    2dae:	bf38      	it	cc
    2db0:	3320      	addcc	r3, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:81

     cmp r2, r3
    2db2:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:82
     beq 1b
    2db4:	d0ee      	beq.n	2d94 <Code_628+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:85

2:   @ Unequal
     movs tos, #0
    2db6:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:86
     pop {r0, r1, r2, r3, pc}
    2db8:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:89

3: @ Equal !
   movs tos, #0
    2dba:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:90
   mvns tos, tos
    2dbc:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:91
   pop {r0, r1, r2, r3, pc}
    2dbe:	bd0f      	pop	{r0, r1, r2, r3, pc}

00002dc0 <Dictionary_632>:
Dictionary_632():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:91
    2dc0:	00002dd4 	.word	0x00002dd4
    2dc4:	63020000 	.word	0x63020000
    2dc8:	72          	.byte	0x72
	...

00002dca <Code_632>:
Code_632():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:96

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "cr" @ Zeilenumbruch
@ -----------------------------------------------------------------------------
  push {lr}
    2dca:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:97
  writeln ""
    2dcc:	f000 f862 	bl	2e94 <dotgaensefuesschen>
    2dd0:	0a01      	.short	0x0a01
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:98
  pop {pc}
    2dd2:	bd00      	pop	{pc}

00002dd4 <Dictionary_634>:
Dictionary_634():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:98
    2dd4:	00002de6 	.word	0x00002de6
    2dd8:	62020000 	.word	0x62020000
    2ddc:	6c          	.byte	0x6c
	...

00002dde <Code_634>:
Code_634():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:103

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "bl" @ Leerzeichen-code
@ -----------------------------------------------------------------------------
  pushdaconst 32
    2dde:	f847 6d04 	str.w	r6, [r7, #-4]!
    2de2:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:104
  bx lr
    2de4:	4770      	bx	lr

00002de6 <Dictionary_637>:
Dictionary_637():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:104
    2de6:	2dfa      	.short	0x2dfa
    2de8:	00000000 	.word	0x00000000
    2dec:	61707305 	.word	0x61707305
    2df0:	6563      	.short	0x6563

00002df2 <Code_637>:
space():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:110

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "space"
space:
@ -----------------------------------------------------------------------------
  pushdaconst 32
    2df2:	f847 6d04 	str.w	r6, [r7, #-4]!
    2df6:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:111
  b.n emit
    2df8:	e6a8      	b.n	2b4c <Code_596>

00002dfa <Dictionary_640>:
Dictionary_640():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:111
    2dfa:	2e1a      	.short	0x2e1a
    2dfc:	00000000 	.word	0x00000000
    2e00:	61707306 	.word	0x61707306
    2e04:	6563      	.short	0x6563
    2e06:	73          	.byte	0x73
	...

00002e08 <Code_640>:
Code_640():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:116

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "spaces"
@ -----------------------------------------------------------------------------
  push {lr}
    2e08:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:117
  cmp tos, #0
    2e0a:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:118
  ble 2f
    2e0c:	dd03      	ble.n	2e16 <Code_640+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:120
  
1:bl space
    2e0e:	f7ff fff0 	bl	2df2 <Code_637>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:121
  subs tos, #1
    2e12:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:122
  bne 1b
    2e14:	d1fb      	bne.n	2e0e <Code_640+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:124

2:drop
    2e16:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:125
  pop {pc}
    2e18:	bd00      	pop	{pc}

00002e1a <Dictionary_642>:
Dictionary_642():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:125
    2e1a:	2e2a      	.short	0x2e2a
    2e1c:	00500000 	.word	0x00500000
    2e20:	68635b06 	.word	0x68635b06
    2e24:	7261      	.short	0x7261
    2e26:	5d          	.byte	0x5d
	...

00002e28 <Code_642>:
Code_642():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:131

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "[char]" @ ( -- )  Get character from input stream and compile it as literal
  @ Holt ein Zeichen aus dem Eingabestrom und fügt es als Literal ein.
@------------------------------------------------------------------------------
  b.n holechar
    2e28:	e005      	b.n	2e36 <Code_643>

00002e2a <Dictionary_643>:
Dictionary_643():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:131
    2e2a:	2e42      	.short	0x2e42
    2e2c:	00000000 	.word	0x00000000
    2e30:	61686304 	.word	0x61686304
    2e34:	72          	.byte	0x72
	...

00002e36 <Code_643>:
holechar():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:137

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "char" @ Holt ein Zeichen aus dem Eingabestrom  Get character from input stream
holechar: @ ( -- Zeichen )
@------------------------------------------------------------------------------
  push {lr}
    2e36:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:138
  bl token        @ Fetch token
    2e38:	f001 fce4 	bl	4804 <Code_1101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:139
  drop            @ Drop length  
    2e3c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:140
  ldrb tos, [tos] @ Read character
    2e3e:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:141
  pop {pc}
    2e40:	bd00      	pop	{pc}

00002e42 <Dictionary_645>:
Dictionary_645():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:141
    2e42:	2e52      	.short	0x2e52
    2e44:	04500000 	.word	0x04500000
    2e48:	2801      	.short	0x2801

00002e4a <Code_645>:
Code_645():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:146

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0|Flag_Sprungschlucker, "(" @ Der Kommentar
@ -----------------------------------------------------------------------------
  pushdaconst 41 @ Die Klammer )
    2e4a:	f847 6d04 	str.w	r6, [r7, #-4]!
    2e4e:	2629      	movs	r6, #41	; 0x29
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:147
  b 1f
    2e50:	e006      	b.n	2e60 <Code_648+0x6>

00002e52 <Dictionary_648>:
Dictionary_648():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:147
    2e52:	2e6c      	.short	0x2e6c
    2e54:	04500000 	.word	0x04500000
    2e58:	5c01      	.short	0x5c01

00002e5a <Code_648>:
Code_648():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:152

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0|Flag_Sprungschlucker, "\\" @ Der lange Kommentar
@ -----------------------------------------------------------------------------
  pushdaconst 0 @ Gibt es nicht - immer bis zum Zeilenende. Zero never occours - always catches whole line.
    2e5a:	f847 6d04 	str.w	r6, [r7, #-4]!
    2e5e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:154

1:push {lr}
    2e60:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:155
  bl parse
    2e62:	f001 fcd9 	bl	4818 <Code_1103>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:156
  ddrop
    2e66:	3704      	adds	r7, #4
    2e68:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:157
  pop {pc}
    2e6a:	bd00      	pop	{pc}

00002e6c <Dictionary_653>:
Dictionary_653():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:157
    2e6c:	00002eb0 	.word	0x00002eb0
    2e70:	2e020030 	.word	0x2e020030
    2e74:	22          	.byte	0x22
	...

00002e76 <Code_653>:
Code_653():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:162

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, ".\"" @ Fügt eine Meldung ein  Print a message
@ -----------------------------------------------------------------------------
  ldr r0, =dotgaensefuesschen
    2e76:	48a9      	ldr	r0, [pc, #676]	; (311c <unused_ram+0x4>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:164

1:push {lr}
    2e78:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:165
  pushda r0
    2e7a:	f847 6d04 	str.w	r6, [r7, #-4]!
    2e7e:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:166
  bl callkomma
    2e80:	f000 fa7d 	bl	337e <Code_730>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:168

  pushdaconst 34 @ Das Gänsefüßchen "
    2e84:	f847 6d04 	str.w	r6, [r7, #-4]!
    2e88:	2622      	movs	r6, #34	; 0x22
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:169
  bl parse
    2e8a:	f001 fcc5 	bl	4818 <Code_1103>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:170
  bl stringkomma
    2e8e:	f000 fdc2 	bl	3a16 <Code_859>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:171
  pop {pc}
    2e92:	bd00      	pop	{pc}

00002e94 <dotgaensefuesschen>:
dotgaensefuesschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:177

@ -----------------------------------------------------------------------------
dotgaensefuesschen: @ Gibt den inline folgenden String aus und überspringt ihn
                    @ Print the string following inline and skip it
@ -----------------------------------------------------------------------------
  push {r1, r3}  @ Messages are used everywhere, save the registers !
    2e94:	b40a      	push	{r1, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:179

  pushdatos
    2e96:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:180
  mov tos, lr    @ In lr ist nun die Stringadresse.  LR contains string address
    2e9a:	4676      	mov	r6, lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:181
  subs tos, #1   @ Die Stringanfangsadresse für type - PC ist ungerade im Thumb-Modus ! One less because of Thumb-instruction set marker bit
    2e9c:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:182
  ldrb r3, [tos] @ Länge des Strings holen  Fetch length of string
    2e9e:	7833      	ldrb	r3, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:186

  @ Skip the string.

  movs r1, #1
    2ea0:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:187
  adds r3, #1     @ Plus 1 Byte für die Länge  One more for length byte
    2ea2:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:188
  ands r1, r3     @ Wenn es ungerade ist, noch einen mehr:  Maybe one more for aligning
    2ea4:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:189
  adds r3, r1
    2ea6:	185b      	adds	r3, r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:196
  .ifdef m0core
    mov r1, lr
    adds r1, r3
    mov lr, r1
  .else
    adds lr, r3
    2ea8:	eb1e 0e03 	adds.w	lr, lr, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:199
  .endif

  pop {r1, r3}
    2eac:	bc0a      	pop	{r1, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:200
  b.n type   @ Print it !
    2eae:	e039      	b.n	2f24 <Code_668>

00002eb0 <Dictionary_659>:
Dictionary_659():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:200
    2eb0:	00002ed6 	.word	0x00002ed6
    2eb4:	63020030 	.word	0x63020030
    2eb8:	22          	.byte	0x22
	...

00002eba <Code_659>:
Code_659():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:205

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "c\"" @ Fügt einen String ein  Insert a string-literal
@ -----------------------------------------------------------------------------
  ldr r0, =dotcfuesschen
    2eba:	4899      	ldr	r0, [pc, #612]	; (3120 <unused_ram+0x8>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:206
  b 1b
    2ebc:	e7dc      	b.n	2e78 <Code_653+0x2>

00002ebe <dotcfuesschen>:
dotcfuesschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:212

@ -----------------------------------------------------------------------------
dotcfuesschen: @ Legt den inline folgenden String auf den Stack und überspringt ihn
              @ Put address of the string following inline on datastack and skip string.
@ -----------------------------------------------------------------------------
  pushdatos
    2ebe:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:213
  mov tos, lr    @ In lr ist nun die Stringadresse.  LR contains string address
    2ec2:	4676      	mov	r6, lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:214
  subs tos, #1   @ Die Stringanfangsadresse für type - PC ist ungerade im Thumb-Modus ! One less because of Thumb-instruction set marker bit
    2ec4:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:215
  ldrb r3, [tos] @ Länge des Strings holen  Fetch length of string
    2ec6:	7833      	ldrb	r3, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:219

  @ Skip the string.

  movs r1, #1
    2ec8:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:220
  adds r3, #1     @ Plus 1 Byte für die Länge  One more for length byte
    2eca:	3301      	adds	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:221
  ands r1, r3     @ Wenn es ungerade ist, noch einen mehr:  Maybe one more for aligning
    2ecc:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:222
  adds r3, r1
    2ece:	185b      	adds	r3, r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:229
  .ifdef m0core
    mov r1, lr
    adds r1, r3
    mov lr, r1
  .else
    adds lr, r3
    2ed0:	eb1e 0e03 	adds.w	lr, lr, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:232
  .endif

  bx lr  @ Leave string address on datastack.
    2ed4:	4770      	bx	lr

00002ed6 <Dictionary_661>:
Dictionary_661():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:232
    2ed6:	2f00      	.short	0x2f00
    2ed8:	00300000 	.word	0x00300000
    2edc:	7302      	.short	0x7302
    2ede:	22          	.byte	0x22
	...

00002ee0 <Code_661>:
Code_661():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:237

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "s\"" @ Fügt einen String ein  Insert a string-literal
@ -----------------------------------------------------------------------------
  ldr r0, =dotsfuesschen
    2ee0:	4890      	ldr	r0, [pc, #576]	; (3124 <unused_ram+0xc>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:238
  b 1b
    2ee2:	e7c9      	b.n	2e78 <Code_653+0x2>

00002ee4 <dotsfuesschen>:
dotsfuesschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:244

@ -----------------------------------------------------------------------------
dotsfuesschen: @ Legt den inline folgenden String auf den Stack und überspringt ihn
              @ Put address of the string following inline on datastack and skip string.
@ -----------------------------------------------------------------------------
  pushdatos
    2ee4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:245
  mov tos, lr    @ In lr ist nun die Stringadresse.  LR contains string address
    2ee8:	4676      	mov	r6, lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:246
  dup
    2eea:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:247
  subs tos, #1   @ Die Stringanfangsadresse für type - PC ist ungerade im Thumb-Modus ! One less because of Thumb-instruction set marker bit
    2eee:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:248
  ldrb tos, [tos] @ Länge des Strings holen  Fetch length of string
    2ef0:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:252

  @ Skip the string.

  movs r1, #1
    2ef2:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:253
  adds r3, tos, #1 @ Plus 1 Byte für die Länge  One more for length byte
    2ef4:	1c73      	adds	r3, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:254
  ands r1, r3      @ Wenn es ungerade ist, noch einen mehr:  Maybe one more for aligning
    2ef6:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:255
  adds r3, r1
    2ef8:	185b      	adds	r3, r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:262
  .ifdef m0core
    mov r1, lr
    adds r1, r3
    mov lr, r1
  .else
    adds lr, r3
    2efa:	eb1e 0e03 	adds.w	lr, lr, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:265
  .endif

  bx lr  @ Leave string address and length on datastack.
    2efe:	4770      	bx	lr

00002f00 <Dictionary_665>:
Dictionary_665():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:265
    2f00:	00002f18 	.word	0x00002f18
    2f04:	63050000 	.word	0x63050000
    2f08:	746e756f 	.word	0x746e756f

00002f0c <Code_665>:
Code_665():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:272
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "count"
count: @ ( c-addr -- c-addr+1 len ) Fetch length of counted string
@ -----------------------------------------------------------------------------
  @ Count soll die Adresse um eine Stelle weiterschieben und die Länge holen.
  adds tos, #1 @ Adresse + 1
    2f0c:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:273
  dup
    2f0e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:274
  subs tos, #1 @ Zurück zum Längenbyte
    2f12:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:275
  ldrb tos, [tos] @ Längenbyte holen
    2f14:	7836      	ldrb	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:276
  bx lr
    2f16:	4770      	bx	lr

00002f18 <Dictionary_668>:
Dictionary_668():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:276
    2f18:	00002f30 	.word	0x00002f30
    2f1c:	63050000 	.word	0x63050000
    2f20:	65707974 	.word	0x65707974

00002f24 <Code_668>:
type():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:282

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "ctype"
type: @ ( str -- ) Gibt einen String aus  Print a counted string
@ -----------------------------------------------------------------------------
  push {lr}
    2f24:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:283
  bl count
    2f26:	f7ff fff1 	bl	2f0c <Code_665>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:284
  bl stype
    2f2a:	f000 f807 	bl	2f3c <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:285
  pop {pc}
    2f2e:	bd00      	pop	{pc}

00002f30 <Dictionary_669>:
Dictionary_669():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:285
    2f30:	00002f58 	.word	0x00002f58
    2f34:	74040000 	.word	0x74040000
    2f38:	7079      	.short	0x7079
    2f3a:	65          	.byte	0x65
	...

00002f3c <Code_669>:
stype():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:291

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "type"
stype:  @ ( addr len -- ) Gibt einen String aus  Print a string
@ -----------------------------------------------------------------------------
  push {r0, lr}
    2f3c:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:292
  ldm psp!, {r0}  @ Adresse holen. Fetch address.
    2f3e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:294

  cmp tos, #0     @ Wenn nichts da ist, bin ich fertig.  Any characters left ?
    2f40:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:295
  beq 2f
    2f42:	d007      	beq.n	2f54 <Code_669+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:299

  @ Es ist etwas zum Tippen da !  Something available for typing !

1:pushdatos
    2f44:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:300
  ldrb tos, [r0]  @ Zeichen holen            Put character on datastack
    2f48:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:301
  bl emit         @ Zeichen senden           Emit character
    2f4a:	f7ff fdff 	bl	2b4c <Code_596>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:302
  adds r0, #1     @ Adresse um eins erhöhen  Advance pointer
    2f4e:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:303
  subs tos, #1    @ Ein Zeichen weniger      One character less
    2f50:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:304
  bne 1b
    2f52:	d1f7      	bne.n	2f44 <Code_669+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:306

2:drop  
    2f54:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:307
  pop {r0, pc}
    2f56:	bd01      	pop	{r0, pc}

00002f58 <Dictionary_672>:
Dictionary_672():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:307
    2f58:	00002f92 	.word	0x00002f92
    2f5c:	68040000 	.word	0x68040000
    2f60:	7865      	.short	0x7865
    2f62:	2e          	.byte	0x2e
	...

00002f64 <Code_672>:
Code_672():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:27
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "hex." @ Print an unsigned number in Base 16, independent of number subsystem.
hexdot: @ ( u -- ) @ Funktioniert unabhängig vom restlichen Zahlensystem.
@ -----------------------------------------------------------------------------
  
        push    {r0, r1, r2, lr}
    2f64:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:28
        popda r1 @ Zahl holen
    2f66:	0031      	movs	r1, r6
    2f68:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:29
        movs    r0, #32 @ Zahl der Bits, die noch zu bearbeiten sind  Number of Bits left
    2f6a:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:30
        movs r2, #15 @ Mask for one Nibble
    2f6c:	220f      	movs	r2, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:32

1:      subs    r0, #4       @ 4 Bits weniger  4 Bits less to do
    2f6e:	3804      	subs	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:33
        pushdatos            @ Platz auf dem Stack schaffen  Make space on datastack
    2f70:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:35

        movs tos, r1
    2f74:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:36
        lsrs tos, r0         @ Schiebe den Wert passend   Shift accordingly
    2f76:	40c6      	lsrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:38

        ands    tos, r2      @ Eine Hex-Ziffer maskieren  Mask 4 Bits
    2f78:	4016      	ands	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:39
        cmp     tos, #9      @ Ziffer oder Buchstabe ?    Number or letter ?
    2f7a:	2e09      	cmp	r6, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:40
        bls 2f
    2f7c:	d901      	bls.n	2f82 <Code_672+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:41
          adds tos, #55 @ Passendes Zeichen konstruieren
    2f7e:	3637      	adds	r6, #55	; 0x37
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:42
          b 3f
    2f80:	e000      	b.n	2f84 <Code_672+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:43
2:        adds tos, #48 @ Calculate ASCII
    2f82:	3630      	adds	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:46
3:

        bl      emit
    2f84:	f7ff fde2 	bl	2b4c <Code_596>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:47
        cmp     r0, #0
    2f88:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:48
        bne     1b
    2f8a:	d1f0      	bne.n	2f6e <Code_672+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:50

        bl space
    2f8c:	f7ff ff31 	bl	2df2 <Code_637>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:51
        pop     {r0, r1, r2, pc}
    2f90:	bd07      	pop	{r0, r1, r2, pc}

00002f92 <Dictionary_675>:
Dictionary_675():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:51
    2f92:	2fa2      	.short	0x2fa2
    2f94:	00000000 	.word	0x00000000
    2f98:	732e6803 	.word	0x732e6803

00002f9c <Code_675>:
Code_675():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:57

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "h.s"  @ Prints out data stack, uses unsigned hexadecimal snumbers. 
hexdots: @ Malt den Stackinhalt, diesmal verschönert !
@ -----------------------------------------------------------------------------
        push {r0, r1, r2, r3, r4, lr}
    2f9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:58
        ldr r4, =hexdot+1
    2f9e:	4c62      	ldr	r4, [pc, #392]	; (3128 <unused_ram+0x10>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:59
        b.n 1f
    2fa0:	e00e      	b.n	2fc0 <Code_677+0x4>

00002fa2 <Dictionary_676>:
Dictionary_676():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:59
    2fa2:	2fb2      	.short	0x2fb2
    2fa4:	00000000 	.word	0x00000000
    2fa8:	732e7503 	.word	0x732e7503

00002fac <Code_676>:
Code_676():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:65

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "u.s"  @ Prints out data stack, uses unsigned numbers. 
udots: @ Malt den Stackinhalt, diesmal verschönert !
@ -----------------------------------------------------------------------------
        push {r0, r1, r2, r3, r4, lr}
    2fac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:66
        ldr r4, =udot+1
    2fae:	4c5f      	ldr	r4, [pc, #380]	; (312c <unused_ram+0x14>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:67
        b.n 1f
    2fb0:	e006      	b.n	2fc0 <Code_677+0x4>

00002fb2 <Dictionary_677>:
Dictionary_677():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:67
    2fb2:	3056      	.short	0x3056
    2fb4:	00000000 	.word	0x00000000
    2fb8:	2e02      	.short	0x2e02
    2fba:	73          	.byte	0x73
	...

00002fbc <Code_677>:
Code_677():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:73

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, ".s"  @ Prints out data stack, uses signed numbers. 
dots: @ Malt den Stackinhalt, diesmal verschönert !
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, r4, lr}
    2fbc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:74
  ldr r4, =dot+1
    2fbe:	4c5c      	ldr	r4, [pc, #368]	; (3130 <unused_ram+0x18>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:77

1:@ Berechne den Stackfüllstand  Calculate number of elements on datastack
  ldr r1, =datenstackanfang @ Anfang laden
    2fc0:	495c      	ldr	r1, [pc, #368]	; (3134 <unused_ram+0x1c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:78
  subs r1, psp @ und aktuellen Stackpointer abziehen
    2fc2:	1bc9      	subs	r1, r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:80

  lsrs r1, #2 @ Durch die Größe der Elemente teilen  Divide by size of elements
    2fc4:	0889      	lsrs	r1, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:81
  lsrs r2, r4, #8
    2fc6:	0a22      	lsrs	r2, r4, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:82
  movs r0, #32 @ Bits / Element
    2fc8:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:85

  @ Prüfe Datenstackpointer vor der Ausgabe  Check data stack pointer before printing
  cmp psp, #0x29
    2fca:	2f29      	cmp	r7, #41	; 0x29
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:87

    lsrs r0, r4, #8
    2fcc:	0a20      	lsrs	r0, r4, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:88
    cmp  r0, #32
    2fce:	2820      	cmp	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:89
    subs r6, #0x27
    2fd0:	3e27      	subs	r6, #39	; 0x27
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:90
    lsrs r0, r4, #8
    2fd2:	0a20      	lsrs	r0, r4, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:93

  @ Noch eine weitere Probe, um auf Nummer sicher zu gehen  Another check to be sure
  cmp psp, #32
    2fd4:	2f20      	cmp	r7, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:95

    muls r3, r0
    2fd6:	4343      	muls	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:96
    movs r0, #32
    2fd8:	2020      	movs	r0, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:97
    adds r3, #32
    2fda:	3320      	adds	r3, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:98
    movs r0, #0x35
    2fdc:	2035      	movs	r0, #53	; 0x35
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:101

2:@ Ausgabepuffer vorbereien  Prepare string output buffer
  muls r3, r0
    2fde:	4343      	muls	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:102
  lsrs r3, r0, #9
    2fe0:	0a43      	lsrs	r3, r0, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:103
  ldrb r0, [r7, r0]
    2fe2:	5c38      	ldrb	r0, [r7, r0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:106

  @ Prüfe Zahl der Elemente  Check number of elements
  cmp r1, #0x29
    2fe4:	2929      	cmp	r1, #41	; 0x29
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:108

    movs r0, #0x5f
    2fe6:	205f      	movs	r0, #95	; 0x5f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:109
    lsrs r2, r1, #8
    2fe8:	0a0a      	lsrs	r2, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:112

3:@ Basis sichern und auf Dezimal schalten  Save Base and switch to decimal for stack fill gauge
  ldr r2, =base
    2fea:	4a53      	ldr	r2, [pc, #332]	; (3138 <unused_ram+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:113
  ldr r0, [r2]
    2fec:	6810      	ldr	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:114
  push {r0, r1}
    2fee:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:116

  movs r0, #10
    2ff0:	200a      	movs	r0, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:117
  str r0, [r2]
    2ff2:	6010      	str	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:119

        write "Stack: ["
    2ff4:	f7ff ff4e 	bl	2e94 <dotgaensefuesschen>
    2ff8:	61745308 	.word	0x61745308
    2ffc:	203a6b63 	.word	0x203a6b63
    3000:	5b          	.byte	0x5b
    3001:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:120
        pushda r1
    3002:	f847 6d04 	str.w	r6, [r7, #-4]!
    3006:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:121
        bl dot  @ . bewahrt die Register nicht.  Doesn't save registers !
    3008:	f001 fdd3 	bl	4bb2 <Code_1167>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:122
        write "] "
    300c:	f7ff ff42 	bl	2e94 <dotgaensefuesschen>
    3010:	5d02      	.short	0x5d02
    3012:	20          	.byte	0x20
    3013:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:125

  @ Basis zurückholen  Restore Base
  pop {r0, r1}
    3014:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:126
  adds r6, #39
    3016:	3627      	adds	r6, #39	; 0x27
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:127
  ldr r2, =base
    3018:	4a47      	ldr	r2, [pc, #284]	; (3138 <unused_ram+0x20>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:128
  str r0, [r2]
    301a:	6010      	str	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:131

  @ r1 enthält die Zahl der enthaltenen Elemente. r1 is number of elements
  cmp r1, #0 @ Bei einem leeren Stack ist nichts auszugeben.  Don't print elements for an empty stack
    301c:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:132
  beq 2f
    301e:	d00a      	beq.n	3036 <Code_677+0x7a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:134

  ldr r2, =datenstackanfang - 4 @ Anfang laden, wo ich beginne:  Start here !
    3020:	4a46      	ldr	r2, [pc, #280]	; (313c <unused_ram+0x24>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:137

1:@ Hole das Stackelement !  Fetch stack element directly
  ldr r0, [r2]
    3022:	6810      	ldr	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:139

  push {r1, r2}
    3024:	b406      	push	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:140
  pushda r0
    3026:	f847 6d04 	str.w	r6, [r7, #-4]!
    302a:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:141
  blx r4 @ . bewahrt die Register nicht.  Doesn't save registers !
    302c:	47a0      	blx	r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:142
  pop {r1, r2}
    302e:	bc06      	pop	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:144

  subs r2, #4
    3030:	3a04      	subs	r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:145
  subs r1, #1
    3032:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:146
  bne 1b
    3034:	d1f5      	bne.n	3022 <Code_677+0x66>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:149

2:@ TOS zeigen  Print TOS
  write " TOS: "
    3036:	f7ff ff2d 	bl	2e94 <dotgaensefuesschen>
    303a:	2006      	.short	0x2006
    303c:	3a534f54 	.word	0x3a534f54
    3040:	20          	.byte	0x20
    3041:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:150
  pushda tos
    3042:	f847 6d04 	str.w	r6, [r7, #-4]!
    3046:	0036      	movs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:151
  blx r4
    3048:	47a0      	blx	r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:153

  writeln " *>"
    304a:	f7ff ff23 	bl	2e94 <dotgaensefuesschen>
    304e:	2004      	.short	0x2004
    3050:	3e2a      	.short	0x3e2a
    3052:	0a          	.byte	0x0a
    3053:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:154
  pop {r0, r1, r2, r3, r4, pc}
    3054:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003056 <Dictionary_688>:
Dictionary_688():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:154
    3056:	30f6      	.short	0x30f6
    3058:	00000000 	.word	0x00000000
    305c:	726f7705 	.word	0x726f7705
    3060:	7364      	.short	0x7364

00003062 <Code_688>:
Code_688():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:266

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "words" @ Print list of words with debug information
words: @ Malt den Dictionaryinhalt
@ -----------------------------------------------------------------------------
  push {lr}
    3062:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:267
  writeln ""
    3064:	f7ff ff16 	bl	2e94 <dotgaensefuesschen>
    3068:	0a01      	.short	0x0a01
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:269

  bl dictionarystart
    306a:	f000 ff42 	bl	3ef2 <Code_926>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:272

1:@ Adresse:
  write "Address: "
    306e:	f7ff ff11 	bl	2e94 <dotgaensefuesschen>
    3072:	4109      	.short	0x4109
    3074:	65726464 	.word	0x65726464
    3078:	203a7373 	.word	0x203a7373
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:273
  dup
    307c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:274
  bl hexdot
    3080:	f7ff ff70 	bl	2f64 <Code_672>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:277

  @ Link
  write "Link: "
    3084:	f7ff ff06 	bl	2e94 <dotgaensefuesschen>
    3088:	6e694c06 	.word	0x6e694c06
    308c:	3a6b      	.short	0x3a6b
    308e:	20          	.byte	0x20
    308f:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:278
  dup
    3090:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:279
  ldr tos, [tos]
    3094:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:280
  bl hexdot
    3096:	f7ff ff65 	bl	2f64 <Code_672>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:283

  @ Flagfeld
  write "Flags: "
    309a:	f7ff fefb 	bl	2e94 <dotgaensefuesschen>
    309e:	4607      	.short	0x4607
    30a0:	7367616c 	.word	0x7367616c
    30a4:	203a      	.short	0x203a
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:284
  dup
    30a6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:285
  ldrh tos, [tos, #4]
    30aa:	88b6      	ldrh	r6, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:286
  bl hexdot
    30ac:	f7ff ff5a 	bl	2f64 <Code_672>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:289

  @ Einsprungadresse
  write "Code: "
    30b0:	f7ff fef0 	bl	2e94 <dotgaensefuesschen>
    30b4:	646f4306 	.word	0x646f4306
    30b8:	3a65      	.short	0x3a65
    30ba:	20          	.byte	0x20
    30bb:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:290
  adds r0, tos, #6 @ Current location +2 for skipping Flags +4 for skipping Link contains name string.
    30bc:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:291
  bl skipstring
    30be:	f000 ff65 	bl	3f8c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:292
  pushda r0
    30c2:	f847 6d04 	str.w	r6, [r7, #-4]!
    30c6:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:293
  bl hexdot
    30c8:	f7ff ff4c 	bl	2f64 <Code_672>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:295

  write "Name: "
    30cc:	f7ff fee2 	bl	2e94 <dotgaensefuesschen>
    30d0:	6d614e06 	.word	0x6d614e06
    30d4:	3a65      	.short	0x3a65
    30d6:	20          	.byte	0x20
    30d7:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:296
  dup
    30d8:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:297
  adds tos, #6 @ Current location +2 for skipping Flags +4 for skipping Link contains name string.
    30dc:	3606      	adds	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:298
  bl type
    30de:	f7ff ff21 	bl	2f24 <Code_668>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:300

  writeln ""
    30e2:	f7ff fed7 	bl	2e94 <dotgaensefuesschen>
    30e6:	0a01      	.short	0x0a01
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:302

  bl dictionarynext
    30e8:	f000 ff1b 	bl	3f22 <Code_928>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:303
  popda r0
    30ec:	0030      	movs	r0, r6
    30ee:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:304
  beq 1b
    30f0:	d0bd      	beq.n	306e <Code_688+0xc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:306

  drop
    30f2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:307
  pop {pc}
    30f4:	bd00      	pop	{pc}

000030f6 <Dictionary_708>:
Dictionary_708():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:307
    30f6:	3148      	.short	0x3148
    30f8:	00000000 	.word	0x00000000
    30fc:	756e7506 	.word	0x756e7506
    3100:	6573      	.short	0x6573
    3102:	64          	.byte	0x64
	...

00003104 <Code_708>:
Code_708():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:313

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "unused" @ Bytes free for compilation in current memory area
unused:
@ -----------------------------------------------------------------------------
  push {lr}
    3104:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:314
  bl flashvarhere
    3106:	f001 f81b 	bl	4140 <Code_955>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:316

  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
    310a:	480d      	ldr	r0, [pc, #52]	; (3140 <unused_ram+0x28>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:317
  ldr r1, [r0]
    310c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:319

  ldr r2, =Backlinkgrenze
    310e:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:320
  cmp r1, r2
    3112:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:322
.ifdef above_ram
  blo.n unused_ram
    3114:	d300      	bcc.n	3118 <unused_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:327
.else
  bhs.n unused_ram
.endif
    
    ldr tos, =FlashDictionaryEnde
    3116:	4e0b      	ldr	r6, [pc, #44]	; (3144 <unused_ram+0x2c>)

00003118 <unused_ram>:
unused_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:330

unused_ram:  
  subs tos, r1
    3118:	1a76      	subs	r6, r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:331
  pop {pc}
    311a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:162
  ldr r0, =dotgaensefuesschen
    311c:	00002e94 	.word	0x00002e94
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:205
  ldr r0, =dotcfuesschen
    3120:	00002ebe 	.word	0x00002ebe
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/strings.s:237
  ldr r0, =dotsfuesschen
    3124:	00002ee4 	.word	0x00002ee4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:58
        ldr r4, =hexdot+1
    3128:	00002f65 	.word	0x00002f65
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:66
        ldr r4, =udot+1
    312c:	00004ba3 	.word	0x00004ba3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:74
  ldr r4, =dot+1
    3130:	00004bb3 	.word	0x00004bb3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:77
  ldr r1, =datenstackanfang @ Anfang laden
    3134:	20000288 	.word	0x20000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:112
  ldr r2, =base
    3138:	2001fffc 	.word	0x2001fffc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:134
  ldr r2, =datenstackanfang - 4 @ Anfang laden, wo ich beginne:  Start here !
    313c:	20000284 	.word	0x20000284
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:316
  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
    3140:	2001ffd0 	.word	0x2001ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:327
    ldr tos, =FlashDictionaryEnde
    3144:	24080000 	.word	0x24080000

00003148 <Dictionary_709>:
Dictionary_709():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/deepinsight.s:327
    3148:	000032ac 	.word	0x000032ac
    314c:	310d0000 	.word	0x310d0000
    3150:	74696232 	.word	0x74696232
    3154:	6f636e65 	.word	0x6f636e65
    3158:	676e6964 	.word	0x676e6964

0000315c <Code_709>:
twelvebitencoding():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:60

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "12bitencoding" @ ( x -- bitmask true | x false )
twelvebitencoding:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    315c:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:63

  @ If this is a 8 bit constant, the encoding is finished.
  cmp tos, #255
    315e:	2eff      	cmp	r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:64
  bhi 1f
    3160:	d804      	bhi.n	316c <Code_709+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:66
    @ writeln "12bitencoding: 0x000000XY"
    pushdatos       @ True-Flag
    3162:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:67
    movs tos, #-1
    3166:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:68
    pop {r0, r1, r2, r3, pc}
    316a:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:75
1:@ This is not a lowest-8-bits-only constant.
  @ Check for other possibilities:

  @ 0x00XY00XY

  ands r0, tos, #0x00FF00FF
    316c:	f016 10ff 	ands.w	r0, r6, #16711935	; 0xff00ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:76
  cmp r0, tos
    3170:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:77
  bne 2f
    3172:	d10e      	bne.n	3192 <Code_709+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:79

    movw r1, 0xFFFF
    3174:	f64f 71ff 	movw	r1, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:80
    ands r0, r1
    3178:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:81
    lsrs r1, tos, #16
    317a:	0c31      	lsrs	r1, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:82
    cmp r1, r0
    317c:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:83
    bne 2f
    317e:	d108      	bne.n	3192 <Code_709+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:85
      @ writeln "12bitencoding: 0x00XY00XY"
      ands tos, #0xFF
    3180:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:86
      orrs tos, #0x00001000
    3184:	f456 5680 	orrs.w	r6, r6, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:87
      pushdatos       @ True-Flag
    3188:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:88
      movs tos, #-1
    318c:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:89
      pop {r0, r1, r2, r3, pc}
    3190:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:95

2:

  @ 0xXY00XY00

  ands r0, tos, #0xFF00FF00
    3192:	f016 20ff 	ands.w	r0, r6, #4278255360	; 0xff00ff00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:96
  cmp r0, tos
    3196:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:97
  bne 3f
    3198:	d10f      	bne.n	31ba <Code_709+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:99

    movw r1, #0xFFFF
    319a:	f64f 71ff 	movw	r1, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:100
    ands r0, r1
    319e:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:101
    lsrs r1, tos, #16
    31a0:	0c31      	lsrs	r1, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:102
    cmp r1, r0
    31a2:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:103
    bne 3f
    31a4:	d109      	bne.n	31ba <Code_709+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:105
      @ writeln "12bitencoding: 0xXY00XY00"
      lsrs tos, #8
    31a6:	0a36      	lsrs	r6, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:106
      ands tos, #0xFF
    31a8:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:107
      orrs tos, #0x00002000
    31ac:	f456 5600 	orrs.w	r6, r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:108
      pushdatos       @ True-Flag
    31b0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:109
      movs tos, #-1
    31b4:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:110
      pop {r0, r1, r2, r3, pc}
    31b8:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:116

3:

  @ 0xXYXYXYXY

  movs r2, #0xFF
    31ba:	22ff      	movs	r2, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:117
  movs r1, tos
    31bc:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:118
  ands r1, r2
    31be:	4011      	ands	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:120

  lsrs r0, tos, #8
    31c0:	0a30      	lsrs	r0, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:121
  ands r0, r2
    31c2:	4010      	ands	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:122
  cmp r0, r1
    31c4:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:123
  bne 4f
    31c6:	d110      	bne.n	31ea <Code_709+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:125

  lsrs r0, tos, #16
    31c8:	0c30      	lsrs	r0, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:126
  ands r0, r2
    31ca:	4010      	ands	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:127
  cmp r0, r1
    31cc:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:128
  bne 4f
    31ce:	d10c      	bne.n	31ea <Code_709+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:130

  lsrs r0, tos, #24
    31d0:	0e30      	lsrs	r0, r6, #24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:131
  ands r0, r2
    31d2:	4010      	ands	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:132
  cmp r0, r1
    31d4:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:133
  bne 4f
    31d6:	d108      	bne.n	31ea <Code_709+0x8e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:135
    @ writeln "12bitencoding: 0xXYXYXYXY"
    ands tos, #0xFF
    31d8:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:136
    orrs tos, #0x00003000
    31dc:	f456 5640 	orrs.w	r6, r6, #12288	; 0x3000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:137
    pushdatos       @ True-Flag
    31e0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:138
    movs tos, #-1
    31e4:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:139
    pop {r0, r1, r2, r3, pc}
    31e8:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:149
    @ 2 of $FF and        8 lshift dup 16 lshift or const. endof \ 0xXY00XY00
    @ 3 of $FF and dup 8 lshift or dup 16 lshift or const. endof \ 0xXYXYXYXY

  @ Can we generate this by rotating into an 8 bit constant ?

  movs r0, tos @ Backup of value if we cannot express this as a shifted constant
    31ea:	0030      	movs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:150
  movs r1, #0  @ Counter of shifts
    31ec:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:154

5:@ Rotating loop to determine amount of shifts necessary

  adds r1, #1
    31ee:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:157

  @ Rotate left by one bit place
  adds r0, r0, r0
    31f0:	1800      	adds	r0, r0, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:158
  adcs r0, #0
    31f2:	f150 0000 	adcs.w	r0, r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:161

  @ Does this fit into 8 bits with "msb" set: %1xxx xxxx ?
  movs r2, #0xFFFFFF80
    31f6:	f07f 027f 	mvns.w	r2, #127	; 0x7f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:162
  ands r2, r0
    31fa:	4002      	ands	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:163
  cmp r2, #0x80
    31fc:	2a80      	cmp	r2, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:164
  beq 6f
    31fe:	d005      	beq.n	320c <Code_709+0xb0>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:167

  @ Not this time.
  cmp r1, #31
    3200:	291f      	cmp	r1, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:168
  blo 5b
    3202:	d3f4      	bcc.n	31ee <Code_709+0x92>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:172

7:@ Fallthrough if not possible to encode constant in 12 bits
  @ writeln "12bitencoding: unknown"
  pushdatos       @ False-Flag
    3204:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:173
  movs tos, #0
    3208:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:174
  pop {r0, r1, r2, r3, pc}
    320a:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:189

   @ write " Constant: "
   @ pushda r0
   @ bl hexdot

  cmp r1, #8
    320c:	2908      	cmp	r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:190
  blo 7b
    320e:	d3f9      	bcc.n	3204 <Code_709+0xa8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:198

  @ if imm12<11:10> == '00' then Spezialfälle.
  @ We can only opcode this if the topmost 1 bits of shift count are not 00.
  @ At least a shift of "%01 000" = 8 is required. Special cases are encoded below.

  movs tos, r0 @ Shifted constant
    3210:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:199
  bics tos, #0x80 @ Clear MSB (which is always set here)
    3212:	f036 0680 	bics.w	r6, r6, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:206
  @ Encode shift accordingly
  @ Shift-Bit 0 goes into bit 7 of bitmask
  @ Shift-Bits 1, 2, 3 go into bit 12, 13, 14 of bitmask
  @ Shift-Bit 4 goes into bit 26 of bitmask

  ands r0, r1, #0x1
    3216:	f011 0001 	ands.w	r0, r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:207
  lsls r0, #7
    321a:	01c0      	lsls	r0, r0, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:208
  orrs tos, r0
    321c:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:210

  ands r0, r1, #0xE
    321e:	f011 000e 	ands.w	r0, r1, #14
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:211
  lsls r0, #11
    3222:	02c0      	lsls	r0, r0, #11
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:212
  orrs tos, r0
    3224:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:214

  ands r0, r1, #0x10
    3226:	f011 0010 	ands.w	r0, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:215
  lsls r0, #22
    322a:	0580      	lsls	r0, r0, #22
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:216
  orrs tos, r0
    322c:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:218

  pushdatos       @ True-Flag
    322e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:219
  movs tos, #-1
    3232:	f05f 36ff 	movs.w	r6, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:220
  pop {r0, r1, r2, r3, pc}
    3236:	bd0f      	pop	{r0, r1, r2, r3, pc}

00003238 <movwkomma>:
movwkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:226

@ -----------------------------------------------------------------------------
movwkomma: @ Register r0: Konstante                                    Constant
           @ Register r3: Zielregister, fertig geschoben zum Verodern  Destination register, readily shifted to be ORed with opcode.
@ -----------------------------------------------------------------------------
  pushdatos    @ Platz auf dem Datenstack schaffen
    3238:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:227
  ldr tos, =0xf2400000 @ Opcode movw r0, #0
    323c:	f8df 65c4 	ldr.w	r6, [pc, #1476]	; 3804 <Code_823+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:229

  movs r1, #0x0000F000  @ Bit 16 - 13
    3240:	f45f 4170 	movs.w	r1, #61440	; 0xf000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:230
  ands r2, r0, r1       @ aus der Adresse maskieren   Mask bits of constant
    3244:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:231
  lsls r2, #4           @ passend schieben            shift them accordingly
    3248:	0112      	lsls	r2, r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:232
  orrs tos, r2          @ zum Opcode hinzufügen       and OR them to opcode.
    324a:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:234

  movs r1, #0x00000800  @ Bit 12
    324c:	f45f 6100 	movs.w	r1, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:235
  ands r2, r0, r1       @ aus der Adresse maskieren   ...
    3250:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:236
  lsls r2, #15          @ passend schieben
    3254:	03d2      	lsls	r2, r2, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:237
  orrs tos, r2          @ zum Opcode hinzufügen
    3256:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:239

  movs r1, #0x00000700  @ Bit 11 - 9
    3258:	f45f 61e0 	movs.w	r1, #1792	; 0x700
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:240
  ands r2, r0, r1       @ aus der Adresse maskieren
    325c:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:241
  lsls r2, #4           @ passend schieben
    3260:	0112      	lsls	r2, r2, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:242
  orrs tos, r2          @ zum Opcode hinzufügen
    3262:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:244

  movs r1, #0x000000FF  @ Bit 8 - 1
    3264:	21ff      	movs	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:245
  ands r2, r0, r1       @ aus der Adresse maskieren
    3266:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:247
  @ lsrs r2, #0         @ passend schieben
  orrs tos, r2          @ zum Opcode hinzufügen
    326a:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:250

  @ Füge den gewünschten Register hinzu:  OR desired target register.
  orrs tos, r3
    326c:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:252

  b.n reversekomma @ Insert finished movw Opcode into Dictionary
    326e:	e3c7      	b.n	3a00 <Code_858>

00003270 <movtkomma>:
movtkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:258

@ -----------------------------------------------------------------------------
movtkomma: @ Register r0: Konstante                                    Constant
           @ Register r3: Zielregister, fertig geschoben zum Verodern  Destination register, readily shifted to be ORed with opcode.
@ -----------------------------------------------------------------------------
  pushdatos    @ Platz auf dem Datenstack schaffen
    3270:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:259
  ldr tos, =0xf2c00000 @ Opcode movt r0, #0
    3274:	f8df 6590 	ldr.w	r6, [pc, #1424]	; 3808 <Code_823+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:261

  movs r1, #0xF0000000  @ Bit 32 - 29
    3278:	f05f 4170 	movs.w	r1, #4026531840	; 0xf0000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:262
  ands r2, r0, r1       @ aus der Adresse maskieren
    327c:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:263
  lsrs r2, #12          @ passend schieben
    3280:	0b12      	lsrs	r2, r2, #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:264
  orrs tos, r2          @ zum Opcode hinzufügen
    3282:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:266

  movs r1, #0x08000000  @ Bit 28
    3284:	f05f 6100 	movs.w	r1, #134217728	; 0x8000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:267
  ands r2, r0, r1       @ aus der Adresse maskieren
    3288:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:268
  lsrs r2, #1           @ passend schieben
    328c:	0852      	lsrs	r2, r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:269
  orrs tos, r2          @ zum Opcode hinzufügen
    328e:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:271

  movs r1, #0x07000000  @ Bit 27 - 25
    3290:	f05f 61e0 	movs.w	r1, #117440512	; 0x7000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:272
  ands r2, r0, r1       @ aus der Adresse maskieren
    3294:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:273
  lsrs r2, #12          @ passend schieben
    3298:	0b12      	lsrs	r2, r2, #12
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:274
  orrs tos, r2          @ zum Opcode hinzufügen
    329a:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:276

  movs r1, #0x00FF0000  @ Bit 24 - 17
    329c:	f45f 017f 	movs.w	r1, #16711680	; 0xff0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:277
  ands r2, r0, r1       @ aus der Adresse maskieren
    32a0:	ea10 0201 	ands.w	r2, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:278
  lsrs r2, #16          @ passend schieben
    32a4:	0c12      	lsrs	r2, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:279
  orrs tos, r2          @ zum Opcode hinzufügen
    32a6:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:282

  @ Füge den gewünschten Register hinzu:
  orrs tos, r3
    32a8:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:284

  b.n reversekomma @ Insert finished movt Opcode into Dictionary
    32aa:	e3a9      	b.n	3a00 <Code_858>

000032ac <Dictionary_718>:
Dictionary_718():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:284
    32ac:	00003312 	.word	0x00003312
    32b0:	72100000 	.word	0x72100000
    32b4:	73696765 	.word	0x73696765
    32b8:	6c726574 	.word	0x6c726574
    32bc:	72657469 	.word	0x72657469
    32c0:	6c61      	.short	0x6c61
    32c2:	2c          	.byte	0x2c
	...

000032c4 <Code_718>:
registerliteralkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:291

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "registerliteral," @ ( x Register -- )
registerliteralkomma: @ Compile code to put a literal constant into a register.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    32c4:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:293

  popda r3    @ Hole die Registermaske               Fetch register to generate constant for
    32c6:	0033      	movs	r3, r6
    32c8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:294
  lsls r3, #8 @ Den Register um 8 Stellen schieben   Shift register accordingly for opcode generation
    32ca:	021b      	lsls	r3, r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:299

  @ Generiere movs-Opcode für sehr kleine Konstanten :-)
  @ Generate short movs Opcode for small constants within 0 and 255

  cmp tos, #0xFF @ Does literal fit in 8 bits ?
    32cc:	2eff      	cmp	r6, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:300
  bhi 1f         @ Gewünschte Konstante passt in 8 Bits.
    32ce:	d805      	bhi.n	32dc <Code_718+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:302
    @ Generate opcode for movs target, #...
    orrs tos, #0x2000 @ MOVS-Opcode
    32d0:	f456 5600 	orrs.w	r6, r6, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:303
    orrs tos, r3      @ OR with register
    32d4:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:304
    bl hkomma
    32d6:	f000 fb63 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:305
    pop {r0, r1, r2, r3, pc}
    32da:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:308

1:@ Check if constant can be opcoded into a long 32 bit movs opcode.
  bl twelvebitencoding
    32dc:	f7ff ff3e 	bl	315c <Code_709>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:310

  cmp tos, #0
    32e0:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:311
  drop @ Preserves Flags !
    32e2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:312
  beq 2f
    32e4:	d006      	beq.n	32f4 <Code_718+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:313
    ldr r0, =0xF05F0000 @ movs r0, #imm12 Opcode
    32e6:	f8df 0524 	ldr.w	r0, [pc, #1316]	; 380c <Code_823+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:314
    orrs tos, r0
    32ea:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:315
    orrs tos, r3        @ OR with register
    32ec:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:316
    bl reversekomma
    32ee:	f000 fb87 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:317
    pop {r0, r1, r2, r3, pc}
    32f2:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:321

2:@ Check if constant can be opcoded into a long 32 bit mvns opcode.

  mvns tos, tos @ Invert constant
    32f4:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:322
  bl twelvebitencoding
    32f6:	f7ff ff31 	bl	315c <Code_709>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:324

  cmp tos, #0
    32fa:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:325
  drop @ Preserves Flags !
    32fc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:326
  beq 3f
    32fe:	d006      	beq.n	330e <Code_718+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:327
    ldr r0, =0xF07F0000 @ mvns r0, #imm12 Opcode
    3300:	f8df 050c 	ldr.w	r0, [pc, #1292]	; 3810 <Code_823+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:328
    orrs tos, r0
    3304:	4306      	orrs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:329
    orrs tos, r3        @ OR with register
    3306:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:330
    bl reversekomma
    3308:	f000 fb7a 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:331
    pop {r0, r1, r2, r3, pc}
    330c:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:333

3:mvns tos, tos @ Invert back to original constant
    330e:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:335
  @ Generate a movw/movt Opcode
  b.n movwmovt_register_r3
    3310:	e00b      	b.n	332a <movwmovt_register_r3>

00003312 <Dictionary_722>:
Dictionary_722():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:335
    3312:	3372      	.short	0x3372
    3314:	00000000 	.word	0x00000000
    3318:	766f6d09 	.word	0x766f6d09
    331c:	766f6d77 	.word	0x766f6d77
    3320:	2c74      	.short	0x2c74

00003322 <Code_722>:
Code_722():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:342

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "movwmovt," @ ( x Register -- )
  @ Compile code to put a literal constant into any register.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    3322:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:344

  popda r3    @ Hole die Registermaske               Fetch register to generate constant for
    3324:	0033      	movs	r3, r6
    3326:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:345
  lsls r3, #8 @ Den Register um 8 Stellen schieben   Shift register accordingly for opcode generation
    3328:	021b      	lsls	r3, r3, #8

0000332a <movwmovt_register_r3>:
movwmovt_register_r3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:348

movwmovt_register_r3:
  popda r0    @ Hole die Konstante                   Fetch constant
    332a:	0030      	movs	r0, r6
    332c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:352
  @ Long constant that cannot be encoded in a small and simple way.
  @ Generate movw and movt pairs.

  bl movwkomma
    332e:	f7ff ff83 	bl	3238 <movwkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:358

  @ ldr r1, =0xffff0000 @ High-Teil
  @ ands r0, r1
  @ cmp r0, #0

  movw r1, #0xFFFF          @ Wenn der High-Teil Null ist, brauche ich keinen movt-Opcode mehr zu generieren.
    3332:	f64f 71ff 	movw	r1, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:359
  ands r0, r0, r1, lsl #16  @ If High-Part is zero there is no need to generate a movt opcode.
    3336:	ea10 4001 	ands.w	r0, r0, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:360
  beq 3f
    333a:	d001      	beq.n	3340 <movwmovt_register_r3+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:362

    bl movtkomma @ Bei Bedarf einfügen
    333c:	f7ff ff98 	bl	3270 <movtkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:364

3:pop {r0, r1, r2, r3, pc}
    3340:	bd0f      	pop	{r0, r1, r2, r3, pc}

00003342 <callkommalang>:
callkommalang():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:381
  @ Wichtig für <builds does> wo die Lückengröße vorher festliegen muss.
  @ This is a bit difficult and needs to be thoroughly optimized again.
  @ Write a very long jump into the dictionary!
  @ Important for <builds does> where the gap size must be determined beforehand.

  push {r0, r1, r2, r3, lr}
    3342:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:382
  adds tos, #1 @ Ungerade Adresse für Thumb-Befehlssatz   Uneven target address for Thumb instruction set !
    3344:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:384

  popda r0     @ Zieladresse holen    Destination address
    3346:	0030      	movs	r0, r6
    3348:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:385
  movs r3, #0  @ Register r0 wählen   Choose register r0
    334a:	2300      	movs	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:386
  bl movwkomma
    334c:	f7ff ff74 	bl	3238 <movwkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:387
  bl movtkomma
    3350:	f7ff ff8e 	bl	3270 <movtkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:389

  b.n callkommakurz_intern
    3354:	e006      	b.n	3364 <callkommakurz_intern>

00003356 <callkommakurz>:
callkommakurz():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:400
               @ Writes a movw-call or a movw-movt-call if destination address is too far away.
@ ----------------------------------------------------------------------------
  @ Dies ist ein bisschen schwierig und muss nochmal gründlich optimiert werden.
  @ Gedanke: Für kurze Call-Distanzen die BL-Opcodes benutzen.

  push {r0, r1, r2, r3, lr}
    3356:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:401
  adds tos, #1 @ Ungerade Adresse für Thumb-Befehlssatz
    3358:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:403

  pushdaconst 0 @ Register r0
    335a:	f847 6d04 	str.w	r6, [r7, #-4]!
    335e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:404
  bl registerliteralkomma
    3360:	f7ff ffb0 	bl	32c4 <Code_718>

00003364 <callkommakurz_intern>:
callkommakurz_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:407

callkommakurz_intern:
  pushdaconstw 0x4780 @ blx r0
    3364:	f847 6d04 	str.w	r6, [r7, #-4]!
    3368:	f244 7680 	movw	r6, #18304	; 0x4780
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:408
  bl hkomma
    336c:	f000 fb18 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:409
  pop {r0, r1, r2, r3, pc}
    3370:	bd0f      	pop	{r0, r1, r2, r3, pc}

00003372 <Dictionary_730>:
Dictionary_730():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:409
    3372:	33d8      	.short	0x33d8
    3374:	00000000 	.word	0x00000000
    3378:	6c616305 	.word	0x6c616305
    337c:	2c6c      	.short	0x2c6c

0000337e <Code_730>:
callkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:421
            @ Je nachdem: bl ...                            (4 Bytes)
            @             movw r0, ...              blx r0  (6 Bytes)
            @             movw r0, ... movt r0, ... blx r0 (10 Bytes)
@ ----------------------------------------------------------------------------

  push {r0, r1, r2, r3, lr}
    337e:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:422
  movs r3, tos @ Behalte Sprungziel auf dem Stack  Keep destination on stack
    3380:	0033      	movs	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:425
  @ ( Zieladresse )

  bl here
    3382:	f000 fece 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:426
  popda r0 @ Adresse-der-Opcodelücke  Where the opcodes shall be inserted...
    3386:	0030      	movs	r0, r6
    3388:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:428

  subs r3, r0     @ Differenz aus Lücken-Adresse und Sprungziel bilden   Calculate relative jump offset
    338a:	1a1b      	subs	r3, r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:429
  subs r3, #4     @ Da der aktuelle Befehl noch läuft und es komischerweise andere Offsets beim ARM gibt.  Current instruction still running...
    338c:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:437
  @ also habe ich 21 freie Bits, das oberste muss mit dem restlichen Vorzeichen übereinstimmen.

  @ BL opcodes support 22 Bits jump range - one of that for sign.
  @ Check if BL range is enough to reach target:

  ldr r1, =0xFFC00001   @ 21 Bits frei
    338e:	f8df 1484 	ldr.w	r1, [pc, #1156]	; 3814 <Code_823+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:438
  ands r1, r3
    3392:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:439
  cmp r1, #0  @ Wenn dies Null ergibt, positive Distanz ok.
    3394:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:440
  beq 1f
    3396:	d006      	beq.n	33a6 <Code_730+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:442

  ldr r2, =0xFFC00000
    3398:	f8df 247c 	ldr.w	r2, [pc, #1148]	; 3818 <Code_823+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:443
  cmp r1, r2
    339c:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:444
  beq 1f      @ Wenn es gleich ist: Negative Distanz ok.
    339e:	d002      	beq.n	33a6 <Code_730+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:445
    pop {r0, r1, r2, r3, lr}
    33a0:	e8bd 400f 	ldmia.w	sp!, {r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:446
    b.n callkommakurz @ Too far away - BL cannot reach that destination. Time for long distance opcodes :-)
    33a4:	e7d7      	b.n	3356 <callkommakurz>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:452
1:

  @ Within reach of BL. Generate the opcode !

  @ ( Zieladresse )
  drop
    33a6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:459
  @ BL: S | imm10 || imm11
  @ Also 22 Bits, wovon das oberste das Vorzeichen sein soll.

  @ r3 enthält die Distanz:

  lsrs r3, #1            @ Bottom bit ignored
    33a8:	085b      	lsrs	r3, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:460
    ldr r0, =0xF000F800  @ Opcode-Template
    33aa:	f8df 0470 	ldr.w	r0, [pc, #1136]	; 381c <Code_823+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:462

    movw r1, #0x7FF       @ Bottom 11 bits of immediate
    33ae:	f240 71ff 	movw	r1, #2047	; 0x7ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:463
    ands r1, r3
    33b2:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:464
    orrs r0, r1
    33b4:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:466

  lsrs r3, #11
    33b6:	0adb      	lsrs	r3, r3, #11
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:468

    movw r1, #0x3FF       @ 10 more bits shifted to second half
    33b8:	f240 31ff 	movw	r1, #1023	; 0x3ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:469
    ands r1, r3
    33bc:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:470
    lsls r1, #16
    33be:	0409      	lsls	r1, r1, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:471
    orrs r0, r1
    33c0:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:473

  lsrs r3, #10
    33c2:	0a9b      	lsrs	r3, r3, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:475

    ands r1, r3, #1      @ Next bit, treated as sign, shifted into bit 26.
    33c4:	f013 0101 	ands.w	r1, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:476
    lsls r1, #26
    33c8:	0689      	lsls	r1, r1, #26
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:477
    orrs r0, r1
    33ca:	4308      	orrs	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:480

  @ Opcode fertig in r0
  pushda r0
    33cc:	f847 6d04 	str.w	r6, [r7, #-4]!
    33d0:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:481
  bl reversekomma  @ Write finished opcode into Dictionary.
    33d2:	f000 fb15 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:483

  pop {r0, r1, r2, r3, pc}
    33d6:	bd0f      	pop	{r0, r1, r2, r3, pc}

000033d8 <Dictionary_735>:
Dictionary_735():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:483
    33d8:	0000340e 	.word	0x0000340e
    33dc:	6c080000 	.word	0x6c080000
    33e0:	72657469 	.word	0x72657469
    33e4:	6c61      	.short	0x6c61
    33e6:	2c          	.byte	0x2c
	...

000033e8 <Code_735>:
Code_735():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:489

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "literal," @ ( x -- )
literalkomma: @ Save r1, r2 and r3 !
@ -----------------------------------------------------------------------------
  push {r3, lr}
    33e8:	b508      	push	{r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:491

  pushdaconstw 0xf847  @ str tos, [psp, #-4]!
    33ea:	f847 6d04 	str.w	r6, [r7, #-4]!
    33ee:	f64f 0647 	movw	r6, #63559	; 0xf847
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:492
  bl hkomma
    33f2:	f000 fad5 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:493
  pushdaconstw 0x6d04
    33f6:	f847 6d04 	str.w	r6, [r7, #-4]!
    33fa:	f646 5604 	movw	r6, #27908	; 0x6d04
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:494
  bl hkomma
    33fe:	f000 facf 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:496

  pushdaconst 6 @ Gleich in r6=tos legen
    3402:	f847 6d04 	str.w	r6, [r7, #-4]!
    3406:	2606      	movs	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:497
  bl registerliteralkomma
    3408:	f7ff ff5c 	bl	32c4 <Code_718>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:499

  pop {r3, pc}
    340c:	bd08      	pop	{r3, pc}

0000340e <Dictionary_742>:
Dictionary_742():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:499
    340e:	3436      	.short	0x3436
    3410:	00000000 	.word	0x00000000
    3414:	65726306 	.word	0x65726306
    3418:	7461      	.short	0x7461
    341a:	65          	.byte	0x65
	...

0000341c <Code_742>:
Code_742():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:504

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "create" @ ANS-Create with default action.
@ -----------------------------------------------------------------------------
  push {lr}
    341c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:505
  bl builds
    341e:	f000 f835 	bl	348c <Code_747>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:511

  @ Copy of the inline-code of does>

  @ Universeller Sprung zu dodoes:  Universal jump to dodoes. There has already been a push {lr} before in the definition that calls does>.
  @ Davor ist in dem Wort, wo does> eingefügt wird schon ein push {lr} gewesen.
  movw r0, #:lower16:dodoes+1
    3422:	f243 4057 	movw	r0, #13399	; 0x3457
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:513
  .ifdef does_above_64kb
    movt r0, #:upper16:dodoes+1   @ Dieser Teil ist Null, da dodoes weit am Anfang des Flashs sitzt.  Not needed as dodoes in core is in the lowest 64 kb.
    3426:	f2c0 0000 	movt	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:515
  .endif
  blx r0 @ Den Aufruf mit absoluter Adresse einkompilieren. Perform this call with absolute addressing.
    342a:	4780      	blx	r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:521


    @ Die Adresse ist hier nicht auf dem Stack, sondern in LR. LR ist sowas wie "TOS" des Returnstacks.
    @ The address is not on the stack here, but in LR. LR is something like "TOS" of the return stack.

  pushdatos
    342c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:522
  subs tos, lr, #1 @ Denn es ist normalerweise eine ungerade Adresse wegen des Thumb-Befehlssatzes.  Align address. It is uneven because of Thumb-instructionset bit set.
    3430:	f1be 0601 	subs.w	r6, lr, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:538
	.endif
  @ If we are in flash add the 16 byte offset to account for the 32byte alignment of that next dictionary entry
  adds tos, #16
  .endif

1: pop {pc}
    3434:	bd00      	pop	{pc}

00003436 <Dictionary_744>:
Dictionary_744():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:538
    3436:	347e      	.short	0x347e
    3438:	00200000 	.word	0x00200000
    343c:	656f6405 	.word	0x656f6405
    3440:	3e73      	.short	0x3e73

00003442 <Code_744>:
Code_744():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:552
    @ on datastack. This is a very special implementation !

  @ Universeller Sprung zu dodoes:  Universal jump to dodoes. There has already been a push {lr} before in the definition that calls does>.
  @ Davor ist in dem Wort, wo does> eingefügt wird schon ein push {lr} gewesen.
  @ Before that, in the word where does> is inserted, there was already a push {lr}.
  movw r0, #:lower16:dodoes+1
    3442:	f243 4057 	movw	r0, #13399	; 0x3457
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:554
  .ifdef does_above_64kb
    movt r0, #:upper16:dodoes+1   @ Dieser Teil ist Null, da dodoes weit am Anfang des Flashs sitzt.  Not needed as dodoes in core is in the lowest 64 kb.
    3446:	f2c0 0000 	movt	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:556
  .endif
  blx r0 @ Den Aufruf mit absoluter Adresse einkompilieren. Perform this call with absolute addressing.
    344a:	4780      	blx	r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:562


    @ Die Adresse ist hier nicht auf dem Stack, sondern in LR. LR ist sowas wie "TOS" des Returnstacks.
    @ Address is in LR which is something like "TOS in register" of return stack.

  pushdatos
    344c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:563
  subs tos, lr, #1 @ Denn es ist normalerweise eine ungerade Adresse wegen des Thumb-Befehlssatzes.  Align address. It is uneven because of Thumb-instructionset bit set.
    3450:	f1be 0601 	subs.w	r6, lr, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:567

  @ Am Ende des Wortes wird ein pop {pc} stehen, und das kommt prima hin.
  @ At the end of the definition there will be a pop {pc}, that is fine.
  bx lr @ Very important as delimiter as does> itself is inline.
    3454:	4770      	bx	lr

00003456 <dodoes>:
dodoes():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:588
  @ Generate a long call to the destination in LR that is inserted into the hole alloted by <builds.

  @ Präpariere die Einsprungadresse, die via callkomma eingefügt werden muss.
  @ Prepare the destination address

  pushdatos
    3456:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:589
  subs tos, lr, #1
    345a:	f1be 0601 	subs.w	r6, lr, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:597
               @ Einen abziehen. Diese Adresse ist schon ungerade für Thumb-2, aber callkomma fügt nochmal eine 1 dazu.
               @ Subtract one. Adress is already uneven for Thumb-instructionset, but callkomma will add one anyway.

    @ Dictionary-Pointer verbiegen:
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
    345e:	4af0      	ldr	r2, [pc, #960]	; (3820 <Code_823+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:598
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren  Save old Dictionarypointer.
    3460:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:600

  ldr r1, =Einsprungpunkt @ Get the address the long call has to be inserted.
    3462:	49f0      	ldr	r1, [pc, #960]	; (3824 <Code_823+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:601
  ldr r1, [r1] @ r1 enthält jetzt die Codestartadresse der aktuellen Definition.
    3464:	6809      	ldr	r1, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:668

dodoes_ram:
  .endif

  @ This is to align dictionary pointer to have does> target locations that are always 4-even
  movs r0, #2
    3466:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:669
  ands r0, r1
    3468:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:670
  beq 1f
    346a:	d000      	beq.n	346e <dodoes+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:671
    adds r1, #2
    346c:	3102      	adds	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:674
1:

  adds r1, #2  @ Am Anfang sollte das neudefinierte Wort ein push {lr} enthalten, richtig ?
    346e:	3102      	adds	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:679
			   @ At the beginning, the newly defined word should contain a push {lr}, right
               @ Skip the push {lr} opcode in that definition.

  @ Change the Dictionarypointer to insert the long call with the normal comma mechanism.
      str r1, [r2] @ Dictionarypointer umbiegen redirect dictionary pointer
    3470:	6011      	str	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:680
  bl callkommalang @ Aufruf einfügen Insert call
    3472:	f7ff ff66 	bl	3342 <callkommalang>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:681
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen. Reset dictionary pointer again.
    3476:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:683

  bl smudge
    3478:	f000 f9e9 	bl	384e <Code_825>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:684
  pop {pc}
    347c:	bd00      	pop	{pc}

0000347e <Dictionary_747>:
Dictionary_747():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:684
    347e:	34ba      	.short	0x34ba
    3480:	00000000 	.word	0x00000000
    3484:	75623c07 	.word	0x75623c07
    3488:	73646c69 	.word	0x73646c69

0000348c <Code_747>:
builds():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:693
  Wortbirne Flag_visible, "<builds"
builds: @ Beginnt ein Defining-Wort.  Start a defining definition.
        @ Dazu lege ich ein neues Wort an, lasse eine Lücke für den Call-Befehl. Create a new definition and leave space for inserting the does>-Call later.
        @ Keine Strukturkennung  No structure pattern matching here !
@ -----------------------------------------------------------------------------
  push {lr}
    348c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:694
  bl create       @ Neues Wort wird erzeugt
    348e:	f000 fbf5 	bl	3c7c <Code_886>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:787

builds_ram:
  .endif

  @ This is to align dictionary pointer to have does> target locations that are always 4-even
    bl here
    3492:	f000 fe46 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:788
    movs r0, #2
    3496:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:789
    ands tos, r0
    3498:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:790
    drop
    349a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:791
    beq 1f
    349c:	d001      	beq.n	34a2 <Code_747+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:792
      bl nop_hkomma
    349e:	f000 fa71 	bl	3984 <nop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:795
1:

  pushdaconstw 0xb500 @ Opcode für push {lr} schreiben  Write opcode for push {lr}
    34a2:	f847 6d04 	str.w	r6, [r7, #-4]!
    34a6:	f24b 5600 	movw	r6, #46336	; 0xb500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:796
  bl hkomma
    34aa:	f000 fa79 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:798

  pushdaconst 10  @ Hier kommt ein Call-Befehl hinein, aber ich weiß die Adresse noch nicht. A call command comes in here, but I don't know the address yet.
    34ae:	f847 6d04 	str.w	r6, [r7, #-4]!
    34b2:	260a      	movs	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:799
  bl allot        @ Lasse also eine passende Lücke frei !  Leave space for a long call opcode sequence.
    34b4:	f000 fae2 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:800
  pop {pc}
    34b8:	bd00      	pop	{pc}

000034ba <Dictionary_753>:
Dictionary_753():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:800
    34ba:	34c6      	.short	0x34c6
    34bc:	00500000 	.word	0x00500000
    34c0:	5d275b03 	.word	0x5d275b03

000034c4 <Code_753>:
Code_753():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:31
  .endif

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "[']" @ Sucht das nächste Wort im Eingabestrom  Searches the next token in input buffer and compiles its entry point as literal.
@------------------------------------------------------------------------------
  b.n tick @ So sah das mal aus: ['] ' immediate 0-foldable ;
    34c4:	e003      	b.n	34ce <Code_754>

000034c6 <Dictionary_754>:
Dictionary_754():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:31
    34c6:	34de      	.short	0x34de
    34c8:	00000000 	.word	0x00000000
    34cc:	2701      	.short	0x2701

000034ce <Code_754>:
tick():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:37

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "'" @ Searches next token in unput buffer and gives back its code entry point.
tick: @ Nimmt das nächste Token aus dem Puffer, suche es und gibt den Einsprungpunkt zurück.
@ -----------------------------------------------------------------------------
  push {lr}
    34ce:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:38
  bl token
    34d0:	f001 f998 	bl	4804 <Code_1101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:39
  bl find_not_found
    34d4:	f000 fdbd 	bl	4052 <find_not_found>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:40
  popda r0 @ Drop Flags into r0 - used by postpone !
    34d8:	0030      	movs	r0, r6
    34da:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:41
  pop {pc}
    34dc:	bd00      	pop	{pc}

000034de <Dictionary_756>:
Dictionary_756():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:41
    34de:	3514      	.short	0x3514
    34e0:	00300000 	.word	0x00300000
    34e4:	736f7008 	.word	0x736f7008
    34e8:	6e6f7074 	.word	0x6e6f7074
    34ec:	65          	.byte	0x65
	...

000034ee <Code_756>:
Code_756():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:47

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "postpone" @ Sucht das nächste Wort im Eingabestrom  Search next token and fill it in Dictionary in a special way.
                                       @ und fügt es auf besondere Weise ein.
@------------------------------------------------------------------------------
  push {lr}
    34ee:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:49

  bl tick @ Stores Flags into r0 !
    34f0:	f7ff ffed 	bl	34ce <Code_754>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:55

  @ ( Einsprungadresse )

  .ifdef registerallocator

  pushda r0
    34f4:	f847 6d04 	str.w	r6, [r7, #-4]!
    34f8:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:56
  swap
    34fa:	6839      	ldr	r1, [r7, #0]
    34fc:	603e      	str	r6, [r7, #0]
    34fe:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:57
  bl literalkomma
    3500:	f7ff ff72 	bl	33e8 <Code_735>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:58
  bl literalkomma
    3504:	f7ff ff70 	bl	33e8 <Code_735>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:59
  pushdatos
    3508:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:60
  ldr tos, =kompilator
    350c:	4ec6      	ldr	r6, [pc, #792]	; (3828 <Code_823+0x36>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:61
  bl callkomma
    350e:	f7ff ff36 	bl	337e <Code_730>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:62
  pop {pc}
    3512:	bd00      	pop	{pc}

00003514 <Dictionary_761>:
Dictionary_761():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:62
    3514:	0000356a 	.word	0x0000356a
    3518:	69070000 	.word	0x69070000
    351c:	6e696c6e 	.word	0x6e696c6e
    3520:	2c65      	.short	0x2c65

00003522 <Code_761>:
Code_761():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:91

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "inline," @ ( addr -- )
inlinekomma:
@ -----------------------------------------------------------------------------
  push {lr}
    3522:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:107
  .ifdef m0core
  ldr r1, =0xb500 @ push {lr}
  ldr r2, =0xbd00 @ pop {pc}
  ldr r3, =0x4770 @ bx lr
  .else
  movw r1, #0xb500 @ push {lr}
    3524:	f24b 5100 	movw	r1, #46336	; 0xb500
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:108
  movw r2, #0xbd00 @ pop {pc}
    3528:	f64b 5200 	movw	r2, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:109
  movw r3, #0x4770 @ bx lr
    352c:	f244 7370 	movw	r3, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:112
  .endif

1:ldrh r0, [tos] @ Hole die nächsten 16 Bits aus der Routine.  Fetch next opcode...
    3530:	8830      	ldrh	r0, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:113
  cmp r0, r1 @ push {lr}
    3532:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:114
  beq 2f
    3534:	d008      	beq.n	3548 <Code_761+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:115
  cmp r0, r2 @ pop {pc}
    3536:	4290      	cmp	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:116
  beq 3f
    3538:	d008      	beq.n	354c <Code_761+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:117
  cmp r0, r3 @ bx lr
    353a:	4298      	cmp	r0, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:118
  beq 3f
    353c:	d006      	beq.n	354c <Code_761+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:120

  pushda r0
    353e:	f847 6d04 	str.w	r6, [r7, #-4]!
    3542:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:121
  bl hkomma @ Opcode einkompilieren  After checking is done, insert opcode into Dictionary.
    3544:	f000 fa2c 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:123

2:adds tos, #2 @ Pointer weiterrücken  Advance pointer
    3548:	3602      	adds	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:124
  b 1b
    354a:	e7f1      	b.n	3530 <Code_761+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:126

3:drop
    354c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:127
  pop {pc}
    354e:	bd00      	pop	{pc}

00003550 <suchedefinitionsende>:
suchedefinitionsende():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:135
@ -----------------------------------------------------------------------------
suchedefinitionsende: @ Rückt den Pointer in r0 ans Ende einer Definition vor.
                      @ Advance r0 to the end of code of current definition by searching for pop {pc} or bx lr opcodes.
@ -----------------------------------------------------------------------------
        @ Suche wie in inline, nach pop {pc} oder bx lr.
        push {r1, r2, r3}
    3550:	b40e      	push	{r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:141

         .ifdef m0core
         ldr r2, =0xbd00 @ pop {pc}
         ldr r3, =0x4770 @ bx lr
         .else
         movw r2, #0xbd00 @ pop {pc}
    3552:	f64b 5200 	movw	r2, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:142
         movw r3, #0x4770 @ bx lr
    3556:	f244 7370 	movw	r3, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:146
         .endif


1:        ldrh r1, [r0]  @ Hole die nächsten 16 Bits aus der Routine.
    355a:	8801      	ldrh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:147
          adds r0, #2    @ Pointer Weiterrücken
    355c:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:149

          cmp r1, r2  @ pop {pc}
    355e:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:150
          beq 2f
    3560:	d001      	beq.n	3566 <suchedefinitionsende+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:151
          cmp r1, r3  @ bx lr
    3562:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:152
          bne 1b
    3564:	d1f9      	bne.n	355a <suchedefinitionsende+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:154

2:      pop {r1, r2, r3}
    3566:	bc0e      	pop	{r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:155
        bx lr
    3568:	4770      	bx	lr

0000356a <Dictionary_765>:
Dictionary_765():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:155
    356a:	3580      	.short	0x3580
    356c:	00000000 	.word	0x00000000
    3570:	74657204 	.word	0x74657204
    3574:	2c          	.byte	0x2c
	...

00003576 <Code_765>:
Code_765():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:163
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "ret," @ ( -- )
retkomma: @ Write pop {pc} opcode
@ -----------------------------------------------------------------------------
  @ Mache das mit pop {pc}
  pushdaconstw 0xbd00 @ Opcode für pop {pc} schreiben
    3576:	f847 6d04 	str.w	r6, [r7, #-4]!
    357a:	f64b 5600 	movw	r6, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:164
  b.n hkomma
    357e:	e20f      	b.n	39a0 <Code_849>

00003580 <Dictionary_768>:
Dictionary_768():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:164
    3580:	0000358e 	.word	0x0000358e
    3584:	65040030 	.word	0x65040030
    3588:	6978      	.short	0x6978
    358a:	74          	.byte	0x74
	...

0000358c <Code_768>:
Code_768():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:170

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "exit" @ Kompiliert ein ret mitten in die Definition.
  @ Writes a ret opcode into current definition. Take care with inlining !
@------------------------------------------------------------------------------
  b.n retkomma
    358c:	e7f3      	b.n	3576 <Code_765>

0000358e <Dictionary_769>:
Dictionary_769():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:170
    358e:	35a6      	.short	0x35a6
    3590:	00300000 	.word	0x00300000
    3594:	63657207 	.word	0x63657207
    3598:	65737275 	.word	0x65737275

0000359c <Code_769>:
Code_769():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:179
@  : fac-rec ( acc n -- n! ) dup dup 1 = swap 0 = or if drop else dup 1 - rot rot * swap recurse then ; : facre ( n -- n! ) 1 swap fac-rec ;

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "recurse" @ Für Rekursion. Führt das gerade frische Wort aus. Execute freshly defined definition.
@------------------------------------------------------------------------------
  pushdatos
    359c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:180
  ldr tos, =Einsprungpunkt
    35a0:	4ea0      	ldr	r6, [pc, #640]	; (3824 <Code_823+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:181
  ldr tos, [tos]
    35a2:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:182
  b.n callkomma
    35a4:	e6eb      	b.n	337e <Code_730>

000035a6 <Dictionary_771>:
Dictionary_771():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:182
    35a6:	35be      	.short	0x35be
    35a8:	00810000 	.word	0x00810000
    35ac:	61747305 	.word	0x61747305
    35b0:	6574      	.short	0x6574

000035b2 <Code_771>:
Code_771():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:188

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "state" @ ( -- addr )
  CoreVariable state
@ -----------------------------------------------------------------------------
  pushdatos
    35b2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:189
  ldr tos, =state
    35b6:	4e9d      	ldr	r6, [pc, #628]	; (382c <Code_823+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:190
  bx lr
    35b8:	4770      	bx	lr
    35ba:	0000      	.short	0x0000
	...

000035be <Dictionary_774>:
Dictionary_774():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:190
    35be:	35d0      	.short	0x35d0
    35c0:	00000000 	.word	0x00000000
    35c4:	5d01      	.short	0x5d01

000035c6 <Code_774>:
Code_774():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:197

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "]" @ In den Compile-Modus übergehen  Switch to compile mode
compile_state:
@ -----------------------------------------------------------------------------
  ldr r0, =state
    35c6:	4899      	ldr	r0, [pc, #612]	; (382c <Code_823+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:198
  movs r1, #0 @ true-Flag in State legen
    35c8:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:199
  mvns r1, r1 @ -1
    35ca:	43c9      	mvns	r1, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:200
  str r1, [r0]
    35cc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:201
  bx lr
    35ce:	4770      	bx	lr

000035d0 <Dictionary_775>:
Dictionary_775():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:201
    35d0:	000035e0 	.word	0x000035e0
    35d4:	5b010010 	.word	0x5b010010

000035d8 <Code_775>:
Code_775():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:207

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate, "[" @ In den Execute-Modus übergehen  Switch to execute mode
execute_state:
@ -----------------------------------------------------------------------------
  ldr r0, =state
    35d8:	4894      	ldr	r0, [pc, #592]	; (382c <Code_823+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:208
  movs r1, #0 @ false-Flag in State legen.
    35da:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:209
  str r1, [r0]
    35dc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:210
  bx lr
    35de:	4770      	bx	lr

000035e0 <Dictionary_776>:
Dictionary_776():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:210
    35e0:	00003600 	.word	0x00003600
    35e4:	3a010000 	.word	0x3a010000

000035e8 <Code_776>:
Code_776():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:215

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, ":" @ ( -- )
@ -----------------------------------------------------------------------------
  push {lr}
    35e8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:217

  ldr r0, =Datenstacksicherung @ Setzt den Füllstand des Datenstacks zur Probe.
    35ea:	4891      	ldr	r0, [pc, #580]	; (3830 <Code_823+0x3e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:218
  str psp, [r0]                @ Save current datastack pointer to detect structure mismatch later.
    35ec:	6007      	str	r7, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:220

  bl create
    35ee:	f000 fb45 	bl	3c7c <Code_886>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:225


  .ifdef registerallocator

    ldr r0, =state
    35f2:	488e      	ldr	r0, [pc, #568]	; (382c <Code_823+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:226
    movs r1, #1 @ So eine Art bx lx-Kompilierzustand-Flag in State legen
    35f4:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:227
    str r1, [r0]
    35f6:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:230

    @ Neue Definition: Auf jeden Fall den Inline-Cache frisch leeren !
    ldr r0, =inline_cache_count
    35f8:	488e      	ldr	r0, [pc, #568]	; (3834 <Code_823+0x42>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:231
    movs r1, #0
    35fa:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:232
    str r1, [r0]  @ Inline Cache empty
    35fc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:243

  bl compile_state

  .endif

  pop {pc}
    35fe:	bd00      	pop	{pc}

00003600 <Dictionary_777>:
Dictionary_777():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:243
    3600:	00003686 	.word	0x00003686
    3604:	3b010830 	.word	0x3b010830

00003608 <Code_777>:
Code_777():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:252
  Wortbirne Flag_immediate_compileonly|Flag_bxlr, ";" @ ( -- )
  .else
  Wortbirne Flag_immediate_compileonly, ";" @ ( -- )
  .endif
@ -----------------------------------------------------------------------------
  push {lr}
    3608:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:254

  ldr r0, =Datenstacksicherung @ Prüft den Füllstand des Datenstacks.
    360a:	4889      	ldr	r0, [pc, #548]	; (3830 <Code_823+0x3e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:255
  ldr r1, [r0]                 @ Check fill level of datastack.
    360c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:256
  cmp r1, psp
    360e:	42b9      	cmp	r1, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:257
  beq 1f
    3610:	d019      	beq.n	3646 <Code_777+0x3e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:259

  ldr r1, =stack_canary @ Stackintegrität prüfen.
    3612:	4989      	ldr	r1, [pc, #548]	; (3838 <Code_823+0x46>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:260
  cmp tos, r1           @ Check stack integrity.
    3614:	428e      	cmp	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:261
  bne 5f
    3616:	d102      	bne.n	361e <Code_777+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:263

    ldr tos, =dots+10 @ Fehlermeldung vorbereiten.
    3618:	4e88      	ldr	r6, [pc, #544]	; (383c <Code_823+0x4a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:264
    bl type           @ Prepare error message.
    361a:	f7ff fc83 	bl	2f24 <Code_668>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:265
5:  Fehler_Quit " Stack not balanced."
    361e:	f7ff fc39 	bl	2e94 <dotgaensefuesschen>
    3622:	151f      	.short	0x151f
    3624:	31335b1b 	.word	0x31335b1b
    3628:	7453206d 	.word	0x7453206d
    362c:	206b6361 	.word	0x206b6361
    3630:	20746f6e 	.word	0x20746f6e
    3634:	616c6162 	.word	0x616c6162
    3638:	6465636e 	.word	0x6465636e
    363c:	305b1b2e 	.word	0x305b1b2e
    3640:	0a6d      	.short	0x0a6d
    3642:	f001 bc71 	b.w	4f28 <Code_1230>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:273


  .ifdef registerallocator
    @ Jetzt entweder bx lr oder pop {pc} schreiben.

     ldr r0, =state
    3646:	4879      	ldr	r0, [pc, #484]	; (382c <Code_823+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:274
     ldr r0, [r0]
    3648:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:275
     adds r1, r0, #1
    364a:	1c41      	adds	r1, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:276
     beq 3f
    364c:	d010      	beq.n	3670 <Code_777+0x68>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:277
       cmp r0, #rawinlinelength + 1  @ Kurze Definitionen mit bis zu 5 Einfach-Opcodes (State zählt ab 1) werden direkt als inline markiert.
    364e:	280b      	cmp	r0, #11
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:278
       bhi 2f
    3650:	d805      	bhi.n	365e <Code_777+0x56>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:279
         pushdaconstw (Flag_inline | Flag_bxlr ) & ~Flag_visible
    3652:	f847 6d04 	str.w	r6, [r7, #-4]!
    3656:	f640 0620 	movw	r6, #2080	; 0x820
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:280
         bl setflags
    365a:	f000 f92b 	bl	38b4 <Code_830>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:281
2:     pushdaconstw 0x4770 @ bx lr
    365e:	f847 6d04 	str.w	r6, [r7, #-4]!
    3662:	f244 7670 	movw	r6, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:282
       bl hkomma @ bx lr schreiben !
    3666:	f000 f99b 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:288

       @ Prinzipiell ist diese Definition Inline-tauglich, auch wenn sie vielleicht ein bisschen zu lang geworden sein könnte.
       @ An dieser Stelle ist es also sicher, aus dem Inline-Cache heraus den RA zu bemühen.
       @ Mal schauen, was daraus wird !

       bl inline_cache_schreiben
    366a:	f001 fb49 	bl	4d00 <inline_cache_schreiben>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:289
       b.n 4f
    366e:	e005      	b.n	367c <Code_777+0x74>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:293
3:   @ Doch ein pop {pc} ? Dann war wohl etwas enthalten, was nicht durch inline laufen darf.
  .endif

  pushdaconstw 0xbd00 @ Opcode für pop {pc} schreiben  Write opcode for pop {pc}
    3670:	f847 6d04 	str.w	r6, [r7, #-4]!
    3674:	f64b 5600 	movw	r6, #48384	; 0xbd00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:294
  bl hkomma
    3678:	f000 f992 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:296

4:bl smudge
    367c:	f000 f8e7 	bl	384e <Code_825>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:298

  bl execute_state
    3680:	f7ff ffaa 	bl	35d8 <Code_775>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:300

  pop {pc}
    3684:	bd00      	pop	{pc}

00003686 <Dictionary_785>:
Dictionary_785():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:300
    3686:	369a      	.short	0x369a
    3688:	00000000 	.word	0x00000000
    368c:	65786507 	.word	0x65786507
    3690:	65747563 	.word	0x65747563

00003694 <Code_785>:
Code_785():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:306

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "execute"
execute:
@ -----------------------------------------------------------------------------
  popda r0
    3694:	0030      	movs	r0, r6
    3696:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:307
  mov pc, r0
    3698:	4687      	mov	pc, r0

0000369a <Dictionary_787>:
Dictionary_787():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:307
    369a:	36b2      	.short	0x36b2
    369c:	00100000 	.word	0x00100000
    36a0:	6d6d6909 	.word	0x6d6d6909
    36a4:	61696465 	.word	0x61696465
    36a8:	6574      	.short	0x6574

000036aa <Code_787>:
Code_787():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:312

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate, "immediate" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_immediate & ~Flag_visible
    36aa:	f847 6d04 	str.w	r6, [r7, #-4]!
    36ae:	2610      	movs	r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:313
  b.n setflags
    36b0:	e100      	b.n	38b4 <Code_830>

000036b2 <Dictionary_790>:
Dictionary_790():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:313
    36b2:	36c8      	.short	0x36c8
    36b4:	00500000 	.word	0x00500000
    36b8:	6c6e6906 	.word	0x6c6e6906
    36bc:	6e69      	.short	0x6e69
    36be:	65          	.byte	0x65
	...

000036c0 <Code_790>:
Code_790():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:319

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "inline" @ ( -- )
setze_inlineflag:
@ -----------------------------------------------------------------------------
  pushdaconst Flag_inline & ~Flag_visible
    36c0:	f847 6d04 	str.w	r6, [r7, #-4]!
    36c4:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:320
  b.n setflags
    36c6:	e0f5      	b.n	38b4 <Code_830>

000036c8 <Dictionary_793>:
Dictionary_793():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:320
    36c8:	000036e2 	.word	0x000036e2
    36cc:	630b0010 	.word	0x630b0010
    36d0:	69706d6f 	.word	0x69706d6f
    36d4:	6e6f656c 	.word	0x6e6f656c
    36d8:	796c      	.short	0x796c

000036da <Code_793>:
Code_793():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:325

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate, "compileonly" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_immediate_compileonly & ~Flag_visible
    36da:	f847 6d04 	str.w	r6, [r7, #-4]!
    36de:	2630      	movs	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:326
  b.n setflags
    36e0:	e0e8      	b.n	38b4 <Code_830>

000036e2 <Dictionary_796>:
Dictionary_796():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:326
    36e2:	36fc      	.short	0x36fc
    36e4:	00500000 	.word	0x00500000
    36e8:	662d300a 	.word	0x662d300a
    36ec:	61646c6f 	.word	0x61646c6f
    36f0:	6c62      	.short	0x6c62
    36f2:	65          	.byte	0x65
	...

000036f4 <Code_796>:
Code_796():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:332

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "0-foldable" @ ( -- )
setze_faltbarflag:
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_0 & ~Flag_visible
    36f4:	f847 6d04 	str.w	r6, [r7, #-4]!
    36f8:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:333
  b.n setflags
    36fa:	e0db      	b.n	38b4 <Code_830>

000036fc <Dictionary_799>:
Dictionary_799():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:333
    36fc:	00003716 	.word	0x00003716
    3700:	310a0050 	.word	0x310a0050
    3704:	6c6f662d 	.word	0x6c6f662d
    3708:	6c626164 	.word	0x6c626164
    370c:	65          	.byte	0x65
	...

0000370e <Code_799>:
Code_799():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:338

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "1-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_1 & ~Flag_visible
    370e:	f847 6d04 	str.w	r6, [r7, #-4]!
    3712:	2641      	movs	r6, #65	; 0x41
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:339
  b.n setflags
    3714:	e0ce      	b.n	38b4 <Code_830>

00003716 <Dictionary_802>:
Dictionary_802():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:339
    3716:	3730      	.short	0x3730
    3718:	00500000 	.word	0x00500000
    371c:	662d320a 	.word	0x662d320a
    3720:	61646c6f 	.word	0x61646c6f
    3724:	6c62      	.short	0x6c62
    3726:	65          	.byte	0x65
	...

00003728 <Code_802>:
Code_802():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:344

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "2-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_2 & ~Flag_visible
    3728:	f847 6d04 	str.w	r6, [r7, #-4]!
    372c:	2642      	movs	r6, #66	; 0x42
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:345
  b.n setflags
    372e:	e0c1      	b.n	38b4 <Code_830>

00003730 <Dictionary_805>:
Dictionary_805():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:345
    3730:	0000374a 	.word	0x0000374a
    3734:	330a0050 	.word	0x330a0050
    3738:	6c6f662d 	.word	0x6c6f662d
    373c:	6c626164 	.word	0x6c626164
    3740:	65          	.byte	0x65
	...

00003742 <Code_805>:
Code_805():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:350

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "3-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_3 & ~Flag_visible
    3742:	f847 6d04 	str.w	r6, [r7, #-4]!
    3746:	2643      	movs	r6, #67	; 0x43
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:351
  b.n setflags
    3748:	e0b4      	b.n	38b4 <Code_830>

0000374a <Dictionary_808>:
Dictionary_808():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:351
    374a:	3764      	.short	0x3764
    374c:	00500000 	.word	0x00500000
    3750:	662d340a 	.word	0x662d340a
    3754:	61646c6f 	.word	0x61646c6f
    3758:	6c62      	.short	0x6c62
    375a:	65          	.byte	0x65
	...

0000375c <Code_808>:
Code_808():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:356

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "4-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_4 & ~Flag_visible
    375c:	f847 6d04 	str.w	r6, [r7, #-4]!
    3760:	2644      	movs	r6, #68	; 0x44
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:357
  b.n setflags
    3762:	e0a7      	b.n	38b4 <Code_830>

00003764 <Dictionary_811>:
Dictionary_811():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:357
    3764:	0000377e 	.word	0x0000377e
    3768:	350a0050 	.word	0x350a0050
    376c:	6c6f662d 	.word	0x6c6f662d
    3770:	6c626164 	.word	0x6c626164
    3774:	65          	.byte	0x65
	...

00003776 <Code_811>:
Code_811():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:362

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "5-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_5 & ~Flag_visible
    3776:	f847 6d04 	str.w	r6, [r7, #-4]!
    377a:	2645      	movs	r6, #69	; 0x45
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:363
  b.n setflags
    377c:	e09a      	b.n	38b4 <Code_830>

0000377e <Dictionary_814>:
Dictionary_814():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:363
    377e:	3798      	.short	0x3798
    3780:	00500000 	.word	0x00500000
    3784:	662d360a 	.word	0x662d360a
    3788:	61646c6f 	.word	0x61646c6f
    378c:	6c62      	.short	0x6c62
    378e:	65          	.byte	0x65
	...

00003790 <Code_814>:
Code_814():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:368

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "6-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_6 & ~Flag_visible
    3790:	f847 6d04 	str.w	r6, [r7, #-4]!
    3794:	2646      	movs	r6, #70	; 0x46
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:369
  b.n setflags
    3796:	e08d      	b.n	38b4 <Code_830>

00003798 <Dictionary_817>:
Dictionary_817():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:369
    3798:	000037b2 	.word	0x000037b2
    379c:	370a0050 	.word	0x370a0050
    37a0:	6c6f662d 	.word	0x6c6f662d
    37a4:	6c626164 	.word	0x6c626164
    37a8:	65          	.byte	0x65
	...

000037aa <Code_817>:
Code_817():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:374

@ -----------------------------------------------------------------------------
  Wortbirne Flag_immediate|Flag_foldable_0, "7-foldable" @ ( -- )
@ -----------------------------------------------------------------------------
  pushdaconst Flag_foldable_7 & ~Flag_visible
    37aa:	f847 6d04 	str.w	r6, [r7, #-4]!
    37ae:	2647      	movs	r6, #71	; 0x47
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:375
  b.n setflags
    37b0:	e080      	b.n	38b4 <Code_830>

000037b2 <Dictionary_820>:
Dictionary_820():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:375
    37b2:	37e2      	.short	0x37e2
    37b4:	00000000 	.word	0x00000000
    37b8:	6e6f6308 	.word	0x6e6f6308
    37bc:	6e617473 	.word	0x6e617473
    37c0:	74          	.byte	0x74
	...

000037c2 <Code_820>:
Code_820():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:380

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "constant" @ ( n -- )
@ -----------------------------------------------------------------------------
  push {lr}
    37c2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:381
  bl create
    37c4:	f000 fa5a 	bl	3c7c <Code_886>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:382
1:bl literalkomma
    37c8:	f7ff fe0e 	bl	33e8 <Code_735>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:383
  pushdaconstw 0x4770 @ Opcode for bx lr
    37cc:	f847 6d04 	str.w	r6, [r7, #-4]!
    37d0:	f244 7670 	movw	r6, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:384
  bl hkomma
    37d4:	f000 f8e4 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:385
  bl setze_faltbarflag
    37d8:	f7ff ff8c 	bl	36f4 <Code_796>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:386
  bl smudge
    37dc:	f000 f837 	bl	384e <Code_825>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:387
  pop {pc}
    37e0:	bd00      	pop	{pc}

000037e2 <Dictionary_823>:
Dictionary_823():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:387
    37e2:	3840      	.short	0x3840
    37e4:	00000000 	.word	0x00000000
    37e8:	6f633209 	.word	0x6f633209
    37ec:	6174736e 	.word	0x6174736e
    37f0:	746e      	.short	0x746e

000037f2 <Code_823>:
Code_823():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:392

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "2constant" @ ( n -- )
@ -----------------------------------------------------------------------------
  push {lr}
    37f2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:393
  bl create
    37f4:	f000 fa42 	bl	3c7c <Code_886>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:394
  swap
    37f8:	6839      	ldr	r1, [r7, #0]
    37fa:	603e      	str	r6, [r7, #0]
    37fc:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:395
  bl literalkomma
    37fe:	f7ff fdf3 	bl	33e8 <Code_735>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:396
  b.n 1b
    3802:	e7e1      	b.n	37c8 <Code_820+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:227
  ldr tos, =0xf2400000 @ Opcode movw r0, #0
    3804:	f2400000 	.word	0xf2400000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:259
  ldr tos, =0xf2c00000 @ Opcode movt r0, #0
    3808:	f2c00000 	.word	0xf2c00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:313
    ldr r0, =0xF05F0000 @ movs r0, #imm12 Opcode
    380c:	f05f0000 	.word	0xf05f0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:327
    ldr r0, =0xF07F0000 @ mvns r0, #imm12 Opcode
    3810:	f07f0000 	.word	0xf07f0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:437
  ldr r1, =0xFFC00001   @ 21 Bits frei
    3814:	ffc00001 	.word	0xffc00001
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:442
  ldr r2, =0xFFC00000
    3818:	ffc00000 	.word	0xffc00000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:460
    ldr r0, =0xF000F800  @ Opcode-Template
    381c:	f000f800 	.word	0xf000f800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:597
      ldr r2, =Dictionarypointer
    3820:	2001ffd0 	.word	0x2001ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/codegenerator-m3.s:600
  ldr r1, =Einsprungpunkt @ Get the address the long call has to be inserted.
    3824:	2000000c 	.word	0x2000000c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:60
  ldr tos, =kompilator
    3828:	00004bfa 	.word	0x00004bfa
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:189
  ldr tos, =state
    382c:	2001ffd8 	.word	0x2001ffd8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:217
  ldr r0, =Datenstacksicherung @ Setzt den Füllstand des Datenstacks zur Probe.
    3830:	20000008 	.word	0x20000008
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:230
    ldr r0, =inline_cache_count
    3834:	20000054 	.word	0x20000054
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:259
  ldr r1, =stack_canary @ Stackintegrität prüfen.
    3838:	04121985 	.word	0x04121985
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:263
    ldr tos, =dots+10 @ Fehlermeldung vorbereiten.
    383c:	00002fc6 	.word	0x00002fc6

00003840 <Dictionary_825>:
Dictionary_825():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler.s:263
    3840:	000038a4 	.word	0x000038a4
    3844:	73060000 	.word	0x73060000
    3848:	6764756d 	.word	0x6764756d
    384c:	65          	.byte	0x65
	...

0000384e <Code_825>:
smudge():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:28

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "smudge" @ ( -- )
smudge:
@ -----------------------------------------------------------------------------
  push {lr}
    384e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:30

  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
    3850:	48f9      	ldr	r0, [pc, #996]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:31
  ldr r1, [r0]
    3852:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:33

  ldr r2, =Backlinkgrenze
    3854:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:34
  cmp r1, r2
    3858:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:36
.ifdef above_ram
  blo.n smudge_ram
    385a:	d31c      	bcc.n	3896 <smudge_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:53
    @ Check if there is $FFFF at the end of the definition.
    @ That must not be ! It would be detected as free space on next Reset and simply overwritten.
    @ To prevent it a zero is applied at the end in this case.

    @ r1 enthält den DictionaryPointer.  r1 already contains Dictionarypointer
    subs r1, #2
    385c:	3902      	subs	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:54
    ldrh r2, [r1]
    385e:	880a      	ldrh	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:55
    ldr r3, =erasedhalfword
    3860:	f64f 73ff 	movw	r3, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:56
    cmp r2, r3
    3864:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:57
    bne 1f
    3866:	d105      	bne.n	3874 <Code_825+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:59
      @ writeln "Füge in Smudge eine Enderkennungs-Null ein."
      pushdatos
    3868:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:60
      ldr tos, =writtenhalfword
    386c:	f04f 0600 	mov.w	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:61
      bl hkomma
    3870:	f000 f896 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:64
1:  @ Okay, Ende gut, alles gut. Fine :-)

    bl align4komma @ Align on 4 to make sure the last opcode is actually written to Flash and to fullfill ANS requirement.
    3874:	f000 f85c 	bl	3930 <Code_837>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:79
    .ifdef flash32bytesblockwrite
      bl align32komma
    .endif

    @ Brenne die gesammelten Flags:  Flash in the collected Flags:
    ldr r0, =FlashFlags
    3878:	48f0      	ldr	r0, [pc, #960]	; (3c3c <Code_885+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:80
    ldr r0, [r0]
    387a:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:81
    pushda r0
    387c:	f847 6d04 	str.w	r6, [r7, #-4]!
    3880:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:83

    ldr r1, =Fadenende
    3882:	49ef      	ldr	r1, [pc, #956]	; (3c40 <Code_885+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:84
    ldr r1, [r1]
    3884:	6809      	ldr	r1, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:85
    adds r1, #4 @ Skip Link field
    3886:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:89

    @ Dictionary-Pointer verbiegen:  Change Dictionarypointer for flashing Flags in (saves code size)
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
    3888:	4aeb      	ldr	r2, [pc, #940]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:90
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren  Keep old pointer !
    388a:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:92

      str r1, [r2] @ Dictionarypointer umbiegen  Change pointer
    388c:	6011      	str	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:93
      bl hkomma    @ Flags einfügen              Insert Flags
    388e:	f000 f887 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:94
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen.
    3892:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:101

    .ifdef flushflash
      bl flushflash
    .endif

    pop {pc}
    3894:	bd00      	pop	{pc}

00003896 <smudge_ram>:
smudge_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:106

  @ -----------------------------------------------------------------------------
  @ Smudge for RAM
smudge_ram:
  bl align4komma @ Align on 4 to fullfill ANS requirement.
    3896:	f000 f84b 	bl	3930 <Code_837>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:108

  pushdatos
    389a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:109
  ldr tos, =Flag_visible
    389e:	f04f 0600 	mov.w	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:111

  b.n setflags_intern
    38a2:	e008      	b.n	38b6 <setflags_intern>

000038a4 <Dictionary_830>:
Dictionary_830():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:111
    38a4:	000038ec 	.word	0x000038ec
    38a8:	73080000 	.word	0x73080000
    38ac:	6c667465 	.word	0x6c667465
    38b0:	6761      	.short	0x6761
    38b2:	73          	.byte	0x73
	...

000038b4 <Code_830>:
setflags():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:118
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "setflags" @ ( x -- )
setflags: @ Setflags collects the Flags if compiling for Flash, because we can write Flash field only once.
          @ For RAM, the bits are simply set directly.
@ -----------------------------------------------------------------------------
  push {lr}
    38b4:	b500      	push	{lr}

000038b6 <setflags_intern>:
setflags_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:121

setflags_intern:
  ldr r0, =Dictionarypointer
    38b6:	48e0      	ldr	r0, [pc, #896]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:122
  ldr r1, [r0]
    38b8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:124

  ldr r2, =Backlinkgrenze
    38ba:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:125
  cmp r1, r2
    38be:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:127
.ifdef above_ram
  blo.n setflags_ram @ Befinde mich im Ram. Schalte um !
    38c0:	d305      	bcc.n	38ce <setflags_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:134
  bhs.n setflags_ram @ Befinde mich im Ram. Schalte um !
.endif

  @ -----------------------------------------------------------------------------
  @ Setflags for Flash
  ldr r0, =FlashFlags
    38c2:	48de      	ldr	r0, [pc, #888]	; (3c3c <Code_885+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:135
  ldr r1, [r0]
    38c4:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:136
  orrs r1, tos  @ Flashflags beginnt von create aus immer mit "Sichtbar" = 0.
    38c6:	4331      	orrs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:137
  str r1, [r0]
    38c8:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:138
  drop
    38ca:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:139
  pop {pc}
    38cc:	bd00      	pop	{pc}

000038ce <setflags_ram>:
setflags_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:146
  @ -----------------------------------------------------------------------------
  @ Setflags for RAM
setflags_ram:

  @ Eigentlich ganz einfach im Ram:
  popda r2
    38ce:	0032      	movs	r2, r6
    38d0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:148
  @ Hole die Flags des aktuellen Wortes   Fetch flags of current definition
  ldr r0, =Fadenende @ Current definition
    38d2:	48db      	ldr	r0, [pc, #876]	; (3c40 <Code_885+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:149
  ldr r0, [r0]
    38d4:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:150
  adds r0, #4 @ Skip Link field
    38d6:	3004      	adds	r0, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:152

  ldrh r1, [r0] @ Flags des zuletzt definierten Wortes holen  Fetch its Flags
    38d8:	8801      	ldrh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:153
  ldr r3, =0xFFFF
    38da:	f64f 73ff 	movw	r3, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:154
  cmp r1, r3
    38de:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:156

  bne 1f
    38e0:	d101      	bne.n	38e6 <setflags_ram+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:157
  movs r1, r2 @ Direkt setzen, falls an der Stelle noch -1 steht  Set directly, if there are no Flags before
    38e2:	0011      	movs	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:158
  b 2f
    38e4:	e000      	b.n	38e8 <setflags_ram+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:159
1:orrs r1, r2 @ Hinzuverodern, falls schon Flags da sind          If there already are Flags, OR them together.
    38e6:	4311      	orrs	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:162
2:

  strh r1, [r0]
    38e8:	8001      	strh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:163
  pop {pc}
    38ea:	bd00      	pop	{pc}

000038ec <Dictionary_833>:
Dictionary_833():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:163
    38ec:	00003902 	.word	0x00003902
    38f0:	61070041 	.word	0x61070041
    38f4:	6e67696c 	.word	0x6e67696c
    38f8:	6465      	.short	0x6465

000038fa <Code_833>:
Code_833():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:168

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_foldable_1, "aligned" @ ( c-addr -- a-addr )
@ -----------------------------------------------------------------------------
  adds r6, #3
    38fa:	3603      	adds	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:169
  movs r0, #3
    38fc:	2003      	movs	r0, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:170
  bics r6, r0
    38fe:	4386      	bics	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:171
  bx lr
    3900:	4770      	bx	lr

00003902 <Dictionary_834>:
Dictionary_834():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:171
    3902:	3924      	.short	0x3924
    3904:	00000000 	.word	0x00000000
    3908:	6c616806 	.word	0x6c616806
    390c:	6769      	.short	0x6769
    390e:	6e          	.byte	0x6e
	...

00003910 <Code_834>:
Code_834():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:182
  .ifdef charkommaavailable
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "halign" @ ( -- )
alignkomma: @ Macht den Dictionarypointer gerade
@ -----------------------------------------------------------------------------
  ldr r0, =Dictionarypointer
    3910:	48c9      	ldr	r0, [pc, #804]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:183
  ldr r1, [r0] @ Hole den Dictionarypointer
    3912:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:185

  movs r0, #1
    3914:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:186
  ands r1, r0
    3916:	4001      	ands	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:187
  beq 1f
    3918:	d003      	beq.n	3922 <Code_834+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:189

  pushdaconst writtenbyte
    391a:	f847 6d04 	str.w	r6, [r7, #-4]!
    391e:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:190
  b.n ckomma
    3920:	e01a      	b.n	3958 <Code_839>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:193

1: @ Fertig.
  bx lr
    3922:	4770      	bx	lr

00003924 <Dictionary_837>:
Dictionary_837():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:193
    3924:	0000394e 	.word	0x0000394e
    3928:	61050000 	.word	0x61050000
    392c:	6e67696c 	.word	0x6e67696c

00003930 <Code_837>:
align4komma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:200

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "align" @ ( -- )
align4komma: @ Macht den Dictionarypointer auf 4 gerade
@ -----------------------------------------------------------------------------
  push {lr}
    3930:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:203

  .ifdef charkommaavailable
  bl alignkomma
    3932:	f7ff ffed 	bl	3910 <Code_834>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:206
  .endif

  ldr r0, =Dictionarypointer
    3936:	48c0      	ldr	r0, [pc, #768]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:207
  ldr r1, [r0] @ Hole den Dictionarypointer
    3938:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:209

  movs r0, #2
    393a:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:210
  ands r1, r0
    393c:	4001      	ands	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:212

  beq 1f
    393e:	d005      	beq.n	394c <Code_837+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:214

    pushdatos
    3940:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:215
    ldr tos, =writtenhalfword
    3944:	f04f 0600 	mov.w	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:216
    bl hkomma
    3948:	f000 f82a 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:219

1: @ Fertig.
  pop {pc}
    394c:	bd00      	pop	{pc}

0000394e <Dictionary_839>:
Dictionary_839():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:219
    394e:	3996      	.short	0x3996
    3950:	00000000 	.word	0x00000000
    3954:	6302      	.short	0x6302
    3956:	2c          	.byte	0x2c
	...

00003958 <Code_839>:
ckomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:294
  .ifdef charkommaavailable
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "c," @ ( x -- )
ckomma:  @ Fügt 8 Bits an das Dictionary an.
@ -----------------------------------------------------------------------------
  push {lr}
    3958:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:295
  ldr r0, =Dictionarypointer
    395a:	48b7      	ldr	r0, [pc, #732]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:296
  ldr r1, [r0] @ Hole den Dictionarypointer
    395c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:298

  ldr r2, =Backlinkgrenze
    395e:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:299
  cmp r1, r2
    3962:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:301
.ifdef above_ram
  blo.n ckomma_ram @ Befinde mich im Ram. Schalte um !
    3964:	d305      	bcc.n	3972 <ckomma_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:307
.else
  bhs.n ckomma_ram @ Befinde mich im Ram. Schalte um !
.endif

  @ ckomma for Flash:
  pushda r1 @ Adresse auch auf den Stack
    3966:	f847 6d04 	str.w	r6, [r7, #-4]!
    396a:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:308
  bl c_flashkomma
    396c:	f7fe fc5f 	bl	222e <Code_458>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:309
  b.n ckomma_fertig
    3970:	e002      	b.n	3978 <ckomma_fertig>

00003972 <ckomma_ram>:
ckomma_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:312

ckomma_ram:
  popda r2 @ Inhalt holen
    3972:	0032      	movs	r2, r6
    3974:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:313
  strb r2, [r1] @ Schreibe das Halbword in das Dictionary
    3976:	700a      	strb	r2, [r1, #0]

00003978 <ckomma_fertig>:
ckomma_fertig():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:316

ckomma_fertig:
  pushdaconst 1
    3978:	f847 6d04 	str.w	r6, [r7, #-4]!
    397c:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:317
  bl allot
    397e:	f000 f87d 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:318
  pop {pc}
    3982:	bd00      	pop	{pc}

00003984 <nop_hkomma>:
nop_hkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:322
  .endif

nop_hkomma:
  pushdaconst 0x0036  @ nop = movs tos, tos
    3984:	f847 6d04 	str.w	r6, [r7, #-4]!
    3988:	2636      	movs	r6, #54	; 0x36
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:323
  b.n hkomma
    398a:	e009      	b.n	39a0 <Code_849>

0000398c <drop_hkomma>:
drop_hkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:326

drop_hkomma:
  pushdaconstw 0xcf40  @ Opcode for ldmia r7!, {r6} --> drop
    398c:	f847 6d04 	str.w	r6, [r7, #-4]!
    3990:	f64c 7640 	movw	r6, #53056	; 0xcf40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:327
  b.n hkomma
    3994:	e004      	b.n	39a0 <Code_849>

00003996 <Dictionary_849>:
Dictionary_849():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:327
    3996:	39dc      	.short	0x39dc
    3998:	00000000 	.word	0x00000000
    399c:	6802      	.short	0x6802
    399e:	2c          	.byte	0x2c
	...

000039a0 <Code_849>:
hkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:333

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "h," @ ( x -- )
hkomma: @ Fügt 16 Bits an das Dictionary an.
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    39a0:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:334
  uxth tos, tos @ Mask low 16 Bits, just in case.
    39a2:	b2b6      	uxth	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:341
  @ dup
  @ bl hexdot

  .ifdef registerallocator
    @ Schon geschriebene Opcodes zählen !
    ldr r0, =state
    39a4:	48a7      	ldr	r0, [pc, #668]	; (3c44 <Code_885+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:342
    ldr r1, [r0]
    39a6:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:343
    cmp r1, #0        @ Nicht aus dem Execute-Zustand herausschalten
    39a8:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:344
    beq 1f
    39aa:	d002      	beq.n	39b2 <Code_849+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:345
    adds r1, #1
    39ac:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:346
    beq 1f            @ Das normale True-Flag nicht erhöhen :-)
    39ae:	d000      	beq.n	39b2 <Code_849+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:347
      str r1, [r0]
    39b0:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:351
1:
  .endif

  ldr r0, =Dictionarypointer @ Fetch Dictionarypointer to decide if compiling for RAM or for Flash
    39b2:	48a1      	ldr	r0, [pc, #644]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:352
  ldr r1, [r0] @ Hole den Dictionarypointer
    39b4:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:357
  .ifdef within_os
  push {r1}                  @ Remember Dictionarypointer for cacheflush
  .endif

  ldr r2, =Backlinkgrenze
    39b6:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:358
  cmp r1, r2
    39ba:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:360
.ifdef above_ram
  blo.n hkomma_ram @ Befinde mich im Ram. Schalte um !
    39bc:	d305      	bcc.n	39ca <hkomma_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:366
.else
  bhs.n hkomma_ram @ Befinde mich im Ram. Schalte um !
.endif

  @ hkomma for Flash:
  pushda r1 @ Adresse auch auf den Stack  Put target address on datastack, too !
    39be:	f847 6d04 	str.w	r6, [r7, #-4]!
    39c2:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:367
  bl h_flashkomma
    39c4:	f7fe fbf2 	bl	21ac <Code_455>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:369

  b.n hkomma_fertig
    39c8:	e002      	b.n	39d0 <hkomma_fertig>

000039ca <hkomma_ram>:
hkomma_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:372

hkomma_ram: @ Simply write directly if compiling for RAM.
  popda r2 @ Inhalt holen
    39ca:	0032      	movs	r2, r6
    39cc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:373
  strh r2, [r1] @ Schreibe das Halbword in das Dictionary
    39ce:	800a      	strh	r2, [r1, #0]

000039d0 <hkomma_fertig>:
hkomma_fertig():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:376

hkomma_fertig:
  pushdaconst 2
    39d0:	f847 6d04 	str.w	r6, [r7, #-4]!
    39d4:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:377
  bl allot
    39d6:	f000 f851 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:386
  pop {r6}
  pushdaconst 2 @ push length of area to be flushed
  bl cacheflush
  .endif

  pop {r0, r1, r2, r3, pc}
    39da:	bd0f      	pop	{r0, r1, r2, r3, pc}

000039dc <Dictionary_855>:
Dictionary_855():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:386
    39dc:	000039f6 	.word	0x000039f6
    39e0:	2c010000 	.word	0x2c010000

000039e4 <Code_855>:
Code_855():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:393

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "," @ ( x -- )
komma: @ Fügt 32 Bits an das Dictionary an  Write 32 bits in Dictionary using 16 bit write access only.
@ -----------------------------------------------------------------------------
  push {r0, lr}
    39e4:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:394
1:dup
    39e6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:395
  bl hkomma @ Low-Teil zuerst - Little Endian ! Außerdem stimmen so die Linkfelder.
    39ea:	f7ff ffd9 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:397

  lsrs tos, #16 @ High-Teil danach
    39ee:	0c36      	lsrs	r6, r6, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:398
  bl hkomma
    39f0:	f7ff ffd6 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:399
  pop {r0, pc}
    39f4:	bd01      	pop	{r0, pc}

000039f6 <Dictionary_858>:
Dictionary_858():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:399
    39f6:	3a08      	.short	0x3a08
    39f8:	00000000 	.word	0x00000000
    39fc:	2c3c3e03 	.word	0x2c3c3e03

00003a00 <Code_858>:
reversekomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:405

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "><," @ ( x -- )
reversekomma: @ Fügt 32 Bits an das Dictionary an   Write 32 bits in Dictionary using 16 bit write access only, but reverse high and low order before.
@ -----------------------------------------------------------------------------
  push {r0, lr}
    3a00:	b501      	push	{r0, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:406
  movs r0, #16
    3a02:	2010      	movs	r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:407
  rors r6, r0  @ Swap halfwords
    3a04:	41c6      	rors	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:408
  b 1b
    3a06:	e7ee      	b.n	39e6 <Code_855+0x2>

00003a08 <Dictionary_859>:
Dictionary_859():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:408
    3a08:	00003a70 	.word	0x00003a70
    3a0c:	73070000 	.word	0x73070000
    3a10:	6e697274 	.word	0x6e697274
    3a14:	2c67      	.short	0x2c67

00003a16 <Code_859>:
stringkomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:414

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "string," @ ( c-addr length -- )
stringkomma: @ Fügt ein String an das Dictionary an  Write a string in Dictionary.
@ -----------------------------------------------------------------------------
   push {r0, r1, r2, lr}
    3a16:	b507      	push	{r0, r1, r2, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:422
   @ write "string, : >"
   @ ddup
   @ bl stype
   @ writeln "<"

   movs r1, #0xFF @ Maximum counted string length
    3a18:	21ff      	movs	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:423
   ands r1, tos   @ Fetch string length
    3a1a:	4031      	ands	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:424
   drop
    3a1c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:425
   popda r0 @ Fetch string address
    3a1e:	0030      	movs	r0, r6
    3a20:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:427

   cmp r1, #0 @ Zero length string ?
    3a22:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:428
   bne 1f
    3a24:	d105      	bne.n	3a32 <Code_859+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:430

     pushdaconst 0
    3a26:	f847 6d04 	str.w	r6, [r7, #-4]!
    3a2a:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:431
     bl hkomma
    3a2c:	f7ff ffb8 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:432
     pop {r0, r1, r2, pc}
    3a30:	bd07      	pop	{r0, r1, r2, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:435

1: @ Write length byte and the first character.
   pushdatos
    3a32:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:436
   ldrb tos, [r0]
    3a36:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:437
   lsls tos, #8
    3a38:	0236      	lsls	r6, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:438
   orrs tos, r1
    3a3a:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:439
   bl hkomma
    3a3c:	f7ff ffb0 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:440
   adds r0, #1 @ Advance pointer
    3a40:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:441
   subs r1, #1 @ One character less left
    3a42:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:443

2: cmp r1, #2 @ Two or more characters left ?
    3a44:	2902      	cmp	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:444
   blo 3f
    3a46:	d30a      	bcc.n	3a5e <Code_859+0x48>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:446
   @ Write two characters.
   pushdatos
    3a48:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:447
   ldrb tos, [r0, #1]
    3a4c:	7846      	ldrb	r6, [r0, #1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:448
   lsls tos, #8
    3a4e:	0236      	lsls	r6, r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:449
   ldrb r2, [r0]
    3a50:	7802      	ldrb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:450
   orrs tos, r2
    3a52:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:451
   bl hkomma
    3a54:	f7ff ffa4 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:452
   adds r0, #2 @ Advance pointer
    3a58:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:453
   subs r1, #2 @ One character less left
    3a5a:	3902      	subs	r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:454
   b 2b
    3a5c:	e7f2      	b.n	3a44 <Code_859+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:457

3: @ One or zero characters left.
   cmp r1, #0
    3a5e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:458
   bne 4f
    3a60:	d100      	bne.n	3a64 <Code_859+0x4e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:459
     pop {r0, r1, r2, pc}
    3a62:	bd07      	pop	{r0, r1, r2, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:462

4: @ One character left
   pushdatos
    3a64:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:463
   ldrb tos, [r0]
    3a68:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:464
   bl hkomma
    3a6a:	f7ff ff99 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:465
   pop {r0, r1, r2, pc}
    3a6e:	bd07      	pop	{r0, r1, r2, pc}

00003a70 <Dictionary_867>:
Dictionary_867():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:465
    3a70:	00003ae0 	.word	0x00003ae0
    3a74:	61050000 	.word	0x61050000
    3a78:	746f6c6c 	.word	0x746f6c6c

00003a7c <Code_867>:
allot():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:472
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "allot" @ Erhöht den Dictionaryzeiger, schafft Platz !  Advance Dictionarypointer and check if there is enough space left for the requested amount.
allot:  @ Überprüft auch gleich, ob ich mich noch im Ram befinde.
        @ Ansonsten verweigtert Allot seinen Dienst.
@------------------------------------------------------------------------------
  ldr r0, =Dictionarypointer
    3a7c:	486e      	ldr	r0, [pc, #440]	; (3c38 <Code_885+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:473
  ldr r1, [r0]
    3a7e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:475

  ldr r2, =Backlinkgrenze
    3a80:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:476
  cmp r1, r2
    3a84:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:478
.ifdef above_ram
  blo.n allot_ram @ Befinde mich im Ram. Schalte um !
    3a86:	d314      	bcc.n	3ab2 <allot_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:484
.else
  bhs.n allot_ram @ Befinde mich im Ram. Schalte um !
.endif

  @ Allot-Flash:
  popda r2    @ Gewünschte Länge
    3a88:	0032      	movs	r2, r6
    3a8a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:485
  adds r1, r2  @ Pointer vorrücken
    3a8c:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:487

  ldr r2, =FlashDictionaryEnde
    3a8e:	4a6e      	ldr	r2, [pc, #440]	; (3c48 <Code_885+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:489

  cmp r1, r2
    3a90:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:490
  blo.n allot_ok
    3a92:	d323      	bcc.n	3adc <allot_ok>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:491
    Fehler_Quit "Flash full"
    3a94:	f7ff f9fe 	bl	2e94 <dotgaensefuesschen>
    3a98:	5b1b1515 	.word	0x5b1b1515
    3a9c:	466d3133 	.word	0x466d3133
    3aa0:	6873616c 	.word	0x6873616c
    3aa4:	6c756620 	.word	0x6c756620
    3aa8:	305b1b6c 	.word	0x305b1b6c
    3aac:	0a6d      	.short	0x0a6d
    3aae:	f001 ba3b 	b.w	4f28 <Code_1230>

00003ab2 <allot_ram>:
allot_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:495

  @ Allot-Ram:
allot_ram:
  popda r2    @ Gewünschte Länge
    3ab2:	0032      	movs	r2, r6
    3ab4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:496
  adds r1, r2  @ Pointer vorrücken
    3ab6:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:499

@ ldr r2, =RamDictionaryEnde
  ldr r2, =VariablenPointer  @ Am Ende des RAMs liegen die Variablen. Diese sind die Ram-Voll-Grenze...
    3ab8:	4a64      	ldr	r2, [pc, #400]	; (3c4c <Code_885+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:500
  ldr r2, [r2]               @ There are variables defined in Flash at the end of RAM. Don't overwrite them !
    3aba:	6812      	ldr	r2, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:502

  cmp r1, r2
    3abc:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:503
  blo.n allot_ok
    3abe:	d30d      	bcc.n	3adc <allot_ok>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:504
    Fehler_Quit "Ram full"
    3ac0:	f7ff f9e8 	bl	2e94 <dotgaensefuesschen>
    3ac4:	5b1b1513 	.word	0x5b1b1513
    3ac8:	526d3133 	.word	0x526d3133
    3acc:	66206d61 	.word	0x66206d61
    3ad0:	1b6c6c75 	.word	0x1b6c6c75
    3ad4:	0a6d305b 	.word	0x0a6d305b
    3ad8:	f001 ba26 	b.w	4f28 <Code_1230>

00003adc <allot_ok>:
allot_ok():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:507

allot_ok: @ Alles paletti, es ist noch Platz da !  Everything is fine, just allot it !
  str r1, [r0]
    3adc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:508
  bx lr
    3ade:	4770      	bx	lr

00003ae0 <Dictionary_872>:
Dictionary_872():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:508
    3ae0:	00003afc 	.word	0x00003afc
    3ae4:	28080081 	.word	0x28080081
    3ae8:	6574616c 	.word	0x6574616c
    3aec:	7473      	.short	0x7473
    3aee:	29          	.byte	0x29
	...

00003af0 <Code_872>:
Code_872():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:514

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "(latest)" @ ( -- addr )
  CoreVariable Fadenende
@ -----------------------------------------------------------------------------
  pushdatos
    3af0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:515
  ldr r6, =Fadenende
    3af4:	4e56      	ldr	r6, [pc, #344]	; (3c50 <Code_885+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:516
  bx lr
    3af6:	4770      	bx	lr
    3af8:	000001e4 	.word	0x000001e4

00003afc <Dictionary_875>:
Dictionary_875():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:516
    3afc:	00003b14 	.word	0x00003b14
    3b00:	28040081 	.word	0x28040081
    3b04:	7064      	.short	0x7064
    3b06:	29          	.byte	0x29
	...

00003b08 <Code_875>:
Code_875():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:523

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "(dp)" @ ( -- addr )
  CoreVariable Dictionarypointer
@ -----------------------------------------------------------------------------
  pushdatos
    3b08:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:524
  ldr r6, =Dictionarypointer
    3b0c:	4e51      	ldr	r6, [pc, #324]	; (3c54 <Code_885+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:525
  bx lr
    3b0e:	4770      	bx	lr
    3b10:	20000388 	.word	0x20000388

00003b14 <Dictionary_878>:
Dictionary_878():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:525
    3b14:	00003b38 	.word	0x00003b38
    3b18:	66090000 	.word	0x66090000
    3b1c:	6567726f 	.word	0x6567726f
    3b20:	6d617274 	.word	0x6d617274

00003b24 <Code_878>:
Code_878():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:535
@ A small check takes care of the case if you are already in the memory you request.

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "forgetram"
@ -----------------------------------------------------------------------------
  push {lr}
    3b24:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:536
  bl compiletoram
    3b26:	f000 f824 	bl	3b72 <Code_881>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:539
    @ Dictionarypointer ins RAM setzen
    @ Set dictionary pointer into RAM first
    ldr r0, =Dictionarypointer
    3b2a:	484a      	ldr	r0, [pc, #296]	; (3c54 <Code_885+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:540
    ldr r1, =RamDictionaryAnfang
    3b2c:	494a      	ldr	r1, [pc, #296]	; (3c58 <Code_885+0x36>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:541
    str r1, [r0]
    3b2e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:545

    @ Fadenende fürs RAM vorbereiten
    @ Set latest for RAM
    ldr r0, =Fadenende
    3b30:	4847      	ldr	r0, [pc, #284]	; (3c50 <Code_885+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:546
    ldr r1, =CoreDictionaryAnfang
    3b32:	494a      	ldr	r1, [pc, #296]	; (3c5c <Code_885+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:547
    str r1, [r0]
    3b34:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:548
  pop {pc}
    3b36:	bd00      	pop	{pc}

00003b38 <Dictionary_879>:
Dictionary_879():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:548
    3b38:	00003b5e 	.word	0x00003b5e
    3b3c:	630d0000 	.word	0x630d0000
    3b40:	69706d6f 	.word	0x69706d6f
    3b44:	6f74656c 	.word	0x6f74656c
    3b48:	3f6d6172 	.word	0x3f6d6172

00003b4c <Code_879>:
Code_879():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:553

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compiletoram?"
@ -----------------------------------------------------------------------------
  pushdatos
    3b4c:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:556

  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
    3b50:	4840      	ldr	r0, [pc, #256]	; (3c54 <Code_885+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:557
  ldr r0, [r0]
    3b52:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:559

  ldr r1, =Backlinkgrenze
    3b54:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:560
  cmp r0, r1
    3b58:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:562

  sbcs tos, tos
    3b5a:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:568

  .ifndef above_ram
    mvns tos, tos
  .endif

  bx lr
    3b5c:	4770      	bx	lr

00003b5e <Dictionary_881>:
Dictionary_881():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:568
    3b5e:	3b80      	.short	0x3b80
    3b60:	00000000 	.word	0x00000000
    3b64:	6d6f630c 	.word	0x6d6f630c
    3b68:	656c6970 	.word	0x656c6970
    3b6c:	61726f74 	.word	0x61726f74
    3b70:	6d          	.byte	0x6d
	...

00003b72 <Code_881>:
compiletoram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:575
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compiletoram"
compiletoram:
@ -----------------------------------------------------------------------------
  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
    3b72:	4838      	ldr	r0, [pc, #224]	; (3c54 <Code_885+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:576
  ldr r0, [r0]
    3b74:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:578

  ldr r1, =Backlinkgrenze
    3b76:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:579
  cmp r0, r1
    3b7a:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:581
.ifdef above_ram
  bhs.n Zweitpointertausch @ Befinde mich im Flash. Schalte um !
    3b7c:	d212      	bcs.n	3ba4 <Zweitpointertausch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:585
.else
  blo.n Zweitpointertausch @ Befinde mich im Flash. Schalte um !
.endif
  bx lr
    3b7e:	4770      	bx	lr

00003b80 <Dictionary_882>:
Dictionary_882():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:585
    3b80:	00003bf6 	.word	0x00003bf6
    3b84:	630e0000 	.word	0x630e0000
    3b88:	69706d6f 	.word	0x69706d6f
    3b8c:	6f74656c 	.word	0x6f74656c
    3b90:	73616c66 	.word	0x73616c66
    3b94:	68          	.byte	0x68
	...

00003b96 <Code_882>:
Code_882():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:592
@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "compiletoflash"
compiletoflash:
@ -----------------------------------------------------------------------------
  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
    3b96:	482f      	ldr	r0, [pc, #188]	; (3c54 <Code_885+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:593
  ldr r0, [r0]
    3b98:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:595

  ldr r1, =Backlinkgrenze
    3b9a:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:596
  cmp r0, r1
    3b9e:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:598
.ifdef above_ram
  blo.n Zweitpointertausch @ Befinde mich im Ram. Schalte um !
    3ba0:	d300      	bcc.n	3ba4 <Zweitpointertausch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:602
.else
  bhs.n Zweitpointertausch @ Befinde mich im Ram. Schalte um !
.endif
  bx lr
    3ba2:	4770      	bx	lr

00003ba4 <Zweitpointertausch>:
Zweitpointertausch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:606


Zweitpointertausch:
  ldr r0, =Fadenende
    3ba4:	482a      	ldr	r0, [pc, #168]	; (3c50 <Code_885+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:607
  ldr r1, =ZweitFadenende
    3ba6:	492e      	ldr	r1, [pc, #184]	; (3c60 <Code_885+0x3e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:608
  ldr r2, [r0]
    3ba8:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:609
  ldr r3, [r1]
    3baa:	680b      	ldr	r3, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:610
  str r2, [r1]
    3bac:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:611
  str r3, [r0]
    3bae:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:613

  ldr r0, =Dictionarypointer
    3bb0:	4828      	ldr	r0, [pc, #160]	; (3c54 <Code_885+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:614
  ldr r1, =ZweitDictionaryPointer
    3bb2:	492c      	ldr	r1, [pc, #176]	; (3c64 <Code_885+0x42>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:615
  ldr r2, [r0]
    3bb4:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:616
  ldr r3, [r1]
    3bb6:	680b      	ldr	r3, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:617
  str r2, [r1]
    3bb8:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:618
  str r3, [r0]
    3bba:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:626
  @ Der muss immer unterhalb des VariablenPointers sein !
  @ Compare Dictionarypointer to Variablepointer and give warning if they collide.
  @ That happens if your already have a lot of definitions in RAM,
  @ then define a lot of variables in Flash and then switch back for compiling to RAM.

  ldr r0, =VariablenPointer
    3bbc:	4823      	ldr	r0, [pc, #140]	; (3c4c <Code_885+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:627
  ldr r0, [r0]
    3bbe:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:628
  cmp r3, r0
    3bc0:	4283      	cmp	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:629
  blo 1f
    3bc2:	d317      	bcc.n	3bf4 <Zweitpointertausch+0x50>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:633
.ifdef above_ram
  @ Falls der Flash über dem RAM liegt wird immer ein DictionaryPointer über dem VariablenPointer sein.
  @ If the flash is above the RAM one of the dictionary pointers will always be above than the VariablePointer.
  cmp r2, r0
    3bc4:	4282      	cmp	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:634
  blo 1f
    3bc6:	d315      	bcc.n	3bf4 <Zweitpointertausch+0x50>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:636
.endif
   push {lr}
    3bc8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:637
   writeln " Variables collide with dictionary"
    3bca:	f7ff f963 	bl	2e94 <dotgaensefuesschen>
    3bce:	2023      	.short	0x2023
    3bd0:	69726156 	.word	0x69726156
    3bd4:	656c6261 	.word	0x656c6261
    3bd8:	6f632073 	.word	0x6f632073
    3bdc:	64696c6c 	.word	0x64696c6c
    3be0:	69772065 	.word	0x69772065
    3be4:	64206874 	.word	0x64206874
    3be8:	69746369 	.word	0x69746369
    3bec:	72616e6f 	.word	0x72616e6f
    3bf0:	0a79      	.short	0x0a79
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:638
   pop {pc}
    3bf2:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:640

1:bx lr
    3bf4:	4770      	bx	lr

00003bf6 <Dictionary_884>:
Dictionary_884():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:640
    3bf6:	3c10      	.short	0x3c10
    3bf8:	00000000 	.word	0x00000000
    3bfc:	6464610c 	.word	0x6464610c
    3c00:	666e6972 	.word	0x666e6972
    3c04:	6873616c 	.word	0x6873616c
    3c08:	3f          	.byte	0x3f
	...

00003c0a <Code_884>:
Code_884():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:645

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "addrinflash?" @ ( a-addr -- a-addr ) Permanent memory there ?
@ -----------------------------------------------------------------------------
  ldr r0, =CoreDictionaryAnfang
    3c0a:	4814      	ldr	r0, [pc, #80]	; (3c5c <Code_885+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:646
  ldr r1, =FlashDictionaryEnde
    3c0c:	490e      	ldr	r1, [pc, #56]	; (3c48 <Code_885+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:647
  b.n 1f
    3c0e:	e00b      	b.n	3c28 <Code_885+0x6>

00003c10 <Dictionary_885>:
Dictionary_885():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:647
    3c10:	00003c6c 	.word	0x00003c6c
    3c14:	610a0000 	.word	0x610a0000
    3c18:	69726464 	.word	0x69726464
    3c1c:	6d61726e 	.word	0x6d61726e
    3c20:	3f          	.byte	0x3f
	...

00003c22 <Code_885>:
Code_885():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:652

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "addrinram?" @ ( a-addr -- a-addr ) Volatile memory there ?
@ -----------------------------------------------------------------------------
  ldr r0, =RamAnfang
    3c22:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:653
  ldr r1, =RamEnde
    3c26:	4910      	ldr	r1, [pc, #64]	; (3c68 <Code_885+0x46>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:655

1:cmp tos, r0
    3c28:	4286      	cmp	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:656
  blo 2f
    3c2a:	d302      	bcc.n	3c32 <Code_885+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:657
  cmp tos, r1
    3c2c:	428e      	cmp	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:658
    sbcs tos, tos
    3c2e:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:659
    bx lr
    3c30:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:661

2:movs r6, 0
    3c32:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:662
  bx lr
    3c34:	4770      	bx	lr
    3c36:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:30
  ldr r0, =Dictionarypointer @ Check Dictionarypointer to decide if we are currently compiling for Flash or for RAM.
    3c38:	2001ffd0 	.word	0x2001ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:79
    ldr r0, =FlashFlags
    3c3c:	20000018 	.word	0x20000018
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:83
    ldr r1, =Fadenende
    3c40:	2001ffd4 	.word	0x2001ffd4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:341
    ldr r0, =state
    3c44:	2001ffd8 	.word	0x2001ffd8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:487
  ldr r2, =FlashDictionaryEnde
    3c48:	24080000 	.word	0x24080000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:499
  ldr r2, =VariablenPointer  @ Am Ende des RAMs liegen die Variablen. Diese sind die Ram-Voll-Grenze...
    3c4c:	2000001c 	.word	0x2000001c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:515
  ldr r6, =Fadenende
    3c50:	2001ffd4 	.word	0x2001ffd4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:524
  ldr r6, =Dictionarypointer
    3c54:	2001ffd0 	.word	0x2001ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:540
    ldr r1, =RamDictionaryAnfang
    3c58:	20000388 	.word	0x20000388
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:546
    ldr r1, =CoreDictionaryAnfang
    3c5c:	000001e4 	.word	0x000001e4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:607
  ldr r1, =ZweitFadenende
    3c60:	20000014 	.word	0x20000014
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:614
  ldr r1, =ZweitDictionaryPointer
    3c64:	20000010 	.word	0x20000010
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:653
  ldr r1, =RamEnde
    3c68:	20020000 	.word	0x20020000

00003c6c <Dictionary_886>:
Dictionary_886():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:653
    3c6c:	00003d76 	.word	0x00003d76
    3c70:	28080000 	.word	0x28080000
    3c74:	61657263 	.word	0x61657263
    3c78:	6574      	.short	0x6574
    3c7a:	29          	.byte	0x29
	...

00003c7c <Code_886>:
create():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:674
        @ erstellt einen neuen Kopf im Dictionary und verlinkt ihn.
        @ Fetch new token from buffer, create a new dictionary header and take care of links.
        @ Links are very different for RAM and Flash !
        @ As we can write Flash only once, freshly created definitions have no code at all.
@ -----------------------------------------------------------------------------
  push {lr}
    3c7c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:675
  bl token @ Hole den Namen der neuen Definition.  Fetch name for new definition.
    3c7e:	f000 fdc1 	bl	4804 <Code_1101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:678
  @ ( Tokenadresse Länge )

  cmp tos, #0     @ Check if token is empty. That happens if input buffer is empty after create.
    3c82:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:679
  bne 1f
    3c84:	d113      	bne.n	3cae <Code_886+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:681
    @ Token ist leer. Brauche Stacks nicht zu putzen.
    Fehler_Quit " Create needs name !"
    3c86:	f7ff f905 	bl	2e94 <dotgaensefuesschen>
    3c8a:	151f      	.short	0x151f
    3c8c:	31335b1b 	.word	0x31335b1b
    3c90:	7243206d 	.word	0x7243206d
    3c94:	65746165 	.word	0x65746165
    3c98:	65656e20 	.word	0x65656e20
    3c9c:	6e207364 	.word	0x6e207364
    3ca0:	20656d61 	.word	0x20656d61
    3ca4:	305b1b21 	.word	0x305b1b21
    3ca8:	0a6d      	.short	0x0a6d
    3caa:	f001 b93d 	b.w	4f28 <Code_1230>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:685

1:@ Tokenname ist okay.               Name is ok.
  @ Prüfe, ob er schon existiert.     Check if it already exists.
  ddup
    3cae:	6838      	ldr	r0, [r7, #0]
    3cb0:	f847 6d04 	str.w	r6, [r7, #-4]!
    3cb4:	3f04      	subs	r7, #4
    3cb6:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:687
  @ ( Tokenadresse Länge Tokenadresse Länge )
  bl find
    3cb8:	f000 f977 	bl	3faa <Code_933>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:689
  @ ( Tokenadresse Länge Einsprungadresse Flags )
  drop @ Benötige die Flags hier nicht. Möchte doch nur schauen, ob es das Wort schon gibt.  No need for the Flags...
    3cbc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:693
  @ ( Tokenadresse Länge Einsprungadresse )

  @ Prüfe, ob die Suche erfolgreich gewesen ist.  Do we have a search result ?
  cmp tos, #0
    3cbe:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:694
  drop
    3cc0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:696
  @ ( Tokenadresse Länge )
  beq 2f
    3cc2:	d016      	beq.n	3cf2 <Code_886+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:697
    ddup
    3cc4:	6838      	ldr	r0, [r7, #0]
    3cc6:	f847 6d04 	str.w	r6, [r7, #-4]!
    3cca:	3f04      	subs	r7, #4
    3ccc:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:701

  .ifdef color

    write "\x1B[33m Redefine "
    3cce:	f7ff f8e1 	bl	2e94 <dotgaensefuesschen>
    3cd2:	1b0f      	.short	0x1b0f
    3cd4:	6d33335b 	.word	0x6d33335b
    3cd8:	64655220 	.word	0x64655220
    3cdc:	6e696665 	.word	0x6e696665
    3ce0:	2065      	.short	0x2065
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:702
    bl stype @ Den neuen Tokennamen nochmal ausgeben
    3ce2:	f7ff f92b 	bl	2f3c <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:703
    write ".\x1B[0m "
    3ce6:	f7ff f8d5 	bl	2e94 <dotgaensefuesschen>
    3cea:	2e06      	.short	0x2e06
    3cec:	6d305b1b 	.word	0x6d305b1b
    3cf0:	20          	.byte	0x20
    3cf1:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:716
  .endif


2:@ ( Tokenadresse Länge )

  bl align4komma
    3cf2:	f7ff fe1d 	bl	3930 <Code_837>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:719

  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:
  ldr r0, =Dictionarypointer
    3cf6:	4894      	ldr	r0, [pc, #592]	; (3f48 <Code_928+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:720
  ldr r0, [r0]
    3cf8:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:722

  ldr r1, =Backlinkgrenze
    3cfa:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:723
  cmp r0, r1
    3cfe:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:725
.ifdef above_ram
  blo.n create_ram @ Befinde mich im Ram. Schalte um !
    3d00:	d320      	bcc.n	3d44 <create_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:734

  @ -----------------------------------------------------------------------------
  @ Create for Flash
  @ ( Tokenadresse Länge )

  ldr r0, =FlashFlags
    3d02:	4892      	ldr	r0, [pc, #584]	; (3f4c <Code_928+0x2a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:735
  ldr r1, =Flag_visible
    3d04:	f04f 0100 	mov.w	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:736
  str r1, [r0]  @ Flags vorbereiten  Prepare Flags for collecting
    3d08:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:756
    bl align32komma @ Vorrücken auf die nächste passende Schreibstelle Advance to the next suitable writing position
    pushdaconst 28  @ Es muss ein kompletter 32-Byte-Block für das Linkfeld reserviert werden A complete 32-byte block must be reserved for the link field
    bl allot        @ damit dies später noch nachträglich eingefügt werden kann. so that this can be added later.
  .endif

  bl here @ ( Tokenadresse Länge Neue-Linkadresse ) Das wird die neue Linkadresse Token address Length New link address ) This will be the new link address
    3d0a:	f000 fa0a 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:757
  pushdaconst 6 @ Lücke für die Flags und Link lassen  Leave space for Flags and Link - they are not known yet at this time.
    3d0e:	f847 6d04 	str.w	r6, [r7, #-4]!
    3d12:	2606      	movs	r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:758
  bl allot
    3d14:	f7ff feb2 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:760

  bl minusrot
    3d18:	f7fd f992 	bl	1040 <Code_209>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:761
  bl stringkomma @ Den Namen einfügen  Insert Name
    3d1c:	f7ff fe7b 	bl	3a16 <Code_859>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:768

  @ Jetzt den aktuellen Link an die passende Stelle im letzten Wort einfügen,
  @ falls dort FFFF FFFF steht:
  @ Insert Link to fresh definition into old latest if there is still -1 in its Link field:

  ldr r0, =Fadenende @ Hole das aktuelle Fadenende  Fetch old latest
    3d20:	488b      	ldr	r0, [pc, #556]	; (3f50 <Code_928+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:769
  ldr r1, [r0]
    3d22:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:771

  ldr r2, [r1] @ Inhalt des Link-Feldes holen  Check if Link is set
    3d24:	680a      	ldr	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:773

  ldr r3, =erasedword
    3d26:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:774
  cmp r2, r3 @ Ist der Link ungesetzt ?      Isn't it ?
    3d2a:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:775
  bne 1f
    3d2c:	d107      	bne.n	3d3e <Code_886+0xc2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:781

  @ Neuen Link einfügen: Im Prinzip str tos, [r1] über Komma.
  @ Insert new Link. This is str tos, [r1] rerouted over comma because Flash has to be written.
    @ Dictionary-Pointer verbiegen:
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
    3d2e:	4a86      	ldr	r2, [pc, #536]	; (3f48 <Code_928+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:782
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren
    3d30:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:783
      str r1, [r2] @ Dictionarypointer umbiegen
    3d32:	6011      	str	r1, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:784
      dup @ ( Neue-Linkadresse Neue-Linkadresse )
    3d34:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:785
      bl komma     @ Link einfügen
    3d38:	f7ff fe54 	bl	39e4 <Code_855>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:786
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen.
    3d3c:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:790

1:@ Backlink fertig gesetzt.  Finished Backlinking.
  @ Fadenende aktualisieren:  Set fresh latest.
  str tos, [r0] @ Neues-Fadenende in die Fadenende-Variable legen
    3d3e:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:791
  drop
    3d40:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:793

  b.n create_ende
    3d42:	e013      	b.n	3d6c <create_ende>

00003d44 <create_ram>:
create_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:799

  @ -----------------------------------------------------------------------------
  @ Create for RAM
create_ram:

  bl here @ ( Tokenadresse Länge Neue-Linkadresse ) Das wird die neue Linkadresse
    3d44:	f000 f9ed 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:802

  @ Link setzen  Write Link
  ldr r0, =Fadenende
    3d48:	4881      	ldr	r0, [pc, #516]	; (3f50 <Code_928+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:803
  pushdatos
    3d4a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:804
  ldr tos, [r0] @ Das alte Fadenende hinein   Old latest
    3d4e:	6806      	ldr	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:805
  bl komma
    3d50:	f7ff fe48 	bl	39e4 <Code_855>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:808

  @ Flags setzen  Set initial Flags to Invisible.
  pushdatos
    3d54:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:809
  ldr tos, =Flag_invisible
    3d58:	f64f 76ff 	movw	r6, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:810
  bl hkomma
    3d5c:	f7ff fe20 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:813

  @ Das Fadenende aktualisieren  Set new latest
  ldr r0, =Fadenende
    3d60:	487b      	ldr	r0, [pc, #492]	; (3f50 <Code_928+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:814
  popda r1
    3d62:	0031      	movs	r1, r6
    3d64:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:815
  str r1, [r0]
    3d66:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:818

  @ Den Namen schreiben  Write Name
  bl stringkomma
    3d68:	f7ff fe55 	bl	3a16 <Code_859>

00003d6c <create_ende>:
create_ende():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:822


create_ende: @ Save code entry point of current definition for recurse and dodoes
  ldr r0, =Dictionarypointer
    3d6c:	4876      	ldr	r0, [pc, #472]	; (3f48 <Code_928+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:823
  ldr r1, [r0]
    3d6e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:824
  ldr r0, =Einsprungpunkt
    3d70:	4878      	ldr	r0, [pc, #480]	; (3f54 <Code_928+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:825
  str r1, [r0]
    3d72:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:828

  @ Fertig :-)  Finished :-)
  pop {pc}
    3d74:	bd00      	pop	{pc}

00003d76 <Dictionary_904>:
Dictionary_904():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:828
    3d76:	3d8e      	.short	0x3d8e
    3d78:	00000000 	.word	0x00000000
    3d7c:	72617608 	.word	0x72617608
    3d80:	6c626169 	.word	0x6c626169
    3d84:	65          	.byte	0x65
	...

00003d86 <Code_904>:
Code_904():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:834


@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "variable" @ ( n -- )
@ -----------------------------------------------------------------------------
  pushdaconst 1
    3d86:	f847 6d04 	str.w	r6, [r7, #-4]!
    3d8a:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:835
  b.n nvariable
    3d8c:	e013      	b.n	3db6 <Code_910>

00003d8e <Dictionary_907>:
Dictionary_907():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:835
    3d8e:	3da6      	.short	0x3da6
    3d90:	00000000 	.word	0x00000000
    3d94:	61763209 	.word	0x61763209
    3d98:	62616972 	.word	0x62616972
    3d9c:	656c      	.short	0x656c

00003d9e <Code_907>:
Code_907():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:840

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "2variable" @ ( d -- )
@ -----------------------------------------------------------------------------
  pushdaconst 2
    3d9e:	f847 6d04 	str.w	r6, [r7, #-4]!
    3da2:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:841
  b.n nvariable
    3da4:	e007      	b.n	3db6 <Code_910>

00003da6 <Dictionary_910>:
Dictionary_910():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:841
    3da6:	3e18      	.short	0x3e18
    3da8:	00000000 	.word	0x00000000
    3dac:	61766e09 	.word	0x61766e09
    3db0:	62616972 	.word	0x62616972
    3db4:	656c      	.short	0x656c

00003db6 <Code_910>:
nvariable():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:848
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "nvariable" @ ( Init-Values Length -- )
nvariable: @ Creates an initialised variable of given length.
@------------------------------------------------------------------------------

  push {lr}
    3db6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:849
  bl create
    3db8:	f7ff ff60 	bl	3c7c <Code_886>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:851

  ldr r0, =Dictionarypointer
    3dbc:	4862      	ldr	r0, [pc, #392]	; (3f48 <Code_928+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:852
  ldr r1, [r0]
    3dbe:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:854

  ldr r2, =Backlinkgrenze
    3dc0:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:855
  cmp r1, r2
    3dc4:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:857
.ifdef above_ram
  blo.n variable_ram @ Befinde mich im Ram. Schalte um !
    3dc6:	d318      	bcc.n	3dfa <variable_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:879

      @ Eine echte Flash-Variable entsteht so, dass Platz im Ram angefordert wird.
      @ Prüfe hier, ob genug Ram da ist !?
      @ Maybe check in future if there is enough RAM left ?

  movs r0, #0x0F @ Maximum length for flash variables !
    3dc8:	200f      	movs	r0, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:880
  ands tos, r0   @ Limit is important to not break Flags for catchflashpointers.
    3dca:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:884

  @ Variablenpointer erniedrigen und zurückschreiben   Decrement variable pointer

  lsls r2, tos, #2 @ Multiply number of elements with 4 to get byte count
    3dcc:	00b2      	lsls	r2, r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:885
  bl prepare_var_buf_flash
    3dce:	f000 f84c 	bl	3e6a <prepare_var_buf_flash>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:891

  @ Amount of elements to write is in TOS.
  @ Write code and initialise elements.
  @ r1 is target location in RAM.

  popda r0   @ Fetch amount of cells
    3dd2:	0030      	movs	r0, r6
    3dd4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:892
  movs r2, r0 @ Save the value for generating flags for catchflashpointers later
    3dd6:	0002      	movs	r2, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:893
  cmp r0, #0 @ If nvariable is called with length zero... Maybe this could be useful sometimes.
    3dd8:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:894
  beq 2f
    3dda:	d005      	beq.n	3de8 <Code_910+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:896

1:str tos, [r1] @ Initialize RAM location
    3ddc:	600e      	str	r6, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:897
  adds r1, #4
    3dde:	3104      	adds	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:898
  bl komma      @ Put initialisation value for catchflashpointers in place.
    3de0:	f7ff fe00 	bl	39e4 <Code_855>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:899
  subs r0, #1
    3de4:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:900
  bne 1b
    3de6:	d1f9      	bne.n	3ddc <Code_910+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:904

2:@ Finished.

  pushdaconst Flag_ramallot & ~Flag_visible @ Finally (!) set Flags for RAM usage.
    3de8:	f847 6d04 	str.w	r6, [r7, #-4]!
    3dec:	2680      	movs	r6, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:905
  orrs tos, r2               @ Or together with desired amount of cells.
    3dee:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:906
  bl setflags
    3df0:	f7ff fd60 	bl	38b4 <Code_830>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:907
  bl smudge
    3df4:	f7ff fd2b 	bl	384e <Code_825>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:908
  pop {pc}
    3df8:	bd00      	pop	{pc}

00003dfa <variable_ram>:
variable_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:914

  @ -----------------------------------------------------------------------------
  @ Variable RAM
variable_ram:
  @ This is simple: Write code, write value, a classic Forth variable.
  bl prepare_var_buf_ram
    3dfa:	f000 f855 	bl	3ea8 <prepare_var_buf_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:918

  @ Amount of elements to write is in TOS.

  popda r0   @ Fetch amount of cells
    3dfe:	0030      	movs	r0, r6
    3e00:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:919
  cmp r0, #0 @ If nvariable is called with length zero... Maybe this could be useful sometimes.
    3e02:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:920
  beq.n finish_var_buf_ram
    3e04:	d003      	beq.n	3e0e <finish_var_buf_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:922

1:bl komma
    3e06:	f7ff fded 	bl	39e4 <Code_855>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:923
  subs r0, #1
    3e0a:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:924
  bne 1b
    3e0c:	d1fb      	bne.n	3e06 <variable_ram+0xc>

00003e0e <finish_var_buf_ram>:
finish_var_buf_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:928

finish_var_buf_ram: @ Finished.

  bl setze_faltbarflag @ Variables and buffers always are 0-foldable as their address never changes.
    3e0e:	f7ff fc71 	bl	36f4 <Code_796>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:929
  bl smudge
    3e12:	f7ff fd1c 	bl	384e <Code_825>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:930
  pop {pc}
    3e16:	bd00      	pop	{pc}

00003e18 <Dictionary_915>:
Dictionary_915():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:930
    3e18:	00003edc 	.word	0x00003edc
    3e1c:	62070000 	.word	0x62070000
    3e20:	65666675 	.word	0x65666675
    3e24:	3a72      	.short	0x3a72

00003e26 <Code_915>:
Code_915():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:938
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "buffer:" @ ( Length -- )
  @ Creates an uninitialised buffer of given bytes length.
@------------------------------------------------------------------------------

  push {lr}
    3e26:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:939
  bl create
    3e28:	f7ff ff28 	bl	3c7c <Code_886>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:942

  @ Round requested buffer length to next 4-Byte boundary to ensure alignment
  movs r0, #1
    3e2c:	2001      	movs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:943
  ands r0, tos
    3e2e:	4030      	ands	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:944
  adds tos, r0
    3e30:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:946

  movs r0, #2
    3e32:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:947
  ands r0, tos
    3e34:	4030      	ands	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:948
  adds tos, r0
    3e36:	1836      	adds	r6, r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:950

  ldr r0, =Dictionarypointer
    3e38:	4843      	ldr	r0, [pc, #268]	; (3f48 <Code_928+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:951
  ldr r1, [r0]
    3e3a:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:953

  ldr r2, =Backlinkgrenze
    3e3c:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:954
  cmp r1, r2
    3e40:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:956
.ifdef above_ram
  blo.n rambuffer_ram @ Befinde mich im Ram. Schalte um !
    3e42:	d30d      	bcc.n	3e60 <rambuffer_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:966
  @ -----------------------------------------------------------------------------
  @ Buffer Flash

  @ Variablenpointer erniedrigen und zurückschreiben   Decrement variable pointer

  movs r2, tos @ Number of bytes
    3e44:	0032      	movs	r2, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:967
  bl prepare_var_buf_flash
    3e46:	f000 f810 	bl	3e6a <prepare_var_buf_flash>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:970

  @ Write desired size of buffer at the end of the definition
  bl komma
    3e4a:	f7ff fdcb 	bl	39e4 <Code_855>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:973

  @ Finished
  pushdaconstw Flag_buffer_foldable  @ Finally (!) set Flags for buffer usage.
    3e4e:	f847 6d04 	str.w	r6, [r7, #-4]!
    3e52:	f240 1640 	movw	r6, #320	; 0x140
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:974
  bl setflags
    3e56:	f7ff fd2d 	bl	38b4 <Code_830>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:975
  bl smudge
    3e5a:	f7ff fcf8 	bl	384e <Code_825>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:976
  pop {pc}
    3e5e:	bd00      	pop	{pc}

00003e60 <rambuffer_ram>:
rambuffer_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:982

  @ -----------------------------------------------------------------------------
  @ Buffer RAM
rambuffer_ram:
  @ This is simple: Write code, allot space, a classic Forth buffer.
  bl prepare_var_buf_ram
    3e60:	f000 f822 	bl	3ea8 <prepare_var_buf_ram>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:984

  bl allot @ Reserve space. Allot checks for itself if there is enough RAM left.
    3e64:	f7ff fe0a 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:986

  b.n finish_var_buf_ram
    3e68:	e7d1      	b.n	3e0e <finish_var_buf_ram>

00003e6a <prepare_var_buf_flash>:
prepare_var_buf_flash():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:990

  @ -----------------------------------------------------------------------------
prepare_var_buf_flash:
  push {lr}
    3e6a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:992

  ldr r0, =VariablenPointer
    3e6c:	483a      	ldr	r0, [pc, #232]	; (3f58 <Code_928+0x36>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:993
  ldr r1, [r0]
    3e6e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:994
  subs r1, r2  @ Ram voll ?  Maybe insert a check for enough RAM left ?
    3e70:	1a89      	subs	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:995
    ldr r2, =RamDictionaryAnfang
    3e72:	4a3a      	ldr	r2, [pc, #232]	; (3f5c <Code_928+0x3a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:996
    cmp r1, r2
    3e74:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:997
    bhs 1f
    3e76:	d210      	bcs.n	3e9a <prepare_var_buf_flash+0x30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:998
      Fehler_quit "Not enough RAM"
    3e78:	f7ff f80c 	bl	2e94 <dotgaensefuesschen>
    3e7c:	5b1b1519 	.word	0x5b1b1519
    3e80:	4e6d3133 	.word	0x4e6d3133
    3e84:	6520746f 	.word	0x6520746f
    3e88:	67756f6e 	.word	0x67756f6e
    3e8c:	41522068 	.word	0x41522068
    3e90:	305b1b4d 	.word	0x305b1b4d
    3e94:	0a6d      	.short	0x0a6d
    3e96:	f001 b847 	b.w	4f28 <Code_1230>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:999
1:str r1, [r0]
    3e9a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1002

  @ Code schreiben:  Write code
  pushda r1
    3e9c:	f847 6d04 	str.w	r6, [r7, #-4]!
    3ea0:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1003
  bl literalkomma    @ Adresse im Ram immer mit movt --> 12 Bytes
    3ea2:	f7ff faa1 	bl	33e8 <Code_735>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1004
  b.n bx_lr_komma    @ Opcode für bx lr --> 2 Bytes
    3ea6:	e012      	b.n	3ece <bx_lr_komma>

00003ea8 <prepare_var_buf_ram>:
prepare_var_buf_ram():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1008

  @ -----------------------------------------------------------------------------
prepare_var_buf_ram:
  push {lr}
    3ea8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1011

    @ This is to align dictionary pointer to have variable locations that are always 4-even
    bl here
    3eaa:	f000 f93a 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1012
    movs r0, #2
    3eae:	2002      	movs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1013
    ands tos, r0
    3eb0:	4006      	ands	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1014
    drop
    3eb2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1015
    bne 1f
    3eb4:	d101      	bne.n	3eba <prepare_var_buf_ram+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1016
      bl nop_hkomma
    3eb6:	f7ff fd65 	bl	3984 <nop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1019
1:

  pushdatos
    3eba:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1020
  ldr tos, =0x3f04603e @ subs r7, #4    str r6, [r7, #0]
    3ebe:	4e28      	ldr	r6, [pc, #160]	; (3f60 <Code_928+0x3e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1021
  bl reversekomma
    3ec0:	f7ff fd9e 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1022
  pushdatos
    3ec4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1023
  ldr tos, =0x467e3602 @ mov r6, pc     adds r6, #2
    3ec8:	4e26      	ldr	r6, [pc, #152]	; (3f64 <Code_928+0x42>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1024
  bl reversekomma
    3eca:	f7ff fd99 	bl	3a00 <Code_858>

00003ece <bx_lr_komma>:
bx_lr_komma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1026
bx_lr_komma:
  pushdaconstw 0x4770  @ bx lr
    3ece:	f847 6d04 	str.w	r6, [r7, #-4]!
    3ed2:	f244 7670 	movw	r6, #18288	; 0x4770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1027
  bl hkomma
    3ed6:	f7ff fd63 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1029

  pop {pc}
    3eda:	bd00      	pop	{pc}

00003edc <Dictionary_926>:
Dictionary_926():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1029
    3edc:	00003f0c 	.word	0x00003f0c
    3ee0:	640f0000 	.word	0x640f0000
    3ee4:	69746369 	.word	0x69746369
    3ee8:	72616e6f 	.word	0x72616e6f
    3eec:	61747379 	.word	0x61747379
    3ef0:	7472      	.short	0x7472

00003ef2 <Code_926>:
dictionarystart():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1041
                 @ Entry point for dictionary searches.
                 @ This is different for RAM and for Flash and it changes with new definitions.
@ -----------------------------------------------------------------------------

  @ Prüfe, ob der Dictionarypointer im Ram oder im Flash ist:  Are we compiling into RAM or into Flash ?
  ldr r0, =Dictionarypointer
    3ef2:	4815      	ldr	r0, [pc, #84]	; (3f48 <Code_928+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1042
  ldr r0, [r0]
    3ef4:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1044

  ldr r1, =Backlinkgrenze
    3ef6:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1045
  pushdatos
    3efa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1046
  cmp r0, r1
    3efe:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1048
.ifdef above_ram
  blo 1f
    3f00:	d301      	bcc.n	3f06 <Code_926+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1052
.else
  bhs 1f
.endif
  ldr tos, =CoreDictionaryAnfang @ Befinde mich im Flash mit Backlinks. Muss beim CoreDictionary anfangen:        In Flash: Start with core dictionary.
    3f02:	4e19      	ldr	r6, [pc, #100]	; (3f68 <Code_928+0x46>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1053
  bx lr
    3f04:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1055

1:ldr tos, =Fadenende
    3f06:	4e12      	ldr	r6, [pc, #72]	; (3f50 <Code_928+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1056
  ldr tos, [tos]                   @ Oberhalb der Backlinkgrenze bin ich im Ram, kann mit dem Fadenende beginnen.   In RAM:   Start with latest definition.
    3f08:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1057
  bx lr
    3f0a:	4770      	bx	lr

00003f0c <Dictionary_928>:
Dictionary_928():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1057
    3f0c:	00003f6c 	.word	0x00003f6c
    3f10:	640e0000 	.word	0x640e0000
    3f14:	69746369 	.word	0x69746369
    3f18:	72616e6f 	.word	0x72616e6f
    3f1c:	78656e79 	.word	0x78656e79
    3f20:	74          	.byte	0x74
	...

00003f22 <Code_928>:
dictionarynext():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1089

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "dictionarynext" @ ( address -- address flag )
dictionarynext: @ Scans dictionary chain and returns true if end is reached.
@ -----------------------------------------------------------------------------
  push {r0, r1, lr}
    3f22:	b503      	push	{r0, r1, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1090
  ldr r1, [tos]
    3f24:	6831      	ldr	r1, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1091
  ldr r0, =erasedword
    3f26:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1092
  cmp r1, r0
    3f2a:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1093
  beq 1f
    3f2c:	d007      	beq.n	3f3e <Code_928+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1094
    ldrb r0, [r1, #6]
    3f2e:	7988      	ldrb	r0, [r1, #6]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1095
    cmp r0, #erasedbyte
    3f30:	28ff      	cmp	r0, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1096
    beq 1f
    3f32:	d004      	beq.n	3f3e <Code_928+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1097
      movs tos, r1
    3f34:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1098
      pushdaconst 0
    3f36:	f847 6d04 	str.w	r6, [r7, #-4]!
    3f3a:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1099
      pop {r0, r1, pc}
    3f3c:	bd03      	pop	{r0, r1, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1101

1:pushdatos
    3f3e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1102
  movs tos, #0
    3f42:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1103
  mvns tos, tos
    3f44:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1104
  pop {r0, r1, pc}
    3f46:	bd03      	pop	{r0, r1, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:719
  ldr r0, =Dictionarypointer
    3f48:	2001ffd0 	.word	0x2001ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:734
  ldr r0, =FlashFlags
    3f4c:	20000018 	.word	0x20000018
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:768
  ldr r0, =Fadenende @ Hole das aktuelle Fadenende  Fetch old latest
    3f50:	2001ffd4 	.word	0x2001ffd4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:824
  ldr r0, =Einsprungpunkt
    3f54:	2000000c 	.word	0x2000000c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:992
  ldr r0, =VariablenPointer
    3f58:	2000001c 	.word	0x2000001c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:995
    ldr r2, =RamDictionaryAnfang
    3f5c:	20000388 	.word	0x20000388
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1020
  ldr tos, =0x3f04603e @ subs r7, #4    str r6, [r7, #0]
    3f60:	3f04603e 	.word	0x3f04603e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1023
  ldr tos, =0x467e3602 @ mov r6, pc     adds r6, #2
    3f64:	467e3602 	.word	0x467e3602
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1052
  ldr tos, =CoreDictionaryAnfang @ Befinde mich im Flash mit Backlinks. Muss beim CoreDictionary anfangen:        In Flash: Start with core dictionary.
    3f68:	000001e4 	.word	0x000001e4

00003f6c <Dictionary_932>:
Dictionary_932():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1052
    3f6c:	00003f9e 	.word	0x00003f9e
    3f70:	730a0000 	.word	0x730a0000
    3f74:	7370696b 	.word	0x7370696b
    3f78:	6e697274 	.word	0x6e697274
    3f7c:	67          	.byte	0x67
	...

00003f7e <Code_932>:
Code_932():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1117

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "skipstring"
@ -----------------------------------------------------------------------------
    @ String überlesen und Pointer gerade machen
    ldrb r1, [tos] @ Länge des Strings holen      Fetch length
    3f7e:	7831      	ldrb	r1, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1118
    adds r1, #1   @ Plus 1 Byte für die Länge   One more for length byte
    3f80:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1120

    movs r2, #1  @ Wenn es ungerade ist, noch einen mehr:   Maybe one more for aligning.
    3f82:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1121
    ands r2, r1
    3f84:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1123

    adds r1, r2
    3f86:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1124
    adds tos, r1
    3f88:	1876      	adds	r6, r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1125
    bx lr
    3f8a:	4770      	bx	lr

00003f8c <skipstring>:
skipstring():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1130

@ -----------------------------------------------------------------------------
skipstring: @ Überspringt einen String, dessen Adresse in r0 liegt.  Skip string which address is in r0.
@ -----------------------------------------------------------------------------
  push {r1, r2}
    3f8c:	b406      	push	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1132
    @ String überlesen und Pointer gerade machen
    ldrb r1, [r0] @ Länge des Strings holen      Fetch length
    3f8e:	7801      	ldrb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1133
    adds r1, #1   @ Plus 1 Byte für die Länge   One more for length byte
    3f90:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1135

    movs r2, #1  @ Wenn es ungerade ist, noch einen mehr:   Maybe one more for aligning.
    3f92:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1136
    ands r2, r1
    3f94:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1138

    adds r1, r2
    3f96:	1889      	adds	r1, r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1139
    adds r0, r1
    3f98:	1840      	adds	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1140
  pop {r1, r2}
    3f9a:	bc06      	pop	{r1, r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1141
  bx lr
    3f9c:	4770      	bx	lr

00003f9e <Dictionary_933>:
Dictionary_933():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1141
    3f9e:	3fb0      	.short	0x3fb0
    3fa0:	00000000 	.word	0x00000000
    3fa4:	6e696604 	.word	0x6e696604
    3fa8:	64          	.byte	0x64
	...

00003faa <Code_933>:
find():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1150

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "find"
find: @ ( address length -- Code-Adresse Flags )
@ -----------------------------------------------------------------------------
  ldr r0, =hook_find
    3faa:	4830      	ldr	r0, [pc, #192]	; (406c <find_not_found+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1151
  ldr r0, [r0]
    3fac:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1152
  mov pc, r0
    3fae:	4687      	mov	pc, r0

00003fb0 <Dictionary_934>:
Dictionary_934():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1152
    3fb0:	00003fcc 	.word	0x00003fcc
    3fb4:	68090081 	.word	0x68090081
    3fb8:	2d6b6f6f 	.word	0x2d6b6f6f
    3fbc:	646e6966 	.word	0x646e6966

00003fc0 <Code_934>:
Code_934():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1158

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-find" @ ( -- addr )
  CoreVariable hook_find
@------------------------------------------------------------------------------
  pushdatos
    3fc0:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1159
  ldr tos, =hook_find
    3fc4:	4e2a      	ldr	r6, [pc, #168]	; (4070 <find_not_found+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1160
  bx lr
    3fc6:	4770      	bx	lr
    3fc8:	00003fda 	.word	0x00003fda

00003fcc <Dictionary_937>:
Dictionary_937():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1160
    3fcc:	00004074 	.word	0x00004074
    3fd0:	28060000 	.word	0x28060000
    3fd4:	646e6966 	.word	0x646e6966
    3fd8:	29          	.byte	0x29
	...

00003fda <Code_937>:
core_find():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1177
find: @ ( address length -- Code-Adresse Flags )
@ -----------------------------------------------------------------------------

.endif

  push {r4, r5, lr}
    3fda:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1184
  @ r4  Adresse des zu suchenden Strings  Address of string that is searched for
  @ r5  Dessen Länge                      Length

  @ TOS Hangelpointer   Pointer for crawl the dictionary

  movs r0, #0   @ Noch keinen Treffer          No hits yet
    3fdc:	2000      	movs	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1185
  movs r1, #0   @ Und noch keine Trefferflags  No hits have no Flags
    3fde:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1186
  push {r0, r1} @ Auf dem Return-Stack merken  Save this to return stack
    3fe0:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1188

  popda r5 @ Fetch string length
    3fe2:	0035      	movs	r5, r6
    3fe4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1189
  popda r4 @ Fetch string address
    3fe6:	0034      	movs	r4, r6
    3fe8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1191

  bl dictionarystart
    3fea:	f7ff ff82 	bl	3ef2 <Code_926>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1194

1:@ Loop through the dictionary
  ldr r0, =Flag_invisible
    3fee:	f64f 70ff 	movw	r0, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1195
  ldrh r1, [tos, #4] @ Fetch Flags to see if this definition is visible.
    3ff2:	88b1      	ldrh	r1, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1196
  cmp r0, r1         @ Skip this definition if invisible
    3ff4:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1197
  beq 2f
    3ff6:	d01e      	beq.n	4036 <ADC1_CFGR2_RSHIFT4+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1201

  @ Definition is visible. Compare the name !

  ldrb r1, [tos, #6] @ Fetch count, skip link and flags
    3ff8:	79b1      	ldrb	r1, [r6, #6]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1202
  cmp r1, r5
    3ffa:	42a9      	cmp	r1, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1203
  bne 2f @ Strings have different lengths, continue searching
    3ffc:	d11b      	bne.n	4036 <ADC1_CFGR2_RSHIFT4+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1208

    @ Same length. Compare strings, be case insensitive.
    @ Dictionary entries cannot have no name - string length therefore cannot be zero.

    adds r0, tos, #7 @ Get address, skip count, link and flags
    3ffe:	1df0      	adds	r0, r6, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1212

    @ Count backwards on length in r1

4:  subs r1, #1
    4000:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1213
    ldrb r2, [r0, r1]
    4002:	5c42      	ldrb	r2, [r0, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1214
    ldrb r3, [r4, r1]
    4004:	5c63      	ldrb	r3, [r4, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1217

    @ Beide Zeichen in Kleinbuchstaben verwandeln.  Convert booth to lowercase.
    lowercase r2
    4006:	2a41      	cmp	r2, #65	; 0x41
    4008:	d302      	bcc.n	4010 <ADC1_CFGR2_RSHIFT4+0x10>
    400a:	2a5b      	cmp	r2, #91	; 0x5b
    400c:	bf38      	it	cc
    400e:	3220      	addcc	r2, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1218
    lowercase r3
    4010:	2b41      	cmp	r3, #65	; 0x41
    4012:	d302      	bcc.n	401a <ADC1_CFGR2_RSHIFT4+0x1a>
    4014:	2b5b      	cmp	r3, #91	; 0x5b
    4016:	bf38      	it	cc
    4018:	3320      	addcc	r3, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1220

    cmp r2, r3
    401a:	429a      	cmp	r2, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1221
    bne 2f @ Different characters, continue searching
    401c:	d10b      	bne.n	4036 <ADC1_CFGR2_RSHIFT4+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1224

    @ Equal characters: Next character ?
    cmp r1, #0
    401e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1225
    bne 4b
    4020:	d1ee      	bne.n	4000 <ADC1_CFGR2_RSHIFT4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1229

      @ Gefunden ! Strings are equal: Found !

      add sp, #8 @ Forget old notes on return stack
    4022:	b002      	add	sp, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1230
      adds r0, tos, #6
    4024:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1231
      bl skipstring @ String überlesen und Pointer gerade machen   Skip name string in r0
    4026:	f7ff ffb1 	bl	3f8c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1232
      ldrh r1, [tos, #4] @ Fetch flags, again.
    402a:	88b1      	ldrh	r1, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1233
      push {r0, r1} @ Note code start address and flags
    402c:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1236

      @ Prüfe, ob ich mich im Flash oder im Ram befinde.  Check if in RAM or in Flash.
      ldr r0, =Backlinkgrenze
    402e:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1237
      cmp tos, r0
    4032:	4286      	cmp	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1239
.ifdef above_ram
      blo 3f @ Im Ram beim ersten Treffer ausspringen. Search is over in RAM with first hit.
    4034:	d307      	bcc.n	4046 <ADC1_CFGR2_RSHIFT4+0x46>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1249
             @ If in Flash, whole dictionary has to be searched because of backwards link dictionary structure.

2:@ Weiterhangeln  Continue crawl.
  @ This is the essence of "dictionarynext", inlined for speed.

  ldr tos, [tos]
    4036:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1250
  ldr r0, =erasedword
    4038:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1251
  cmp tos, r0
    403c:	4286      	cmp	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1252
  beq 3f
    403e:	d002      	beq.n	4046 <ADC1_CFGR2_RSHIFT4+0x46>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1253
    ldrb r0, [tos, #6]
    4040:	79b0      	ldrb	r0, [r6, #6]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1254
    cmp r0, #erasedbyte
    4042:	28ff      	cmp	r0, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1255
    bne 1b
    4044:	d1d3      	bne.n	3fee <Code_937+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1260

3:@ Durchgehangelt. Habe ich etwas gefunden ?  Finished. Found something ?
  @ Zieladresse gesetzt, also nicht Null bedeutet: Etwas gefunden !    Destination address <> 0 means successfully found.

  pop {r0, r1}
    4046:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1261
  movs tos, r0  @ Zieladresse    oder 0, falls nichts gefunden            Address = 0 means: Not found. Check for that !
    4048:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1262
  pushda r1     @ Zielflags      oder 0  --> @ ( 0 0 - Nicht gefunden )   Push Flags on Stack. ( Destination-Code Flags ) or ( 0 0 ).
    404a:	f847 6d04 	str.w	r6, [r7, #-4]!
    404e:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1264

  pop {r4, r5, pc}
    4050:	bd30      	pop	{r4, r5, pc}

00004052 <find_not_found>:
find_not_found():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1269

@ -----------------------------------------------------------------------------
find_not_found: @ Internal use. Gives "not found." message if find is not successful.
@ -----------------------------------------------------------------------------
  push {lr}
    4052:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1271

  movs r1, tos  @ Save string address for later use
    4054:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1272
  ldr r0, [psp]
    4056:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1274

  push {r0, r1}
    4058:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1275
    bl find
    405a:	f7ff ffa6 	bl	3faa <Code_933>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1276
  pop {r0, r1}
    405e:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1278

  ldr r2, [psp] @ Probe entry address
    4060:	683a      	ldr	r2, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1279
  cmp r2, #0
    4062:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1280
  bne 1f
    4064:	d101      	bne.n	406a <find_not_found+0x18>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1281
    bl not_found_addr_r0_len_r1
    4066:	f000 ff03 	bl	4e70 <not_found_addr_r0_len_r1>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1282
1:pop {pc}
    406a:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1150
  ldr r0, =hook_find
    406c:	2001ffcc 	.word	0x2001ffcc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1159
  ldr tos, =hook_find
    4070:	2001ffcc 	.word	0x2001ffcc

00004074 <Dictionary_944>:
Dictionary_944():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/compiler-flash.s:1159
    4074:	000040dc 	.word	0x000040dc
    4078:	63060000 	.word	0x63060000
    407c:	706d756a 	.word	0x706d756a
    4080:	2c          	.byte	0x2c
	...

00004082 <Code_944>:
Code_944():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:27
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "cjump," @ Fügt einen bedingten Sprung ein. Write a conditional jump into dictionary
cjumpgenerator: @ ( Adresse-der-Opcodelücke Sprungziel Bitmaske -- )
                @ ( Address-of-hole-for-jump Target Bitmask -- )
@------------------------------------------------------------------------------
  popda r2 @ Bitmaske    Bitmask for jump condition
    4082:	0032      	movs	r2, r6
    4084:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:28
  popda r1 @ Sprungziel  Target
    4086:	0031      	movs	r1, r6
    4088:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:32
  @ popda r0 @ Adresse-der-Opcodelücke - bleibt auf dem Stack  Hole to fill in opcode - keep that on stack

  @ Calculate jump offset.
  subs r3, r1, tos @ Differenz aus Lücken-Adresse und Sprungziel bilden  Calculate relative jump offset
    408a:	1b8b      	subs	r3, r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:33
  subs r3, #4      @ Da der aktuelle Befehl noch läuft und es komischerweise andere Offsets beim ARM gibt.  Current instruction still running...
    408c:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:41
  @ also habe ich 7 freie Bits, das oberste muss mit dem restlichen Vorzeichen übereinstimmen.

  @ Short conditional B.. opcodes support 8 Bits jump range - one of that for sign.
  @ Check if opcodable range is enough to reach target:

  ldr r1, =0xFFFFFF01   @ 7 Bits frei
    408e:	f06f 01fe 	mvn.w	r1, #254	; 0xfe
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:42
  ands r1, r3
    4092:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:43
  cmp r1, #0  @ Wenn dies Null ergibt, positive Distanz ok.
    4094:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:44
  beq 1f
    4096:	d013      	beq.n	40c0 <jump_too_far+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:46

  ldr r0, =0xFFFFFF00
    4098:	f06f 00ff 	mvn.w	r0, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:47
  cmp r1, r0
    409c:	4281      	cmp	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:48
  beq 1f  @ Wenn es gleich ist: Negative Distanz ok.
    409e:	d00f      	beq.n	40c0 <jump_too_far+0x20>

000040a0 <jump_too_far>:
jump_too_far():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:51
    @ Ansonsten ist die Sprungdistanz einfach zu groß.
jump_too_far:
    Fehler_Quit "Jump too far"
    40a0:	f7fe fef8 	bl	2e94 <dotgaensefuesschen>
    40a4:	5b1b1517 	.word	0x5b1b1517
    40a8:	4a6d3133 	.word	0x4a6d3133
    40ac:	20706d75 	.word	0x20706d75
    40b0:	206f6f74 	.word	0x206f6f74
    40b4:	1b726166 	.word	0x1b726166
    40b8:	0a6d305b 	.word	0x0a6d305b
    40bc:	f000 bf34 	b.w	4f28 <Code_1230>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:55
1:

  @ Generate proper jump opcode:
  asrs r3, #1 @ Schieben, da die Sprünge immer auf geraden Adressen beginnen und enden.  Shift one bit out as jumps always have an even offset
    40c0:	105b      	asrs	r3, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:56
  movs r1, #0xFF @ Genau 8 Bits Sprungmaske.  Exactly 8 Bits available -
    40c2:	21ff      	movs	r1, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:57
  ands r3, r1    @ Ausschnitt anwenden          mask them to clip sign bits
    40c4:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:59

  orrs r3, r2    @ Sprungbedingung und den Rest des Opcodes hinzufügen  Or together with jump condition
    40c6:	4313      	orrs	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:60
  movs r0, tos  @ Adresse-der-Opcodelücke in r0 holen                    Exchange registers
    40c8:	0030      	movs	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:61
  movs tos, r3  @ Sprungopcode stattdessen hineinlegen
    40ca:	001e      	movs	r6, r3

000040cc <sprungbefehl_einfuegen>:
sprungbefehl_einfuegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:64

sprungbefehl_einfuegen: @ strh r3, [r0] over h, to handle Flash writes
  push {lr}
    40cc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:68
    @ Opcode auf dem Stack, Adresse in r0
    @ Dictionary-Pointer verbiegen:
      @ Dictionarypointer sichern
      ldr r2, =Dictionarypointer
    40ce:	4ace      	ldr	r2, [pc, #824]	; (4408 <Code_1007+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:69
      ldr r3, [r2] @ Alten Dictionarypointer auf jeden Fall bewahren
    40d0:	6813      	ldr	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:71

      str r0, [r2] @ Dictionarypointer umbiegen
    40d2:	6010      	str	r0, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:72
      bl hkomma    @ Opcode einfügen
    40d4:	f7ff fc64 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:73
      str r3, [r2] @ Dictionarypointer wieder zurücksetzen.
    40d8:	6013      	str	r3, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:74
  pop {pc}
    40da:	bd00      	pop	{pc}

000040dc <Dictionary_948>:
Dictionary_948():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:74
    40dc:	00004116 	.word	0x00004116
    40e0:	6a050000 	.word	0x6a050000
    40e4:	2c706d75 	.word	0x2c706d75

000040e8 <Code_948>:
Code_948():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:81
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "jump," @ Fügt einen unbedingten Sprung ein.  Write an unconditional jump into dictionary
jumpgenerator: @ ( Adresse-der-Opcodelücke Sprungziel -- )
               @ ( Address-of-hole-for-jump Target -- )
@------------------------------------------------------------------------------
  popda r1 @ Sprungziel  Target
    40e8:	0031      	movs	r1, r6
    40ea:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:82
  popda r0 @ Adresse-der-Opcodelücke  Hole to fill in opcode
    40ec:	0030      	movs	r0, r6
    40ee:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:84

  subs r3, r1, r0 @ Differenz aus Lücken-Adresse und Sprungziel bilden  Calculate relative jump offset
    40f0:	1a0b      	subs	r3, r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:85
  subs r3, #4     @ Da der aktuelle Befehl noch läuft und es komischerweise andere Offsets beim ARM gibt.   Current instruction still running...
    40f2:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:93
  @ also habe ich 10 freie Bits, das oberste muss mit dem restlichen Vorzeichen übereinstimmen.

  @ Short unconditional B opcodes support 11 Bits jump range - one of that for sign.
  @ Check if opcodable range is enough to reach target:

  ldr r1, =0xFFFFF801  @ 10 Bits frei
    40f4:	49c5      	ldr	r1, [pc, #788]	; (440c <Code_1007+0x12>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:94
  ands r1, r3
    40f6:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:95
  cmp r1, #0  @ Wenn dies Null ergibt, positive Distanz ok.
    40f8:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:96
  beq 1f
    40fa:	d002      	beq.n	4102 <Code_948+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:98

  ldr r2, =0xFFFFF800
    40fc:	4ac4      	ldr	r2, [pc, #784]	; (4410 <Code_1007+0x16>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:99
  cmp r1, r2
    40fe:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:100
  bne.n jump_too_far @ Wenn es gleich ist: Negative Distanz ok.
    4100:	d1ce      	bne.n	40a0 <jump_too_far>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:104

1:

  asrs r3, #1 @ Schieben, da die Sprünge immer auf geraden Adressen beginnen und enden. Shift one bit out as jumps always have an even offset
    4102:	105b      	asrs	r3, r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:105
  ldr r2, =0x7FF @ Genau 11 Bits Sprungmaske.  Exactly 11 Bits available -
    4104:	f240 72ff 	movw	r2, #2047	; 0x7ff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:106
  ands r3, r2     @ Ausschnitt anwenden          mask them to clip sign bits
    4108:	4013      	ands	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:112

  .ifdef m0core
    ldr r2, =0xE000
    orrs r3, r2
  .else
    orrs r3, 0xE000  @ Rest des Opcodes hinzufügen  Or together with B opcode
    410a:	f453 4360 	orrs.w	r3, r3, #57344	; 0xe000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:114
  .endif
  pushda r3
    410e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4112:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:115
  b.n sprungbefehl_einfuegen @  Befehl einfügen. strh r3, [r0] over h, to handle Flash writes
    4114:	e7da      	b.n	40cc <sprungbefehl_einfuegen>

00004116 <Dictionary_953>:
Dictionary_953():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:115
    4116:	412c      	.short	0x412c
    4118:	00000000 	.word	0x00000000
    411c:	72656804 	.word	0x72656804
    4120:	65          	.byte	0x65
	...

00004122 <Code_953>:
here():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:121

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "here" @ ( -- addr ) Gives Dictionarypointer
here: @ Gibt den Dictionarypointer zurück
@ -----------------------------------------------------------------------------
  pushdatos    @ Platz auf dem Datenstack schaffen
    4122:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:122
  ldr tos, =Dictionarypointer
    4126:	4eb8      	ldr	r6, [pc, #736]	; (4408 <Code_1007+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:123
  ldr tos, [tos] @ Hole den Dictionarypointer
    4128:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:124
  bx lr
    412a:	4770      	bx	lr

0000412c <Dictionary_955>:
Dictionary_955():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:124
    412c:	0000425a 	.word	0x0000425a
    4130:	660d0000 	.word	0x660d0000
    4134:	6873616c 	.word	0x6873616c
    4138:	2d726176 	.word	0x2d726176
    413c:	65726568 	.word	0x65726568

00004140 <Code_955>:
flashvarhere():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:130

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "flashvar-here" @ ( -- a-addr ) Gives RAM management pointer
flashvarhere:
@ -----------------------------------------------------------------------------
  pushdatos
    4140:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:131
  ldr tos, =VariablenPointer
    4144:	4eb3      	ldr	r6, [pc, #716]	; (4414 <Code_1007+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:132
  ldr tos, [tos]
    4146:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:133
  bx lr
    4148:	4770      	bx	lr

0000414a <nullprobekomma>:
nullprobekomma():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:141
@ Verschiedene Sprünge, die von den Kontrollstrukturen gebracht werden.
@ Some jump primitives that are useful for building control structures
@------------------------------------------------------------------------------

nullprobekomma: @ Write code for comparing TOS to zero.
  push {lr}
    414a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:142
  pushdaconstw 0x2e00 @ cmp tos, #0
    414c:	f847 6d04 	str.w	r6, [r7, #-4]!
    4150:	f642 6600 	movw	r6, #11776	; 0x2e00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:143
  bl hkomma
    4154:	f7ff fc24 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:144
  bl drop_hkomma
    4158:	f7ff fc18 	bl	398c <drop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:145
  pop {pc}
    415c:	bd00      	pop	{pc}

0000415e <branch_r>:
branch_r():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:148

branch_r:     @ ( -- Sprungziel )  Einleitung bedingter und unbedingter Rückwärtssprung
    b.n here  @ ( -- Target )      Intro of conditional and unconditional backwards jump
    415e:	e7e0      	b.n	4122 <Code_953>

00004160 <r_branch_jne>:
r_branch_jne():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:151

r_branch_jne: @ ( Sprungziel -- )  Abschluss besonderer bedingter Rückwärtssprung für loop
  push {lr}   @ ( Target -- )      Finalisation of special conditional backwards jump for loop
    4160:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:152
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
    4162:	f000 f83a 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:153
  swap
    4166:	6839      	ldr	r1, [r7, #0]
    4168:	603e      	str	r6, [r7, #0]
    416a:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:154
  pushdaconstw 0xD100 @ Opcode für den bedingten Sprung bne  Opcode for conditional jump BNE
    416c:	f847 6d04 	str.w	r6, [r7, #-4]!
    4170:	f24d 1600 	movw	r6, #53504	; 0xd100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:155
  bl cjumpgenerator
    4174:	f7ff ff85 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:156
  pop {pc}
    4178:	bd00      	pop	{pc}

0000417a <r_branch_jvc>:
r_branch_jvc():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:159

r_branch_jvc: @ ( Sprungziel -- )  Abschluss besonderer bedingter Rückwärtssprung bei Überlauf für +loop
  push {lr}   @ ( Target -- )      Finalisation of conditional backwards jump on overflow for +loop
    417a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:160
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
    417c:	f000 f82d 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:161
  swap
    4180:	6839      	ldr	r1, [r7, #0]
    4182:	603e      	str	r6, [r7, #0]
    4184:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:162
  pushdaconstw 0xD700 @ Opcode für den bedingten Sprung bvc  Opcode for conditional jump BVC, used for +loop
    4186:	f847 6d04 	str.w	r6, [r7, #-4]!
    418a:	f24d 7600 	movw	r6, #55040	; 0xd700
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:163
  bl cjumpgenerator
    418e:	f7ff ff78 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:164
  pop {pc}
    4192:	bd00      	pop	{pc}

00004194 <r_nullbranch>:
r_nullbranch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:167

r_nullbranch: @ ( Sprungziel -- )  Abschluss bedingter Rückwärtssprung
  push {lr}   @ ( Target -- )      Finalisation of conditional backwards jump
    4194:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:168
  bl nullprobekomma
    4196:	f7ff ffd8 	bl	414a <nullprobekomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:169
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
    419a:	f000 f81e 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:170
  swap
    419e:	6839      	ldr	r1, [r7, #0]
    41a0:	603e      	str	r6, [r7, #0]
    41a2:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:171
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
    41a4:	f847 6d04 	str.w	r6, [r7, #-4]!
    41a8:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:172
  bl cjumpgenerator
    41ac:	f7ff ff69 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:173
  pop {pc}
    41b0:	bd00      	pop	{pc}

000041b2 <r_branch>:
r_branch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:176

r_branch:     @ ( Sprungziel -- )  Abschluss unbedingter Rückwärtssprung
  push {lr}   @ ( Target -- )      Finalisation of unconditional backwards jump
    41b2:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:177
  bl branch_v @ ( pushda Dictionaryinter und 2 allot )
    41b4:	f000 f811 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:178
  swap
    41b8:	6839      	ldr	r1, [r7, #0]
    41ba:	603e      	str	r6, [r7, #0]
    41bc:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:179
  bl jumpgenerator
    41be:	f7ff ff93 	bl	40e8 <Code_948>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:180
  pop {pc}
    41c2:	bd00      	pop	{pc}

000041c4 <nullbranch_v>:
nullbranch_v():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:184


nullbranch_v: @ ( -- Adresse-für-Sprungbefehl )  Einleitung bedingter Vorwärtssprung
  push {lr}   @ ( -- Address-for-Opcode )        Intro of conditional forward jump
    41c4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:185
  bl nullprobekomma
    41c6:	f7ff ffc0 	bl	414a <nullprobekomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:186
  bl here
    41ca:	f7ff ffaa 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:187
  pushdaconst 2 @ Platz für die Opcodelücke schaffen  Allot space for filling in Opcode later
    41ce:	f847 6d04 	str.w	r6, [r7, #-4]!
    41d2:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:188
  bl allot
    41d4:	f7ff fc52 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:189
  pop {pc}
    41d8:	bd00      	pop	{pc}

000041da <branch_v>:
branch_v():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:192

branch_v:     @ ( -- Adresse-für-Sprungbefehl )  Einleitung unbedingter Vorwärtssprung
  push {lr}   @ ( -- Address-for-Opcode )        Intro of unconditional forward jump
    41da:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:193
  bl here
    41dc:	f7ff ffa1 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:194
  pushdaconst 2 @ Platz für die Opcodelücke schaffen  Allot space for filling in Opcode later
    41e0:	f847 6d04 	str.w	r6, [r7, #-4]!
    41e4:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:195
  bl allot
    41e6:	f7ff fc49 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:196
  pop {pc}
    41ea:	bd00      	pop	{pc}

000041ec <v_branch>:
v_branch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:200


v_branch:      @ ( Adresse-für-Sprungbefehl -- ) Abschluss unbedingter Vorwärtssprung
  push {lr}    @ ( Address-for-Opcode -- )       Finalisation of unconditional forward jump
    41ec:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:201
  bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
    41ee:	f7ff ff98 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:202
  bl jumpgenerator
    41f2:	f7ff ff79 	bl	40e8 <Code_948>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:203
  pop {pc}
    41f6:	bd00      	pop	{pc}

000041f8 <v_nullbranch>:
v_nullbranch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:206

v_nullbranch:  @ ( Adresse-für-Sprungbefehl -- ) Abschluss bedingter Vorwärtssprung
  push {lr}    @ ( Address-for-Opcode -- )       Finalisation of conditional forward jump
    41f8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:207
  bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
    41fa:	f7ff ff92 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:208
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
    41fe:	f847 6d04 	str.w	r6, [r7, #-4]!
    4202:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:209
  bl cjumpgenerator
    4206:	f7ff ff3c 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:210
  pop {pc}
    420a:	bd00      	pop	{pc}

0000420c <v_casebranch>:
v_casebranch():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:213

v_casebranch:  @ ( Adresse-für-Sprungbefehl -- ) Abschluss besonderer bedingter Vorwärtssprung für case
  push {lr}    @ ( Address-for-Opcode -- )       Finalisation of special conditional forward jump for case
    420c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:214
  bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
    420e:	f7ff ff88 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:215
  pushdaconstw 0xD100 @ Opcode für den bedingten Sprung bne  Opcode for conditional jump BNE
    4212:	f847 6d04 	str.w	r6, [r7, #-4]!
    4216:	f24d 1600 	movw	r6, #53504	; 0xd100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:216
  bl cjumpgenerator
    421a:	f7ff ff32 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:217
  pop {pc}
    421e:	bd00      	pop	{pc}

00004220 <allocator_nullsprungprobe>:
allocator_nullsprungprobe():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:223


@------------------------------------------------------------------------------
allocator_nullsprungprobe:
@------------------------------------------------------------------------------
  push {lr}
    4220:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:230
      @ Der TOS-Register kann direkt untersucht und am Ende aus dem RA abgemeldet werden.
      @ Aufräumen am Ende, da wir zwei unterschiedliche Zweige anlegen werden.

      @ Benötige also zwei Elemente: Eins, um den Vergleich anzulegen und eins, welches nachrücken soll.

  bl expect_one_element @ Mindestens ein Element präparieren.
    4222:	f7fc f959 	bl	4d8 <expect_one_element>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:232

  bl tidyup_register_allocator_5os @ Alle anderen in Richtung des kanonischen Stacks putzen und aufräumen.
    4226:	f7fc f891 	bl	34c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:233
  bl tidyup_register_allocator_4os
    422a:	f7fc f894 	bl	356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:234
  bl tidyup_register_allocator_3os
    422e:	f7fc f897 	bl	360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:236

  ldr r1, [r0, #offset_state_nos]
    4232:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:237
  cmp r1, #constant
    4234:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:238
  bne 1f
    4236:	d101      	bne.n	423c <allocator_nullsprungprobe+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:239
    bl expect_nos_in_register @ Falls NOS eine Konstante ist, muss sie nun geladen werden
    4238:	f7fc f994 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:240
1:bl expect_tos_in_register @ TOS wird beprobt und muss im Register sein
    423c:	f7fc f988 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:244

  @ Vergleiche TOS mit Null - dafür muss eine Probe geschrieben werden !

  pushdaconstw 0x2800 @ cmp r0, #0
    4240:	f847 6d04 	str.w	r6, [r7, #-4]!
    4244:	f642 0600 	movw	r6, #10240	; 0x2800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:245
  lsls r1, #8 @ Register passend schieben
    4248:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:246
  orrs tos, r1
    424a:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:247
  bl hkomma
    424c:	f7ff fba8 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:249

  bl eliminiere_tos @ Wirf das gerade verglichene Element fort.
    4250:	f7fc f845 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:251

  bl tidyup_register_allocator @ Das nachrückende Element ist bereits ein Register - so kann hier nur noch ein MOV-Opcode geschrieben werden, der die Flags erhält.
    4254:	f7fc f86e 	bl	334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:253

  pop {pc}
    4258:	bd00      	pop	{pc}

0000425a <Dictionary_979>:
Dictionary_979():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:253
    425a:	4286      	.short	0x4286
    425c:	00300000 	.word	0x00300000
    4260:	65687404 	.word	0x65687404
    4264:	6e          	.byte	0x6e
	...

00004266 <Code_979>:
Code_979():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:261
  Wortbirne Flag_immediate_compileonly, "then"
  @ ( Adresse-für-Sprung Opcode"0" | Adresse-für-Sprung 5 -- )
  @ ( Address-for-Jump   Opcode"0" | Address-for-Jump 5 --)
struktur_then:
@------------------------------------------------------------------------------
  cmp tos, #5 @ Unbedingten Vorwärtssprung einfügen
    4266:	2e05      	cmp	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:262
  bne 1f
    4268:	d101      	bne.n	426e <Code_979+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:263
    drop @ ( Sprunglücke )
    426a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:264
    b.n v_branch @ Abschluss unbedingter Vorwärtssprung  Fill in unconditional forward jummp
    426c:	e7be      	b.n	41ec <v_branch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:266

1:uxtb r1, tos @ Das unterste Byte muss als Strukturerkennung 0 enthalten.
    426e:	b2f1      	uxtb	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:267
  cmp r1, #0 @ Bedingten Vorwärtssprung einfügen
    4270:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:268
  bne.n strukturen_passen_nicht
    4272:	d16d      	bne.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:270
    @ ( Sprunglücke Opcode )
    push {lr}
    4274:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:271
    bl here @ Sprungziel auf den Stack legen  Put target for jump on datastack
    4276:	f7ff ff54 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:272
    swap
    427a:	6839      	ldr	r1, [r7, #0]
    427c:	603e      	str	r6, [r7, #0]
    427e:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:273
    bl cjumpgenerator @ Abschluss bedingter Vorwärtssprung v_nullbranch  Fill in conditional forward jump
    4280:	f7ff feff 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:274
    pop {pc}
    4284:	bd00      	pop	{pc}

00004286 <Dictionary_982>:
Dictionary_982():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:274
    4286:	42a2      	.short	0x42a2
    4288:	00300000 	.word	0x00300000
    428c:	736c6504 	.word	0x736c6504
    4290:	65          	.byte	0x65
	...

00004292 <Code_982>:
Code_982():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:279

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "else"
@------------------------------------------------------------------------------
  push {lr}
    4292:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:280
  bl struktur_ahead
    4294:	f000 f836 	bl	4304 <Code_991>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:281
  bl dswap
    4298:	f7fc f9e9 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:282
  bl struktur_then
    429c:	f7ff ffe3 	bl	4266 <Code_979>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:283
  pop {pc}
    42a0:	bd00      	pop	{pc}

000042a2 <Dictionary_983>:
Dictionary_983():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:283
    42a2:	42f8      	.short	0x42f8
    42a4:	06300000 	.word	0x06300000
    42a8:	6902      	.short	0x6902
    42aa:	66          	.byte	0x66
	...

000042ac <Code_983>:
Code_983():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:290
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator|Flag_Sprungschlucker, "if"
struktur_if: @ ( -- Adresse-für-Sprung Opcode"0" )
             @ ( -- Address-for-Jump   Opcode"0" )
@------------------------------------------------------------------------------
  push {lr}
    42ac:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:291
  bl nullbranch_v
    42ae:	f7ff ff89 	bl	41c4 <nullbranch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:292
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
    42b2:	f847 6d04 	str.w	r6, [r7, #-4]!
    42b6:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:293
  pop {pc}            @ Strukturerkennung  Structure matching "0" already in opcode
    42ba:	bd00      	pop	{pc}

000042bc <struktur_if_allokator>:
struktur_if_allokator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:296

struktur_if_allokator:
  push {lr} @ Spezialeinsprung des Registerallokators:
    42bc:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:298

  bl push_lr_nachholen
    42be:	f7fc f99e 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:300

  bl eliminiere_tos_wenn_bmi
    42c2:	f7fd fa70 	bl	17a6 <eliminiere_tos_wenn_bmi>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:302

  ldr r1, [r0, #offset_sprungtrampolin]
    42c6:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:303
  cmp r1, #0
    42c8:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:304
  beq 1f
    42ca:	d007      	beq.n	42dc <struktur_if_allokator+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:306

    push {r1} @ Der Sprungopcode liegt schon bereit !
    42cc:	b402      	push	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:307
    bl tidyup_register_allocator @ Den kanonischen Stack wieder herstellen. In diesem Fall sind alle Elemente in Registern oder auf dem Stack, so dass dabei die Flags erhalten bleiben.
    42ce:	f7fc f831 	bl	334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:310
                                 @ Außerdem wird das Sprungtrampolin dabei gelöscht. Fein !

    bl branch_v   @ Sprunglücke erschaffen
    42d2:	f7ff ff82 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:312

    pushdatos     @ Opcode bereitlegen mit Strukturerkennung "0"
    42d6:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:313
    pop {tos, pc}
    42da:	bd40      	pop	{r6, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:315

1:bl allocator_nullsprungprobe
    42dc:	f7ff ffa0 	bl	4220 <allocator_nullsprungprobe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:316
  bl here
    42e0:	f7ff ff1f 	bl	4122 <Code_953>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:317
  pushdaconst 2 @ Platz für die Opcodelücke schaffen  Allot space for filling in Opcode later
    42e4:	f847 6d04 	str.w	r6, [r7, #-4]!
    42e8:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:318
  bl allot
    42ea:	f7ff fbc7 	bl	3a7c <Code_867>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:320

  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ mit Strukturerkennung "0"
    42ee:	f847 6d04 	str.w	r6, [r7, #-4]!
    42f2:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:321
  pop {pc}
    42f6:	bd00      	pop	{pc}

000042f8 <Dictionary_991>:
Dictionary_991():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:321
    42f8:	00004312 	.word	0x00004312
    42fc:	61050030 	.word	0x61050030
    4300:	64616568 	.word	0x64616568

00004304 <Code_991>:
struktur_ahead():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:327

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "ahead"
struktur_ahead: @ ( -- Adresse-für-Sprung 5 )   ( -- Address-for-Jump 5 )
@------------------------------------------------------------------------------
  push {lr}
    4304:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:328
  bl branch_v
    4306:	f7ff ff68 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:329
  pushdaconst 5           @ Strukturerkennung  Structure matching
    430a:	f847 6d04 	str.w	r6, [r7, #-4]!
    430e:	2605      	movs	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:330
  pop {pc}
    4310:	bd00      	pop	{pc}

00004312 <Dictionary_994>:
Dictionary_994():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:330
    4312:	432c      	.short	0x432c
    4314:	00300000 	.word	0x00300000
    4318:	70657206 	.word	0x70657206
    431c:	6165      	.short	0x6165
    431e:	74          	.byte	0x74
	...

00004320 <Code_994>:
Code_994():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:335

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "repeat"
@------------------------------------------------------------------------------
  push {lr}
    4320:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:336
  bl struktur_again
    4322:	f000 f860 	bl	43e6 <Code_1005>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:337
  bl struktur_then
    4326:	f7ff ff9e 	bl	4266 <Code_979>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:338
  pop {pc}
    432a:	bd00      	pop	{pc}

0000432c <Dictionary_995>:
Dictionary_995():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:338
    432c:	0000437a 	.word	0x0000437a
    4330:	77050630 	.word	0x77050630
    4334:	656c6968 	.word	0x656c6968

00004338 <Code_995>:
Code_995():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:343

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator|Flag_Sprungschlucker, "while"
@------------------------------------------------------------------------------
  push {lr}
    4338:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:344
  bl struktur_if
    433a:	f7ff ffb7 	bl	42ac <Code_983>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:345
  bl dswap
    433e:	f7fc f996 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:346
  pop {pc}
    4342:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:348
  @------------------------------------------------------------
  push {lr}
    4344:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:349
  bl struktur_if_allokator
    4346:	f7ff ffb9 	bl	42bc <struktur_if_allokator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:350
  bl dswap
    434a:	f7fc f990 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:351
  pop {pc}
    434e:	bd00      	pop	{pc}

00004350 <strukturen_passen_nicht>:
strukturen_passen_nicht():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:355

@ An diese Stelle gelegt, damit die Sprungweiten hinkommen.
strukturen_passen_nicht:
  Fehler_Quit "Structures don't match"
    4350:	f7fe fda0 	bl	2e94 <dotgaensefuesschen>
    4354:	5b1b1521 	.word	0x5b1b1521
    4358:	536d3133 	.word	0x536d3133
    435c:	63757274 	.word	0x63757274
    4360:	65727574 	.word	0x65727574
    4364:	6f642073 	.word	0x6f642073
    4368:	2074276e 	.word	0x2074276e
    436c:	6374616d 	.word	0x6374616d
    4370:	305b1b68 	.word	0x305b1b68
    4374:	0a6d      	.short	0x0a6d
    4376:	f000 bdd7 	b.w	4f28 <Code_1230>

0000437a <Dictionary_997>:
Dictionary_997():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:355
    437a:	43da      	.short	0x43da
    437c:	06300000 	.word	0x06300000
    4380:	746e7505 	.word	0x746e7505
    4384:	6c69      	.short	0x6c69

00004386 <Code_997>:
Code_997():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:361

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator|Flag_Sprungschlucker, "until"  @ Bedingte Schleife
  @ ( Sprungziel 1 -- )                                         @ Conditional loop
@------------------------------------------------------------------------------
  cmp tos, #1
    4386:	2e01      	cmp	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:362
  bne.n strukturen_passen_nicht
    4388:	d1e2      	bne.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:363
  drop
    438a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:364
  b.n r_nullbranch  @ Write conditional jump
    438c:	e702      	b.n	4194 <r_nullbranch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:365
  bx lr @ Endmarkierung für den Allokatoreinsprung
    438e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:367
@------------------------------------------------------------------------------
  cmp tos, #1
    4390:	2e01      	cmp	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:368
  bne.n strukturen_passen_nicht
    4392:	d1dd      	bne.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:369
  drop
    4394:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:371

  push {lr}
    4396:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:372
  bl eliminiere_tos_wenn_bmi
    4398:	f7fd fa05 	bl	17a6 <eliminiere_tos_wenn_bmi>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:374

  ldr r1, [r0, #offset_sprungtrampolin]
    439c:	6a81      	ldr	r1, [r0, #40]	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:375
  cmp r1, #0
    439e:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:376
  beq 1f
    43a0:	d00d      	beq.n	43be <Code_997+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:378

    push {r1} @ Der Sprungopcode liegt schon bereit !
    43a2:	b402      	push	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:380

    bl tidyup_register_allocator @ Den kanonischen Stack wieder herstellen. In diesem Fall sind alle Elemente in Registern oder auf dem Stack, so dass dabei die Flags erhalten bleiben.
    43a4:	f7fb ffc6 	bl	334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:383
                                 @ Außerdem wird das Sprungtrampolin dabei gelöscht. Fein !

    bl branch_v @ ( pushda Dictionarypointer und 2 allot )
    43a8:	f7ff ff17 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:385

    swap
    43ac:	6839      	ldr	r1, [r7, #0]
    43ae:	603e      	str	r6, [r7, #0]
    43b0:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:387

    pushdatos
    43b2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:388
    pop {tos}
    43b6:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:390

    bl cjumpgenerator
    43b8:	f7ff fe63 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:391
    pop {pc}
    43bc:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:393

1:bl allocator_nullsprungprobe
    43be:	f7ff ff2f 	bl	4220 <allocator_nullsprungprobe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:394
  bl branch_v @ ( pushda Dictionarypointer und 2 allot )
    43c2:	f7ff ff0a 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:395
  swap
    43c6:	6839      	ldr	r1, [r7, #0]
    43c8:	603e      	str	r6, [r7, #0]
    43ca:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:396
  pushdaconstw 0xD000 @ Opcode für den bedingten Sprung beq  Opcode for conditional jump BEQ
    43cc:	f847 6d04 	str.w	r6, [r7, #-4]!
    43d0:	f24d 0600 	movw	r6, #53248	; 0xd000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:397
  bl cjumpgenerator
    43d4:	f7ff fe55 	bl	4082 <Code_944>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:398
  pop {pc}
    43d8:	bd00      	pop	{pc}

000043da <Dictionary_1005>:
Dictionary_1005():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:398
    43da:	43ee      	.short	0x43ee
    43dc:	00300000 	.word	0x00300000
    43e0:	61676105 	.word	0x61676105
    43e4:	6e69      	.short	0x6e69

000043e6 <Code_1005>:
struktur_again():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:404

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "again"  @ Endlosschleife
struktur_again:  @ ( Sprungziel 1 -- )           @ Unconditional loop
@------------------------------------------------------------------------------
  cmp tos, #1
    43e6:	2e01      	cmp	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:405
  bne.n strukturen_passen_nicht
    43e8:	d1b2      	bne.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:406
  drop
    43ea:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:407
  b.n r_branch      @ Write unconditional jump
    43ec:	e6e1      	b.n	41b2 <r_branch>

000043ee <Dictionary_1007>:
Dictionary_1007():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:407
    43ee:	4418      	.short	0x4418
    43f0:	00300000 	.word	0x00300000
    43f4:	67656205 	.word	0x67656205
    43f8:	6e69      	.short	0x6e69

000043fa <Code_1007>:
Code_1007():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:413

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "begin"
  @ ( -- Sprungziel 1 )  ( -- Jump-destination 1 )
@------------------------------------------------------------------------------
  push {lr}
    43fa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:414
  bl branch_r
    43fc:	f7ff feaf 	bl	415e <branch_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:415
  pushdaconst 1  @ Strukturerkennung  Structure matching
    4400:	f847 6d04 	str.w	r6, [r7, #-4]!
    4404:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:416
  pop {pc}
    4406:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:68
      ldr r2, =Dictionarypointer
    4408:	2001ffd0 	.word	0x2001ffd0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:93
  ldr r1, =0xFFFFF801  @ 10 Bits frei
    440c:	fffff801 	.word	0xfffff801
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:98
  ldr r2, =0xFFFFF800
    4410:	fffff800 	.word	0xfffff800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:131
  ldr tos, =VariablenPointer
    4414:	2000001c 	.word	0x2000001c

00004418 <Dictionary_1010>:
Dictionary_1010():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/controlstructures.s:131
    4418:	00004432 	.word	0x00004432
    441c:	6b010220 	.word	0x6b010220

00004420 <Code_1010>:
Code_1010():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:29

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "k" @ Kopiert den drittobersten Schleifenindex  Third loop index
@------------------------------------------------------------------------------
  @ Returnstack ( Limit Index Limit Index )
  pushdatos
    4420:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:30
  ldr tos, [sp, #8]
    4424:	9e02      	ldr	r6, [sp, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:31
  bx lr
    4426:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:33
@------------------------------------------------------------------------------
  pushdaconstw 0x9802
    4428:	f847 6d04 	str.w	r6, [r7, #-4]!
    442c:	f649 0602 	movw	r6, #38914	; 0x9802
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:34
  b.n loop_j_allocator
    4430:	e00b      	b.n	444a <loop_j_allocator>

00004432 <Dictionary_1014>:
Dictionary_1014():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:34
    4432:	4460      	.short	0x4460
    4434:	02200000 	.word	0x02200000
    4438:	6a01      	.short	0x6a01

0000443a <Code_1014>:
Code_1014():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:40

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "j" @ Kopiert den zweitobersten Schleifenindex  Second loop index
@------------------------------------------------------------------------------
  @ Returnstack ( Limit Index )
  pushdatos
    443a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:41
  ldr tos, [sp]
    443e:	9e00      	ldr	r6, [sp, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:42
  bx lr
    4440:	4770      	bx	lr

00004442 <rfetch_allocator>:
rfetch_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:46
@------------------------------------------------------------------------------

rfetch_allocator:
  pushdaconstw 0x9800
    4442:	f847 6d04 	str.w	r6, [r7, #-4]!
    4446:	f649 0600 	movw	r6, #38912	; 0x9800

0000444a <loop_j_allocator>:
loop_j_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:48
loop_j_allocator:
  push {lr}
    444a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:49
  bl befreie_tos
    444c:	f7fb ff3d 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:50
  bl get_free_register
    4450:	f7fc f80e 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:51
  str r3, [r0, #offset_state_tos]
    4454:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:52
  lsls r3, #8
    4456:	021b      	lsls	r3, r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:53
  orrs tos, r3
    4458:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:54
  bl hkomma
    445a:	f7ff faa1 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:55
  pop {pc}
    445e:	bd00      	pop	{pc}

00004460 <Dictionary_1018>:
Dictionary_1018():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:55
    4460:	0000448c 	.word	0x0000448c
    4464:	69010220 	.word	0x69010220

00004468 <Code_1018>:
Code_1018():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:61

@------------------------------------------------------------------------------
  Wortbirne Flag_inline|Flag_allocator, "i" @ Kopiert den obersten Schleifenindex       Innermost loop index
@------------------------------------------------------------------------------
  @ Returnstack ( )
  pushda rloopindex @ Ist immer im Register.
    4468:	f847 6d04 	str.w	r6, [r7, #-4]!
    446c:	0026      	movs	r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:62
  bx lr
    446e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:64
@------------------------------------------------------------------------------
  push {lr}
    4470:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:65
  pushdaconstw 0x0020
    4472:	f847 6d04 	str.w	r6, [r7, #-4]!
    4476:	f240 0620 	movw	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:66
  bl befreie_tos
    447a:	f7fb ff26 	bl	2ca <befreie_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:67
  bl get_free_register
    447e:	f7fb fff7 	bl	470 <get_free_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:68
  str r3, [r0, #offset_state_tos]
    4482:	6003      	str	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:69
  orrs tos, r3
    4484:	431e      	orrs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:70
  bl hkomma
    4486:	f7ff fa8b 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:71
  pop {pc}
    448a:	bd00      	pop	{pc}

0000448c <Dictionary_1023>:
Dictionary_1023():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:71
    448c:	000044ca 	.word	0x000044ca
    4490:	6c050030 	.word	0x6c050030
    4494:	65766165 	.word	0x65766165

00004498 <Code_1023>:
Code_1023():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:111
  @ Alle Stackelemente weiterschieben, Sprungadresse einfügen, Zähler erhöhen, Lücke anlegen.

  @ LeavePointer points to the location which counts the number of jumps that have to be inserted later.
  @ Leave moves all elements of stack further, inserts address for jump opcode, increments counter and allots space.

  push {lr}
    4498:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:121
  @ Muss eine Lücke im Stack schaffen, alles NACH der Position des leavepointers muss weiterrücken.

  @ Make a hole in datastack at the lcoation the leavepointer points to for inserting the new location a jump opcode has to be patched in later
  @ by moving all other elements further one place in datastack.

  ldr r0, =leavepointer
    449a:	4875      	ldr	r0, [pc, #468]	; (4670 <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:122
  ldr r1, [r0] @ Die Stelle, wohin er zeigt = Inhalt der Variable Leavepointer
    449c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:124

  movs r3, psp @ Alter Stackpointer  Old stackpointer
    449e:	003b      	movs	r3, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:125
  subs psp, #4 @ Ein Element mehr auf dem Stack  One more element on stack after this
    44a0:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:128

1:@ Lückenschiebeschleife
  ldr r2, [r3]  @ mov @r10, -2(r10)
    44a2:	681a      	ldr	r2, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:129
  subs r3, #4
    44a4:	3b04      	subs	r3, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:130
  str r2, [r3]
    44a6:	601a      	str	r2, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:133
@  adds r3, #4

  adds r3, #8
    44a8:	3308      	adds	r3, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:134
  cmp r3, r1 @ r1 enthält die Stelle am Ende
    44aa:	428b      	cmp	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:135
  bne 1b
    44ac:	d1f9      	bne.n	44a2 <Code_1023+0xa>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:141

  @ Muss jetzt die Stelle auf dem Stack, wo die Sprünge gezählt werden um Eins erhöhen
  @ und an der freigewordenen Stelle die Lückenadresse einfügen.
  @ Increment the number of jumps to be filled in later

  push {r0, r1}
    44ae:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:142
  bl branch_v
    44b0:	f7ff fe93 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:143
  pop {r0, r1}
    44b4:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:145

  popda r3 @ Die Lückenadresse
    44b6:	0033      	movs	r3, r6
    44b8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:148

  @ Insert the address of location for jump opcode in datastack
  subs r1, #4  @ Weiter in Richtung Spitze des Stacks wandern
    44ba:	3904      	subs	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:149
  str r3, [r1] @ Lückenadresse einfügen
    44bc:	600b      	str	r3, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:152

  @ Den neuen Leavepointer vermerken  Update leavepointer
  str r1, [r0]
    44be:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:155

  @ Increment counter for number of jumps to be generated later
  subs r1, #4   @ Weiter in Richtung Spitze des Stacks wandern
    44c0:	3904      	subs	r1, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:156
  ldr r2, [r1]  @ Sprungzähler aus dem Stack kopieren
    44c2:	680a      	ldr	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:158

  adds r2, #1   @ Den Sprungzähler um eins erhöhen
    44c4:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:159
  str r2, [r1]  @ und zurückschreiben.
    44c6:	600a      	str	r2, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:161

  pop {pc}
    44c8:	bd00      	pop	{pc}

000044ca <Dictionary_1025>:
Dictionary_1025():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:161
    44ca:	44dc      	.short	0x44dc
    44cc:	00200000 	.word	0x00200000
    44d0:	6c6e7506 	.word	0x6c6e7506
    44d4:	6f6f      	.short	0x6f6f
    44d6:	70          	.byte	0x70
	...

000044d8 <Code_1025>:
Code_1025():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:168

@------------------------------------------------------------------------------
  Wortbirne Flag_inline, "unloop" @ Wirft die Schleifenstruktur vom Returnstack
unloop:                           @ Remove loop structure from returnstack
@------------------------------------------------------------------------------
  pop {rloopindex, rlooplimit}  @ Hole die alten Schleifenwerte zurück  Fetch back old loop values
    44d8:	bc30      	pop	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:169
  bx lr
    44da:	4770      	bx	lr

000044dc <Dictionary_1026>:
Dictionary_1026():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:169
    44dc:	00004514 	.word	0x00004514
    44e0:	2b050030 	.word	0x2b050030
    44e4:	706f6f6c 	.word	0x706f6f6c

000044e8 <Code_1026>:
Code_1026():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:182
  @ ( AlterLeavePointer ... ZahlderAdressen Sprungziel 3 -- )

  @ Usage: ( Increment -- ).
  @ ( OldLeavePointer ... NumberofJumps Target 3 -- )
  @------------------------------------------------------------------------------
  cmp tos, #3 @ Structure matching
    44e8:	2e03      	cmp	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:183
  beq 1f
    44ea:	d000      	beq.n	44ee <Code_1026+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:184
  b.n strukturen_passen_nicht
    44ec:	e730      	b.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:185
1:drop
    44ee:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:187

  push {lr}
    44f0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:188
  pushdatos
    44f2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:189
  ldr tos, =struktur_plusloop
    44f6:	4e5f      	ldr	r6, [pc, #380]	; (4674 <gemeinsame_schleifenoptimierung+0x86>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:190
  bl inlinekomma  @ Inline the code needed for +loop
    44f8:	f7ff f813 	bl	3522 <Code_761>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:191
  bl r_branch_jvc @ +loop entscheidet mit dem arithmetrischen Überlauf
    44fc:	f7ff fe3d 	bl	417a <r_branch_jvc>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:194
                  @ Insert a jump on overflow for +loop logic

  b.n loop_intern
    4500:	e01a      	b.n	4538 <loop_intern>

00004502 <struktur_plusloop>:
struktur_plusloop():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:211
  bx lr

  .else

struktur_plusloop:
  adds rloopindex, #0x80000000  @ Index + $8000
    4502:	f114 4400 	adds.w	r4, r4, #2147483648	; 0x80000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:212
  subs rloopindex, rlooplimit   @ Index + $8000 - Limit
    4506:	1b64      	subs	r4, r4, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:214

  adds rloopindex, tos         @ Index + $8000 - Limit + Schritt  Hier werden die Flags gesetzt. Überlauf bedeutet: Schleife beenden.
    4508:	19a4      	adds	r4, r4, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:216
                               @ Flags are set here, Overflow means: Terminate loop.
  drop                         @ Runterwerfen, dabei Flags nicht verändern  Drop, but don't change Flags anymore.
    450a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:218

  add rloopindex, rlooplimit   @ Index + $8000 + Schritt   Flags nicht verändern !
    450c:	442c      	add	r4, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:219
  sub rloopindex, #0x80000000  @ Index + Schritt           Flags nicht verändern !
    450e:	f1a4 4400 	sub.w	r4, r4, #2147483648	; 0x80000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:220
  bx lr
    4512:	4770      	bx	lr

00004514 <Dictionary_1030>:
Dictionary_1030():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:220
    4514:	00004556 	.word	0x00004556
    4518:	6c040030 	.word	0x6c040030
    451c:	6f6f      	.short	0x6f6f
    451e:	70          	.byte	0x70
	...

00004520 <Code_1030>:
Code_1030():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:231
  @ ( AlterLeavePointer ... ZahlderAdressen Sprungziel 3 -- )

  @ Usage: ( -- ).
  @ ( OldLeavePointer ... NumberofJumps Target 3 -- )
@------------------------------------------------------------------------------
  cmp tos, #3 @ Structure matching
    4520:	2e03      	cmp	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:232
  beq 1f
    4522:	d000      	beq.n	4526 <Code_1030+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:233
  b.n strukturen_passen_nicht
    4524:	e714      	b.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:234
1:drop
    4526:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:236

  push {lr}
    4528:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:237
  pushdatos
    452a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:238
  ldr tos, =struktur_loop
    452e:	4e52      	ldr	r6, [pc, #328]	; (4678 <gemeinsame_schleifenoptimierung+0x8a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:239
  bl inlinekomma  @ Inline the code needed for +loop
    4530:	f7fe fff7 	bl	3522 <Code_761>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:240
  bl r_branch_jne @ Jump if Limit and Index are not equal this time
    4534:	f7ff fe14 	bl	4160 <r_branch_jne>

00004538 <loop_intern>:
loop_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:243

loop_intern:
  bl spruenge_einpflegen @ Die gleiche Routine ist in Endcase am Werk
    4538:	f000 f94a 	bl	47d0 <spruenge_einpflegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:245
                         @ Code to fill in jump opcodes is the same as in endcase.
  ldr r0, =leavepointer
    453c:	484c      	ldr	r0, [pc, #304]	; (4670 <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:246
  popda r1               @ Zurückholen für die nächste Schleifenebene
    453e:	0031      	movs	r1, r6
    4540:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:247
  str r1, [r0]           @ Fetch back old leavepointer for next loop layer.
    4542:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:249

  pushdatos
    4544:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:250
  ldr tos, =unloop      @ Inline unloop code
    4548:	4e4c      	ldr	r6, [pc, #304]	; (467c <gemeinsame_schleifenoptimierung+0x8e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:251
  bl inlinekomma
    454a:	f7fe ffea 	bl	3522 <Code_761>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:252
  pop {pc}
    454e:	bd00      	pop	{pc}

00004550 <struktur_loop>:
struktur_loop():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:255

struktur_loop:
  adds rloopindex, #1          @ Index erhöhen           Increment Index
    4550:	3401      	adds	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:256
  cmp rloopindex, rlooplimit   @ Mit Limit vergleichen   Compare with Limit
    4552:	42ac      	cmp	r4, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:257
  bx lr @ Ende für inline,   End marker for inline,
    4554:	4770      	bx	lr

00004556 <Dictionary_1035>:
Dictionary_1035():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:257
    4556:	459e      	.short	0x459e
    4558:	02300000 	.word	0x02300000
    455c:	6402      	.short	0x6402
    455e:	6f          	.byte	0x6f
	...

00004560 <Code_1035>:
Code_1035():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:267
  @ ( -- AlterLeavePointer 0 Sprungziel 3 )

  @ Usage: ( Limit Index -- ).
  @ ( -- OldLeavePointer 0 Target 3 )
@------------------------------------------------------------------------------
  push {lr}
    4560:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:269

  pushdatos
    4562:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:270
  ldr tos, =struktur_do  @ Inline opcodes for do
    4566:	4e46      	ldr	r6, [pc, #280]	; (4680 <gemeinsame_schleifenoptimierung+0x92>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:271
  bl inlinekomma
    4568:	f7fe ffdb 	bl	3522 <Code_761>

0000456c <do_rest_der_schleifenstruktur>:
do_rest_der_schleifenstruktur():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:274

do_rest_der_schleifenstruktur:
  ldr r0, =leavepointer
    456c:	4840      	ldr	r0, [pc, #256]	; (4670 <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:275
  ldr r1, [r0]
    456e:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:276
  pushda r1     @ Alten Leavepointer sichern  Save old leavepointer
    4570:	f847 6d04 	str.w	r6, [r7, #-4]!
    4574:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:277
  pushdaconst 0
    4576:	f847 6d04 	str.w	r6, [r7, #-4]!
    457a:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:278
  str psp, [r0] @ Aktuelle Position im Stack sichern  Save current position on datastack
    457c:	6007      	str	r7, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:280

  bl branch_r    @ Schleifen-Rücksprung vorbereiten  Prepare loop jump back to the beginning
    457e:	f7ff fdee 	bl	415e <branch_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:281
  pushdaconst 3  @ Strukturerkennung  Structure matching
    4582:	f847 6d04 	str.w	r6, [r7, #-4]!
    4586:	2603      	movs	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:284
@  writeln "do-Struktur"
@  bl hexdots
  pop {pc}
    4588:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:288

@------------------------------------------------------------------------------
  @ Opcodable optimisations enter here. At least one folding constant available.
  push {lr}
    458a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:289
  bl gemeinsame_schleifenoptimierung
    458c:	f000 f82f 	bl	45ee <gemeinsame_schleifenoptimierung>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:290
  b.n do_rest_der_schleifenstruktur
    4590:	e7ec      	b.n	456c <do_rest_der_schleifenstruktur>

00004592 <struktur_do>:
struktur_do():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:293

struktur_do:
  push {rloopindex, rlooplimit}
    4592:	b430      	push	{r4, r5}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:294
  popda rloopindex
    4594:	0034      	movs	r4, r6
    4596:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:295
  popda rlooplimit
    4598:	0035      	movs	r5, r6
    459a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:296
  bx lr @ Ende für inline,  End for inline,
    459c:	4770      	bx	lr

0000459e <Dictionary_1045>:
Dictionary_1045():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:296
    459e:	4684      	.short	0x4684
    45a0:	02300000 	.word	0x02300000
    45a4:	6f643f03 	.word	0x6f643f03

000045a8 <Code_1045>:
Code_1045():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:309

  @ Usage: ( Limit Index -- ).
  @ ( -- OldLeavePointer Forward-Jump-Target 1 Target 3 )
  @ This loop terminates immediately if Limit=Index.
@------------------------------------------------------------------------------
  push {lr}
    45a8:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:310
  pushdatos
    45aa:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:311
  ldr tos, =struktur_do  @ Inline opcodes for do
    45ae:	4e34      	ldr	r6, [pc, #208]	; (4680 <gemeinsame_schleifenoptimierung+0x92>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:312
  bl inlinekomma
    45b0:	f7fe ffb7 	bl	3522 <Code_761>

000045b4 <qdo_rest_der_schleifenstruktur>:
qdo_rest_der_schleifenstruktur():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:315

qdo_rest_der_schleifenstruktur:
  pushdaconstw 0x42AC @ cmp rloopindex, rlooplimit @ Vergleiche die beiden Schleifenparameter  Compare both loop registers
    45b4:	f847 6d04 	str.w	r6, [r7, #-4]!
    45b8:	f244 26ac 	movw	r6, #17068	; 0x42ac
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:316
  bl hkomma
    45bc:	f7ff f9f0 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:318

  ldr r0, =leavepointer
    45c0:	482b      	ldr	r0, [pc, #172]	; (4670 <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:319
  ldr r1, [r0]
    45c2:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:320
  pushda r1     @ Alten Leavepointer sichern  Save old leavepointer
    45c4:	f847 6d04 	str.w	r6, [r7, #-4]!
    45c8:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:324

  @ An diese Stelle nun die Vorwärtssprunglücke einfügen:
  @ Allot an hole in which a forward jump is inserted later.
  bl branch_v    @ here 2 allot
    45ca:	f7ff fe06 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:325
  adds tos, #1   @ Markierung anbringen, dass ich mir einen bedingten Sprung wünsche
    45ce:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:328
                 @ This bit indicates that we need a conditional jump to be filled in here later.

  pushdaconst 1
    45d0:	f847 6d04 	str.w	r6, [r7, #-4]!
    45d4:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:329
  ldr r0, =leavepointer
    45d6:	4826      	ldr	r0, [pc, #152]	; (4670 <gemeinsame_schleifenoptimierung+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:330
  str psp, [r0] @ Aktuelle Position im Stack sichern  Save current position on datastack
    45d8:	6007      	str	r7, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:332

  bl branch_r    @ Schleifen-Rücksprung vorbereiten  Prepare loop jump back to the beginning
    45da:	f7ff fdc0 	bl	415e <branch_r>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:333
  pushdaconst 3  @ Strukturerkennung  Structure matching
    45de:	f847 6d04 	str.w	r6, [r7, #-4]!
    45e2:	2603      	movs	r6, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:334
  pop {pc}
    45e4:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:338

@------------------------------------------------------------------------------
  @ Opcodable optimisations enter here. At least one folding constant available.
  push {lr}
    45e6:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:339
  bl gemeinsame_schleifenoptimierung
    45e8:	f000 f801 	bl	45ee <gemeinsame_schleifenoptimierung>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:340
  b.n qdo_rest_der_schleifenstruktur
    45ec:	e7e2      	b.n	45b4 <qdo_rest_der_schleifenstruktur>

000045ee <gemeinsame_schleifenoptimierung>:
gemeinsame_schleifenoptimierung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:346


@------------------------------------------------------------------------------
gemeinsame_schleifenoptimierung: @ This is a common part for opcoding optimized do and ?do
@------------------------------------------------------------------------------
  push {lr}
    45ee:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:347
  bl push_lr_nachholen
    45f0:	f7fc f805 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:348
  bl expect_two_elements
    45f4:	f7fb ff7a 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:350

  bl tidyup_register_allocator_5os
    45f8:	f7fb fea8 	bl	34c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:351
  bl tidyup_register_allocator_4os
    45fc:	f7fb feab 	bl	356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:352
  bl tidyup_register_allocator_3os
    4600:	f7fb feae 	bl	360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:354

  pushdaconstw 0xB430 @ push {rloopindex, rlooplimit}
    4604:	f847 6d04 	str.w	r6, [r7, #-4]!
    4608:	f24b 4630 	movw	r6, #46128	; 0xb430
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:355
  bl hkomma
    460c:	f7ff f9c8 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:357

  ldr r1, [r0, #offset_state_tos]
    4610:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:358
  cmp r1, #constant
    4612:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:359
  beq 1f
    4614:	d008      	beq.n	4628 <gemeinsame_schleifenoptimierung+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:361
    @ TOS, the Index, is in a Register.
    pushdaconstw 0x0004
    4616:	f847 6d04 	str.w	r6, [r7, #-4]!
    461a:	f240 0604 	movw	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:362
    lsls r1, #3
    461e:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:363
    orrs tos, r1
    4620:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:364
    bl hkomma
    4622:	f7ff f9bd 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:365
    b 2f
    4626:	e007      	b.n	4638 <gemeinsame_schleifenoptimierung+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:367
1:  @ TOS is a constant.
    pushdatos
    4628:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:368
    ldr tos, [r0, #offset_constant_tos]
    462c:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:369
    pushdaconst 4
    462e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4632:	2604      	movs	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:370
    bl registerliteralkomma
    4634:	f7fe fe46 	bl	32c4 <Code_718>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:375
2:



  ldr r1, [r0, #offset_state_nos]
    4638:	6881      	ldr	r1, [r0, #8]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:376
  cmp r1, #constant
    463a:	2928      	cmp	r1, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:377
  beq 1f
    463c:	d008      	beq.n	4650 <gemeinsame_schleifenoptimierung+0x62>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:379
    @ NOS, the Limit, is in a Register.
    pushdaconstw 0x0005
    463e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4642:	f240 0605 	movw	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:380
    lsls r1, #3
    4646:	00c9      	lsls	r1, r1, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:381
    orrs tos, r1
    4648:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:382
    bl hkomma
    464a:	f7ff f9a9 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:383
    b 2f
    464e:	e007      	b.n	4660 <gemeinsame_schleifenoptimierung+0x72>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:385
1:  @ NOS is a constant.
    pushdatos
    4650:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:386
    ldr tos, [r0, #offset_constant_nos]
    4654:	68c6      	ldr	r6, [r0, #12]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:387
    pushdaconst 5
    4656:	f847 6d04 	str.w	r6, [r7, #-4]!
    465a:	2605      	movs	r6, #5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:388
    bl registerliteralkomma
    465c:	f7fe fe32 	bl	32c4 <Code_718>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:391
2:

  bl eliminiere_tos
    4660:	f7fb fe3d 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:392
  bl eliminiere_tos
    4664:	f7fb fe3b 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:394

  bl tidyup_register_allocator_tos @ TOS wieder in einen blitzeblanken Zustand versetzen !
    4668:	f7fb fe84 	bl	374 <tidyup_register_allocator_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:398

    @ writeln "Schleifenoptimierung fertig"
    @ bl hexdots
  pop {pc}
    466c:	bd00      	pop	{pc}
    466e:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:121
  ldr r0, =leavepointer
    4670:	20000004 	.word	0x20000004
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:189
  ldr tos, =struktur_plusloop
    4674:	00004502 	.word	0x00004502
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:238
  ldr tos, =struktur_loop
    4678:	00004550 	.word	0x00004550
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:250
  ldr tos, =unloop      @ Inline unloop code
    467c:	000044d8 	.word	0x000044d8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:270
  ldr tos, =struktur_do  @ Inline opcodes for do
    4680:	00004592 	.word	0x00004592

00004684 <Dictionary_1067>:
Dictionary_1067():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/doloop.s:270
    4684:	000046a4 	.word	0x000046a4
    4688:	63040030 	.word	0x63040030
    468c:	7361      	.short	0x7361
    468e:	65          	.byte	0x65
	...

00004690 <Code_1067>:
Code_1067():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:27
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "case"
  @ ( -- 0 8 )
case:
@------------------------------------------------------------------------------
  push {lr}
    4690:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:28
  bl push_lr_nachholen
    4692:	f7fb ffb4 	bl	5fe <push_lr_nachholen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:29
  pushdaconst 0 @ Zahl der Zweige    Current number of branches
    4696:	f847 6d04 	str.w	r6, [r7, #-4]!
    469a:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:30
  pushdaconst 8 @ Strukturerkennung  Structure pattern
    469c:	f847 6d04 	str.w	r6, [r7, #-4]!
    46a0:	2608      	movs	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:31
  pop {pc}
    46a2:	bd00      	pop	{pc}

000046a4 <Dictionary_1072>:
Dictionary_1072():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:31
    46a4:	000046ba 	.word	0x000046ba
    46a8:	3f030030 	.word	0x3f030030
    46ac:	666f      	.short	0x666f

000046ae <Code_1072>:
Code_1072():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:43
  @ ( ... #of 8 -- ... addr #of+1 9 )
  @ Nimmt einen Flag statt einer Konstanten entgegen.
  @ Kann so eigene Vergleiche aufbauen.
  @ Takes flag instead of constant to build your own comparisions.
@------------------------------------------------------------------------------
  ldr r0, =struktur_qof
    46ae:	486b      	ldr	r0, [pc, #428]	; (485c <Code_1103+0x44>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:44
  b.n of_inneneinsprung
    46b0:	e009      	b.n	46c6 <of_inneneinsprung>

000046b2 <struktur_qof>:
struktur_qof():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:47

struktur_qof: @ Will be inlined.
  subs tos, #1
    46b2:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:48
  sbcs tos, tos
    46b4:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:49
  drop
    46b6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:51
  @ bne... is generated here.
  bx lr
    46b8:	4770      	bx	lr

000046ba <Dictionary_1074>:
Dictionary_1074():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:51
    46ba:	4778      	.short	0x4778
    46bc:	02300000 	.word	0x02300000
    46c0:	6f02      	.short	0x6f02
    46c2:	66          	.byte	0x66
	...

000046c4 <Code_1074>:
Code_1074():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:57

@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly|Flag_allocator, "of"
  @ ( ... #of 8 -- ... addr #of+1 9 )
@------------------------------------------------------------------------------
  ldr r0, =struktur_of
    46c4:	4866      	ldr	r0, [pc, #408]	; (4860 <Code_1103+0x48>)

000046c6 <of_inneneinsprung>:
of_inneneinsprung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:60

of_inneneinsprung:
  cmp tos, #8                  @ Check for structure pattern: Give error message and quit if wrong.
    46c6:	2e08      	cmp	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:61
  beq 1f
    46c8:	d000      	beq.n	46cc <of_inneneinsprung+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:62
  b.n strukturen_passen_nicht
    46ca:	e641      	b.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:63
1:drop
    46cc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:65

  push {lr}
    46ce:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:67

  pushda r0
    46d0:	f847 6d04 	str.w	r6, [r7, #-4]!
    46d4:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:68
  bl inlinekomma  @ Insert opcodes for structure
    46d6:	f7fe ff24 	bl	3522 <Code_761>

000046da <of_opcodiereinsprung>:
of_opcodiereinsprung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:73

of_opcodiereinsprung:
  @ ( #of --> Addr #of+1)

  bl branch_v @ here 2 allot
    46da:	f7ff fd7e 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:74
  swap
    46de:	6839      	ldr	r1, [r7, #0]
    46e0:	603e      	str	r6, [r7, #0]
    46e2:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:75
  adds tos, #1 @ Eine Adresse mehr, die abzuarbeiten ist  One more location a branch opcode has to be written in later.
    46e4:	3601      	adds	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:77

  pushdaconst 9 @ Strukturerkennung bereitlegen  Structure pattern
    46e6:	f847 6d04 	str.w	r6, [r7, #-4]!
    46ea:	2609      	movs	r6, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:79

  bl drop_hkomma
    46ec:	f7ff f94e 	bl	398c <drop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:81

  pop {pc}
    46f0:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:85

@------------------------------------------------------------------------------

  cmp tos, #8                  @ Check for structure pattern: Give error message and quit if wrong.
    46f2:	2e08      	cmp	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:86
  beq 1f
    46f4:	d000      	beq.n	46f8 <of_opcodiereinsprung+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:87
  b.n strukturen_passen_nicht
    46f6:	e62b      	b.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:88
1:drop
    46f8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:90

  push {lr}
    46fa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:93

  @ Mich interessieren nur die beiden obersten Elemente, die verglichen werden sollen.
  bl expect_two_elements @ Mindestens 2 Elemente
    46fc:	f7fb fef6 	bl	4ec <expect_two_elements>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:95

  bl tidyup_register_allocator_5os
    4700:	f7fb fe24 	bl	34c <tidyup_register_allocator_5os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:96
  bl tidyup_register_allocator_4os
    4704:	f7fb fe27 	bl	356 <tidyup_register_allocator_4os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:97
  bl tidyup_register_allocator_3os @ Maximal 2 Elemente, das dritte gleich in den Stack schieben.
    4708:	f7fb fe2a 	bl	360 <tidyup_register_allocator_3os>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:102

  @ Jetzt habe ich genau zwei Elemente im Allokator.
  @ NOS bleibt im Falle von CASE eigentlich die ganze Zeit gleich - erwarte NOS also in jedem Fall in einem Register.

  pushdaconstw 0x4280 @ cmp r0, r0
    470c:	f847 6d04 	str.w	r6, [r7, #-4]!
    4710:	f244 2680 	movw	r6, #17024	; 0x4280
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:103
  bl expect_nos_in_register @ Dieser Register ist anschließend in r1.
    4714:	f7fb ff26 	bl	564 <expect_nos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:104
  orrs tos, r1
    4718:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:107

  @ TOS könnte eine Konstante sein. Diese darf ich jetzt aber nicht über die beiden Konstantenregister generieren...
  ldr r2, [r0, #offset_state_tos]
    471a:	6802      	ldr	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:108
  cmp r2, #constant
    471c:	2a28      	cmp	r2, #40	; 0x28
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:109
  bne 2f
    471e:	d11e      	bne.n	475e <of_opcodiereinsprung+0x84>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:112
    @ TOS ist eine Konstante.
    @ Kleine Konstanten direkt als cmp-opcode schreiben:
    ldr r2, [r0, #offset_constant_tos]
    4720:	6842      	ldr	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:113
    cmp r2, #0xFF
    4722:	2aff      	cmp	r2, #255	; 0xff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:114
    bhi 3f
    4724:	d808      	bhi.n	4738 <of_opcodiereinsprung+0x5e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:116
      @ Kleine Konstante:
      drop
    4726:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:117
      pushdaconstw 0x2800
    4728:	f847 6d04 	str.w	r6, [r7, #-4]!
    472c:	f642 0600 	movw	r6, #10240	; 0x2800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:118
      orrs tos, r2
    4730:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:119
      lsls r1, #8
    4732:	0209      	lsls	r1, r1, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:120
      orrs tos, r1
    4734:	430e      	orrs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:121
      b.n 4f
    4736:	e014      	b.n	4762 <of_opcodiereinsprung+0x88>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:129

.ifndef m0core
  @ TOS ist eine Konstante, aber zu groß für Imm8.
  @ Vielleicht passt sie in Imm12 ?

        pushdatos
    4738:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:130
        ldr tos, [r0, #offset_constant_tos]
    473c:	6846      	ldr	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:131
        bl twelvebitencoding @ Hole sie und prüfe, ob sie als Imm12 darstellbar ist.
    473e:	f7fe fd0d 	bl	315c <Code_709>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:132
        ldmia psp!, {r2} @ Entweder die Bitmaske oder wieder die Konstante
    4742:	cf04      	ldmia	r7!, {r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:134

        cmp tos, #0
    4744:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:135
        drop   @ Preserves Flags !
    4746:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:136
        beq 3f
    4748:	d006      	beq.n	4758 <of_opcodiereinsprung+0x7e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:142
          @ Die Konstante lässt sich als Imm12 darstellen - fein ! Bitmaske liegt in r1 bereit
          @ Prüfe nun den Opcode, und ersetze ihn, falls möglich.

          @ drop @ Den alten cmp r0, r0 Opcode vergessen
          @ pushdatos
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
    474a:	4e46      	ldr	r6, [pc, #280]	; (4864 <Code_1103+0x4c>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:143
          orrs tos, r2
    474c:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:145

          orrs tos, tos, r1, lsl #16 @ Quellregister hinzufügen
    474e:	ea56 4601 	orrs.w	r6, r6, r1, lsl #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:146
          bl reversekomma
    4752:	f7ff f955 	bl	3a00 <Code_858>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:147
          b 5f
    4756:	e006      	b.n	4766 <of_opcodiereinsprung+0x8c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:153
3:
.endif

    @ Konstante zu groß. Lade die Konstante in einen freien Register:

    bl expect_tos_in_register
    4758:	f7fb fefa 	bl	550 <expect_tos_in_register>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:154
    movs r2, r1
    475c:	000a      	movs	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:157

2:@ TOS ist auch ein Register.
  lsls r2, #3
    475e:	00d2      	lsls	r2, r2, #3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:158
  orrs tos, r2
    4760:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:160

4:bl hkomma
    4762:	f7ff f91d 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:162

5:bl eliminiere_tos
    4766:	f7fb fdba 	bl	2de <eliminiere_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:163
  bl tidyup_register_allocator_tos @ Falls TOS <> r6 an diesem Moment... Falls es eine Konstante gewesen ist, wurde sie eben gerade schon generiert.
    476a:	f7fb fe03 	bl	374 <tidyup_register_allocator_tos>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:165

  b.n of_opcodiereinsprung @ Der klassische Abschluss
    476e:	e7b4      	b.n	46da <of_opcodiereinsprung>

00004770 <struktur_of>:
struktur_of():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:169


struktur_of:
  popda r0
    4770:	0030      	movs	r0, r6
    4772:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:170
  cmp r0, tos
    4774:	42b0      	cmp	r0, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:171
  bx lr
    4776:	4770      	bx	lr

00004778 <Dictionary_1090>:
Dictionary_1090():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:171
    4778:	000047ae 	.word	0x000047ae
    477c:	65050030 	.word	0x65050030
    4780:	666f646e 	.word	0x666f646e

00004784 <Code_1090>:
Code_1090():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:192
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "endof"
  @ ( ... addr-jne #of 9 -- ... addr-jmp #of 8 )
strukturendof:
@------------------------------------------------------------------------------
  cmp tos, #9
    4784:	2e09      	cmp	r6, #9
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:193
  beq 1f
    4786:	d000      	beq.n	478a <Code_1090+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:194
  b.n strukturen_passen_nicht
    4788:	e5e2      	b.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:195
1:drop
    478a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:197

  push {lr}
    478c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:198
  to_r @ #of auf Returnstack  Move #of to Returnstack and out of the way
    478e:	b440      	push	{r6}
    4790:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:200

    bl branch_v @ here 2 allot
    4792:	f7ff fd22 	bl	41da <branch_v>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:201
    swap @ ( here Addr-jne )
    4796:	6839      	ldr	r1, [r7, #0]
    4798:	603e      	str	r6, [r7, #0]
    479a:	460e      	mov	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:202
    bl v_casebranch @ Den aktuellen of-Block mit bne überspringen   Skip current of-block with a bne opcode
    479c:	f7ff fd36 	bl	420c <v_casebranch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:204

  r_from @ #of zurückholen fetch back of#
    47a0:	f847 6d04 	str.w	r6, [r7, #-4]!
    47a4:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:205
  pushdaconst 8
    47a6:	f847 6d04 	str.w	r6, [r7, #-4]!
    47aa:	2608      	movs	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:206
  pop {pc}
    47ac:	bd00      	pop	{pc}

000047ae <Dictionary_1098>:
Dictionary_1098():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:206
    47ae:	47f8      	.short	0x47f8
    47b0:	00300000 	.word	0x00300000
    47b4:	646e6507 	.word	0x646e6507
    47b8:	65736163 	.word	0x65736163

000047bc <Code_1098>:
Code_1098():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:213
@------------------------------------------------------------------------------
  Wortbirne Flag_immediate_compileonly, "endcase"
  @ ( ... addrs-jmp #of 8 -- )
strukturendcase:
@------------------------------------------------------------------------------
  cmp tos, #8
    47bc:	2e08      	cmp	r6, #8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:214
  beq 1f
    47be:	d000      	beq.n	47c2 <Code_1098+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:215
  b.n strukturen_passen_nicht
    47c0:	e5c6      	b.n	4350 <strukturen_passen_nicht>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:216
1:drop
    47c2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:218

  push {lr}
    47c4:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:219
  bl drop_hkomma
    47c6:	f7ff f8e1 	bl	398c <drop_hkomma>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:221

  bl spruenge_einpflegen
    47ca:	f000 f801 	bl	47d0 <spruenge_einpflegen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:222
  pop {pc}
    47ce:	bd00      	pop	{pc}

000047d0 <spruenge_einpflegen>:
spruenge_einpflegen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:228


@------------------------------------------------------------------------------
spruenge_einpflegen: @ Internal use only.
@------------------------------------------------------------------------------
  push {lr}
    47d0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:231
  @ Einpflegen der gesammelten Sprünge
  @ Fill in collected jumps.
  popda r0 @ Zahl der einzupflegenden Sprünge holen Fetch number of jumps that need to be generated
    47d2:	0030      	movs	r0, r6
    47d4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:233

1:cmp r0, #0 @ Sind noch Sprünge zu bearbeiten ? Any jumps left ?
    47d6:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:234
  beq 2f
    47d8:	d00d      	beq.n	47f6 <spruenge_einpflegen+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:236

  push {r0, r1}
    47da:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:237
  movs r1, #1          @ Check if this shall be a conditional jump instead. Needed for ?do which reuses this code.
    47dc:	2101      	movs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:238
  ands r1, tos         @ Prüfe, ob es ein bedingter Sprung werden soll - ?do benötigt solche.
    47de:	4031      	ands	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:240

  cmp r1, #0
    47e0:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:241
  beq 3f
    47e2:	d003      	beq.n	47ec <spruenge_einpflegen+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:242
    subs tos, #1 @ Markierung für den bedingten Sprung entfernen  Remove temporary bit for this beeing a conditional jump
    47e4:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:243
    bl v_nullbranch  @ Insert conditional jump
    47e6:	f7ff fd07 	bl	41f8 <v_nullbranch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:244
    b 4f
    47ea:	e001      	b.n	47f0 <spruenge_einpflegen+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:246

3:bl v_branch @ Unbedingten Sprung einpflegen  Insert unconditional jump
    47ec:	f7ff fcfe 	bl	41ec <v_branch>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:248

4:pop {r0, r1}
    47f0:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:250

  subs r0, #1 @ Ein Sprung weniger übrig  One jump less to do.
    47f2:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:251
  b 1b
    47f4:	e7ef      	b.n	47d6 <spruenge_einpflegen+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:253

2: pop {pc}
    47f6:	bd00      	pop	{pc}

000047f8 <Dictionary_1101>:
Dictionary_1101():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:253
    47f8:	0000480c 	.word	0x0000480c
    47fc:	74050000 	.word	0x74050000
    4800:	6e656b6f 	.word	0x6e656b6f

00004804 <Code_1101>:
token():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:26

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "token" @ ( -- c-addr length )
token:
@ -----------------------------------------------------------------------------
  pushdatos
    4804:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:27
  movs tos, #32 @ Leerzeichen  Space
    4808:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:28
  b.n parse
    480a:	e005      	b.n	4818 <Code_1103>

0000480c <Dictionary_1103>:
Dictionary_1103():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:28
    480c:	00004870 	.word	0x00004870
    4810:	70050000 	.word	0x70050000
    4814:	65737261 	.word	0x65737261

00004818 <Code_1103>:
parse():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:34

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "parse" @ ( c -- c-addr length )
parse:
@ -----------------------------------------------------------------------------
  push {r4, lr} @ Eigentlich nur r4 nötig
    4818:	b510      	push	{r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:37
  @ Parse nochmal neu überdenken:
     
  ldr r0, =current_source
    481a:	4813      	ldr	r0, [pc, #76]	; (4868 <Code_1103+0x50>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:38
  ldr r1, [r0]     @ Length  of input buffer
    481c:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:39
  ldr r0, [r0, #4] @ Pointer to input buffer
    481e:	6840      	ldr	r0, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:41

  ldr r2, =Pufferstand
    4820:	4a12      	ldr	r2, [pc, #72]	; (486c <Code_1103+0x54>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:42
  ldr r2, [r2] @ Current >IN gauge
    4822:	6812      	ldr	r2, [r2, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:44

  adds r4, r0, r2 @ Start address of parsed string
    4824:	1884      	adds	r4, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:47

  @ Speziell for Token, falls das Trennzeichen das Leerzeichen ist:
  cmp tos, #32
    4826:	2e20      	cmp	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:48
  bne 2f
    4828:	d107      	bne.n	483a <Code_1103+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:50

1:  cmp r1, r2 @ Any characters left ?
    482a:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:51
    beq 3f
    482c:	d00f      	beq.n	484e <Code_1103+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:52
      ldrb r3, [r0, r2] @ Fetch character
    482e:	5c83      	ldrb	r3, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:53
      cmp r3, tos @ Ist es das Leerzeichen ? Is this the delimiter which is space in this loop ?
    4830:	42b3      	cmp	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:54
      bne 2f
    4832:	d102      	bne.n	483a <Code_1103+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:55
        adds r2, #1     @ Don't collect spaces, advance >IN to skip.
    4834:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:56
        adds r4, r0, r2 @ Recalculate start address of parsed string
    4836:	1884      	adds	r4, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:57
        b 1b
    4838:	e7f7      	b.n	482a <Code_1103+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:60

2:@ Sammelschleife. Collecting loop.
  cmp r1, r2 @ Any characters left ?
    483a:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:61
  beq 3f
    483c:	d007      	beq.n	484e <Code_1103+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:62
    ldrb r3, [r0, r2] @ Fetch character
    483e:	5c83      	ldrb	r3, [r0, r2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:63
    adds r2, #1       @ Advance >IN
    4840:	3201      	adds	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:64
    cmp r3, tos @ Is this the delimiter ?
    4842:	42b3      	cmp	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:65
    bne 2b
    4844:	d1f9      	bne.n	483a <Code_1103+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:67
      @ Finished, fallthrough for delimiter detected.
      adds tos, r0, r2
    4846:	1886      	adds	r6, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:68
      subs tos, r4
    4848:	1b36      	subs	r6, r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:69
      subs tos, #1 @ Delimiter should not be part of the parsed string but needs to be count in >IN
    484a:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:70
      b 4f
    484c:	e001      	b.n	4852 <Code_1103+0x3a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:73

3:@ Finished. Fallthrough for end-of-string. Calculate length of parsed string
  adds tos, r0, r2
    484e:	1886      	adds	r6, r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:74
  subs tos, r4
    4850:	1b36      	subs	r6, r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:77

4:@ Store start address
  subs psp, #4
    4852:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:78
  str r4, [psp]
    4854:	603c      	str	r4, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:81

  @ Store new >IN
  ldr r0, =Pufferstand
    4856:	4805      	ldr	r0, [pc, #20]	; (486c <Code_1103+0x54>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:82
  str r2, [r0] @ Fresh >IN gauge
    4858:	6002      	str	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:84

  pop {r4, pc}
    485a:	bd10      	pop	{r4, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:43
  ldr r0, =struktur_qof
    485c:	000046b2 	.word	0x000046b2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:57
  ldr r0, =struktur_of
    4860:	00004770 	.word	0x00004770
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/case.s:142
          ldr tos, =0xF1B00F00 @ cmp r0, #Imm12 = cmp pc, r0, #Imm12
    4864:	f1b00f00 	.word	0xf1b00f00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:37
  ldr r0, =current_source
    4868:	2001ffdc 	.word	0x2001ffdc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:41
  ldr r2, =Pufferstand
    486c:	2001ffe4 	.word	0x2001ffe4

00004870 <Dictionary_1104>:
Dictionary_1104():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/token.s:41
    4870:	000048ae 	.word	0x000048ae
    4874:	64050000 	.word	0x64050000
    4878:	74696769 	.word	0x74696769

0000487c <Code_1104>:
Code_1104():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:32

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "digit" @ ( Zeichen -- false / Ziffer true )
digit:  @ ( c -- false / u true ) Converts a character into a digit.
@ -----------------------------------------------------------------------------
  ldr r3, =base
    487c:	4bcf      	ldr	r3, [pc, #828]	; (4bbc <Code_1167+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:33
  ldr r3, [r3]
    487e:	681b      	ldr	r3, [r3, #0]

00004880 <digit_base_r3>:
digit_base_r3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:36

digit_base_r3:  @ Erwartet Base in r3  Base has to be in r3 if you enter here.
  subs tos, #48 @ "0" abziehen.  Subtract "0"
    4880:	3e30      	subs	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:37
  blo 5f        @ negativ --> Zeichen war "unter Null"  Negative ? --> Invalid character.
    4882:	d30b      	bcc.n	489c <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:39

  cmp tos, #10  @ Im Bereich bis "9" ?  In range up to "9" ?
    4884:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:40
  blo 4f        @ Ziffer korrekt erkannt.  Digit recognized properly.
    4886:	d30b      	bcc.n	48a0 <digit_base_r3+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:46

  @ Nein: Also ist die Ziffer nicht in den Zahlen 0-9 enthalten gewesen.
  @ Prüfe Buchstaben.
  @ Character is a letter.

  subs tos, #7  @ Anfang der Großbuchstaben, "A"   Beginning of capital letters "A"
    4888:	3e07      	subs	r6, #7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:47
  cmp tos, #10  @ Buchstabenwerte beginnen bei 10  Values of letters start with 10
    488a:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:48
  blo 5f        @ --> Zeichen war ein Sonderzeichen zwischen Ziffern und Großbuchstaben.
    488c:	d306      	bcc.n	489c <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:51
                @ --> Character has been a special one between numbers and capital letters.

  cmp tos, #36  @ Es gibt 26 Buchstaben.  26 letters available.
    488e:	2e24      	cmp	r6, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:52
  blo 4f        @ In dem Bereich: Ziffer korrekt erkannt.  In this range ? Digit recognized properly.
    4890:	d306      	bcc.n	48a0 <digit_base_r3+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:57

  @ Für den Fall, dass die Ziffer immer noch nicht erkannt ist, probiere es mit den Kleinbuchstaben.
  @ Try to recognize small letters.

  subs tos, #32 @ Schiebe zum Anfang der Kleinbuchstaben, "a"  Beginning of small letters "a"
    4892:	3e20      	subs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:58
  cmp tos, #10  @ Buchstabenwerte beginnen bei 10  Values of letters start with 10
    4894:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:59
  blo 5f        @ --> Zeichen war ein Sonderzeichen zwischen Großbuchstaben und Kleinbuchstaben.
    4896:	d301      	bcc.n	489c <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:62
                @ --> Character has been a special one between small and capital letters.

  cmp tos, #36  @ Es gibt 26 Buchstaben.  26 letters available.
    4898:	2e24      	cmp	r6, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:63
  blo 4f        @ In dem Bereich: Ziffer korrekt erkannt.  In this range ? Digit recognized properly.
    489a:	d301      	bcc.n	48a0 <digit_base_r3+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:72
  @ Not yet recognized ? --> Character has been a special one above small letters or in Unicode.
  @ No valid digit then..


5: @ Aussprung mit Fehler  Error.
  movs tos, #0    @ False-Flag
    489c:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:73
  bx lr
    489e:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:79

4: @ Korrekt erkannt. Ziffer in tos

  @ Prüfe nun noch, ob die Ziffer innerhalb der Basis liegt !
  @ Do not accept digits greater than current base
  cmp tos, r3 @ r3 enthält von number aus die Basis.
    48a0:	429e      	cmp	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:80
  bhs 5b     @ Außerhalb der Basis werden keine Buchstaben als Zahlen akzeptiert.
    48a2:	d2fb      	bcs.n	489c <digit_base_r3+0x1c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:82

  pushdatos
    48a4:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:83
  movs tos, #0
    48a8:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:84
  mvns tos, tos @ True-Flag bereitlegen
    48aa:	43f6      	mvns	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:85
  bx lr
    48ac:	4770      	bx	lr

000048ae <Dictionary_1106>:
Dictionary_1106():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:85
    48ae:	49b8      	.short	0x49b8
    48b0:	00000000 	.word	0x00000000
    48b4:	6d756e06 	.word	0x6d756e06
    48b8:	6562      	.short	0x6562
    48ba:	72          	.byte	0x72
	...

000048bc <Code_1106>:
Code_1106():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:113
  @ r2: Character or helper
  @ r3: Base
  @ r4: Result-Low
  @ r5: Result-High

  push {r0, r1, r2, r3, r4, r5, lr}
    48bc:	b53f      	push	{r0, r1, r2, r3, r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:115

  popda r1          @ Hole die Länge des Strings  Fetch length of string
    48be:	0031      	movs	r1, r6
    48c0:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:116
  subs r0, tos, #1  @ Hole die Stringadresse      Fetch string address
    48c2:	1e70      	subs	r0, r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:118

  movs tos, #1  @ Single length result
    48c4:	2601      	movs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:120

  movs r2, #1   @ Positive Sign
    48c6:	2201      	movs	r2, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:121
  push {r2}
    48c8:	b404      	push	{r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:123

  ldr r3, =base
    48ca:	4bbc      	ldr	r3, [pc, #752]	; (4bbc <Code_1167+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:124
  ldr r3, [r3]
    48cc:	681b      	ldr	r3, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:126

  movs r4, #0   @ Clear result low
    48ce:	2400      	movs	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:127
  movs r5, #0   @              high
    48d0:	2500      	movs	r5, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:133

  @ ( Single R: Positive )


1: @ Sind noch Zeichen da ?  Any characters left ?
  cmp r1, #0
    48d2:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:134
  beq 4f @ String ist leer, bin fertig !
    48d4:	d03c      	beq.n	4950 <Code_1106+0x94>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:137

  @ Hole ein Zeichen:  Fetch a character
  adds r0, #1 @ Pointer weiterrücken
    48d6:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:138
  subs r1, #1 @ Länge um eins verringern
    48d8:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:139
  ldrb r2, [r0] @ Zeichen holen.
    48da:	7802      	ldrb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:142

  @ Vorzeichen und Basisvorsilben:  Sign and base prefixes:
  cmp r2, #45   @ Minus ?
    48dc:	2a2d      	cmp	r2, #45	; 0x2d
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:143
  bne 2f
    48de:	d104      	bne.n	48ea <Code_1106+0x2e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:144
    add sp, #4   @ rdrop
    48e0:	b001      	add	sp, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:145
    movs r2, #0
    48e2:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:146
    mvns r2, r2   @ -1
    48e4:	43d2      	mvns	r2, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:147
    push {r2}
    48e6:	b404      	push	{r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:148
    b 1b
    48e8:	e7f3      	b.n	48d2 <Code_1106+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:150

2:cmp r2, #35   @ # ?
    48ea:	2a23      	cmp	r2, #35	; 0x23
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:151
  bne 2f
    48ec:	d101      	bne.n	48f2 <Code_1106+0x36>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:152
    movs r3, #10 @ Umschalten auf Dezimal
    48ee:	230a      	movs	r3, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:153
    b 1b
    48f0:	e7ef      	b.n	48d2 <Code_1106+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:155

2:cmp r2, #36   @ $ ?
    48f2:	2a24      	cmp	r2, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:156
  bne 2f
    48f4:	d101      	bne.n	48fa <Code_1106+0x3e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:157
    movs r3, #16 @ Umschalten auf Hexadezimal
    48f6:	2310      	movs	r3, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:158
    b 1b
    48f8:	e7eb      	b.n	48d2 <Code_1106+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:160

2:cmp r2, #37   @ % ?
    48fa:	2a25      	cmp	r2, #37	; 0x25
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:161
  bne 2f
    48fc:	d101      	bne.n	4902 <Code_1106+0x46>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:162
    movs r3, #2  @ Umschalten auf Binär
    48fe:	2302      	movs	r3, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:163
    b 1b
    4900:	e7e7      	b.n	48d2 <Code_1106+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:165

2:cmp r2, #46   @ . ?
    4902:	2a2e      	cmp	r2, #46	; 0x2e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:166
  bne 2f
    4904:	d101      	bne.n	490a <Code_1106+0x4e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:167
    movs tos, #2   @ Double length result !
    4906:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:168
    b 1b
    4908:	e7e3      	b.n	48d2 <Code_1106+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:170

2:cmp r2, #44  @ , ?
    490a:	2a2c      	cmp	r2, #44	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:171
  beq.n number_nachkommastellen
    490c:	d036      	beq.n	497c <number_nachkommastellen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:175


  @ Wandele das Zeichen  Convert character
  pushda r2
    490e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4912:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:176
  bl digit_base_r3
    4914:	f7ff ffb4 	bl	4880 <digit_base_r3>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:177
  cmp tos, #0 @ Bei false mochte digit das Zeichen nicht.  Error ?
    4918:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:178
  drop        @ Flag runterwerfen  Drop the Flag from digit
    491a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:179
    beq 5f      @ Aussprung mit Fehler.
    491c:	d02b      	beq.n	4976 <Code_1106+0xba>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:184

  @ Zeichen wurde gemocht.  Character has been successfully converted to a digit.

  @ Multiply old result with base:
  pushda r4 @ Low
    491e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4922:	0026      	movs	r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:185
  pushda r5 @ High
    4924:	f847 6d04 	str.w	r6, [r7, #-4]!
    4928:	002e      	movs	r6, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:186
  pushda r3 @ Base-Low
    492a:	f847 6d04 	str.w	r6, [r7, #-4]!
    492e:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:187
  pushdaconst 0 @ Base-High
    4930:	f847 6d04 	str.w	r6, [r7, #-4]!
    4934:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:189

  push {r0, r1, r2, r3}
    4936:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:190
    bl ud_star
    4938:	f7fc f869 	bl	a0e <Code_115>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:191
  pop {r0, r1, r2, r3}
    493c:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:193

  popda r5 @ High
    493e:	0035      	movs	r5, r6
    4940:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:194
  popda r4 @ Low
    4942:	0034      	movs	r4, r6
    4944:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:196

  movs r2, #0 @ For addition with Carry
    4946:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:197
  adds r4, tos
    4948:	19a4      	adds	r4, r4, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:198
  adcs r5, r2
    494a:	4155      	adcs	r5, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:199
  drop
    494c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:201

  b 1b
    494e:	e7c0      	b.n	48d2 <Code_1106+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:206


4:@ String ist leer und wurde korrekt umgewandelt.  String is empty. Almost done...
  @ Vorzeichen beachten:  Take care of sign.
  pop {r2} @ Fetch back sign
    4950:	bc04      	pop	{r2}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:207
  cmp r2, #0
    4952:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:208
  bpl 3f
    4954:	d504      	bpl.n	4960 <Code_1106+0xa4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:211

    @ dnegate in Register:
    movs r2, #0
    4956:	2200      	movs	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:212
    mvns r4, r4
    4958:	43e4      	mvns	r4, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:213
    mvns r5, r5
    495a:	43ed      	mvns	r5, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:214
    adds r4, #1
    495c:	3401      	adds	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:215
    adcs r5, r2
    495e:	4155      	adcs	r5, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:217

3:movs r3, tos  @ Length of result:
    4960:	0033      	movs	r3, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:218
  movs tos, r4  @ Low or single result
    4962:	0026      	movs	r6, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:219
  cmp r3, #1
    4964:	2b01      	cmp	r3, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:220
  beq 3f
    4966:	d002      	beq.n	496e <Code_1106+0xb2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:221
    pushda r5   @ High result
    4968:	f847 6d04 	str.w	r6, [r7, #-4]!
    496c:	002e      	movs	r6, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:222
3:pushda r3     @ Length on Stack
    496e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4972:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:224

  pop {r0, r1, r2, r3, r4, r5, pc}
    4974:	bd3f      	pop	{r0, r1, r2, r3, r4, r5, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:228


5: @ Digit mochte das Zeichen nicht. Return without success.
  add sp, #4   @ Forget sign
    4976:	b001      	add	sp, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:229
  movs tos, #0  @ No result
    4978:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:230
  pop {r0, r1, r2, r3, r4, r5, pc}
    497a:	bd3f      	pop	{r0, r1, r2, r3, r4, r5, pc}

0000497c <number_nachkommastellen>:
number_nachkommastellen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:235



number_nachkommastellen: @ Digits after the decimal point.
  movs r5, r4   @ Low part is "high" part before comma now.
    497c:	0025      	movs	r5, r4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:236
  movs r4, #0   @ Clear low part. To be filled with digits after comma.
    497e:	2400      	movs	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:237
  movs tos, #2  @ Double length result !
    4980:	2602      	movs	r6, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:240

1: @ Sind noch Zeichen da ?  Any characters left ?
  cmp r1, #0
    4982:	2900      	cmp	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:241
  beq 4b @ String ist leer, bin fertig !
    4984:	d0e4      	beq.n	4950 <Code_1106+0x94>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:244

  @ Fetch a character from end of string:
  ldrb r2, [r0, r1] @ Zeichen holen.
    4986:	5c42      	ldrb	r2, [r0, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:245
  subs r1, #1 @ Länge um eins verringern
    4988:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:247

  cmp r2, #46   @ . ?
    498a:	2a2e      	cmp	r2, #46	; 0x2e
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:248
  beq 1b        @ Accept more dots for clarity, already double result.
    498c:	d0f9      	beq.n	4982 <number_nachkommastellen+0x6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:252


 @ Wandele das Zeichen  Convert character
  pushda r2
    498e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4992:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:253
  bl digit_base_r3
    4994:	f7ff ff74 	bl	4880 <digit_base_r3>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:254
  cmp tos, #0 @ Bei false mochte digit das Zeichen nicht.  Error ?
    4998:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:255
  drop        @ Flag runterwerfen  Drop the Flag from digit
    499a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:256
    beq 5b      @ Aussprung mit Fehler.
    499c:	d0eb      	beq.n	4976 <Code_1106+0xba>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:260

  @ Zeichen wurde gemocht.  Character has been successfully converted to a digit.

  subs psp, #4
    499e:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:261
  str r4, [psp] @ Low-Old
    49a0:	603c      	str	r4, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:262
  pushda r3 @ Base
    49a2:	f847 6d04 	str.w	r6, [r7, #-4]!
    49a6:	001e      	movs	r6, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:265

  @ ( Old New-Digit Base )
  push {r0, r1, r2, r3}
    49a8:	b40f      	push	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:266
  bl um_slash_mod @ ( Remainder New.. )
    49aa:	f7fc f8df 	bl	b6c <Code_151>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:267
  pop {r0, r1, r2, r3}
    49ae:	bc0f      	pop	{r0, r1, r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:268
  popda r4
    49b0:	0034      	movs	r4, r6
    49b2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:269
  drop
    49b4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:271

  b 1b
    49b6:	e7e4      	b.n	4982 <number_nachkommastellen+0x6>

000049b8 <Dictionary_1133>:
Dictionary_1133():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:271
    49b8:	000049da 	.word	0x000049da
    49bc:	2e060000 	.word	0x2e060000
    49c0:	69676964 	.word	0x69676964
    49c4:	74          	.byte	0x74
	...

000049c6 <Code_1133>:
Code_1133():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:286
               @ Wenn ein Zahlensystem größer 36 angestrebt wird,
               @ werden nicht druckbare Zeichen einfach mit # beschrieben.
digitausgeben: @ ( u -- c ) Converts a digit into a character.
               @ If base is bigger than 36, unprintable digits are written as #
@ -----------------------------------------------------------------------------
  cmp tos, #10   @ Von 0-9:
    49c6:	2e0a      	cmp	r6, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:287
  bhs 1f
    49c8:	d201      	bcs.n	49ce <Code_1133+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:288
    adds tos, #48 @ Schiebe zum Anfang der Zahlen  Shift to beginning of ASCII numbers
    49ca:	3630      	adds	r6, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:289
    bx lr
    49cc:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:291

1:cmp tos, #36   @ Von A-Z:
    49ce:	2e24      	cmp	r6, #36	; 0x24
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:292
  bhs 2f
    49d0:	d201      	bcs.n	49d6 <Code_1133+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:293
    adds tos, #55 @ Alternative für Kleinbuchstaben: 87.                 For small letters: 87.
    49d2:	3637      	adds	r6, #55	; 0x37
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:294
    bx lr
    49d4:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:296

2:movs tos, #35 @ Zeichen #, falls diese Ziffer nicht darstellbar ist. Character #, if digit is not printable
    49d6:	2623      	movs	r6, #35	; 0x23
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:297
  bx lr
    49d8:	4770      	bx	lr

000049da <Dictionary_1134>:
Dictionary_1134():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:297
    49da:	4a10      	.short	0x4a10
    49dc:	00000000 	.word	0x00000000
    49e0:	6c6f6804 	.word	0x6c6f6804
    49e4:	64          	.byte	0x64
	...

000049e6 <Code_1134>:
Code_1134():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:316
  @ New String:  | Length + 1 | New |

  @ Old String:  | Length     | I   | II  | III |     |
  @ New String:  | Length + 1 | New | I   | II  | III |

  popda r3 @ Das einzufügende Zeichen
    49e6:	0033      	movs	r3, r6
    49e8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:318

  ldr r0, =Zahlenpuffer
    49ea:	4875      	ldr	r0, [pc, #468]	; (4bc0 <Code_1167+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:319
  ldrb r1, [r0] @ Länge holen
    49ec:	7801      	ldrb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:321

  cmp r1, #Zahlenpufferlaenge  @ Ist der Puffer voll ? Number buffer full ?
    49ee:	2943      	cmp	r1, #67	; 0x43
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:322
  bhs 3f                       @ Keine weiteren Zeichen mehr annehmen.
    49f0:	d20d      	bcs.n	4a0e <Code_1134+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:325

  @ Länge des Puffers um 1 erhöhen  Increment length
  adds r1, #1
    49f2:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:326
  strb r1, [r0] @ Aktualisierte Länge schreiben
    49f4:	7001      	strb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:329

  @ Am Ende anfangen:  Start moving with the end
  adds r0, r1 @ Zeiger an die freie Stelle für das neue Zeichen
    49f6:	1840      	adds	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:332

  @ Ist die Länge jetzt genau 1 Zeichen ? Dann muss ich nichs schieben.
  cmp r1, #1  @ Check if at least one character has to be moved
    49f8:	2901      	cmp	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:333
  beq 2f
    49fa:	d007      	beq.n	4a0c <Code_1134+0x26>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:336

1:@ Schiebeschleife:  Move characters !
  subs r0, #1
    49fc:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:337
  ldrb r2, [r0] @ Holen an der Stelle-1  Fetch from current location-1
    49fe:	7802      	ldrb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:338
  adds r0, #1
    4a00:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:339
  strb r2, [r0] @ Schreiben an der Stelle  Write current location
    4a02:	7002      	strb	r2, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:340
  subs r0, #1 @ Weiterrücken  Advance Pointers
    4a04:	3801      	subs	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:342

  subs r1, #1
    4a06:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:343
  cmp r1, #1 @ Bis nur noch ein Zeichen bleibt. Das ist das Neue.
    4a08:	2901      	cmp	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:344
  bne 1b     @ Until there is only one character left - the new one.
    4a0a:	d1f7      	bne.n	49fc <Code_1134+0x16>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:347

2:@ Das neue Zeichen an seinen Platz legen
  strb r3, [r0] @ Insert new character
    4a0c:	7003      	strb	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:349

3:bx lr
    4a0e:	4770      	bx	lr

00004a10 <Dictionary_1136>:
Dictionary_1136():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:349
    4a10:	00004a30 	.word	0x00004a30
    4a14:	68050000 	.word	0x68050000
    4a18:	3c646c6f 	.word	0x3c646c6f

00004a1c <Code_1136>:
Code_1136():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:355

@------------------------------------------------------------------------------
 Wortbirne Flag_visible, "hold<"
zahlanhaengen: @ ( Character -- ) Insert one character at the end of number buffer
@------------------------------------------------------------------------------
  popda r3 @ Das einzufügende Zeichen
    4a1c:	0033      	movs	r3, r6
    4a1e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:357

  ldr r0, =Zahlenpuffer
    4a20:	4867      	ldr	r0, [pc, #412]	; (4bc0 <Code_1167+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:358
  ldrb r1, [r0] @ Länge holen
    4a22:	7801      	ldrb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:360

  cmp r1, #Zahlenpufferlaenge  @ Ist der Puffer voll ? Number buffer full ?
    4a24:	2943      	cmp	r1, #67	; 0x43
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:361
  bhs 3f                       @ Keine weiteren Zeichen mehr annehmen.
    4a26:	d202      	bcs.n	4a2e <Code_1136+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:363

    adds r1, #1 @ Ein Zeichen mehr
    4a28:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:364
    strb r1, [r0] @ Neue Länge schreiben
    4a2a:	7001      	strb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:365
    strb r3, [r0, r1] @ Neues Zeichen am Ende anhängen
    4a2c:	5443      	strb	r3, [r0, r1]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:366
3:bx lr
    4a2e:	4770      	bx	lr

00004a30 <Dictionary_1138>:
Dictionary_1138():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:366
    4a30:	00004a48 	.word	0x00004a48
    4a34:	73040000 	.word	0x73040000
    4a38:	6769      	.short	0x6769
    4a3a:	6e          	.byte	0x6e
	...

00004a3c <Code_1138>:
Code_1138():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:375
vorzeichen: @ ( Vorzeichen -- )
      @ Prüft die Zahl auf dem Stack auf ihr Vorzeichen hin und
      @ fügt bei Bedarf ein Minus an den Ziffernstring an.
      @ Checks flag of number on stack and adds a minus to number buffer if it is negative.
@------------------------------------------------------------------------------
  cmp tos, #0
    4a3c:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:376
  bmi 1f
    4a3e:	d401      	bmi.n	4a44 <Code_1138+0x8>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:377
  drop
    4a40:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:378
  bx lr
    4a42:	4770      	bx	lr
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:380

1:movs tos, #45  @ Minuszeichen  ASCII for minus
    4a44:	262d      	movs	r6, #45	; 0x2d
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:381
  b.n hold         @ an den Zahlenpuffer anhängen  put it into number buffer
    4a46:	e7ce      	b.n	49e6 <Code_1134>

00004a48 <Dictionary_1140>:
Dictionary_1140():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:381
    4a48:	00004a5c 	.word	0x00004a5c
    4a4c:	23020000 	.word	0x23020000
    4a50:	3e          	.byte	0x3e
	...

00004a52 <Code_1140>:
Code_1140():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:389
  Wortbirne Flag_visible, "#>" @ ( ZahlenrestL (ZahlenrestH) -- Addr Len )
zifferstringende:  @ Schließt einen neuen Ziffernstring ab und gibt seine Adresse zurück.
                   @ Benutzt dafür einfach den Zahlenpuffer.
                   @ Finishes a number string and gives back its address.
@------------------------------------------------------------------------------
  ldr r0, =Zahlenpuffer
    4a52:	485b      	ldr	r0, [pc, #364]	; (4bc0 <Code_1167+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:390
  ldrb tos, [r0]
    4a54:	7806      	ldrb	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:391
  adds r0, #1
    4a56:	3001      	adds	r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:392
  str r0, [psp]
    4a58:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:393
  bx lr
    4a5a:	4770      	bx	lr

00004a5c <Dictionary_1141>:
Dictionary_1141():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:393
    4a5c:	00004a74 	.word	0x00004a74
    4a60:	66030000 	.word	0x66030000
    4a64:	5323      	.short	0x5323

00004a66 <Code_1141>:
Code_1141():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:400
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "f#S"
falleziffern: @ ( u -- u=0 )
      @ Inserts all digits, at least one, into number buffer.
@------------------------------------------------------------------------------
  push {r4, lr}
    4a66:	b510      	push	{r4, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:401
  movs r4, #32
    4a68:	2420      	movs	r4, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:403

1:bl fziffer
    4a6a:	f000 f808 	bl	4a7e <Code_1142>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:404
  subs r4, #1
    4a6e:	3c01      	subs	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:405
  bne 1b
    4a70:	d1fb      	bne.n	4a6a <Code_1141+0x4>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:407

  pop {r4, pc}
    4a72:	bd10      	pop	{r4, pc}

00004a74 <Dictionary_1142>:
Dictionary_1142():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:407
    4a74:	00004a96 	.word	0x00004a96
    4a78:	66020000 	.word	0x66020000
    4a7c:	23          	.byte	0x23
	...

00004a7e <Code_1142>:
fziffer():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:416
fziffer: @ ( u -- u )
      @ Insert one more digit into number buffer
@------------------------------------------------------------------------------
  @ Handles parts after decimal point
  @ Idea: Multiply with base, next digit will be shifted into high-part of multiplication result.
  push {lr}
    4a7e:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:417
    pushdatos
    4a80:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:418
    ldr tos, =base
    4a84:	4e4d      	ldr	r6, [pc, #308]	; (4bbc <Code_1167+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:419
    ldr tos, [tos] @ Base
    4a86:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:420
    bl um_star     @ ( After-Decimal-Point Base -- Low High )
    4a88:	f7fb ff83 	bl	992 <Code_111>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:421
    bl digitausgeben @ ( Low=Still-after-decimal-point Character )
    4a8c:	f7ff ff9b 	bl	49c6 <Code_1133>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:422
    bl zahlanhaengen @ Add character to number buffer
    4a90:	f7ff ffc4 	bl	4a1c <Code_1136>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:423
  pop {pc}
    4a94:	bd00      	pop	{pc}

00004a96 <Dictionary_1144>:
Dictionary_1144():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:423
    4a96:	4ab2      	.short	0x4ab2
    4a98:	00000000 	.word	0x00000000
    4a9c:	2302      	.short	0x2302
    4a9e:	53          	.byte	0x53
	...

00004aa0 <Code_1144>:
Code_1144():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:432
alleziffern: @ ( d-Zahl -- d-Zahl=0 )
      @ Fügt alle Ziffern, jedoch mindestens eine,
      @ an den im Aufbau befindlichen String an.
      @ Inserts all digits, at least one, into number buffer.
@------------------------------------------------------------------------------
  push {lr}
    4aa0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:433
1:bl ziffer
    4aa2:	f000 f80a 	bl	4aba <Code_1145>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:434
  cmp tos, #0
    4aa6:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:435
  bne 1b
    4aa8:	d1fb      	bne.n	4aa2 <Code_1144+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:437

  ldr r0, [psp]
    4aaa:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:438
  cmp r0, #0
    4aac:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:439
  bne 1b
    4aae:	d1f8      	bne.n	4aa2 <Code_1144+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:440
  pop {pc}
    4ab0:	bd00      	pop	{pc}

00004ab2 <Dictionary_1145>:
Dictionary_1145():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:440
    4ab2:	4ade      	.short	0x4ade
    4ab4:	00000000 	.word	0x00000000
    4ab8:	2301      	.short	0x2301

00004aba <Code_1145>:
ziffer():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:452
@------------------------------------------------------------------------------
  @ Idea: Divide by base. Remainder is digit, Result is to be handled in next run.
  @ Idee dahinter: Teile durch die Basis.
  @ Bekomme einen Rest, und einen Teil, den ich im nächsten Durchlauf
  @ behandeln muss. Der Rest ist die Ziffer.
  push {lr}
    4aba:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:453
    pushdatos
    4abc:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:454
    ldr tos, =base
    4ac0:	4e3e      	ldr	r6, [pc, #248]	; (4bbc <Code_1167+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:455
    ldr tos, [tos] @ Base-Low
    4ac2:	6836      	ldr	r6, [r6, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:456
    pushdaconst 0  @ Base-High
    4ac4:	f847 6d04 	str.w	r6, [r7, #-4]!
    4ac8:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:458
    @ ( uL uH BaseL BaseH )
    bl ud_slash_mod
    4aca:	f7fc f86e 	bl	baa <Code_160>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:460
    @ ( RemainderL RemainderH uL uH )
    bl dswap
    4ace:	f7fb fdce 	bl	66e <Code_71>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:462
    @ ( uL uH RemainderL RemainderH )
    drop
    4ad2:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:464
    @ ( uL uH RemainderL )
    bl digitausgeben
    4ad4:	f7ff ff77 	bl	49c6 <Code_1133>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:466
    @ ( uL uH digit )
    bl hold
    4ad8:	f7ff ff85 	bl	49e6 <Code_1134>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:468
    @ ( uL uH )
  pop {pc}
    4adc:	bd00      	pop	{pc}

00004ade <Dictionary_1150>:
Dictionary_1150():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:468
    4ade:	4af0      	.short	0x4af0
    4ae0:	00000000 	.word	0x00000000
    4ae4:	3c02      	.short	0x3c02
    4ae6:	23          	.byte	0x23
	...

00004ae8 <Code_1150>:
Code_1150():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:476
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "<#" @ ( d-Zahl -- d-Zahl )
zifferstringanfang: @ Eröffnet einen neuen Ziffernstring.
                    @ Opens a number string
@------------------------------------------------------------------------------
  ldr r0, =Zahlenpuffer @ Länge löschen, bisherige Länge Null.
    4ae8:	4835      	ldr	r0, [pc, #212]	; (4bc0 <Code_1167+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:477
  movs r1, #0
    4aea:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:478
  strb r1, [r0]
    4aec:	7001      	strb	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:479
  bx lr
    4aee:	4770      	bx	lr

00004af0 <Dictionary_1151>:
Dictionary_1151():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:479
    4af0:	00004b02 	.word	0x00004b02
    4af4:	66020000 	.word	0x66020000
    4af8:	2e          	.byte	0x2e
	...

00004afa <Code_1151>:
Code_1151():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:486
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "f."
      @ ( Low High -- )
      @ Prints a s31.32 number
@------------------------------------------------------------------------------
  pushdaconst 32
    4afa:	f847 6d04 	str.w	r6, [r7, #-4]!
    4afe:	2620      	movs	r6, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:487
  b.n fdotn
    4b00:	e004      	b.n	4b0c <Code_1154>

00004b02 <Dictionary_1154>:
Dictionary_1154():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:487
    4b02:	4b50      	.short	0x4b50
    4b04:	00000000 	.word	0x00000000
    4b08:	6e2e6603 	.word	0x6e2e6603

00004b0c <Code_1154>:
fdotn():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:495
  Wortbirne Flag_visible, "f.n"
      @ ( Low High n -- )
      @ Prints a s31.32 number with given number of fractional digits
fdotn:
@------------------------------------------------------------------------------
  push {lr}
    4b0c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:496
  push {r4}
    4b0e:	b410      	push	{r4}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:497
  popda r4
    4b10:	0034      	movs	r4, r6
    4b12:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:500

  @ ( Low High -- )
  bl tuck @ ( Sign Low High )
    4b14:	f7fc fa66 	bl	fe4 <Code_207>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:501
  bl dabs @ ( Sign uLow uHigh )
    4b18:	f7fb fec0 	bl	89c <Code_99>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:503

  pushdaconst 0  @ ( Sign After-decimal-point=uL Before-decimal-point-low=uH Before-decimal-point-high=0 )
    4b1c:	f847 6d04 	str.w	r6, [r7, #-4]!
    4b20:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:504
  bl zifferstringanfang
    4b22:	f7ff ffe1 	bl	4ae8 <Code_1150>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:506

  bl alleziffern @ Processing of high-part finished. ( Sign uL 0 0 )
    4b26:	f7ff ffbb 	bl	4aa0 <Code_1144>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:507
  drop @ ( Sign uL 0 )
    4b2a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:509

  movs tos, #44 @ Add a comma to number buffer ( Sign uL 44 )
    4b2c:	262c      	movs	r6, #44	; 0x2c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:510
  bl zahlanhaengen @ ( Sign uL )
    4b2e:	f7ff ff75 	bl	4a1c <Code_1136>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:512

  cmp r4, #0
    4b32:	2c00      	cmp	r4, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:513
  beq 2f
    4b34:	d003      	beq.n	4b3e <Code_1154+0x32>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:515

1:bl fziffer   @ Processing of fractional parts ( Sign 0 )
    4b36:	f7ff ffa2 	bl	4a7e <Code_1142>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:516
  subs r4, #1
    4b3a:	3c01      	subs	r4, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:517
  bne 1b
    4b3c:	d1fb      	bne.n	4b36 <Code_1154+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:519

2:pop {r4}
    4b3e:	bc10      	pop	{r4}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:520
  drop
    4b40:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:521
  bl vorzeichen
    4b42:	f7ff ff7b 	bl	4a3c <Code_1138>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:523

  pushdatos @ Will be removed later
    4b46:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:524
  pushdatos
    4b4a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:525
  b.n abschluss_zahlenausgabe
    4b4e:	e01c      	b.n	4b8a <abschluss_zahlenausgabe>

00004b50 <Dictionary_1162>:
Dictionary_1162():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:525
    4b50:	00004b66 	.word	0x00004b66
    4b54:	75030000 	.word	0x75030000
    4b58:	2e64      	.short	0x2e64

00004b5a <Code_1162>:
Code_1162():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:532
@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "ud." @ ( ud -- )
uddot:  @ Prints an unsigned double number
@------------------------------------------------------------------------------
  @ In Forth: <# #S #>
  push {lr}
    4b5a:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:533
  bl zifferstringanfang
    4b5c:	f7ff ffc4 	bl	4ae8 <Code_1150>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:534
  bl alleziffern
    4b60:	f7ff ff9e 	bl	4aa0 <Code_1144>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:535
  b.n abschluss_zahlenausgabe
    4b64:	e011      	b.n	4b8a <abschluss_zahlenausgabe>

00004b66 <Dictionary_1163>:
Dictionary_1163():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:535
    4b66:	4b98      	.short	0x4b98
    4b68:	00000000 	.word	0x00000000
    4b6c:	6402      	.short	0x6402
    4b6e:	2e          	.byte	0x2e
	...

00004b70 <Code_1163>:
Code_1163():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:541

@------------------------------------------------------------------------------
  Wortbirne Flag_visible, "d." @ ( d -- )
ddot:   @ Prints a signed double number
@------------------------------------------------------------------------------
  push {lr}
    4b70:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:542
  bl tuck
    4b72:	f7fc fa37 	bl	fe4 <Code_207>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:543
  bl dabs
    4b76:	f7fb fe91 	bl	89c <Code_99>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:545

  bl zifferstringanfang
    4b7a:	f7ff ffb5 	bl	4ae8 <Code_1150>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:546
  bl alleziffern @ ( Sign 0 0 )
    4b7e:	f7ff ff8f 	bl	4aa0 <Code_1144>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:547
  bl rot
    4b82:	f7fc fa41 	bl	1008 <Code_208>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:548
  bl vorzeichen
    4b86:	f7ff ff59 	bl	4a3c <Code_1138>

00004b8a <abschluss_zahlenausgabe>:
abschluss_zahlenausgabe():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:551

abschluss_zahlenausgabe:
  bl zifferstringende
    4b8a:	f7ff ff62 	bl	4a52 <Code_1140>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:552
  bl stype
    4b8e:	f7fe f9d5 	bl	2f3c <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:553
  bl space
    4b92:	f7fe f92e 	bl	2df2 <Code_637>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:554
  pop {pc}
    4b96:	bd00      	pop	{pc}

00004b98 <Dictionary_1164>:
Dictionary_1164():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:554
    4b98:	00004baa 	.word	0x00004baa
    4b9c:	75020000 	.word	0x75020000
    4ba0:	2e          	.byte	0x2e
	...

00004ba2 <Code_1164>:
udot():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:564
      @ ( Zahl -- )
      @ Gibt eine vorzeichenlose Zahl aus.
      @ Prints an unsigned single number
@ -----------------------------------------------------------------------------
udot:
  pushdaconst 0 @ Convert to unsigned double
    4ba2:	f847 6d04 	str.w	r6, [r7, #-4]!
    4ba6:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:565
  b.n uddot
    4ba8:	e7d7      	b.n	4b5a <Code_1162>

00004baa <Dictionary_1167>:
Dictionary_1167():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:565
    4baa:	4d88      	.short	0x4d88
    4bac:	00000000 	.word	0x00000000
    4bb0:	2e01      	.short	0x2e01

00004bb2 <Code_1167>:
dot():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:573
  Wortbirne Flag_visible, "." @ ( Zahl -- )
     @ Gibt eine vorzeichenbehaftete Zahl aus.
     @ Prints a signed single number
@ -----------------------------------------------------------------------------
dot:
  pushdatos
    4bb2:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:574
  movs tos, tos, asr #31    @ s>d - Turn MSB into 0xffffffff or 0x00000000
    4bb6:	17f6      	asrs	r6, r6, #31
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:575
  b.n ddot
    4bb8:	e7da      	b.n	4b70 <Code_1163>
    4bba:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:32
  ldr r3, =base
    4bbc:	2001fffc 	.word	0x2001fffc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/numberstrings.s:318
  ldr r0, =Zahlenpuffer
    4bc0:	2000007c 	.word	0x2000007c

00004bc4 <konstantenfaltungszeiger_setzen>:
konstantenfaltungszeiger_setzen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:22
@

@------------------------------------------------------------------------------
konstantenfaltungszeiger_setzen:
@------------------------------------------------------------------------------
  push {r4, r5, lr}
    4bc4:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:26

  @ Konstantenfaltungszeiger setzen, falls er das noch nicht ist.
  @ Set Constant-Folding-Pointer
  ldr r4, =konstantenfaltungszeiger
    4bc6:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:27
  ldr r5, [r4]
    4bca:	6825      	ldr	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:28
  cmp r5, #0
    4bcc:	2d00      	cmp	r5, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:29
  bne.n 3f
    4bce:	d101      	bne.n	4bd4 <konstantenfaltungszeiger_setzen+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:32
    @ Konstantenfaltungszeiger setzen.
    @ If not set yet, set it now.
    movs r5, psp
    4bd0:	003d      	movs	r5, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:33
    str r5, [r4]
    4bd2:	6025      	str	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:35

3:pop {r4, r5, pc}
    4bd4:	bd30      	pop	{r4, r5, pc}

00004bd6 <konstantenfaltungszeiger_neusetzen>:
konstantenfaltungszeiger_neusetzen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:40

@------------------------------------------------------------------------------
konstantenfaltungszeiger_neusetzen:
@------------------------------------------------------------------------------
  push {r4, r5, lr}
    4bd6:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:41
  ldr r4, =konstantenfaltungszeiger
    4bd8:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:42
  movs r5, psp
    4bdc:	003d      	movs	r5, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:43
  str r5, [r4]
    4bde:	6025      	str	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:44
  pop {r4, r5, pc}
    4be0:	bd30      	pop	{r4, r5, pc}

00004be2 <konstantenfaltungszeiger_loeschen>:
konstantenfaltungszeiger_loeschen():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:49

@------------------------------------------------------------------------------
konstantenfaltungszeiger_loeschen:
@------------------------------------------------------------------------------
  push {r4, r5, lr}
    4be2:	b530      	push	{r4, r5, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:50
  ldr r4, =konstantenfaltungszeiger
    4be4:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:51
  movs r5, #0
    4be8:	2500      	movs	r5, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:52
  str r5, [r4]
    4bea:	6025      	str	r5, [r4, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:53
  pop {r4, r5, pc}
    4bec:	bd30      	pop	{r4, r5, pc}

00004bee <wievielefaltkonstanten>:
wievielefaltkonstanten():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:58

@------------------------------------------------------------------------------
wievielefaltkonstanten:
@------------------------------------------------------------------------------
  ldr r3, =konstantenfaltungszeiger
    4bee:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:59
  ldr r3, [r3]
    4bf2:	681b      	ldr	r3, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:60
  subs r3, psp  @ Konstantenfüllstandszeiger - Aktuellen Stackpointer
    4bf4:	1bdb      	subs	r3, r3, r7
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:61
  lsrs r3, #2   @ Durch 4 teilen  Divide by 4 to get number of stack elements.
    4bf6:	089b      	lsrs	r3, r3, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:62
  bx lr
    4bf8:	4770      	bx	lr

00004bfa <kompilator>:
kompilator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:67

@------------------------------------------------------------------------------
kompilator:
@------------------------------------------------------------------------------
  push {lr}
    4bfa:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:68
  popda r1 @ Flags
    4bfc:	0031      	movs	r1, r6
    4bfe:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:70

    ldr r0, =Flag_inlinecache & ~Flag_visible
    4c00:	f44f 5080 	mov.w	r0, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:71
    ands r0, r1
    4c04:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:72
    beq 4f
    4c06:	d002      	beq.n	4c0e <kompilator+0x14>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:73
      bl inline_cache_parser
    4c08:	f000 f8a6 	bl	4d58 <inline_cache_parser>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:74
      pop {pc} @ Fertig.
    4c0c:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:77
4:

    ldr r0, =Flag_Sprungschlucker & ~Flag_visible
    4c0e:	f44f 6080 	mov.w	r0, #1024	; 0x400
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:78
    ands r0, r1
    4c12:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:79
    bne 4f
    4c14:	d101      	bne.n	4c1a <kompilator+0x20>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:80
      bl sprungschreiber_flaggenerator
    4c16:	f7fc fd7f 	bl	1718 <sprungschreiber_flaggenerator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:84
4:
    @ Jetzt dürfen keine Sprünge mehr im Sprungtrampolin warten, falls sie nicht vom Allokator später eingebaut werden.

  popda r2 @ Einsprungadresse
    4c1a:	0032      	movs	r2, r6
    4c1c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:85
  bl konstantenfaltungszeiger_setzen
    4c1e:	f7ff ffd1 	bl	4bc4 <konstantenfaltungszeiger_setzen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:88

    @ Für die Konstanten, die über den Inline-Cache eintrudeln !
    ldr r0, =Flag_Literator & ~Flag_visible  
    4c22:	f44f 5000 	mov.w	r0, #8192	; 0x2000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:89
    ands r0, r1
    4c26:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:90
    beq 4f
    4c28:	d003      	beq.n	4c32 <kompilator+0x38>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:91
      pushda r2 @ Einfach wieder auf den jetzt der Faltung zugänglichen Stack bereitlegen.
    4c2a:	f847 6d04 	str.w	r6, [r7, #-4]!
    4c2e:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:92
      pop {pc}
    4c30:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:95
4:

  bl wievielefaltkonstanten @ Number of folding constants now available in r3.
    4c32:	f7ff ffdc 	bl	4bee <wievielefaltkonstanten>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:107
    @ Prüfe das Ramallot-Flag, das automatisch 0-faltbar bedeutet:
    @ Ramallot-Words always are 0-foldable !
    @ Check this first, as Ramallot is set together with foldability,
    @ but the meaning of the lower 4 bits is different.

    movs r0, #Flag_ramallot & ~Flag_visible
    4c36:	2080      	movs	r0, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:108
    ands r0, r1 @ Flagfeld auf Faltbarkeit hin prüfen
    4c38:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:109
    bne.n .interpret_faltoptimierung
    4c3a:	d106      	bne.n	4c4a <.interpret_faltoptimierung>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:114

    @ Prüfe die Faltbarkeit des aktuellen Tokens:
    @ Check for foldability.

    movs r0, #Flag_foldable & ~Flag_visible
    4c3c:	2040      	movs	r0, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:115
    ands r0, r1 @ Flagfeld auf Faltbarkeit hin prüfen
    4c3e:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:116
    beq.n .interpret_allocator @ Not foldable, but maybe the allocator can handle this.
    4c40:	d009      	beq.n	4c56 <.interpret_allocator>

00004c42 <.interpret_genugkonstanten>:
.interpret_genugkonstanten():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:121

.interpret_genugkonstanten: @ Not opcodable. Maybe foldable.
      @ Prüfe, ob genug Konstanten da sind:
      @ How many constants are necessary to fold this word ?
      movs r0, #0x0F
    4c42:	200f      	movs	r0, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:122
      ands r0, r1 @ Zahl der benötigten Konstanten maskieren
    4c44:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:124

      cmp r3, r0
    4c46:	4283      	cmp	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:125
      blo.n .interpret_allocator @ Not enough folding constants available, but maybe the allocator can handle this.
    4c48:	d305      	bcc.n	4c56 <.interpret_allocator>

00004c4a <.interpret_faltoptimierung>:
.interpret_faltoptimierung():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:130

.interpret_faltoptimierung:
        @ Do folding by running the definition.
        @ Note that Constant-Folding-Pointer is already set to keep track of results calculated.
        pushda r2 @ Einsprungadresse bereitlegen  Code entry point
    4c4a:	f847 6d04 	str.w	r6, [r7, #-4]!
    4c4e:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:131
        bl execute @ Durch Ausführung falten      Fold by executing
    4c50:	f7fe fd20 	bl	3694 <Code_785>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:132
        pop {pc} @ Interpretschleife weitermachen     Finished.
    4c54:	bd00      	pop	{pc}

00004c56 <.interpret_allocator>:
.interpret_allocator():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:147
  @ Number of folding constants available in r3

  @ Ab hier wird begonnen, wirklich Code zu generieren.
  @ Was hier vorbei kommt, muss vererbt werden.

  ldr r0, =Flag_allocator & ~Flag_visible
    4c56:	f44f 7000 	mov.w	r0, #512	; 0x200
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:148
  ands r0, r1
    4c5a:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:149
  beq.n .interpret_allocator_finished
    4c5c:	d014      	beq.n	4c88 <.interpret_allocator_finished>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:151

    bl nflush_faltkonstanten @ Jetzt werden die restlichen Faltkonstanten in den RA-Cache geschoben.
    4c5e:	f7fb fad6 	bl	20e <Code_30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:156
    @ Dies kommt einem partiellen Konstantenschreiben gleich, wobei allerdings die fünf obersten Stackelemente
    @ im RA-Cache hängenbleiben. Dabei werden nur vielleicht Opcodes generiert, falls der RA-Cache zu klein ist, alle zu fassen.

      @ Erst wurden alle Konstanten weitervererbt, jetzt kommt die darauf wirkende Operation.
      pushda r2
    4c62:	f847 6d04 	str.w	r6, [r7, #-4]!
    4c66:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:157
      pushda r1
    4c68:	f847 6d04 	str.w	r6, [r7, #-4]!
    4c6c:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:158
      bl add_to_inline_cache
    4c6e:	f000 f831 	bl	4cd4 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:161

    @ Der Allokatoreinsprung ist am Ende der Definition
    movs r0, r2
    4c72:	0010      	movs	r0, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:162
    bl suchedefinitionsende
    4c74:	f7fe fc6c 	bl	3550 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:163
    adds r2, r0, #1 @ One more for Thumb
    4c78:	1c42      	adds	r2, r0, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:165

    ldr r0, =allocator_base
    4c7a:	48cc      	ldr	r0, [pc, #816]	; (4fac <quit_innenschleife+0x56>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:166
    blx r2
    4c7c:	4790      	blx	r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:170

    @ Keine Konstantenfaltung über den Allokator hinweg - sonst würde z.B. do/loop die Struktur nicht auf dem Stack lagern können.
    @ Vor dem Aufschwimmen lassen den Konstantenfaltungszeiger neu setzen.
    bl konstantenfaltungszeiger_neusetzen
    4c7e:	f7ff ffaa 	bl	4bd6 <konstantenfaltungszeiger_neusetzen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:172
    
    bl nfaltkonstanten_aufschwimmen @ Sollten am Ende noch Faltkonstanten im Cache liegen, lasse sie aufschwimmen
    4c82:	f7fb fad3 	bl	22c <nfaltkonstanten_aufschwimmen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:173
    pop {pc} @ Interpretschleife weitermachen     Finished.
    4c86:	bd00      	pop	{pc}

00004c88 <.interpret_allocator_finished>:
.interpret_allocator_finished():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:180
.interpret_allocator_finished:

  @ No optimizations possible. Go back to canonical stack for classic compilation.
  @ Write all folding constants left into dictionary.

  bl nflush_faltkonstanten     @ Vorhandene Faltkonstanten, soweit möglich, erstmal in den Registerallokator laden.
    4c88:	f7fb fac1 	bl	20e <Code_30>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:182

      pushda r2
    4c8c:	f847 6d04 	str.w	r6, [r7, #-4]!
    4c90:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:183
      pushda r1
    4c92:	f847 6d04 	str.w	r6, [r7, #-4]!
    4c96:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:184
      bl add_to_inline_cache
    4c98:	f000 f81c 	bl	4cd4 <add_to_inline_cache>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:186

  bl tidyup_register_allocator @ Alle Registerbewegungen opcodieren
    4c9c:	f7fb fb4a 	bl	334 <tidyup_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:187
  bl konstantenfaltungszeiger_loeschen
    4ca0:	f7ff ff9f 	bl	4be2 <konstantenfaltungszeiger_loeschen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:192

@ -----------------------------------------------------------------------------
  @ Write push {lr} if this definition still is in bx lr mode.

  ldr r0, =Flag_bxlr & ~Flag_visible
    4ca4:	f44f 6000 	mov.w	r0, #2048	; 0x800
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:193
  ands r0, r1
    4ca8:	4008      	ands	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:194
  bne.n .prepared_for_classic
    4caa:	d101      	bne.n	4cb0 <.prepared_for_classic>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:195
    bl push_lr_nachholen
    4cac:	f7fb fca7 	bl	5fe <push_lr_nachholen>

00004cb0 <.prepared_for_classic>:
.prepared_for_classic():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:200
.prepared_for_classic:

@ -----------------------------------------------------------------------------
  @ Classic compilation.
  pushda r2 @ Adresse zum klassischen Bearbeiten. Put code entry point on datastack.
    4cb0:	f847 6d04 	str.w	r6, [r7, #-4]!
    4cb4:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:202

  movs r2, #Flag_immediate & ~Flag_visible
    4cb6:	2210      	movs	r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:203
  ands r2, r1
    4cb8:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:204
  beq.n 6f
    4cba:	d002      	beq.n	4cc2 <.prepared_for_classic+0x12>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:206
    @ Es ist immediate. Immer ausführen. Always execute immediate definitions.
    bl execute @ Ausführen.
    4cbc:	f7fe fcea 	bl	3694 <Code_785>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:207
    pop {pc} @ Zurück in die Interpret-Schleife.  Finished.
    4cc0:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:209

6:movs r2, #Flag_inline & ~Flag_visible
    4cc2:	2220      	movs	r2, #32
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:210
  ands r2, r1
    4cc4:	400a      	ands	r2, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:211
  beq.n 7f
    4cc6:	d002      	beq.n	4cce <.prepared_for_classic+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:213

  bl inlinekomma @ Direkt einfügen.        Inline the code
    4cc8:	f7fe fc2b 	bl	3522 <Code_761>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:214
  pop {pc} @ Zurück in die Interpret-Schleife  Finished.
    4ccc:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:216

7:bl callkomma @ Klassisch einkompilieren  Simply compile a BL or Call.
    4cce:	f7fe fb56 	bl	337e <Code_730>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:217
  pop {pc} @ Zurück in die Interpret-Schleife  Finished.
    4cd2:	bd00      	pop	{pc}

00004cd4 <add_to_inline_cache>:
add_to_inline_cache():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:24
@ Inline-Cache for Optimisation across the inlined definitions

@ -----------------------------------------------------------------------------
add_to_inline_cache: @ ( Address|Literal Flag -- )
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr} @ Sollte noch Platz im Inline-Cache sein, füge dieses Paar hinzu. Ansonsten markiere die Definition als zu lang, um sie einfügen zu können.
    4cd4:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:26

  popda r2 @ Flag
    4cd6:	0032      	movs	r2, r6
    4cd8:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:27
  popda r3 @ Address|Literal
    4cda:	0033      	movs	r3, r6
    4cdc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:29

  ldr r0, =inline_cache_count
    4cde:	48b4      	ldr	r0, [pc, #720]	; (4fb0 <quit_innenschleife+0x5a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:30
  ldr r1, [r0]
    4ce0:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:32

  cmp r1, #inline_cache_length
    4ce2:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:33
  bhs 1f
    4ce4:	d207      	bcs.n	4cf6 <add_to_inline_cache+0x22>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:36

    @ Fein. Ein neues Element kommt in den Cache hinein !
    movs r0, #6 @ Jedes Element benötigt 6 Bytes
    4ce6:	2006      	movs	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:37
    muls r1, r0    
    4ce8:	4341      	muls	r1, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:39

    ldr r0, =inline_cache @ Startadresse des Caches
    4cea:	48b2      	ldr	r0, [pc, #712]	; (4fb4 <quit_innenschleife+0x5e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:40
    adds r0, r1           @ Elementoffser dazuaddieren
    4cec:	1840      	adds	r0, r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:43

    @ Zuerst die Adresse:
    strh r3, [r0, #0] @ Low
    4cee:	8003      	strh	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:44
    lsrs r3, #16
    4cf0:	0c1b      	lsrs	r3, r3, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:45
    strh r3, [r0, #2] @ High
    4cf2:	8043      	strh	r3, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:47
    @ Dann die Flags
    strh r2, [r0, #4]
    4cf4:	8082      	strh	r2, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:51

1:@ Zu lang ! Es passt nichts mehr in den Cache hinein. 

  ldr r0, =inline_cache_count
    4cf6:	48ae      	ldr	r0, [pc, #696]	; (4fb0 <quit_innenschleife+0x5a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:52
  ldr r1, [r0]  
    4cf8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:53
  adds r1, #1  @ Die Anzahl von Elementen im Inline-Cache aktualisieren
    4cfa:	3101      	adds	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:54
  str r1, [r0]
    4cfc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:56

  pop {r0, r1, r2, r3, pc}
    4cfe:	bd0f      	pop	{r0, r1, r2, r3, pc}

00004d00 <inline_cache_schreiben>:
inline_cache_schreiben():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:61

@ -----------------------------------------------------------------------------
inline_cache_schreiben:
@ -----------------------------------------------------------------------------
  push {r0, r1, r2, r3, lr}
    4d00:	b50f      	push	{r0, r1, r2, r3, lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:63
@  writeln "Inline-Cache-Schreiben"
  ldr r0, =inline_cache_count
    4d02:	48ab      	ldr	r0, [pc, #684]	; (4fb0 <quit_innenschleife+0x5a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:64
  ldr r1, [r0]
    4d04:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:66

  cmp r1, #inline_cache_length
    4d06:	2906      	cmp	r1, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:67
  bhi 3f @ Ein Element mehr zulassen als bei add_to_inline_cache - da das letzte Element stets ; ist.
    4d08:	d81f      	bhi.n	4d4a <inline_cache_schreiben+0x4a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:71
    @ Fein. Der Inline-Cache enthält die komplette Kompilationssequenz zum Vererben der Optimierungen !

    @ Jetzt den Inhalt des Inline-Caches fein säuberlich einkompilieren :-)
    ldr r0, =inline_cache @ r1 enthält die Anzahl von Elementen.
    4d0a:	48aa      	ldr	r0, [pc, #680]	; (4fb4 <quit_innenschleife+0x5e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:72
    subs r1, #1 @ Insgesamt ein Element weniger, weil ; auch mit in den Inline-Cache kommt.
    4d0c:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:73
    beq 4f @ Sonst nichts vorhanden ? Bei einer leeren Definition kann diese als 0-faltbar markiert und komplett wegoptimiert werden.
    4d0e:	d01d      	beq.n	4d4c <inline_cache_schreiben+0x4c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:75

    pushda r1 @ Zahl der Elemente schreiben
    4d10:	f847 6d04 	str.w	r6, [r7, #-4]!
    4d14:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:76
    bl hkomma
    4d16:	f7fe fe43 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:79

1:  @ Ein Element einkompilieren:
    pushdatos
    4d1a:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:80
    ldrh tos, [r0, #0] @ Adresse low
    4d1e:	8806      	ldrh	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:81
    bl hkomma
    4d20:	f7fe fe3e 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:83

    pushdatos
    4d24:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:84
    ldrh tos, [r0, #2] @ Adresse high
    4d28:	8846      	ldrh	r6, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:85
    bl hkomma
    4d2a:	f7fe fe39 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:87

    pushdatos
    4d2e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:88
    ldrh tos, [r0, #4] @ Flags zuletzt, damit dieses Flag nie als leerer Flash erkannt wird !
    4d32:	8886      	ldrh	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:89
    bl hkomma
    4d34:	f7fe fe34 	bl	39a0 <Code_849>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:91

    adds r0, #6
    4d38:	3006      	adds	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:92
    subs r1, #1
    4d3a:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:93
    bne 1b @ Noch ein Element ?
    4d3c:	d1ed      	bne.n	4d1a <inline_cache_schreiben+0x1a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:96

2:  @ Flag für den jetzt vorhandenen RA-Optimierungsteil setzen !
    pushdaconstw Flag_inlinecache & ~Flag_visible
    4d3e:	f847 6d04 	str.w	r6, [r7, #-4]!
    4d42:	f241 0600 	movw	r6, #4096	; 0x1000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:97
    bl setflags
    4d46:	f7fe fdb5 	bl	38b4 <Code_830>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:100

3:@ Zu lang, nicht komplett erfasst ! Kann leider keine Optimiervererbungssequenz schreiben.
  pop {r0, r1, r2, r3, pc}
    4d4a:	bd0f      	pop	{r0, r1, r2, r3, pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:103

4:@ Leere Definition. als 0-faltbar markieren, damit sie komplett wegoptimiert werden kann.
  pushdaconst Flag_foldable_0 & ~Flag_visible
    4d4c:	f847 6d04 	str.w	r6, [r7, #-4]!
    4d50:	2640      	movs	r6, #64	; 0x40
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:104
  bl setflags
    4d52:	f7fe fdaf 	bl	38b4 <Code_830>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:105
  pop {r0, r1, r2, r3, pc}
    4d56:	bd0f      	pop	{r0, r1, r2, r3, pc}

00004d58 <inline_cache_parser>:
inline_cache_parser():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:110

@ -----------------------------------------------------------------------------
inline_cache_parser: @ ( Einsprungadresse -- )
@ -----------------------------------------------------------------------------
  push {lr} @ Wenn die Optimiersequenz geschrieben worden ist, ist auch mindestens ein Element darin vorhanden.
    4d58:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:112

  popda r0
    4d5a:	0030      	movs	r0, r6
    4d5c:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:113
  bl suchedefinitionsende
    4d5e:	f7fe fbf7 	bl	3550 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:114
  ldrh r1, [r0] @ Länge der Sequenz abholen
    4d62:	8801      	ldrh	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:115
  adds r0, #2
    4d64:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:119

1:@ Hole das nächste Element !

  pushdatos
    4d66:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:120
  ldrh tos, [r0, #0] @ Adresse low
    4d6a:	8806      	ldrh	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:121
  ldrh r2,  [r0, #2] @ Adresse high
    4d6c:	8842      	ldrh	r2, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:122
  lsls r2, #16
    4d6e:	0412      	lsls	r2, r2, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:123
  orrs tos, r2
    4d70:	4316      	orrs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:125

  pushdatos
    4d72:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:126
  ldrh tos, [r0, #4] @ Flags
    4d76:	8886      	ldrh	r6, [r0, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:128

  push {r0, r1}
    4d78:	b403      	push	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:129
  bl kompilator
    4d7a:	f7ff ff3e 	bl	4bfa <kompilator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:130
  pop {r0, r1}
    4d7e:	bc03      	pop	{r0, r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:131
  adds r0, #6
    4d80:	3006      	adds	r0, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:132
  subs r1, #1
    4d82:	3901      	subs	r1, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:133
  bne 1b
    4d84:	d1ef      	bne.n	4d66 <inline_cache_parser+0xe>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:135

  pop {pc}
    4d86:	bd00      	pop	{pc}

00004d88 <Dictionary_1199>:
Dictionary_1199():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:135
    4d88:	00004dd0 	.word	0x00004dd0
    4d8c:	65080000 	.word	0x65080000
    4d90:	756c6176 	.word	0x756c6176
    4d94:	7461      	.short	0x7461
    4d96:	65          	.byte	0x65
	...

00004d98 <Code_1199>:
Code_1199():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:25
@ Interpreter and optimisations

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "evaluate" @ ( -- )
@ -----------------------------------------------------------------------------
  push {lr}
    4d98:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:26
  bl source             @ Save current source
    4d9a:	f7fd ffc8 	bl	2d2e <Code_621>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:29

  @ 2>r
  ldm psp!, {r0}
    4d9e:	cf01      	ldmia	r7!, {r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:30
  push {r0}
    4da0:	b401      	push	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:31
  push {tos}
    4da2:	b440      	push	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:32
  ldm psp!, {tos}
    4da4:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:34

  ldr r0, =Pufferstand  @ Save >in and set to zero
    4da6:	4884      	ldr	r0, [pc, #528]	; (4fb8 <quit_innenschleife+0x62>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:35
  ldr r1, [r0]
    4da8:	6801      	ldr	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:36
  push {r1}
    4daa:	b402      	push	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:37
  movs r1, #0
    4dac:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:38
  str r1, [r0]
    4dae:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:40

  bl setsource          @ Set new source
    4db0:	f7fd ffb0 	bl	2d14 <Code_619>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:41
  bl interpret          @ Interpret
    4db4:	f000 f814 	bl	4de0 <Code_1201>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:43

  ldr r0, =Pufferstand  @ Restore >in
    4db8:	487f      	ldr	r0, [pc, #508]	; (4fb8 <quit_innenschleife+0x62>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:44
  pop {r1}
    4dba:	bc02      	pop	{r1}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:45
  str r1, [r0]
    4dbc:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:48

  @ 2r>
  pushdatos
    4dbe:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:49
  pop {tos}
    4dc2:	bc40      	pop	{r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:50
  pop {r0}
    4dc4:	bc01      	pop	{r0}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:51
  subs psp, #4
    4dc6:	3f04      	subs	r7, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:52
  str r0, [psp]
    4dc8:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:54

  bl setsource          @ Restore old source
    4dca:	f7fd ffa3 	bl	2d14 <Code_619>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:56

  pop {pc}
    4dce:	bd00      	pop	{pc}

00004dd0 <Dictionary_1201>:
Dictionary_1201():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:56
    4dd0:	00004f00 	.word	0x00004f00
    4dd4:	69090000 	.word	0x69090000
    4dd8:	7265746e 	.word	0x7265746e
    4ddc:	74657270 	.word	0x74657270

00004de0 <Code_1201>:
interpret():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:62

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "interpret" @ ( -- )
interpret:
@ -----------------------------------------------------------------------------
  push {lr}
    4de0:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:70
  @ Stay in loop as long token can fetch something from input buffer.

  @ Probe des Datenstackpointers.
  @ Check pointer for datastack.

  ldr r0, =datenstackanfang   @ Stacks fangen oben an und wachsen nach unten.
    4de2:	4876      	ldr	r0, [pc, #472]	; (4fbc <quit_innenschleife+0x66>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:71
  cmp psp, r0                 @ Wenn die Adresse kleiner oder gleich der Anfangsadresse ist, ist alles okay.
    4de4:	4287      	cmp	r7, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:72
  bls.n 2f
    4de6:	d910      	bls.n	4e0a <Code_1201+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:73
    Fehler_Quit_n "Stack underflow"
    4de8:	f7fe f854 	bl	2e94 <dotgaensefuesschen>
    4dec:	5b1b151a 	.word	0x5b1b151a
    4df0:	536d3133 	.word	0x536d3133
    4df4:	6b636174 	.word	0x6b636174
    4df8:	646e7520 	.word	0x646e7520
    4dfc:	6c667265 	.word	0x6c667265
    4e00:	5b1b776f 	.word	0x5b1b776f
    4e04:	6d30      	.short	0x6d30
    4e06:	0a          	.byte	0x0a
    4e07:	00          	.byte	0x00
    4e08:	e08e      	b.n	4f28 <Code_1230>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:75

2:ldr r0, =datenstackende     @ Solange der Stackzeiger oberhalb des Endes liegt, ist alles okay.
    4e0a:	486d      	ldr	r0, [pc, #436]	; (4fc0 <quit_innenschleife+0x6a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:76
  cmp psp, r0
    4e0c:	4287      	cmp	r7, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:77
  bhs.n 3f
    4e0e:	d20f      	bcs.n	4e30 <Code_1201+0x50>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:78
    Fehler_Quit_N "Stack overflow"
    4e10:	f7fe f840 	bl	2e94 <dotgaensefuesschen>
    4e14:	5b1b1519 	.word	0x5b1b1519
    4e18:	536d3133 	.word	0x536d3133
    4e1c:	6b636174 	.word	0x6b636174
    4e20:	65766f20 	.word	0x65766f20
    4e24:	6f6c6672 	.word	0x6f6c6672
    4e28:	305b1b77 	.word	0x305b1b77
    4e2c:	0a6d      	.short	0x0a6d
    4e2e:	e07b      	b.n	4f28 <Code_1230>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:83

3: @ Alles ok.  Stacks are fine.

@ -----------------------------------------------------------------------------
  bl konstantenfaltungszeiger_setzen
    4e30:	f7ff fec8 	bl	4bc4 <konstantenfaltungszeiger_setzen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:86
@ -----------------------------------------------------------------------------

  bl token
    4e34:	f7ff fce6 	bl	4804 <Code_1101>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:90
  @ ( Address Length )

  @ Prüfe, ob der String leer ist  Check if token is empty - that designates an empty input buffer.
  cmp tos, #0
    4e38:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:91
  bne.n 2f
    4e3a:	d102      	bne.n	4e42 <Code_1201+0x62>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:92
    ddrop
    4e3c:	3704      	adds	r7, #4
    4e3e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:93
    pop {pc}
    4e40:	bd00      	pop	{pc}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:104

  @ Registerkarte:
  @  r4: Adresse des Konstantenfaltungszeigers  Address of constant folding pointer
  @  r5: Konstantenfaltungszeiger               Constant folding pointer

  ddup
    4e42:	6838      	ldr	r0, [r7, #0]
    4e44:	f847 6d04 	str.w	r6, [r7, #-4]!
    4e48:	3f04      	subs	r7, #4
    4e4a:	6038      	str	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:105
  bl find @ Probe, ob es sich um ein Wort aus dem Dictionary handelt:  Attemp to find token in dictionary.
    4e4c:	f7ff f8ad 	bl	3faa <Code_933>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:108
  @ ( Token-Addr Token-Length Addr Flags )

  popda r1 @ Flags
    4e50:	0031      	movs	r1, r6
    4e52:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:109
  popda r2 @ Einsprungadresse
    4e54:	0032      	movs	r2, r6
    4e56:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:117

  @ Registerkarte:
  @  r1: Flags                                  Flags
  @  r2: Einsprungadresse                       Code entry point

  cmp r2, #0
    4e58:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:118
  bne.n .interpret_token_found
    4e5a:	d120      	bne.n	4e9e <.interpret_token_found>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:122
    @ Nicht gefunden. Ein Fall für Number.
    @ Entry-Address is zero if not found ! Note that Flags have very special meanings in Mecrisp !

    ldr r0, [psp] @ Den String für die not-found Meldung vermerken.
    4e5c:	6838      	ldr	r0, [r7, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:123
    movs r1, tos
    4e5e:	0031      	movs	r1, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:125

    bl sprungschreiber_flaggenerator @ Wenn noch mehr Faltkonstanten kommen, müssen die Ergebnisse von Vergleichen vorher geschrieben werden.
    4e60:	f7fc fc5a 	bl	1718 <sprungschreiber_flaggenerator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:127

    bl number
    4e64:	f7ff fd2a 	bl	48bc <Code_1106>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:134
  @ Number gives back ( 0 ) or ( x 1 ) or ( x y 2 ).
  @ Zero means: Not recognized.
  @ Note that literals actually are not written/compiled here.
  @ They are simply placed on stack and constant folding takes care of them later.

    popda r2   @ Flag von Number holen
    4e68:	0032      	movs	r2, r6
    4e6a:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:135
    cmp r2, #0 @ Did number recognize the string ?
    4e6c:	2a00      	cmp	r2, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:136
    bne.n 1b   @ Zahl gefunden, alles gut. Interpretschleife fortsetzen.  Finished.
    4e6e:	d1b8      	bne.n	4de2 <Code_1201+0x2>

00004e70 <not_found_addr_r0_len_r1>:
not_found_addr_r0_len_r1():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:140

    @ Number mochte das Token auch nicht.
not_found_addr_r0_len_r1:
    pushda r0
    4e70:	f847 6d04 	str.w	r6, [r7, #-4]!
    4e74:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:141
    pushda r1
    4e76:	f847 6d04 	str.w	r6, [r7, #-4]!
    4e7a:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:142
    bl stype
    4e7c:	f7fe f85e 	bl	2f3c <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:143
    Fehler_Quit_n " not found."
    4e80:	f7fe f808 	bl	2e94 <dotgaensefuesschen>
    4e84:	5b1b1516 	.word	0x5b1b1516
    4e88:	206d3133 	.word	0x206d3133
    4e8c:	20746f6e 	.word	0x20746f6e
    4e90:	6e756f66 	.word	0x6e756f66
    4e94:	5b1b2e64 	.word	0x5b1b2e64
    4e98:	6d30      	.short	0x6d30
    4e9a:	0a          	.byte	0x0a
    4e9b:	00          	.byte	0x00
    4e9c:	e044      	b.n	4f28 <Code_1230>

00004e9e <.interpret_token_found>:
.interpret_token_found():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:155

  @ Registerkarte:
  @  r1: Flags                                  Flags
  @  r2: Einsprungadresse                       Code entry point

  ldr r3, =state
    4e9e:	4b49      	ldr	r3, [pc, #292]	; (4fc4 <quit_innenschleife+0x6e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:156
  ldr r3, [r3]
    4ea0:	681b      	ldr	r3, [r3, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:157
  cmp r3, #0
    4ea2:	2b00      	cmp	r3, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:158
  bne.n 5f
    4ea4:	d121      	bne.n	4eea <.ausfuehren+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:160
    @ Im Ausführzustand.  Execute.
    bl konstantenfaltungszeiger_loeschen
    4ea6:	f7ff fe9c 	bl	4be2 <konstantenfaltungszeiger_loeschen>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:162

    movs r3, #Flag_immediate_compileonly & ~Flag_visible
    4eaa:	2330      	movs	r3, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:163
    ands r3, r1
    4eac:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:164
    cmp r3, #Flag_immediate_compileonly & ~Flag_visible
    4eae:	2b30      	cmp	r3, #48	; 0x30
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:165
    bne.n .ausfuehren
    4eb0:	d113      	bne.n	4eda <.ausfuehren>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:166
      bl stype
    4eb2:	f7fe f843 	bl	2f3c <Code_669>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:167
      Fehler_Quit_n " is compile-only."
    4eb6:	f7fd ffed 	bl	2e94 <dotgaensefuesschen>
    4eba:	151c      	.short	0x151c
    4ebc:	31335b1b 	.word	0x31335b1b
    4ec0:	7369206d 	.word	0x7369206d
    4ec4:	6d6f6320 	.word	0x6d6f6320
    4ec8:	656c6970 	.word	0x656c6970
    4ecc:	6c6e6f2d 	.word	0x6c6e6f2d
    4ed0:	5b1b2e79 	.word	0x5b1b2e79
    4ed4:	6d30      	.short	0x6d30
    4ed6:	0a          	.byte	0x0a
    4ed7:	00          	.byte	0x00
    4ed8:	e026      	b.n	4f28 <Code_1230>

00004eda <.ausfuehren>:
.ausfuehren():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:170

.ausfuehren:
    ddrop
    4eda:	3704      	adds	r7, #4
    4edc:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:171
    pushda r2    @ Adresse zum Ausführen   Code entry point
    4ede:	f847 6d04 	str.w	r6, [r7, #-4]!
    4ee2:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:172
    bl execute   @                         Execute it
    4ee4:	f7fe fbd6 	bl	3694 <Code_785>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:173
    b.n 1b @ Interpretschleife fortsetzen.  Finished.
    4ee8:	e77b      	b.n	4de2 <Code_1201+0x2>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:181
  @  r1: Flags
  @  r2: Einsprungadresse                        Code entry point

@ -----------------------------------------------------------------------------
5:@ Im Kompilierzustand.  In compile state.
    ddrop
    4eea:	3704      	adds	r7, #4
    4eec:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:183

    pushda r2 @ Einsprungadresse
    4eee:	f847 6d04 	str.w	r6, [r7, #-4]!
    4ef2:	0016      	movs	r6, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:184
    pushda r1 @ Flags
    4ef4:	f847 6d04 	str.w	r6, [r7, #-4]!
    4ef8:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:186

    bl kompilator
    4efa:	f7ff fe7e 	bl	4bfa <kompilator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:187
    b.n 1b @ Interpretschleife weitermachen     Finished.
    4efe:	e770      	b.n	4de2 <Code_1201+0x2>

00004f00 <Dictionary_1227>:
Dictionary_1227():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:187
    4f00:	00004f1c 	.word	0x00004f1c
    4f04:	68090081 	.word	0x68090081
    4f08:	2d6b6f6f 	.word	0x2d6b6f6f
    4f0c:	74697571 	.word	0x74697571

00004f10 <Code_1227>:
Code_1227():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:194

@------------------------------------------------------------------------------
  Wortbirne Flag_visible|Flag_variable, "hook-quit" @ ( -- addr )
  CoreVariable hook_quit
@------------------------------------------------------------------------------
  pushdatos
    4f10:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:195
  ldr tos, =hook_quit
    4f14:	4e2c      	ldr	r6, [pc, #176]	; (4fc8 <quit_innenschleife+0x72>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:196
  bx lr
    4f16:	4770      	bx	lr
    4f18:	00004f56 	.word	0x00004f56

00004f1c <Dictionary_1230>:
Dictionary_1230():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:196
    4f1c:	00004fe0 	.word	0x00004fe0
    4f20:	71040000 	.word	0x71040000
    4f24:	6975      	.short	0x6975
    4f26:	74          	.byte	0x74
	...

00004f28 <Code_1230>:
quit():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:210
  @ Clear stacks and tidy up.
  .ifdef m0core
  ldr r0, =returnstackanfang
  mov sp, r0
  .else
  ldr sp, =returnstackanfang
    4f28:	f8df d0a0 	ldr.w	sp, [pc, #160]	; 4fcc <quit_innenschleife+0x76>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:213
  .endif

  ldr psp, =datenstackanfang
    4f2c:	4f23      	ldr	r7, [pc, #140]	; (4fbc <quit_innenschleife+0x66>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:221
   bl initflash
  .endif

  @ Base und State setzen

  ldr r0, =base
    4f2e:	4828      	ldr	r0, [pc, #160]	; (4fd0 <quit_innenschleife+0x7a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:222
  movs r1, #10   @ Base decimal
    4f30:	210a      	movs	r1, #10
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:223
  str r1, [r0]
    4f32:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:225

  ldr r0, =state
    4f34:	4823      	ldr	r0, [pc, #140]	; (4fc4 <quit_innenschleife+0x6e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:226
  movs r1, #0    @ Execute mode
    4f36:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:227
  str r1, [r0]
    4f38:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:229

  ldr r0, =konstantenfaltungszeiger
    4f3a:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:231
  @ movs r1, #0  @ Clear constant folding pointer
  str r1, [r0]
    4f3e:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:233

  bl init_register_allocator
    4f40:	f7fb fa3f 	bl	3c2 <init_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:235

  ldr r0, =Pufferstand
    4f44:	481c      	ldr	r0, [pc, #112]	; (4fb8 <quit_innenschleife+0x62>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:237
  @ movs r1, #0  @ Set >IN to 0
  str r1, [r0]
    4f46:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:239

  ldr r0, =current_source
    4f48:	4822      	ldr	r0, [pc, #136]	; (4fd4 <quit_innenschleife+0x7e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:241
  @ movs r1, #0  @ Empty TIB is source
  str r1, [r0]
    4f4a:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:242
  ldr r1, =Eingabepuffer
    4f4c:	4922      	ldr	r1, [pc, #136]	; (4fd8 <quit_innenschleife+0x82>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:243
  str r1, [r0, #4]
    4f4e:	6041      	str	r1, [r0, #4]

00004f50 <quit_intern>:
quit_intern():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:246

quit_intern:
  ldr r0, =hook_quit
    4f50:	481d      	ldr	r0, [pc, #116]	; (4fc8 <quit_innenschleife+0x72>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:247
  ldr r0, [r0]
    4f52:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:248
  mov pc, r0
    4f54:	4687      	mov	pc, r0

00004f56 <quit_innenschleife>:
quit_innenschleife():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:251

quit_innenschleife:  @ Main loop of Forth system.
  bl query
    4f56:	f7fd fef8 	bl	2d4a <Code_623>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:252
  bl interpret
    4f5a:	f7ff ff41 	bl	4de0 <Code_1201>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:257

  .ifdef color

  @ Check state
  ldr r0, =state
    4f5e:	4819      	ldr	r0, [pc, #100]	; (4fc4 <quit_innenschleife+0x6e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:258
  ldr r0, [r0]
    4f60:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:259
  cmp r0, #0
    4f62:	2800      	cmp	r0, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:260
  beq 1f
    4f64:	d006      	beq.n	4f74 <quit_innenschleife+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:261
    write " \x06\x1B[34m"
    4f66:	f7fd ff95 	bl	2e94 <dotgaensefuesschen>
    4f6a:	2007      	.short	0x2007
    4f6c:	335b1b06 	.word	0x335b1b06
    4f70:	6d34      	.short	0x6d34
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:262
    b 2f
    4f72:	e005      	b.n	4f80 <quit_innenschleife+0x2a>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:263
1:  write " \x06\x1B[36m"
    4f74:	f7fd ff8e 	bl	2e94 <dotgaensefuesschen>
    4f78:	1b062007 	.word	0x1b062007
    4f7c:	6d36335b 	.word	0x6d36335b
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:267
2:

  @ Check memory target
  ldr r0, =Dictionarypointer
    4f80:	4816      	ldr	r0, [pc, #88]	; (4fdc <quit_innenschleife+0x86>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:268
  ldr r0, [r0]
    4f82:	6800      	ldr	r0, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:270

  ldr r1, =Backlinkgrenze
    4f84:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:271
  cmp r0, r1
    4f88:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:273
.ifdef above_ram
  blo.n 1f
    4f8a:	d307      	bcc.n	4f9c <quit_innenschleife+0x46>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:278
.else
  bhs.n 1f
.endif

    writeln "ok'\x1B[0m"
    4f8c:	f7fd ff82 	bl	2e94 <dotgaensefuesschen>
    4f90:	276b6f08 	.word	0x276b6f08
    4f94:	6d305b1b 	.word	0x6d305b1b
    4f98:	0a          	.byte	0x0a
    4f99:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:279
    b.n quit_innenschleife
    4f9a:	e7dc      	b.n	4f56 <quit_innenschleife>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:280
1:  writeln "ok.\x1B[0m"
    4f9c:	f7fd ff7a 	bl	2e94 <dotgaensefuesschen>
    4fa0:	2e6b6f08 	.word	0x2e6b6f08
    4fa4:	6d305b1b 	.word	0x6d305b1b
    4fa8:	0a          	.byte	0x0a
    4fa9:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:281
    b.n quit_innenschleife
    4faa:	e7d4      	b.n	4f56 <quit_innenschleife>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-kompilator.s:165
    ldr r0, =allocator_base
    4fac:	20000020 	.word	0x20000020
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:29
  ldr r0, =inline_cache_count
    4fb0:	20000054 	.word	0x20000054
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/ra-inline.s:39
    ldr r0, =inline_cache @ Startadresse des Caches
    4fb4:	20000058 	.word	0x20000058
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:34
  ldr r0, =Pufferstand  @ Save >in and set to zero
    4fb8:	2001ffe4 	.word	0x2001ffe4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:70
  ldr r0, =datenstackanfang   @ Stacks fangen oben an und wachsen nach unten.
    4fbc:	20000288 	.word	0x20000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:75
2:ldr r0, =datenstackende     @ Solange der Stackzeiger oberhalb des Endes liegt, ist alles okay.
    4fc0:	20000188 	.word	0x20000188
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:155
  ldr r3, =state
    4fc4:	2001ffd8 	.word	0x2001ffd8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:195
  ldr tos, =hook_quit
    4fc8:	2001ffc8 	.word	0x2001ffc8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:210
  ldr sp, =returnstackanfang
    4fcc:	20000388 	.word	0x20000388
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:221
  ldr r0, =base
    4fd0:	2001fffc 	.word	0x2001fffc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:239
  ldr r0, =current_source
    4fd4:	2001ffdc 	.word	0x2001ffdc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:242
  ldr r1, =Eingabepuffer
    4fd8:	200000c0 	.word	0x200000c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:267
  ldr r0, =Dictionarypointer
    4fdc:	2001ffd0 	.word	0x2001ffd0

00004fe0 <Dictionary_1235>:
Dictionary_1235():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/ra/interpreter.s:267
    4fe0:	00004ffa 	.word	0x00004ffa
    4fe4:	65050000 	.word	0x65050000
    4fe8:	3f746e69 	.word	0x3f746e69

00004fec <Code_1235>:
Code_1235():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:24
@ Common interrupt helpers

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "eint?" @ ( -- ) Are Interrupts enabled ?
@ ----------------------------------------------------------------------------- 
  pushdatos
    4fec:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:25
  mrs tos, PRIMASK
    4ff0:	f3ef 8610 	mrs	r6, PRIMASK
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:26
  subs tos, #1
    4ff4:	3e01      	subs	r6, #1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:27
  sbcs tos, tos
    4ff6:	41b6      	sbcs	r6, r6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:28
  bx lr
    4ff8:	4770      	bx	lr

00004ffa <Dictionary_1237>:
Dictionary_1237():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:28
    4ffa:	500a      	.short	0x500a
    4ffc:	00200000 	.word	0x00200000
    5000:	6e696504 	.word	0x6e696504
    5004:	74          	.byte	0x74
	...

00005006 <Code_1237>:
Code_1237():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:33

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "eint" @ ( -- ) Aktiviert Interrupts  Enables Interrupts
@ ----------------------------------------------------------------------------- 
  cpsie i @ Interrupt-Handler
    5006:	b662      	cpsie	i
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:34
  bx lr
    5008:	4770      	bx	lr

0000500a <Dictionary_1238>:
Dictionary_1238():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:34
    500a:	501a      	.short	0x501a
    500c:	00200000 	.word	0x00200000
    5010:	6e696404 	.word	0x6e696404
    5014:	74          	.byte	0x74
	...

00005016 <Code_1238>:
Code_1238():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:39

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "dint" @ ( -- ) Deaktiviert Interrupts  Disables Interrupts
@ ----------------------------------------------------------------------------- 
  cpsid i @ Interrupt-Handler
    5016:	b672      	cpsid	i
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:40
  bx lr
    5018:	4770      	bx	lr

0000501a <Dictionary_1239>:
Dictionary_1239():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:40
    501a:	5030      	.short	0x5030
    501c:	00200000 	.word	0x00200000
    5020:	73706904 	.word	0x73706904
    5024:	72          	.byte	0x72
	...

00005026 <Code_1239>:
Code_1239():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:45

@ -----------------------------------------------------------------------------
  Wortbirne Flag_inline, "ipsr" @ ( -- int ) Read IPSR by Mark Schweizer
@ ----------------------------------------------------------------------------- 
  pushdatos
    5026:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:46
  mrs tos, ipsr
    502a:	f3ef 8605 	mrs	r6, IPSR
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:47
  bx lr
    502e:	4770      	bx	lr

00005030 <Dictionary_1241>:
Dictionary_1241():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:47
    5030:	0000503c 	.word	0x0000503c
    5034:	6e030000 	.word	0x6e030000
    5038:	706f      	.short	0x706f

0000503a <Code_1241>:
nop_vektor():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:53

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "nop" @ ( -- ) @ Handler for unused hooks
nop_vektor:                    
@ ----------------------------------------------------------------------------- 
  bx lr
    503a:	4770      	bx	lr

0000503c <Dictionary_1242>:
Dictionary_1242():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:53
    503c:	0000507e 	.word	0x0000507e
    5040:	75090000 	.word	0x75090000
    5044:	6e61686e 	.word	0x6e61686e
    5048:	64656c64 	.word	0x64656c64

0000504c <Code_1242>:
Code_1242():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:59

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "unhandled" @ Message for wild interrupts
unhandled:                            @   and handler for unused interrupts
@ -----------------------------------------------------------------------------
  push {lr} 
    504c:	b500      	push	{lr}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:61
  @ writeln "Unhandled Interrupt !"
  write "Unhandled Interrupt "
    504e:	f7fd ff21 	bl	2e94 <dotgaensefuesschen>
    5052:	5514      	.short	0x5514
    5054:	6e61686e 	.word	0x6e61686e
    5058:	64656c64 	.word	0x64656c64
    505c:	746e4920 	.word	0x746e4920
    5060:	75727265 	.word	0x75727265
    5064:	7470      	.short	0x7470
    5066:	20          	.byte	0x20
    5067:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:62
  pushdatos
    5068:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:63
  mrs tos, ipsr
    506c:	f3ef 8605 	mrs	r6, IPSR
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:64
  bl hexdot
    5070:	f7fd ff78 	bl	2f64 <Code_672>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:65
  writeln "!"
    5074:	f7fd ff0e 	bl	2e94 <dotgaensefuesschen>
    5078:	2102      	.short	0x2102
    507a:	0a          	.byte	0x0a
    507b:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:66
  pop {pc}
    507c:	bd00      	pop	{pc}

0000507e <Dictionary_1246>:
Dictionary_1246():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:66
    507e:	5090      	.short	0x5090
    5080:	00000000 	.word	0x00000000
    5084:	73657205 	.word	0x73657205
    5088:	7465      	.short	0x7465

0000508a <Code_1246>:
Code_1246():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:72

@ -----------------------------------------------------------------------------
  Wortbirne Flag_visible, "reset" @ ( -- ) Hardware level reset
Restart:
@ ----------------------------------------------------------------------------- 
  ldr r0, =0xE000ED0C
    508a:	488e      	ldr	r0, [pc, #568]	; (52c4 <Code_1295+0x2e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:73
  ldr r1, =0x5FA0004
    508c:	498e      	ldr	r1, [pc, #568]	; (52c8 <Code_1295+0x32>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:74
  str r1, [r0]
    508e:	6001      	str	r1, [r0, #0]

00005090 <Dictionary_1248>:
Dictionary_1248():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:74
    5090:	000050ba 	.word	0x000050ba
    5094:	690b0081 	.word	0x690b0081
    5098:	732d7172 	.word	0x732d7172
    509c:	69747379 	.word	0x69747379
    50a0:	6b63      	.short	0x6b63

000050a2 <Code_1248>:
Code_1248():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:143

@ -----------------------------------------------------------------------------
@ Common interrupt handlers for all targets
@ -----------------------------------------------------------------------------

interrupt systick
    50a2:	f847 6d04 	str.w	r6, [r7, #-4]!
    50a6:	4e89      	ldr	r6, [pc, #548]	; (52cc <Code_1295+0x36>)
    50a8:	4770      	bx	lr
    50aa:	504c      	.short	0x504c
	...

000050ae <irq_vektor_systick>:
irq_vektor_systick():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:143
    50ae:	f64f 70c4 	movw	r0, #65476	; 0xffc4
    50b2:	f2c2 0001 	movt	r0, #8193	; 0x2001
    50b6:	6800      	ldr	r0, [r0, #0]
    50b8:	4687      	mov	pc, r0

000050ba <Dictionary_1252>:
Dictionary_1252():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:143
    50ba:	50e2      	.short	0x50e2
    50bc:	00810000 	.word	0x00810000
    50c0:	71726909 	.word	0x71726909
    50c4:	7561662d 	.word	0x7561662d
    50c8:	746c      	.short	0x746c

000050ca <Code_1252>:
Code_1252():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:144
initinterrupt fault, faulthandler, unhandled
    50ca:	f847 6d04 	str.w	r6, [r7, #-4]!
    50ce:	4e80      	ldr	r6, [pc, #512]	; (52d0 <Code_1295+0x3a>)
    50d0:	4770      	bx	lr
    50d2:	504c      	.short	0x504c
	...

000050d6 <faulthandler>:
faulthandler():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:144
    50d6:	f64f 70c0 	movw	r0, #65472	; 0xffc0
    50da:	f2c2 0001 	movt	r0, #8193	; 0x2001
    50de:	6800      	ldr	r0, [r0, #0]
    50e0:	4687      	mov	pc, r0

000050e2 <Dictionary_1256>:
Dictionary_1256():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:144
    50e2:	5110      	.short	0x5110
    50e4:	00810000 	.word	0x00810000
    50e8:	7172690e 	.word	0x7172690e
    50ec:	6c6f632d 	.word	0x6c6f632d
    50f0:	7463656c 	.word	0x7463656c
    50f4:	6f69      	.short	0x6f69
    50f6:	6e          	.byte	0x6e
	...

000050f8 <Code_1256>:
Code_1256():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:145
initinterrupt collection, nullhandler, unhandled
    50f8:	f847 6d04 	str.w	r6, [r7, #-4]!
    50fc:	4e75      	ldr	r6, [pc, #468]	; (52d4 <Code_1295+0x3e>)
    50fe:	4770      	bx	lr
    5100:	0000504c 	.word	0x0000504c

00005104 <nullhandler>:
nullhandler():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:145
    5104:	f64f 70bc 	movw	r0, #65468	; 0xffbc
    5108:	f2c2 0001 	movt	r0, #8193	; 0x2001
    510c:	6800      	ldr	r0, [r0, #0]
    510e:	4687      	mov	pc, r0

00005110 <Dictionary_1260>:
Dictionary_1260():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:145
    5110:	00005138 	.word	0x00005138
    5114:	69090081 	.word	0x69090081
    5118:	652d7172 	.word	0x652d7172
    511c:	30697478 	.word	0x30697478

00005120 <Code_1260>:
Code_1260():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:27
@------------------------------------------------------------------------------
@ Alle Interrupthandler funktionieren gleich und werden komfortabel mit einem Makro erzeugt:
@ All interrupt handlers work the same way and are generated with a macro:
@------------------------------------------------------------------------------

interrupt exti0
    5120:	f847 6d04 	str.w	r6, [r7, #-4]!
    5124:	4e6c      	ldr	r6, [pc, #432]	; (52d8 <Code_1295+0x42>)
    5126:	4770      	bx	lr
    5128:	0000504c 	.word	0x0000504c

0000512c <irq_vektor_exti0>:
irq_vektor_exti0():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:27
    512c:	f64f 70b8 	movw	r0, #65464	; 0xffb8
    5130:	f2c2 0001 	movt	r0, #8193	; 0x2001
    5134:	6800      	ldr	r0, [r0, #0]
    5136:	4687      	mov	pc, r0

00005138 <Dictionary_1264>:
Dictionary_1264():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:27
    5138:	00005160 	.word	0x00005160
    513c:	69090081 	.word	0x69090081
    5140:	652d7172 	.word	0x652d7172
    5144:	31697478 	.word	0x31697478

00005148 <Code_1264>:
Code_1264():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:28
interrupt exti1
    5148:	f847 6d04 	str.w	r6, [r7, #-4]!
    514c:	4e63      	ldr	r6, [pc, #396]	; (52dc <Code_1295+0x46>)
    514e:	4770      	bx	lr
    5150:	0000504c 	.word	0x0000504c

00005154 <irq_vektor_exti1>:
irq_vektor_exti1():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:28
    5154:	f64f 70b4 	movw	r0, #65460	; 0xffb4
    5158:	f2c2 0001 	movt	r0, #8193	; 0x2001
    515c:	6800      	ldr	r0, [r0, #0]
    515e:	4687      	mov	pc, r0

00005160 <Dictionary_1268>:
Dictionary_1268():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:28
    5160:	00005188 	.word	0x00005188
    5164:	69090081 	.word	0x69090081
    5168:	652d7172 	.word	0x652d7172
    516c:	32697478 	.word	0x32697478

00005170 <Code_1268>:
Code_1268():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:29
interrupt exti2
    5170:	f847 6d04 	str.w	r6, [r7, #-4]!
    5174:	4e5a      	ldr	r6, [pc, #360]	; (52e0 <Code_1295+0x4a>)
    5176:	4770      	bx	lr
    5178:	0000504c 	.word	0x0000504c

0000517c <irq_vektor_exti2>:
irq_vektor_exti2():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:29
    517c:	f64f 70b0 	movw	r0, #65456	; 0xffb0
    5180:	f2c2 0001 	movt	r0, #8193	; 0x2001
    5184:	6800      	ldr	r0, [r0, #0]
    5186:	4687      	mov	pc, r0

00005188 <Dictionary_1272>:
Dictionary_1272():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:29
    5188:	000051b0 	.word	0x000051b0
    518c:	69090081 	.word	0x69090081
    5190:	652d7172 	.word	0x652d7172
    5194:	33697478 	.word	0x33697478

00005198 <Code_1272>:
Code_1272():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:30
interrupt exti3
    5198:	f847 6d04 	str.w	r6, [r7, #-4]!
    519c:	4e51      	ldr	r6, [pc, #324]	; (52e4 <Code_1295+0x4e>)
    519e:	4770      	bx	lr
    51a0:	0000504c 	.word	0x0000504c

000051a4 <irq_vektor_exti3>:
irq_vektor_exti3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:30
    51a4:	f64f 70ac 	movw	r0, #65452	; 0xffac
    51a8:	f2c2 0001 	movt	r0, #8193	; 0x2001
    51ac:	6800      	ldr	r0, [r0, #0]
    51ae:	4687      	mov	pc, r0

000051b0 <Dictionary_1276>:
Dictionary_1276():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:30
    51b0:	000051d8 	.word	0x000051d8
    51b4:	69090081 	.word	0x69090081
    51b8:	652d7172 	.word	0x652d7172
    51bc:	34697478 	.word	0x34697478

000051c0 <Code_1276>:
Code_1276():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:31
interrupt exti4
    51c0:	f847 6d04 	str.w	r6, [r7, #-4]!
    51c4:	4e48      	ldr	r6, [pc, #288]	; (52e8 <Code_1295+0x52>)
    51c6:	4770      	bx	lr
    51c8:	0000504c 	.word	0x0000504c

000051cc <irq_vektor_exti4>:
irq_vektor_exti4():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:31
    51cc:	f64f 70a8 	movw	r0, #65448	; 0xffa8
    51d0:	f2c2 0001 	movt	r0, #8193	; 0x2001
    51d4:	6800      	ldr	r0, [r0, #0]
    51d6:	4687      	mov	pc, r0

000051d8 <Dictionary_1280>:
Dictionary_1280():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:31
    51d8:	000051fe 	.word	0x000051fe
    51dc:	69070081 	.word	0x69070081
    51e0:	612d7172 	.word	0x612d7172
    51e4:	6364      	.short	0x6364

000051e6 <Code_1280>:
Code_1280():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:32
interrupt adc
    51e6:	f847 6d04 	str.w	r6, [r7, #-4]!
    51ea:	4e40      	ldr	r6, [pc, #256]	; (52ec <Code_1295+0x56>)
    51ec:	4770      	bx	lr
    51ee:	504c      	.short	0x504c
	...

000051f2 <irq_vektor_adc>:
irq_vektor_adc():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:32
    51f2:	f64f 70a4 	movw	r0, #65444	; 0xffa4
    51f6:	f2c2 0001 	movt	r0, #8193	; 0x2001
    51fa:	6800      	ldr	r0, [r0, #0]
    51fc:	4687      	mov	pc, r0

000051fe <Dictionary_1284>:
Dictionary_1284():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:32
    51fe:	5226      	.short	0x5226
    5200:	00810000 	.word	0x00810000
    5204:	71726908 	.word	0x71726908
    5208:	6d69742d 	.word	0x6d69742d
    520c:	32          	.byte	0x32
	...

0000520e <Code_1284>:
Code_1284():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:33
interrupt tim2
    520e:	f847 6d04 	str.w	r6, [r7, #-4]!
    5212:	4e37      	ldr	r6, [pc, #220]	; (52f0 <Code_1295+0x5a>)
    5214:	4770      	bx	lr
    5216:	504c      	.short	0x504c
	...

0000521a <irq_vektor_tim2>:
irq_vektor_tim2():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:33
    521a:	f64f 70a0 	movw	r0, #65440	; 0xffa0
    521e:	f2c2 0001 	movt	r0, #8193	; 0x2001
    5222:	6800      	ldr	r0, [r0, #0]
    5224:	4687      	mov	pc, r0

00005226 <Dictionary_1288>:
Dictionary_1288():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:33
    5226:	524e      	.short	0x524e
    5228:	00810000 	.word	0x00810000
    522c:	71726908 	.word	0x71726908
    5230:	6d69742d 	.word	0x6d69742d
    5234:	33          	.byte	0x33
	...

00005236 <Code_1288>:
Code_1288():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:34
interrupt tim3
    5236:	f847 6d04 	str.w	r6, [r7, #-4]!
    523a:	4e2e      	ldr	r6, [pc, #184]	; (52f4 <Code_1295+0x5e>)
    523c:	4770      	bx	lr
    523e:	504c      	.short	0x504c
	...

00005242 <irq_vektor_tim3>:
irq_vektor_tim3():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:34
    5242:	f64f 709c 	movw	r0, #65436	; 0xff9c
    5246:	f2c2 0001 	movt	r0, #8193	; 0x2001
    524a:	6800      	ldr	r0, [r0, #0]
    524c:	4687      	mov	pc, r0

0000524e <Dictionary_1292>:
Dictionary_1292():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:34
    524e:	5276      	.short	0x5276
    5250:	00810000 	.word	0x00810000
    5254:	71726908 	.word	0x71726908
    5258:	6d69742d 	.word	0x6d69742d
    525c:	34          	.byte	0x34
	...

0000525e <Code_1292>:
Code_1292():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:35
interrupt tim4
    525e:	f847 6d04 	str.w	r6, [r7, #-4]!
    5262:	4e25      	ldr	r6, [pc, #148]	; (52f8 <Code_1295+0x62>)
    5264:	4770      	bx	lr
    5266:	504c      	.short	0x504c
	...

0000526a <irq_vektor_tim4>:
irq_vektor_tim4():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:35
    526a:	f64f 7098 	movw	r0, #65432	; 0xff98
    526e:	f2c2 0001 	movt	r0, #8193	; 0x2001
    5272:	6800      	ldr	r0, [r0, #0]
    5274:	4687      	mov	pc, r0

00005276 <Dictionary_1295>:
Dictionary_1295():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:35
    5276:	0000      	.short	0x0000
    5278:	ffff2400 	.word	0xffff2400
    527c:	2d2d2d18 	.word	0x2d2d2d18
    5280:	616c4620 	.word	0x616c4620
    5284:	44206873 	.word	0x44206873
    5288:	69746369 	.word	0x69746369
    528c:	72616e6f 	.word	0x72616e6f
    5290:	2d2d2079 	.word	0x2d2d2079
    5294:	2d          	.byte	0x2d
	...

00005296 <Code_1295>:
Code_1295():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:95
Reset_ITCM: @ Einsprung zu Beginn
.equ Reset, Reset_ITCM - KernelAnfang + FlashAnfang
@ -----------------------------------------------------------------------------

    @ Enable the data and instruction caches first to speed up the bootstrap.
    bl    enable_caches         @ Have the cache prefetch from internal flash
    5296:	f7fd fa81 	bl	279c <enable_caches>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:99

    @ To maximize performance this Mecrisp Stellaris port copies
    @ the kernel from internal flash to ITCM.
    movs  r0, #FlashAnfang         @ r0 = start of flash
    529a:	f05f 6000 	movs.w	r0, #134217728	; 0x8000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:100
    movs  r1, #KernelAnfang        @ r1 = start of ITCM
    529e:	f05f 0100 	movs.w	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:101
    movw  r2, #:lower16:KernelEnde @ r2 = size of kernel (< size of ITCM)
    52a2:	f245 42c0 	movw	r2, #21696	; 0x54c0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:102
1:  ldmia r0!, {r3}                @ TODO: copy faster
    52a6:	c808      	ldmia	r0!, {r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:103
    stmia r1!, {r3}
    52a8:	c108      	stmia	r1!, {r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:104
    cmp   r1, r2
    52aa:	4291      	cmp	r1, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:105
    bne   1b
    52ac:	d1fb      	bne.n	52a6 <Code_1295+0x10>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:111

    @ The interrupt vector table uses absolute addresses
    @ pointing to the copy in ITCM. Let's hope there are no
    @ interrupts before the code is copied. Now that everything
    @ has been copied we can use the vector table in the ITCM.
    ldr   r0, =SCB_VTOR   @ relocate interrupt vector table
    52ae:	4813      	ldr	r0, [pc, #76]	; (52fc <Code_1295+0x66>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:112
    movs  r1, #0
    52b0:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:113
    str   r1, [r0]
    52b2:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:114
    dsb
    52b4:	f3bf 8f4f 	dsb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:115
    isb
    52b8:	f3bf 8f6f 	isb	sy
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:117

    movw  r1, #:lower16:Handover+1  @ relocate execution
    52bc:	f245 3101 	movw	r1, #21249	; 0x5301
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:118
    bx    r1
    52c0:	4708      	bx	r1
    52c2:	0000      	.short	0x0000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:72
  ldr r0, =0xE000ED0C
    52c4:	e000ed0c 	.word	0xe000ed0c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:73
  ldr r1, =0x5FA0004
    52c8:	05fa0004 	.word	0x05fa0004
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:143
interrupt systick
    52cc:	2001ffc4 	.word	0x2001ffc4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:144
initinterrupt fault, faulthandler, unhandled
    52d0:	2001ffc0 	.word	0x2001ffc0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/interrupts-common.s:145
initinterrupt collection, nullhandler, unhandled
    52d4:	2001ffbc 	.word	0x2001ffbc
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:27
interrupt exti0
    52d8:	2001ffb8 	.word	0x2001ffb8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:28
interrupt exti1
    52dc:	2001ffb4 	.word	0x2001ffb4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:29
interrupt exti2
    52e0:	2001ffb0 	.word	0x2001ffb0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:30
interrupt exti3
    52e4:	2001ffac 	.word	0x2001ffac
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:31
interrupt exti4
    52e8:	2001ffa8 	.word	0x2001ffa8
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:32
interrupt adc
    52ec:	2001ffa4 	.word	0x2001ffa4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:33
interrupt tim2
    52f0:	2001ffa0 	.word	0x2001ffa0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:34
interrupt tim3
    52f4:	2001ff9c 	.word	0x2001ff9c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/interrupts.s:35
interrupt tim4
    52f8:	2001ff98 	.word	0x2001ff98
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:111
    ldr   r0, =SCB_VTOR   @ relocate interrupt vector table
    52fc:	e000ed08 	.word	0xe000ed08

00005300 <Handover>:
Handover():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:125
.ltorg

Handover:

    @ Configure the flash for full speed operation
    bl    flash_400mhz
    5300:	f7fc fd77 	bl	1df2 <Code_433>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:126
    bl    ldo_on
    5304:	f7fd faa0 	bl	2848 <Code_550>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:127
    bl    vos1
    5308:	f7fd faac 	bl	2864 <Code_551>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:128
    bl    hse_on
    530c:	f7fd fabb 	bl	2886 <Code_552>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:129
    bl    pll_400mhz
    5310:	f7fd facc 	bl	28ac <Code_553>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:132
    @bl    init_led
    @bl    init_button
    bl    init_spi
    5314:	f7fc fda7 	bl	1e66 <Code_437>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:133
    bl    init_crc
    5318:	f7fd faf4 	bl	2904 <Code_554>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:136

    @ Wipe the AXI SRAM
    ldr   r0, =FlashDictionaryAnfang
    531c:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:137
    ldr   r1, =FlashDictionaryEnde
    5320:	495d      	ldr	r1, [pc, #372]	; (5498 <init_name+0x6>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:138
    mov   r2, #0xffffffff
    5322:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:139
    movs  r3, r2
    5326:	0013      	movs	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:140
2:  stmia r0!, {r2, r3}
    5328:	c00c      	stmia	r0!, {r2, r3}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:141
    cmp   r0, r1
    532a:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:142
    bne   2b
    532c:	d1fc      	bne.n	5328 <Handover+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:150
    bl    button2_nostack
    cmp   tos, #0
    mov   r12, tos
    bne   4f
.else
	mov   r12, #0
    532e:	f04f 0c00 	mov.w	ip, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:154
.endif

    @ Initialize the data stack because spi-move takes its arguments from the data stack
    ldr   psp, =datenstackanfang
    5332:	4f5a      	ldr	r7, [pc, #360]	; (549c <init_name+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:157

    @ Load the AXI SRAM from SPI flash
    movs  tos, #0
    5334:	2600      	movs	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:158
    stmdb psp!, {tos}
    5336:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:159
    ldr   tos, =FlashDictionaryAnfang
    533a:	f04f 5610 	mov.w	r6, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:160
    stmdb psp!, {tos}
    533e:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:161
    ldr   tos, =(FlashDictionaryEnde - FlashDictionaryAnfang)
    5342:	f44f 2600 	mov.w	r6, #524288	; 0x80000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:162
    bl    spi_move
    5346:	f7fc ff0d 	bl	2164 <Code_454>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:28
@ Initialises pointers and variables for flash dictionary after Reset.
@ This runs one time after Reset, no registers are saved here.

   @ Hardware sets return stack pointer on startup from vector table.
   @ Set Return stack pointer here (again) just in case this might be a software re-entry.
   ldr r0, =returnstackanfang
    534a:	4855      	ldr	r0, [pc, #340]	; (54a0 <init_name+0xe>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:29
   mov sp, r0
    534c:	4685      	mov	sp, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:33

   @ Return stack pointer already set up. Time to set data stack pointer !
   @ Normaler Stackpointer bereits gesetzt. Setze den Datenstackpointer:
   ldr psp, =datenstackanfang
    534e:	4f53      	ldr	r7, [pc, #332]	; (549c <init_name+0xa>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:38

   @ TOS setzen, um Pufferunterläufe gut erkennen zu können
   @ TOS magic number to see spurious stack underflows in .s
   @ ldr tos, =0xAFFEBEEF
   movs tos, #42
    5350:	262a      	movs	r6, #42	; 0x2a
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:51
  @  r1 Aktuelle Flags      Current Flags
  @  r3 Für dies und das    Temporary this and that
  @  r5 Belegtes Ram.       Keeps track of allocated RAM
  @ TOS Adresshangelzeiger  Pointer that crawls through dictionary

  pushdatos
    5352:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:52
  ldr tos, =CoreDictionaryAnfang  @ Hier fängt es an.  Start at the beginning
    5356:	4e53      	ldr	r6, [pc, #332]	; (54a4 <init_name+0x12>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:53
  ldr r5,  =RamDictionaryEnde     @ Fürs Abzählen des Variablenplatzes  Variables start at the end of RAM dictionary
    5358:	4d53      	ldr	r5, [pc, #332]	; (54a8 <init_name+0x16>)

0000535a <SucheFlashPointer_Hangelschleife>:
SucheFlashPointer_Hangelschleife():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:56

SucheFlashPointer_Hangelschleife:
  ldrh r1, [tos, #4]  @ Aktuelle Flags lesen  Fetch current Flags
    535a:	88b1      	ldrh	r1, [r6, #4]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:58

  ldr r3, =Flag_invisible
    535c:	f64f 73ff 	movw	r3, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:60

  cmp r1, r3   @ Flag_invisible ? Überspringen !  Skip invisible definitions
    5360:	4299      	cmp	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:61
  beq.n Sucheflashpointer_Speicherbelegung_fertig
    5362:	d025      	beq.n	53b0 <Sucheflashpointer_Speicherbelegung_fertig>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:65
    @ Dies Wort ist sichtbar. Prüfe, ob es Ram-Speicher anfordert und belegt.
    @ This definition is visible. Check if it allocates RAM.

    ldr r3, =Flag_buffer & ~Flag_visible
    5364:	f44f 7380 	mov.w	r3, #256	; 0x100
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:66
    ands r3, r1
    5368:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:67
    beq 1f @ No buffer requested.
    536a:	d00a      	beq.n	5382 <SucheFlashPointer_Hangelschleife+0x28>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:70

      @ Search for end of code of current definition.
      adds r0, tos, #6
    536c:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:71
      bl skipstring
    536e:	f7fe fe0d 	bl	3f8c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:73
      @ r0 zeigt nun an den Codebeginn des aktuellen Wortes.  r0 points to start of code of current definition
      bl suchedefinitionsende @ Advance pointer to end of code. This is detected by "bx lr" or "pop {pc}" opcodes.
    5372:	f7fe f8ed 	bl	3550 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:77
      @ r0 ist nun an der Stelle, wo die Initialisierungsdaten liegen. r0 now points to the location of the initialisation at the end of code of current definition.

      @ Fetch required length of buffer, do this in two steps because of alignment issues
      ldrh r3, [r0]
    5376:	8803      	ldrh	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:78
      ldrh r0, [r0, #2]
    5378:	8840      	ldrh	r0, [r0, #2]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:79
      lsls r0, #16
    537a:	0400      	lsls	r0, r0, #16
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:80
      orrs r3, r0
    537c:	4303      	orrs	r3, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:83

      @ Ramvariablenpointer wandern lassen  Subtract from the pointer that points to the next free location
      subs r5, r3
    537e:	1aed      	subs	r5, r5, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:84
      b.n Sucheflashpointer_Speicherbelegung_fertig @ Finished
    5380:	e016      	b.n	53b0 <Sucheflashpointer_Speicherbelegung_fertig>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:86

1:  movs r3, #Flag_ramallot & ~Flag_visible
    5382:	2380      	movs	r3, #128	; 0x80
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:87
    ands r3, r1
    5384:	400b      	ands	r3, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:89

    beq.n Sucheflashpointer_Speicherbelegung_fertig @ Benötigt doch kein RAM.
    5386:	d013      	beq.n	53b0 <Sucheflashpointer_Speicherbelegung_fertig>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:94
      @ writeln "Speicher gewünscht !"
      @ Die Flags werden später nicht mehr gebraucht.
      @ This one allocates RAM, Flags are not needed anymore.

      movs r3, #0x0F @ Das unterste Nibble maskieren  Mask lower 4 bits that contains amount of 32 bit locations requested.
    5388:	230f      	movs	r3, #15
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:95
      ands r1, r3
    538a:	4019      	ands	r1, r3
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:99

        @ Bei Null Bytes brauche ich nichts zu kopieren, den Fall erkennt move.
        @ Zero byte requests are handled by move itself, no need to catch this special case. Sounds strange, but is useful to have two handles for one variable.
        lsls r1, #2 @ Mit vier malnehmen                  Multiply by 4
    538c:	0089      	lsls	r1, r1, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:100
        subs r5, r1 @ Ramvariablenpointer wandern lassen  Subtract from the pointer that points to the next free location
    538e:	1a6d      	subs	r5, r5, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:111
        @ r3: ist frei für uns.                                                     Free for use !
        @ r5: die Startadresse des Ram-Bereiches, der geschrieben werden soll.      Contains address in RAM the initialisation values have to be written in.

        @ Muss zuerst schaffen, das Ende der aktuellen Definition zu finden.
        @ Search for end of code of current definition.
        adds r0, tos, #6
    5390:	1db0      	adds	r0, r6, #6
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:112
        bl skipstring
    5392:	f7fe fdfb 	bl	3f8c <skipstring>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:114
        @ r0 zeigt nun an den Codebeginn des aktuellen Wortes.  r0 points to start of code of current definition
        bl suchedefinitionsende @ Advance pointer to end of code. This is detected by "bx lr" or "pop {pc}" opcodes.
    5396:	f7fe f8db 	bl	3550 <suchedefinitionsende>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:117
        @ r0 ist nun an der Stelle, wo die Initialisierungsdaten liegen. r0 now points to the location of the initialisation at the end of code of current definition.
        @ Kopiere die gewünschte Zahl von r1 Bytes von [r0] an [r5]  Copy desired amount of r1 bytes from [r0] to [r5].
        pushda r0 @ Quelle  Source
    539a:	f847 6d04 	str.w	r6, [r7, #-4]!
    539e:	0006      	movs	r6, r0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:118
        pushda r5 @ Ziel    Target
    53a0:	f847 6d04 	str.w	r6, [r7, #-4]!
    53a4:	002e      	movs	r6, r5
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:119
        pushda r1 @ Anzahl an Bytes  Amount
    53a6:	f847 6d04 	str.w	r6, [r7, #-4]!
    53aa:	000e      	movs	r6, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:120
        bl move
    53ac:	f7fc fa7a 	bl	18a4 <Code_372>

000053b0 <Sucheflashpointer_Speicherbelegung_fertig>:
Sucheflashpointer_Speicherbelegung_fertig():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:127
Sucheflashpointer_Speicherbelegung_fertig:
  @ Speicherbelegung und -initialisierung abgeschlossen.
  @ Finished RAM allocation and initialisation.

  @ Weiterhangeln  Continue crawl.
  bl dictionarynext
    53b0:	f7fe fdb7 	bl	3f22 <Code_928>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:128
  popda r0
    53b4:	0030      	movs	r0, r6
    53b6:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:129
  beq.n SucheFlashPointer_Hangelschleife
    53b8:	d0cf      	beq.n	535a <SucheFlashPointer_Hangelschleife>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:132


  ldr r0, =ZweitFadenende
    53ba:	483c      	ldr	r0, [pc, #240]	; (54ac <init_name+0x1a>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:133
  str tos, [r0] @ Das Fadenende für den Flash setzen.  Set pointer to latest definition.
    53bc:	6006      	str	r6, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:134
  drop
    53be:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:136

  ldr r0, =VariablenPointer @ Set pointer to current end-of-ram-dictionary for later permanent RAM allocations by variables defined in Flash.
    53c0:	483b      	ldr	r0, [pc, #236]	; (54b0 <init_name+0x1e>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:137
  str r5, [r0]
    53c2:	6005      	str	r5, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:143

  @ Mache mich auf die Suche nach dem Dictionarypointer im Flash:
  @ Suche jetzt gleich noch den DictionaryPointer.
  @ Time to search the Dictionarypointer !

  ldr r0, =FlashDictionaryEnde
    53c4:	4834      	ldr	r0, [pc, #208]	; (5498 <init_name+0x6>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:144
  ldr r1, =FlashDictionaryAnfang
    53c6:	f04f 5110 	mov.w	r1, #603979776	; 0x24000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:145
  ldr r2, =erasedhalfword
    53ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:149

  @ Gehe Rückwärts, bis ich aus dem $FFFF-Freigebiet in Daten komme.
  @ Run backwards through whole Flash memory to find DictionaryPointer.
1:cmp r0, r1 @  Wenn ich am Anfang angelangt bin, ist das der DictionaryPointer.
    53ce:	4288      	cmp	r0, r1
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:150
  beq.n 2f     @  Finished if beginning of Flash is hit.
    53d0:	d004      	beq.n	53dc <Sucheflashpointer_Speicherbelegung_fertig+0x2c>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:152

  subs r0, #2
    53d2:	3802      	subs	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:153
  ldrh r3, [r0]
    53d4:	8803      	ldrh	r3, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:154
  cmp r3, r2 @ 0xFFFF
    53d6:	4293      	cmp	r3, r2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:155
  beq.n 1b @ Wenn es nicht gleich ist, habe ich eine Füllung gefunden.
    53d8:	d0f9      	beq.n	53ce <Sucheflashpointer_Speicherbelegung_fertig+0x1e>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:158
           @ If there is not $FFFF on that location I have found "end of free space".

  adds r0, #2
    53da:	3002      	adds	r0, #2
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:161

2:@ Dictionarypointer gefunden. Found DictionaryPointer.
  ldr r1, =ZweitDictionaryPointer @ We start to compile into RAM - the pointer found goes to the second set of pointers that are swapped with compiletoflash/compiletoram.
    53dc:	4935      	ldr	r1, [pc, #212]	; (54b4 <init_name+0x22>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:162
  str r0, [r1]
    53de:	6008      	str	r0, [r1, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:168

4:  @ Catch the pointers for Flash dictionary
    .include "../common/catchflashpointers.s"

    @ Initialize the console
    bl    uart_init
    53e0:	f7fd fb02 	bl	29e8 <Code_565>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:170

    welcome " for STM32H750 WeACT V2 by Matthias Koch"
    53e4:	f7fd fd56 	bl	2e94 <dotgaensefuesschen>
    53e8:	63654d43 	.word	0x63654d43
    53ec:	70736972 	.word	0x70736972
    53f0:	6574532d 	.word	0x6574532d
    53f4:	72616c6c 	.word	0x72616c6c
    53f8:	52207369 	.word	0x52207369
    53fc:	2e322041 	.word	0x2e322041
    5400:	20352e36 	.word	0x20352e36
    5404:	20726f66 	.word	0x20726f66
    5408:	334d5453 	.word	0x334d5453
    540c:	35374832 	.word	0x35374832
    5410:	65572030 	.word	0x65572030
    5414:	20544341 	.word	0x20544341
    5418:	62203256 	.word	0x62203256
    541c:	614d2079 	.word	0x614d2079
    5420:	69687474 	.word	0x69687474
    5424:	4b207361 	.word	0x4b207361
    5428:	0a68636f 	.word	0x0a68636f
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:171
    cmp   r12, #0
    542c:	f1bc 0f00 	cmp.w	ip, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:172
    beq   5f
    5430:	d019      	beq.n	5466 <Sucheflashpointer_Speicherbelegung_fertig+0xb6>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:173
    write "Erasing external SPI flash... "
    5432:	f7fd fd2f 	bl	2e94 <dotgaensefuesschen>
    5436:	451e      	.short	0x451e
    5438:	69736172 	.word	0x69736172
    543c:	6520676e 	.word	0x6520676e
    5440:	72657478 	.word	0x72657478
    5444:	206c616e 	.word	0x206c616e
    5448:	20495053 	.word	0x20495053
    544c:	73616c66 	.word	0x73616c66
    5450:	2e2e2e68 	.word	0x2e2e2e68
    5454:	20          	.byte	0x20
    5455:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:174
    bl    erase_chip
    5456:	f7fc ffb7 	bl	23c8 <Code_470>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:175
    writeln "DONE!"
    545a:	f7fd fd1b 	bl	2e94 <dotgaensefuesschen>
    545e:	4406      	.short	0x4406
    5460:	21454e4f 	.word	0x21454e4f
    5464:	0a          	.byte	0x0a
    5465:	00          	.byte	0x00
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:24
@ Common startup code for all implementations

   @ Einige der Kernvariablen müssen hier unbedingt frisch gesetzt werden, damit quit nicht nach dem Init-Einsprung nochmal tätig werden muss.
   @ Some of the core variables must be set fresh here so that quit does not have to take action again after the init jump.

   ldr r0, =konstantenfaltungszeiger
    5466:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:25
   movs r1, #0    @ Clear constant folding pointer
    546a:	2100      	movs	r1, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:26
   str r1, [r0]
    546c:	6001      	str	r1, [r0, #0]
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:29

  .ifdef registerallocator
    bl init_register_allocator
    546e:	f7fa ffa8 	bl	3c2 <init_register_allocator>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:34
  .endif

   @ Suche nach der init-Definition:
   @ Search for current init definition in dictionary:
   pushdatos
    5472:	f847 6d04 	str.w	r6, [r7, #-4]!
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:35
   ldr tos, =init_name
    5476:	4e10      	ldr	r6, [pc, #64]	; (54b8 <init_name+0x26>)
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:36
   pushdaconst 4
    5478:	f847 6d04 	str.w	r6, [r7, #-4]!
    547c:	2604      	movs	r6, #4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:37
   bl find
    547e:	f7fe fd94 	bl	3faa <Code_933>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:38
   drop @ Flags brauche ich nicht No need for flags
    5482:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:39
   cmp tos, #0
    5484:	2e00      	cmp	r6, #0
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:40
   beq 1f
    5486:	d002      	beq.n	548e <Sucheflashpointer_Speicherbelegung_fertig+0xde>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:42
     @ Gefunden ! Found !
     bl execute
    5488:	f7fe f904 	bl	3694 <Code_785>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:43
     b quit_intern
    548c:	e560      	b.n	4f50 <quit_intern>
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:45
1:
   drop @ Die 0-Adresse von find. Wird hier heruntergeworfen, damit der Startwert AFFEBEEF erhalten bleibt !
    548e:	cf40      	ldmia	r7!, {r6}
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:46
   b quit @ Drop 0-address of find to keep magic TOS value intact.
    5490:	e54a      	b.n	4f28 <Code_1230>

00005492 <init_name>:
init_name():
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:46
    5492:	6e69      	.short	0x6e69
    5494:	00007469 	.word	0x00007469
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:137
    ldr   r1, =FlashDictionaryEnde
    5498:	24080000 	.word	0x24080000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/mecrisp-stellaris-stm32h750.s:154
    ldr   psp, =datenstackanfang
    549c:	20000288 	.word	0x20000288
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:28
   ldr r0, =returnstackanfang
    54a0:	20000388 	.word	0x20000388
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:52
  ldr tos, =CoreDictionaryAnfang  @ Hier fängt es an.  Start at the beginning
    54a4:	000001e4 	.word	0x000001e4
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:53
  ldr r5,  =RamDictionaryEnde     @ Fürs Abzählen des Variablenplatzes  Variables start at the end of RAM dictionary
    54a8:	20020000 	.word	0x20020000
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:132
  ldr r0, =ZweitFadenende
    54ac:	20000014 	.word	0x20000014
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:136
  ldr r0, =VariablenPointer @ Set pointer to current end-of-ram-dictionary for later permanent RAM allocations by variables defined in Flash.
    54b0:	2000001c 	.word	0x2000001c
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/catchflashpointers.s:161
  ldr r1, =ZweitDictionaryPointer @ We start to compile into RAM - the pointer found goes to the second set of pointers that are swapped with compiletoflash/compiletoram.
    54b4:	20000010 	.word	0x20000010
/home/morris/Stuff/forth/mecrisp-stellaris-2.6.5/mecrisp-stellaris-source/stm32h750-ra/../common/boot.s:35
   ldr tos, =init_name
    54b8:	00005492 	.word	0x00005492
    54bc:	ffffffff 	.word	0xffffffff
